{
  "abcapheight": {
    "CallLine": "call parse_variable(namespace, 'ABCapHeight', -0.2_real64, abheight, units_inp%energy)",
    "Default": [
      "-0.2",
      "a.u."
    ],
    "Description": [
      "When <tt>AbsorbingBoundaries = cap</tt>, this is the height of the imaginary potential."
    ],
    "LineNumber": 128,
    "Manuals": [],
    "Name": "ABCapHeight",
    "Options": [],
    "Section": "Time-Dependent::Absorbing Boundaries",
    "Sourcefile": "hamiltonian/absorbing_boundaries.F90",
    "Testfiles": [
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "abshape": {
    "CallLine": "if (parse_block(namespace, 'ABShape', blk) < 0) then",
    "Default": null,
    "Description": [
      "Set the shape of the absorbing boundaries. Here you can set the inner",
      "and outer bounds by setting the block as follows:",
      " ",
      "<tt>%ABShape",
      "<br>&nbsp;&nbsp; inner | outer | \"user-defined\"",
      "<br>%</tt>",
      " ",
      "The optional 3rd column is a user-defined expression for the absorbing",
      "boundaries. For example, <math>r</math> creates a spherical absorbing zone for",
      "coordinates with <math>{\\tt inner} < r < {\\tt outer}</math>, and <math>z</math> creates an",
      "absorbing plane.",
      "Note, values <tt>outer</tt> larger than the box size may lead in these cases to",
      "unexpected reflection behaviours.",
      "If no expression is given, the absorbing zone follows the edges of the",
      "box (not valid for user-defined box)."
    ],
    "LineNumber": 153,
    "Manuals": [],
    "Name": "ABShape",
    "Options": [],
    "Section": "Time-Dependent::Absorbing Boundaries",
    "Sourcefile": "hamiltonian/absorbing_boundaries.F90",
    "Testfiles": [
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "finite_systems_1d/04-lithium.02-absorbing_boundaries.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "absorbingboundaries": {
    "CallLine": "call parse_variable(namespace, 'AbsorbingBoundaries', NOT_ABSORBING, this%abtype)",
    "Default": [
      "not_absorbing"
    ],
    "Description": [
      "To improve the quality of the spectra by avoiding the formation of",
      "standing density waves, one can make the boundaries of the simulation",
      "box absorbing and use exterior complex scaling."
    ],
    "LineNumber": 108,
    "Manuals": [],
    "Name": "AbsorbingBoundaries",
    "Options": [
      {
        "Description": [
          "Reflecting boundaries."
        ],
        "Name": "not_absorbing",
        "Value": "0"
      },
      {
        "Description": [
          "Absorbing boundaries with a mask function."
        ],
        "Name": "mask",
        "Value": "1"
      },
      {
        "Description": [
          "Absorbing boundaries with a complex absorbing potential."
        ],
        "Name": "cap",
        "Value": "2"
      },
      {
        "Description": [
          "Exterior complex scaling (not yet implemented)."
        ],
        "Name": "exterior",
        "Value": "3"
      }
    ],
    "Section": "Time-Dependent::Absorbing Boundaries",
    "Sourcefile": "hamiltonian/absorbing_boundaries.F90",
    "Testfiles": [
      "real_time/18-hhg.01-gs.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "finite_systems_1d/04-lithium.02-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/11-classical.02-oct.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/06-laser.03-velocity_gauge.inp"
    ],
    "Tutorials": [],
    "Type": "flag"
  },
  "abwidth": {
    "CallLine": "call parse_variable(namespace, 'ABWidth', abwidth_def, abwidth, units_inp%length)",
    "Default": null,
    "Description": [
      "Specifies the boundary width. For a finer control over the absorbing boundary",
      "shape use ABShape."
    ],
    "LineNumber": 240,
    "Manuals": [],
    "Name": "ABWidth",
    "Options": [],
    "Section": "Time-Dependent::Absorbing Boundaries",
    "Sourcefile": "hamiltonian/absorbing_boundaries.F90",
    "Testfiles": [
      "real_time/18-hhg.01-gs.inp",
      "real_time/18-hhg.02-td.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/11-classical.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "acbn0intersitecutoff": {
    "CallLine": "call parse_variable(namespace, 'ACBN0IntersiteCutoff', M_ZERO, this%intersite_radius, unit = units_inp%length)",
    "Default": null,
    "Description": [
      "The cutoff radius defining the maximal intersite distance considered.",
      "Only available with ACBN0 functional with intersite interaction."
    ],
    "LineNumber": 353,
    "Manuals": [],
    "Name": "ACBN0IntersiteCutoff",
    "Options": [],
    "Section": "Hamiltonian::DFT+U",
    "Sourcefile": "hamiltonian/lda_u.F90",
    "Testfiles": [
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/10-intersite.01-Na2.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "acbn0intersiteinteraction": {
    "CallLine": "call parse_variable(namespace, 'ACBN0IntersiteInteraction', .false., this%intersite)",
    "Default": [
      "no"
    ],
    "Description": [
      "If set to yes, Octopus will determine the effective intersite interaction V",
      "Only available with ACBN0 functional.",
      "It is strongly recommended to set AOLoewdin=yes when using the option."
    ],
    "LineNumber": 334,
    "Manuals": [],
    "Name": "ACBN0IntersiteInteraction",
    "Options": [],
    "Section": "Hamiltonian::DFT+U",
    "Sourcefile": "hamiltonian/lda_u.F90",
    "Testfiles": [
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/10-intersite.01-Na2.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "acbn0rotationallyinvariant": {
    "CallLine": "call parse_variable(namespace, 'ACBN0RotationallyInvariant', st%d%ispin /= SPINORS, this%rot_inv)",
    "Default": null,
    "Description": [
      "If set to yes, Octopus will use for U and J a formula which is rotationally invariant.",
      "This is different from the original formula for U and J.",
      "This is activated by default, except in the case of spinors, as this is not yet implemented in this case."
    ],
    "LineNumber": 319,
    "Manuals": [],
    "Name": "ACBN0RotationallyInvariant",
    "Options": [],
    "Section": "Hamiltonian::DFT+U",
    "Sourcefile": "hamiltonian/lda_u.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "acbn0screening": {
    "CallLine": "call parse_variable(namespace, 'ACBN0Screening', M_ONE, this%acbn0_screening)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "If set to 0, no screening will be included in the ACBN0 functional, and the U",
      "will be estimated from bare Hartree-Fock. If set to 1 (default), the full screening",
      "of the U, as defined in the ACBN0 functional, is used."
    ],
    "LineNumber": 308,
    "Manuals": [],
    "Name": "ACBN0Screening",
    "Options": [],
    "Section": "Hamiltonian::DFT+U",
    "Sourcefile": "hamiltonian/lda_u.F90",
    "Testfiles": [
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "accelbenchmark": {
    "CallLine": "call parse_variable(namespace, 'AccelBenchmark', .false., run_benchmark)",
    "Default": [
      "no"
    ],
    "Description": [
      "If this variable is set to yes, Octopus will run some",
      "routines to benchmark the performance of the accelerator device."
    ],
    "LineNumber": 698,
    "Manuals": [],
    "Name": "AccelBenchmark",
    "Options": [],
    "Section": "Execution::Accel",
    "Sourcefile": "basic/accel.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "acceldevice": {
    "CallLine": "call parse_variable(namespace, 'AccelDevice', OPENCL_GPU, idevice)",
    "Default": [
      "gpu"
    ],
    "Description": [
      "This variable selects the OpenCL or CUDA accelerator device",
      "that Octopus will use. You can specify one of the options below",
      "or a numerical id to select a specific device.",
      " ",
      "Values >= 0 select the device to be used. In case of MPI enabled runs",
      "devices are distributed in a round robin fashion, starting at this value."
    ],
    "LineNumber": 432,
    "Manuals": [],
    "Name": "AccelDevice",
    "Options": [
      {
        "Description": [
          "If available, Octopus will use a GPU."
        ],
        "Name": "gpu",
        "Value": "-1"
      },
      {
        "Description": [
          "If available, Octopus will use a CPU (only for OpenCL)."
        ],
        "Name": "cpu",
        "Value": "-2"
      },
      {
        "Description": [
          "If available, Octopus will use an accelerator (only for OpenCL)."
        ],
        "Name": "accelerator",
        "Value": "-3"
      },
      {
        "Description": [
          "Octopus will use the default device specified by the implementation.",
          "implementation."
        ],
        "Name": "accel_default",
        "Value": "-4"
      }
    ],
    "Section": "Execution::Accel",
    "Sourcefile": "basic/accel.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "accelplatform": {
    "CallLine": "call parse_variable(namespace, 'AccelPlatform', 0, iplatform)",
    "Default": [
      "0"
    ],
    "Description": [
      "This variable selects the OpenCL platform that Octopus will",
      "use. You can give an explicit platform number or use one of",
      "the options that select a particular vendor",
      "implementation. Platform 0 is used by default.",
      " ",
      "This variable has no effect for CUDA."
    ],
    "LineNumber": 407,
    "Manuals": [],
    "Name": "AccelPlatform",
    "Options": [
      {
        "Description": [
          "Use the AMD OpenCL platform."
        ],
        "Name": "amd",
        "Value": "-2"
      },
      {
        "Description": [
          "Use the Nvidia OpenCL platform."
        ],
        "Name": "nvidia",
        "Value": "-3"
      },
      {
        "Description": [
          "Use the ATI (old AMD) OpenCL platform."
        ],
        "Name": "ati",
        "Value": "-4"
      },
      {
        "Description": [
          "Use the Intel OpenCL platform."
        ],
        "Name": "intel",
        "Value": "-5"
      }
    ],
    "Section": "Execution::Accel",
    "Sourcefile": "basic/accel.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "adaptivelycompressedexchange": {
    "CallLine": "call parse_variable(namespace, 'AdaptivelyCompressedExchange', .false., this%useACE)",
    "Default": [
      "false"
    ],
    "Description": [
      "(Experimental) If set to yes, Octopus will use the adaptively compressed exchange",
      "operator (ACE) for HF and hybrid calculations, as defined in",
      "Lin, J. Chem. Theory Comput. 2016, 12, 2242."
    ],
    "LineNumber": 133,
    "Manuals": [],
    "Name": "AdaptivelyCompressedExchange",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/exchange_operator.F90",
    "Testfiles": [
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/24-hartree_fock_1D.01-gs.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "periodic_systems/23-hybrids.01-ace.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "allelectronancparam": {
    "CallLine": "call parse_variable(namespace, 'AllElectronANCParam', 4.0_real64, default_anc_a)",
    "Default": [
      "4"
    ],
    "Description": [
      "Default values for the parameter <tt>anc_a</tt>. This is usefull",
      "for specifying multiple atoms without specifying the species block.",
      " "
    ],
    "LineNumber": 242,
    "Manuals": [],
    "Name": "AllElectronANCParam",
    "Options": [],
    "Section": "System::Species",
    "Sourcefile": "species/species.F90",
    "Testfiles": [
      "finite_systems_3d/42-full_potential_anc.04-fr-zora.inp",
      "finite_systems_3d/42-full_potential_anc.02-sc-zora.inp",
      "finite_systems_3d/42-full_potential_anc.01-gs.inp",
      "finite_systems_3d/42-full_potential_anc.03-sf-zora.inp",
      "finite_systems_3d/42-full_potential_anc.05-zora-error.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "allelectronsigma": {
    "CallLine": "call parse_variable(namespace, 'AllElectronSigma', 0.6_real64, default_sigma)",
    "Default": [
      "0.6"
    ],
    "Description": [
      "Default value for the parameter <tt>gaussian_width</tt>. This is useful",
      "for specifying multiple atoms without specifying the species block. The",
      "default value is taken from the recommendation in",
      "<i>Phys. Rev. B</i> <b>55</b>, 10289 (1997).",
      " "
    ],
    "LineNumber": 231,
    "Manuals": [],
    "Name": "AllElectronSigma",
    "Options": [],
    "Section": "System::Species",
    "Sourcefile": "species/species.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "allelectrontype": {
    "CallLine": "call parse_variable(namespace, 'AllElectronType', OPTION__ALLELECTRONTYPE__NO, default_allelectron_type)",
    "Default": [
      "no"
    ],
    "Description": [
      "Selects the type of all-electron species that applies by default to all",
      "atoms. This is not compatible with <tt>PseudopotentialSet</tt>, but it is",
      "compatible with the <tt>Species</tt> block.",
      " "
    ],
    "LineNumber": 217,
    "Manuals": [],
    "Name": "AllElectronType",
    "Options": [
      {
        "Description": [
          "Do not specify any default all-electron type of species. All species must be",
          "specified in the Species block."
        ],
        "Name": "no",
        "Value": "0"
      },
      {
        "Description": [
          "All atoms are supposed to be by default of type <tt>species_full_delta</tt>."
        ],
        "Name": "full_delta",
        "Value": "1"
      },
      {
        "Description": [
          "All atoms are supposed to be by default of type <tt>species_full_gaussian</tt>."
        ],
        "Name": "full_gaussian",
        "Value": "2"
      },
      {
        "Description": [
          "All atoms are supposed to be by default of type <tt>species_full_anc</tt>."
        ],
        "Name": "full_anc",
        "Value": "3"
      }
    ],
    "Section": "System::Species",
    "Sourcefile": "species/species.F90",
    "Testfiles": [
      "finite_systems_3d/42-full_potential_anc.04-fr-zora.inp",
      "finite_systems_3d/42-full_potential_anc.02-sc-zora.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/42-full_potential_anc.01-gs.inp",
      "finite_systems_3d/42-full_potential_anc.03-sf-zora.inp",
      "finite_systems_3d/42-full_potential_anc.05-zora-error.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "allowcpuonly": {
    "CallLine": "call parse_variable(namespace, 'AllowCPUonly', default, accel%allow_CPU_only)",
    "Default": null,
    "Description": [
      "In order to prevent waste of resources, the code will normally stop when the GPU is disabled due to",
      "incomplete implementations or incompatibilities. AllowCPUonly = yes overrides this and allows the",
      "code execution also in these cases."
    ],
    "LineNumber": 743,
    "Manuals": [],
    "Name": "AllowCPUonly",
    "Options": [],
    "Section": "Execution::Accel",
    "Sourcefile": "basic/accel.F90",
    "Testfiles": [
      "real_time/06-caetrs.03-kick-tp1.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "periodic_systems/13-primitive.03-bcc_iron.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "components/19-hgh_soc.01-3d.inp",
      "lda_u/06-laser.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "alphafmm": {
    "CallLine": "call parse_variable(parser, 'AlphaFMM', 0.291262136_real64, this%alpha_fmm)",
    "Default": [
      "0.291262136"
    ],
    "Description": [
      "Dimensionless parameter for the correction of the self-interaction of the",
      "electrostatic Hartree potential, when using <tt>PoissonSolver = FMM</tt>.",
      " ",
      "Octopus represents charge density on a real-space grid, each",
      "point containing a value <math>\\rho</math> corresponding to the charge",
      "density in the cell centered in such point. Therefore, the",
      "integral for the Hartree potential at point <math>i</math>, <math>V_H(i)</math>, can be reduced to a summation:",
      " ",
      "<math>V_H(i) = \\frac{\\Omega}{4\\pi\\varepsilon_0} \\sum_{i \\neq j}",
      "\\frac{\\rho(\\vec{r}(j))}{|\\vec{r}(j) - \\vec{r}(i)|} + V_{self.int.}(i)</math>",
      "where <math>\\Omega</math> is the volume element of the mesh, and <math>\\vec{r}(j)</math> is the",
      "position of the point <math>j</math>. The <math>V_{self.int.}(i)</math> corresponds to",
      "the integral over the cell centered on the point <math>i</math> that is necessary to",
      "calculate the Hartree potential at point <math>i</math>:",
      " ",
      "<math>V_{self.int.}(i)=\\frac{1}{4\\pi\\varepsilon_0}",
      "\\int_{\\Omega(i)}d\\vec{r} \\frac{\\rho(\\vec{r}(i))}{|\\vec{r}-\\vec{r}(i)|}</math>",
      " ",
      "In the FMM version implemented into Octopus, a correction method",
      "for <math>V_H(i)</math> is used",
      "(see Garc&iacute;a-Risue&ntilde;o <i>et al.</i>, <i>J. Comp. Chem.</i> <b>35</b>, 427 (2014)).",
      "This method defines cells neighbouring cell <math>i</math>, which",
      "have volume <math>\\Omega(i)/8</math> (in 3D) and charge density obtained by",
      "interpolation. In the calculation of <math>V_H(i)</math>, in order to avoid",
      "double counting of charge, and to cancel part of the errors arising",
      "from considering the distances constant in the summation above, a",
      "term <math>-\\alpha_{FMM}V_{self.int.}(i)</math> is added to the summation (see",
      "the paper for the explicit formulae)."
    ],
    "LineNumber": 182,
    "Manuals": [],
    "Name": "AlphaFMM",
    "Options": [],
    "Section": "Hamiltonian::Poisson",
    "Sourcefile": "poisson/poisson_fmm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "analyticalexternalsource": {
    "CallLine": "call parse_variable(namespace, 'AnalyticalExternalSource', .false., has_source)",
    "Default": [
      "no"
    ],
    "Description": [
      "This means the analytical evaluation of formula will be used, Maxwell propagation will not be used."
    ],
    "LineNumber": 245,
    "Manuals": [],
    "Name": "AnalyticalExternalSource",
    "Options": [],
    "Section": "Maxwell",
    "Sourcefile": "maxwell/external_waves.F90",
    "Testfiles": [
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "animationmultifiles": {
    "CallLine": "call parse_variable(global_namespace, 'AnimationMultiFiles', .false., multifiles)",
    "Default": [
      "false"
    ],
    "Description": [
      "If true, each iteration written will be in a separate file."
    ],
    "LineNumber": 97,
    "Manuals": [],
    "Name": "AnimationMultiFiles",
    "Options": [],
    "Section": "Utilities::oct-xyz-anim",
    "Sourcefile": "utils/xyzanim.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "animationsampling": {
    "CallLine": "call parse_variable(global_namespace, 'AnimationSampling', 100, sampling)",
    "Default": [
      "100"
    ],
    "Description": [
      "Sampling rate of the animation. The animation will be constructed using",
      "the iteration numbers that are multiples of <tt>AnimationSampling</tt>."
    ],
    "LineNumber": 84,
    "Manuals": [],
    "Name": "AnimationSampling",
    "Options": [],
    "Section": "Utilities::oct-xyz-anim",
    "Sourcefile": "utils/xyzanim.F90",
    "Testfiles": [
      "real_time/10-bomd.04-xyz-anim.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "aoloewdin": {
    "CallLine": "call parse_variable(namespace, 'AOLoewdin', .false., this%orthogonalization)",
    "Default": [
      "no"
    ],
    "Description": [
      "This option determines if the atomic orbital basis is orthogonalized or not.",
      "This is done for using the Loewdin orthogonalization scheme.",
      "The default is set to no for the moment as this option is",
      "not yet implemented for isolated systems, and seems to lead to important egg-box effect"
    ],
    "LineNumber": 160,
    "Manuals": [],
    "Name": "AOLoewdin",
    "Options": [],
    "Section": "Atomic Orbitals",
    "Sourcefile": "basis_set/orbitalbasis.F90",
    "Testfiles": [
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/08-loewdin.02-intersite.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "aonormalize": {
    "CallLine": "call parse_variable(namespace, 'AONormalize', .true., this%normalize)",
    "Default": [
      "yes"
    ],
    "Description": [
      "If set to yes, Octopus will normalize the atomic orbitals individually.",
      "This variable is ignored is <tt>AOLoewdin</tt> is set to yes."
    ],
    "LineNumber": 130,
    "Manuals": [],
    "Name": "AONormalize",
    "Options": [],
    "Section": "Atomic Orbitals",
    "Sourcefile": "basis_set/orbitalbasis.F90",
    "Testfiles": [
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.01-Na2.inp",
      "lda_u/05-forces.02-Na2_go.inp",
      "lda_u/10-intersite.01-Na2.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "aosubmesh": {
    "CallLine": "call parse_variable(namespace, 'AOSubmesh', .true., this%use_submesh)",
    "Default": null,
    "Description": [
      "If set to yes, Octopus will use submeshes to internally store the orbitals with",
      "their phase instead of storing them on the mesh. This is usually slower for small",
      "periodic systems, but becomes advantageous for large supercells.",
      "Submeshes are not compatible with Loewdin orthogonalization.",
      "For periodic systems, the default is set to no, whereas it is set to yes for isolated systems."
    ],
    "LineNumber": 146,
    "Manuals": [],
    "Name": "AOSubmesh",
    "Options": [],
    "Section": "Atomic Orbitals",
    "Sourcefile": "basis_set/orbitalbasis.F90",
    "Testfiles": [
      "components/20-dft_u.04-complex_submesh.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "aothreshold": {
    "CallLine": "call parse_variable(namespace, 'AOThreshold', 0.01_real64, this%threshold)",
    "Default": [
      "0.01"
    ],
    "Description": [
      "Determines the threshold used to compute the radius of the atomic orbitals for DFT+U and for Wannier90.",
      "This radius is computed by making sure that the",
      "absolute value of the radial part of the atomic orbital is below the specified threshold.",
      "This value should be converged to be sure that results do not depend on this value.",
      "However increasing this value increases the number of grid points covered by the orbitals and directly affect performances."
    ],
    "LineNumber": 118,
    "Manuals": [],
    "Name": "AOThreshold",
    "Options": [],
    "Section": "Atomic Orbitals",
    "Sourcefile": "basis_set/orbitalbasis.F90",
    "Testfiles": [
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/06-laser.03-velocity_gauge.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.01-Na2.inp",
      "lda_u/05-forces.02-Na2_go.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/06-laser.01-gs.inp",
      "lda_u/10-intersite.01-Na2.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "aotruncation": {
    "CallLine": "call parse_variable(namespace, 'AOTruncation', OPTION__AOTRUNCATION__AO_FULL, this%truncation)",
    "Default": [
      "ao_full"
    ],
    "Description": [
      "This option determines how Octopus will truncate the orbitals used for DFT+U.",
      "Except for the full method, the other options are only there to get a quick idea."
    ],
    "LineNumber": 104,
    "Manuals": [],
    "Name": "AOTruncation",
    "Options": [
      {
        "Description": [
          "The full size of the orbitals used. The radius is controled by variable AOThreshold."
        ],
        "Name": "ao_full",
        "Value": "bit(0)"
      },
      {
        "Description": [
          "The radius of the orbitals are restricted to the size of the simulation box.",
          "This reduces the number of points used to discretize the orbitals.",
          "This is mostly a debug option, and one should be aware that changing the size of the simulation box",
          "will affect the result of the calculation. It is recommended to use ao_nlradius instead."
        ],
        "Name": "ao_box",
        "Value": "bit(1)"
      },
      {
        "Description": [
          "The radius of the orbitals are restricted to the radius of the non-local part of the pseudopotential",
          "of the corresponding atom."
        ],
        "Name": "ao_nlradius",
        "Value": "bit(2)"
      }
    ],
    "Section": "Atomic Orbitals",
    "Sourcefile": "basis_set/orbitalbasis.F90",
    "Testfiles": [
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "flag"
  },
  "arnoldiorthogonalization": {
    "CallLine": "call parse_variable(namespace, 'ArnoldiOrthogonalization', OPTION__ARNOLDIORTHOGONALIZATION__CGS, te%arnoldi_gs)",
    "Default": null,
    "Description": [
      "The orthogonalization method used for the Arnoldi procedure.",
      "Only for TDExponentialMethod = lanczos."
    ],
    "LineNumber": 191,
    "Manuals": [],
    "Name": "ArnoldiOrthogonalization",
    "Options": [
      {
        "Description": [
          "Classical Gram-Schmidt (CGS) orthogonalization.",
          "The algorithm is defined in Giraud et al., Computers and Mathematics with Applications 50, 1069 (2005)."
        ],
        "Name": "cgs",
        "Value": "3"
      },
      {
        "Description": [
          "Classical Gram-Schmidt orthogonalization with double-step reorthogonalization.",
          "The algorithm is taken from Giraud et al., Computers and Mathematics with Applications 50, 1069 (2005).",
          "According to this reference, this is much more precise than CGS or MGS algorithms."
        ],
        "Name": "drcgs",
        "Value": "5"
      }
    ],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "electrons/exponential.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "atomsmagnetdirection": {
    "CallLine": "if (parse_block(namespace, 'AtomsMagnetDirection', blk) < 0) then",
    "Default": null,
    "Description": [
      "This option is only used when <tt>GuessMagnetDensity</tt> is",
      "set to <tt>user_defined</tt>. It provides a direction for the",
      "magnetization vector of each atom when building the guess",
      "density. In order to do that, the user should specify the",
      "coordinates of a vector that has the desired direction and",
      "norm.  Note that it is necessary to maintain the ordering in",
      "which the species were defined in the coordinates",
      "specifications.",
      " ",
      "For spin-polarized calculations, the vectors should have only",
      "one component; for non-collinear-spin calculations, they",
      "should have three components. If the norm of the vector is greater",
      "than the number of valence electrons in the atom, it will be rescaled",
      "to this number, which is the maximum possible magnetization."
    ],
    "LineNumber": 1253,
    "Manuals": [],
    "Name": "AtomsMagnetDirection",
    "Options": [],
    "Section": "SCF::LCAO",
    "Sourcefile": "scf/lcao.F90",
    "Testfiles": [
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/09-spinors.03-rmmdiis_extra_states.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/09-spinors.01-ground_state.inp",
      "finite_systems_3d/07-spin_orbit_coupling.02-rkb.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "finite_systems_3d/09-spinors.02-rmmdiis.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "axistype": {
    "CallLine": "call parse_variable(ions%namespace, 'AxisType', default, axis_type)",
    "Default": [
      "inertia"
    ],
    "Description": [
      "After the structure is centered, it is also aligned to a set of orthogonal axes.",
      "This variable decides which set of axes to use. Only implemented for 3D, in which case",
      "the default is <tt>inertia</tt>; otherwise <tt>none</tt> is default and the only legal value."
    ],
    "LineNumber": 144,
    "Manuals": [],
    "Name": "AxisType",
    "Options": [
      {
        "Description": [
          "Do not rotate. Will still give output regarding center of mass and moment of inertia."
        ],
        "Name": "none",
        "Value": "0"
      },
      {
        "Description": [
          "The axis of inertia."
        ],
        "Name": "inertia",
        "Value": "1"
      },
      {
        "Description": [
          "Pseudo-axis of inertia, calculated considering all species to have equal mass."
        ],
        "Name": "pseudo_inertia",
        "Value": "2"
      },
      {
        "Description": [
          "The larger axis of the molecule."
        ],
        "Name": "large_axis",
        "Value": "3"
      }
    ],
    "Section": "Utilities::oct-center-geom",
    "Sourcefile": "utils/centergeom.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "bandstructurecomputeprojections": {
    "CallLine": "call parse_variable(namespace, 'BandStructureComputeProjections', .false., projection)",
    "Default": [
      "false"
    ],
    "Description": [
      "Determines if projections of wavefunctions on the atomic orbitals",
      "are computed or not for obtaining the orbital resolved band-structure."
    ],
    "LineNumber": 699,
    "Manuals": [],
    "Name": "BandStructureComputeProjections",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "states/states_elec_io.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "berkeleygw_calcdipolemtxels": {
    "CallLine": "call parse_variable(namespace, 'BerkeleyGW_CalcDipoleMtxels', .false., bgw%calc_vmtxel)",
    "Default": [
      "false"
    ],
    "Description": [
      "Whether to calculate dipole matrix elements, to be written in <tt>vmtxel</tt>.",
      "This should be done when calculating <tt>WFN_fi</tt> for Bethe-Salpeter calculations",
      "with light polarization in a finite direction. In that case, a shifted grid",
      "<tt>WFNq_fi</tt> cannot be calculated, but we can instead use matrix elements of",
      "<math>r</math> in a more exact scheme. In <tt>absorption.inp</tt>, set <tt>read_vmtxel</tt>",
      "and <tt>use_momentum</tt>. Specify the number of conduction and valence bands you will",
      "use in BSE here with <tt>BerkeleyGW_VmtxelNumCondBands</tt> and <tt>BerkeleyGW_VmtxelNumValBands</tt>."
    ],
    "LineNumber": 216,
    "Manuals": [],
    "Name": "BerkeleyGW_CalcDipoleMtxels",
    "Options": [],
    "Section": "Output::BerkeleyGW",
    "Sourcefile": "output/output_berkeleygw.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "berkeleygw_calcexchange": {
    "CallLine": "call parse_variable(namespace, 'BerkeleyGW_CalcExchange', .false., bgw%calc_exchange)",
    "Default": [
      "false"
    ],
    "Description": [
      "Whether to calculate exchange matrix elements, to be written in <tt>x.dat</tt>.",
      "These will be calculated anyway by BerkeleyGW <tt>Sigma</tt>, so this is useful",
      "mainly for comparison and testing."
    ],
    "LineNumber": 201,
    "Manuals": [],
    "Name": "BerkeleyGW_CalcExchange",
    "Options": [],
    "Section": "Output::BerkeleyGW",
    "Sourcefile": "output/output_berkeleygw.F90",
    "Testfiles": [
      "periodic_systems/10-berkeleygw.02-unocc.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "berkeleygw_complex": {
    "CallLine": "!call parse_variable(namespace, 'BerkeleyGW_Complex', .false., bgw%complex)",
    "Default": [
      "false"
    ],
    "Description": [
      "! Even when wavefunctions, density, and XC potential could be real in reciprocal space,",
      "! they will be output as complex."
    ],
    "LineNumber": 178,
    "Manuals": [],
    "Name": "BerkeleyGW_Complex",
    "Options": [],
    "Section": "Output::BerkeleyGW",
    "Sourcefile": "output/output_berkeleygw.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "berkeleygw_numberbands": {
    "CallLine": "call parse_variable(namespace, 'BerkeleyGW_NumberBands', nst, bgw%nbands)",
    "Default": [
      "all",
      "states"
    ],
    "Description": [
      "Wavefunctions for bands up to this number will be output. Must be between <= number of states.",
      "If < 1, no wavefunction file will be output."
    ],
    "LineNumber": 92,
    "Manuals": [],
    "Name": "BerkeleyGW_NumberBands",
    "Options": [],
    "Section": "Output::BerkeleyGW",
    "Sourcefile": "output/output_berkeleygw.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "berkeleygw_vmtxelnumcondbands": {
    "CallLine": "if (bgw%calc_vmtxel) call parse_variable(namespace, 'BerkeleyGW_VmtxelNumCondBands', 0, bgw%vmtxel_ncband)",
    "Default": [
      "0"
    ],
    "Description": [
      "Number of conduction bands for which to calculate <tt>vmtxel</tt>, if you have set",
      "<tt>BerkeleyGW_CalcDipoleMtxels = yes</tt>. This should be equal to the number to be",
      "used in BSE."
    ],
    "LineNumber": 258,
    "Manuals": [],
    "Name": "BerkeleyGW_VmtxelNumCondBands",
    "Options": [],
    "Section": "Output::BerkeleyGW",
    "Sourcefile": "output/output_berkeleygw.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "berkeleygw_vmtxelnumvalbands": {
    "CallLine": "if (bgw%calc_vmtxel) call parse_variable(namespace, 'BerkeleyGW_VmtxelNumValBands', 0, bgw%vmtxel_nvband)",
    "Default": [
      "0"
    ],
    "Description": [
      "Number of valence bands for which to calculate <tt>vmtxel</tt>, if you have set",
      "<tt>BerkeleyGW_CalcDipoleMtxels = yes</tt>. This should be equal to the number to be",
      "used in BSE."
    ],
    "LineNumber": 270,
    "Manuals": [],
    "Name": "BerkeleyGW_VmtxelNumValBands",
    "Options": [],
    "Section": "Output::BerkeleyGW",
    "Sourcefile": "output/output_berkeleygw.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "berkeleygw_vmtxelpolarization": {
    "CallLine": "if (bgw%calc_vmtxel .and. parse_block(namespace, 'BerkeleyGW_VmtxelPolarization', blk) == 0) then",
    "Default": [
      "(1,",
      "0,",
      "0)"
    ],
    "Description": [
      "Polarization, <i>i.e.</i> direction vector, for which to calculate <tt>vmtxel</tt>, if you have set",
      "<tt>BerkeleyGW_CalcDipoleMtxels = yes</tt>. May not have any component in a periodic direction.",
      "The vector will be normalized."
    ],
    "LineNumber": 231,
    "Manuals": [],
    "Name": "BerkeleyGW_VmtxelPolarization",
    "Options": [],
    "Section": "Output::BerkeleyGW",
    "Sourcefile": "output/output_berkeleygw.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "berkeleygw_vxc_diag_nmax": {
    "CallLine": "call parse_variable(namespace, 'BerkeleyGW_Vxc_diag_nmax', nst, bgw%vxc_diag_nmax)",
    "Default": [
      "nst"
    ],
    "Description": [
      "Highest band for which to write diagonal exchange-correlation matrix elements. Must be between <= number of states.",
      "If < 1, diagonals will be skipped."
    ],
    "LineNumber": 123,
    "Manuals": [],
    "Name": "BerkeleyGW_Vxc_diag_nmax",
    "Options": [],
    "Section": "Output::BerkeleyGW",
    "Sourcefile": "output/output_berkeleygw.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "berkeleygw_vxc_diag_nmin": {
    "CallLine": "call parse_variable(namespace, 'BerkeleyGW_Vxc_diag_nmin', 1, bgw%vxc_diag_nmin)",
    "Default": [
      "1"
    ],
    "Description": [
      "Lowest band for which to write diagonal exchange-correlation matrix elements. Must be <= number of states.",
      "If < 1, diagonals will be skipped."
    ],
    "LineNumber": 108,
    "Manuals": [],
    "Name": "BerkeleyGW_Vxc_diag_nmin",
    "Options": [],
    "Section": "Output::BerkeleyGW",
    "Sourcefile": "output/output_berkeleygw.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "berkeleygw_vxc_offdiag_nmax": {
    "CallLine": "call parse_variable(namespace, 'BerkeleyGW_Vxc_offdiag_nmax', nst, bgw%vxc_offdiag_nmax)",
    "Default": [
      "nst"
    ],
    "Description": [
      "Highest band for which to write off-diagonal exchange-correlation matrix elements. Must be <= number of states.",
      "If < 1, off-diagonals will be skipped."
    ],
    "LineNumber": 158,
    "Manuals": [],
    "Name": "BerkeleyGW_Vxc_offdiag_nmax",
    "Options": [],
    "Section": "Output::BerkeleyGW",
    "Sourcefile": "output/output_berkeleygw.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "berkeleygw_vxc_offdiag_nmin": {
    "CallLine": "call parse_variable(namespace, 'BerkeleyGW_Vxc_offdiag_nmin', 1, bgw%vxc_offdiag_nmin)",
    "Default": [
      "1"
    ],
    "Description": [
      "Lowest band for which to write off-diagonal exchange-correlation matrix elements. Must be <= number of states.",
      "If < 1, off-diagonals will be skipped."
    ],
    "LineNumber": 143,
    "Manuals": [],
    "Name": "BerkeleyGW_Vxc_offdiag_nmin",
    "Options": [],
    "Section": "Output::BerkeleyGW",
    "Sourcefile": "output/output_berkeleygw.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "berkeleygw_wfn_filename": {
    "CallLine": "call parse_variable(namespace, 'BerkeleyGW_WFN_filename', 'WFN', bgw%wfn_filename)",
    "Default": [
      "WFN"
    ],
    "Description": [
      "Filename for the wavefunctions."
    ],
    "LineNumber": 190,
    "Manuals": [],
    "Name": "BerkeleyGW_WFN_filename",
    "Options": [],
    "Section": "Output::BerkeleyGW",
    "Sourcefile": "output/output_berkeleygw.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "besselbeamaxisshift": {
    "CallLine": "if (parse_block(namespace, 'BesselBeamAxisShift', blk) == 0) then",
    "Default": null,
    "Description": [
      "The BesselBeamAxisShift block allows to shift the Bessel Beam, which is centered at (0,0,0) as default.",
      "Selected position point will be used as the new center of the Bessel Beam.",
      "When defining a BesselBeamAxisShift, please make sure to define a shift for each Bessel source you use,",
      "then it is possible to tell which source is shifted according to which BesselShift, respectively.",
      "<tt>%BesselBeamAxisShift",
      "<br>&nbsp;&nbsp;    0.0 | 2.0 |  5.0",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 521,
    "Manuals": [],
    "Name": "BesselBeamAxisShift",
    "Options": [],
    "Section": "Maxwell",
    "Sourcefile": "maxwell/external_waves.F90",
    "Testfiles": [
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "bornchargesumrulecorrection": {
    "CallLine": "call parse_variable(namespace, 'BornChargeSumRuleCorrection', .true., this%correct)",
    "Default": [
      "true"
    ],
    "Description": [
      "Enforce the acoustic sum rule by distributing the excess sum of Born charges equally among the atoms.",
      "Sum rule: <math>\\sum_{\\alpha} Z^{*}_{\\alpha, i, j} = Z_{\\rm tot} \\delta_{ij}</math>.",
      "Violation of the sum rule may be caused by inadequate spacing, box size (in finite directions),",
      "or <i>k</i>-point sampling (in periodic directions)."
    ],
    "LineNumber": 89,
    "Manuals": [],
    "Name": "BornChargeSumRuleCorrection",
    "Options": [],
    "Section": "Linear Response::Polarizabilities",
    "Sourcefile": "ions/born_charges.F90",
    "Testfiles": [
      "linear_response/05-polarizability.03-finite-diff.inp",
      "periodic_systems/04-silicon.03-emresp.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "boxcenter": {
    "CallLine": "if(parse_block(namespace, 'BoxCenter', blk) == 0) then",
    "Default": null,
    "Description": [
      "This block defines the coordinate center of the simulation box"
    ],
    "LineNumber": 354,
    "Manuals": [],
    "Name": "BoxCenter",
    "Options": [],
    "Section": "Mesh::Simulation Box",
    "Sourcefile": "boxes/box_factory.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "boxcgalfile": {
    "CallLine": "call parse_variable(namespace, 'BoxCgalFile', '', filename)",
    "Default": null,
    "Description": [
      "Filename to be read in by the cgal library. It should describe a shape that",
      "is used for the simulation box"
    ],
    "LineNumber": 343,
    "Manuals": [],
    "Name": "BoxCgalFile",
    "Options": [],
    "Section": "Mesh::Simulation Box",
    "Sourcefile": "boxes/box_factory.F90",
    "Testfiles": [
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "boxshape": {
    "CallLine": "call parse_variable(namespace, 'BoxShape', default_boxshape, box_shape)",
    "Default": null,
    "Description": [
      "This variable decides the shape of the simulation box.",
      "The default is <tt>minimum</tt> for finite systems and <tt>parallelepiped</tt> for periodic systems.",
      "Note that some incompatibilities apply:",
      "<ul><li>Spherical or minimum mesh is not allowed for periodic systems.",
      "<li>Cylindrical mesh is not allowed for systems that are periodic in more than one dimension.",
      "<li><tt>box_image</tt> is only allowed in 2D.</ul>"
    ],
    "LineNumber": 138,
    "Manuals": [],
    "Name": "BoxShape",
    "Options": [
      {
        "Description": [
          "The simulation box will be a sphere of radius <tt>Radius</tt>. (In 2D, this is a circle.)"
        ],
        "Name": "sphere",
        "Value": "1"
      },
      {
        "Description": [
          "The simulation box will be a cylinder with radius <tt>Radius</tt> and height (in the <i>x</i>-direction)",
          "of 2 <tt>Xlength</tt>."
        ],
        "Name": "cylinder",
        "Value": "2"
      },
      {
        "Description": [
          "The simulation box will be constructed by adding spheres created around each",
          "atom (or user-defined potential), of radius <tt>Radius</tt>."
        ],
        "Name": "minimum",
        "Value": "3"
      },
      {
        "Description": [
          "The simulation box will be a parallelepiped whose dimensions are taken from",
          "the variable <tt>Lsize</tt>."
        ],
        "Name": "parallelepiped",
        "Value": "4"
      },
      {
        "Description": [
          "The simulation box will be defined through an image, specified with <tt>BoxShapeImage</tt>.",
          "White (RGB = 255,255,255) means that the point",
          "is contained in the simulation box, while any other color means that the point is out.",
          "The image will be scaled to fit <tt>Lsize</tt>, while its resolution will define the default <tt>Spacing</tt>.",
          "The actual box may be slightly larger than <tt>Lsize</tt> to ensure one grid point = one pixel for",
          "default <tt>Spacing</tt>."
        ],
        "Name": "box_image",
        "Value": "5"
      },
      {
        "Description": [
          "The simulation box will be defined by a file read using the CGAL library.",
          "The file name needs to be specified with <tt>BoxCgalFile</tt>.",
          "<tt>Lsize</tt> needs to be large enough to contain the shape defined in the file."
        ],
        "Name": "box_cgal",
        "Value": "6"
      },
      {
        "Description": [
          "The shape of the simulation box will be read from the variable <tt>BoxShapeUsDef</tt>."
        ],
        "Name": "user_defined",
        "Value": "77"
      }
    ],
    "Section": "Mesh::Simulation Box",
    "Sourcefile": "boxes/box_factory.F90",
    "Testfiles": [
      "finite_systems_2d/01-quadratic_box.03-hartree+xc.inp",
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_2d/01-quadratic_box.04-spin_polarized.inp",
      "finite_systems_2d/05-spin_precession.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/01-quadratic_box.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.02-ground_state.inp",
      "finite_systems_2d/07-user_def_box.01-gs.inp",
      "finite_systems_2d/01-quadratic_box.02-hartree.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "finite_systems_2d/06-gdlib.01-gs.inp",
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/06-vib_modes_fd.01-vib_modes_fd.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "linear_response/01-casida.09-spectrum.inp",
      "linear_response/06-vib_modes_fd.01-ground_state.inp",
      "linear_response/04-vib_modes.01-ground_state.inp",
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/04-vib_modes.02-vib_modes.inp",
      "linear_response/04-vib_modes.03-vib_modes_restart.inp",
      "linear_response/07-casida-photons.06-spectrum.inp",
      "linear_response/07-casida-photons.01-gs.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/01-casida.01-gs.inp",
      "linear_response/07-casida-photons.02-photons.inp",
      "linear_response/07-casida-photons.04-elpa.inp",
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/33-cg.02-additional_terms.inp",
      "finite_systems_3d/20-eigensolver.01-cg.inp",
      "finite_systems_3d/13-full_potential_hydrogen.02-gs-cg.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/12-forces.03-N2_gs.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/33-cg.03-cg_direction.inp",
      "finite_systems_3d/20-eigensolver.03-plan.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/20-eigensolver.05-rmmdiis.inp",
      "finite_systems_3d/07-spin_orbit_coupling.02-rkb.inp",
      "finite_systems_3d/04-jellium.01-ground_state.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/12-forces.02-N2_gs.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "finite_systems_3d/33-cg.01-orthogonalize_all.inp",
      "finite_systems_3d/12-forces.01-N2_gs.inp",
      "real_time/18-hhg.01-gs.inp",
      "real_time/11-tdmagnetic.02-unocc.inp",
      "real_time/08-laser.01-ground_state.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/11-tdmagnetic.01-gs.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "symmetries/05-hexagonal.23-spg165.inp",
      "symmetries/02-monoclinic.05-spg7.inp",
      "symmetries/05-hexagonal.41-spg183.inp",
      "symmetries/02-monoclinic.04-spg6.inp",
      "symmetries/03-orthorombic.14-spg29.inp",
      "symmetries/04-tetragonal.27-spg101.inp",
      "symmetries/06-cubic.29-spg223.inp",
      "symmetries/03-orthorombic.53-spg68.inp",
      "symmetries/04-tetragonal.33-spg107.inp",
      "symmetries/02-monoclinic.07-spg9.inp",
      "symmetries/06-cubic.04-spg198.inp",
      "symmetries/04-tetragonal.51-spg125.inp",
      "symmetries/04-tetragonal.03-spg77.inp",
      "symmetries/03-orthorombic.31-spg46.inp",
      "symmetries/04-tetragonal.08-spg82.inp",
      "symmetries/03-orthorombic.05-spg20.inp",
      "symmetries/04-tetragonal.36-spg110.inp",
      "symmetries/05-hexagonal.15-spg157.inp",
      "symmetries/02-monoclinic.12-spg14.inp",
      "symmetries/03-orthorombic.19-spg34.inp",
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "symmetries/05-hexagonal.28-spg170.inp",
      "symmetries/04-tetragonal.23-spg97.inp",
      "symmetries/04-tetragonal.48-spg122.inp",
      "symmetries/04-tetragonal.21-spg95.inp",
      "symmetries/06-cubic.21-spg215.inp",
      "symmetries/02-monoclinic.09-spg11.inp",
      "symmetries/04-tetragonal.18-spg92.inp",
      "symmetries/04-tetragonal.52-spg126.inp",
      "symmetries/03-orthorombic.55-spg70.inp",
      "symmetries/03-orthorombic.09-spg24.inp",
      "symmetries/04-tetragonal.62-spg136.inp",
      "symmetries/02-monoclinic.08-spg10.inp",
      "symmetries/04-tetragonal.38-spg112.inp",
      "symmetries/04-tetragonal.49-spg123.inp",
      "symmetries/03-orthorombic.20-spg35.inp",
      "symmetries/06-cubic.05-spg199.inp",
      "symmetries/06-cubic.35-spg229.inp",
      "symmetries/02-monoclinic.03-spg5.inp",
      "symmetries/02-monoclinic.06-spg8.inp",
      "symmetries/06-cubic.06-spg200.inp",
      "symmetries/04-tetragonal.57-spg131.inp",
      "symmetries/04-tetragonal.45-spg119.inp",
      "symmetries/05-hexagonal.49-spg191.inp",
      "symmetries/03-orthorombic.26-spg41.inp",
      "symmetries/06-cubic.15-spg209.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/06-cubic.08-spg202.inp",
      "symmetries/04-tetragonal.35-spg109.inp",
      "symmetries/03-orthorombic.07-spg22.inp",
      "symmetries/04-tetragonal.32-spg106.inp",
      "symmetries/04-tetragonal.12-spg86.inp",
      "symmetries/06-cubic.01-spg195.inp",
      "symmetries/05-hexagonal.38-spg180.inp",
      "symmetries/04-tetragonal.01-spg75.inp",
      "symmetries/03-orthorombic.25-spg40.inp",
      "symmetries/04-tetragonal.39-spg113.inp",
      "symmetries/05-hexagonal.02-spg144.inp",
      "symmetries/05-hexagonal.06-spg148.inp",
      "symmetries/06-cubic.32-spg226.inp",
      "symmetries/03-orthorombic.47-spg62.inp",
      "symmetries/05-hexagonal.20-spg162.inp",
      "symmetries/06-cubic.24-spg218.inp",
      "symmetries/06-cubic.30-spg224.inp",
      "symmetries/05-hexagonal.12-spg154.inp",
      "symmetries/05-hexagonal.07-spg149.inp",
      "symmetries/05-hexagonal.27-spg169.inp",
      "symmetries/03-orthorombic.45-spg60.inp",
      "symmetries/05-hexagonal.19-spg161.inp",
      "symmetries/05-hexagonal.16-spg158.inp",
      "symmetries/05-hexagonal.48-spg190.inp",
      "symmetries/06-cubic.09-spg203.inp",
      "symmetries/03-orthorombic.24-spg39.inp",
      "symmetries/03-orthorombic.50-spg65.inp",
      "symmetries/06-cubic.34-spg228.inp",
      "symmetries/05-hexagonal.42-spg184.inp",
      "symmetries/03-orthorombic.23-spg38.inp",
      "symmetries/04-tetragonal.13-spg87.inp",
      "symmetries/06-cubic.02-spg196.inp",
      "symmetries/02-monoclinic.13-spg15.inp",
      "symmetries/05-hexagonal.45-spg187.inp",
      "symmetries/05-hexagonal.22-spg164.inp",
      "symmetries/03-orthorombic.43-spg58.inp",
      "symmetries/03-orthorombic.34-spg49.inp",
      "symmetries/04-tetragonal.47-spg121.inp",
      "symmetries/02-monoclinic.02-spg4.inp",
      "symmetries/03-orthorombic.39-spg54.inp",
      "symmetries/04-tetragonal.17-spg91.inp",
      "symmetries/04-tetragonal.22-spg96.inp",
      "symmetries/05-hexagonal.35-spg177.inp",
      "symmetries/03-orthorombic.13-spg28.inp",
      "symmetries/05-hexagonal.13-spg155.inp",
      "symmetries/03-orthorombic.42-spg57.inp",
      "symmetries/06-cubic.12-spg206.inp",
      "symmetries/02-monoclinic.10-spg12.inp",
      "symmetries/06-cubic.07-spg201.inp",
      "symmetries/03-orthorombic.36-spg51.inp",
      "symmetries/05-hexagonal.44-spg186.inp",
      "symmetries/04-tetragonal.04-spg78.inp",
      "symmetries/05-hexagonal.21-spg163.inp",
      "symmetries/04-tetragonal.02-spg76.inp",
      "symmetries/03-orthorombic.22-spg37.inp",
      "symmetries/05-hexagonal.32-spg174.inp",
      "symmetries/03-orthorombic.35-spg50.inp",
      "symmetries/03-orthorombic.17-spg32.inp",
      "symmetries/05-hexagonal.17-spg159.inp",
      "symmetries/03-orthorombic.04-spg19.inp",
      "symmetries/04-tetragonal.20-spg94.inp",
      "symmetries/06-cubic.20-spg214.inp",
      "symmetries/04-tetragonal.65-spg139.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/03-orthorombic.32-spg47.inp",
      "symmetries/03-orthorombic.02-spg17.inp",
      "symmetries/04-tetragonal.15-spg89.inp",
      "symmetries/03-orthorombic.57-spg72.inp",
      "symmetries/03-orthorombic.15-spg30.inp",
      "symmetries/03-orthorombic.49-spg64.inp",
      "symmetries/06-cubic.11-spg205.inp",
      "symmetries/04-tetragonal.30-spg104.inp",
      "symmetries/04-tetragonal.59-spg133.inp",
      "symmetries/03-orthorombic.54-spg69.inp",
      "symmetries/03-orthorombic.41-spg56.inp",
      "symmetries/06-cubic.19-spg213.inp",
      "symmetries/05-hexagonal.05-spg147.inp",
      "symmetries/04-tetragonal.25-spg99.inp",
      "symmetries/03-orthorombic.58-spg73.inp",
      "symmetries/04-tetragonal.43-spg117.inp",
      "symmetries/01-triclinic.02-spg2.inp",
      "symmetries/04-tetragonal.42-spg116.inp",
      "symmetries/05-hexagonal.50-spg192.inp",
      "symmetries/04-tetragonal.68-spg142.inp",
      "symmetries/04-tetragonal.40-spg114.inp",
      "symmetries/05-hexagonal.34-spg176.inp",
      "symmetries/04-tetragonal.63-spg137.inp",
      "symmetries/06-cubic.31-spg225.inp",
      "symmetries/05-hexagonal.36-spg178.inp",
      "symmetries/05-hexagonal.30-spg172.inp",
      "symmetries/03-orthorombic.48-spg63.inp",
      "symmetries/04-tetragonal.11-spg85.inp",
      "symmetries/05-hexagonal.40-spg182.inp",
      "symmetries/05-hexagonal.11-spg153.inp",
      "symmetries/04-tetragonal.41-spg115.inp",
      "symmetries/01-triclinic.16-spg16.inp",
      "symmetries/04-tetragonal.26-spg100.inp",
      "symmetries/05-hexagonal.24-spg166.inp",
      "symmetries/03-orthorombic.56-spg71.inp",
      "symmetries/06-cubic.16-spg210.inp",
      "symmetries/06-cubic.25-spg219.inp",
      "symmetries/03-orthorombic.51-spg66.inp",
      "symmetries/05-hexagonal.47-spg189.inp",
      "symmetries/04-tetragonal.24-spg98.inp",
      "symmetries/05-hexagonal.51-spg193.inp",
      "symmetries/03-orthorombic.37-spg52.inp",
      "symmetries/05-hexagonal.39-spg181.inp",
      "symmetries/03-orthorombic.27-spg42.inp",
      "symmetries/04-tetragonal.58-spg132.inp",
      "symmetries/04-tetragonal.31-spg105.inp",
      "symmetries/04-tetragonal.06-spg80.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "symmetries/05-hexagonal.10-spg152.inp",
      "symmetries/05-hexagonal.01-spg143.inp",
      "symmetries/05-hexagonal.04-spg146.inp",
      "symmetries/04-tetragonal.19-spg93.inp",
      "symmetries/03-orthorombic.08-spg23.inp",
      "symmetries/07-symmetrization_lda.01-spg2_sym.inp",
      "symmetries/04-tetragonal.29-spg103.inp",
      "symmetries/06-cubic.27-spg221.inp",
      "symmetries/04-tetragonal.56-spg130.inp",
      "symmetries/06-cubic.36-spg230.inp",
      "symmetries/04-tetragonal.55-spg129.inp",
      "symmetries/04-tetragonal.44-spg118.inp",
      "symmetries/04-tetragonal.53-spg127.inp",
      "symmetries/03-orthorombic.11-spg26.inp",
      "symmetries/05-hexagonal.14-spg156.inp",
      "symmetries/06-cubic.33-spg227.inp",
      "symmetries/05-hexagonal.43-spg185.inp",
      "symmetries/03-orthorombic.40-spg55.inp",
      "symmetries/06-cubic.13-spg207.inp",
      "symmetries/06-cubic.03-spg197.inp",
      "symmetries/06-cubic.14-spg208.inp",
      "symmetries/02-monoclinic.11-spg13.inp",
      "symmetries/06-cubic.17-spg211.inp",
      "symmetries/03-orthorombic.30-spg45.inp",
      "symmetries/06-cubic.28-spg222.inp",
      "symmetries/05-hexagonal.46-spg188.inp",
      "symmetries/03-orthorombic.16-spg31.inp",
      "symmetries/06-cubic.23-spg217.inp",
      "symmetries/04-tetragonal.10-spg84.inp",
      "symmetries/06-cubic.18-spg212.inp",
      "symmetries/04-tetragonal.66-spg140.inp",
      "symmetries/04-tetragonal.16-spg90.inp",
      "symmetries/04-tetragonal.61-spg135.inp",
      "symmetries/03-orthorombic.46-spg61.inp",
      "symmetries/01-triclinic.01-spg1.inp",
      "symmetries/03-orthorombic.29-spg44.inp",
      "symmetries/04-tetragonal.67-spg141.inp",
      "symmetries/03-orthorombic.18-spg33.inp",
      "symmetries/05-hexagonal.33-spg175.inp",
      "symmetries/05-hexagonal.25-spg167.inp",
      "symmetries/04-tetragonal.64-spg138.inp",
      "symmetries/03-orthorombic.01-spg16.inp",
      "symmetries/03-orthorombic.21-spg36.inp",
      "symmetries/05-hexagonal.52-spg194.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "symmetries/06-cubic.26-spg220.inp",
      "symmetries/03-orthorombic.52-spg67.inp",
      "symmetries/04-tetragonal.37-spg111.inp",
      "symmetries/04-tetragonal.28-spg102.inp",
      "symmetries/05-hexagonal.26-spg168.inp",
      "symmetries/05-hexagonal.31-spg173.inp",
      "symmetries/03-orthorombic.59-spg74.inp",
      "symmetries/03-orthorombic.33-spg48.inp",
      "symmetries/04-tetragonal.50-spg124.inp",
      "symmetries/05-hexagonal.37-spg179.inp",
      "symmetries/04-tetragonal.60-spg134.inp",
      "symmetries/03-orthorombic.10-spg25.inp",
      "symmetries/05-hexagonal.08-spg150.inp",
      "symmetries/03-orthorombic.03-spg18.inp",
      "symmetries/05-hexagonal.29-spg171.inp",
      "symmetries/04-tetragonal.54-spg128.inp",
      "symmetries/03-orthorombic.44-spg59.inp",
      "symmetries/05-hexagonal.03-spg145.inp",
      "symmetries/05-hexagonal.18-spg160.inp",
      "symmetries/03-orthorombic.06-spg21.inp",
      "symmetries/04-tetragonal.14-spg88.inp",
      "symmetries/04-tetragonal.34-spg108.inp",
      "symmetries/05-hexagonal.09-spg151.inp",
      "symmetries/03-orthorombic.12-spg27.inp",
      "symmetries/03-orthorombic.28-spg43.inp",
      "symmetries/04-tetragonal.46-spg120.inp",
      "symmetries/03-orthorombic.38-spg53.inp",
      "symmetries/02-monoclinic.01-spg3.inp",
      "symmetries/06-cubic.22-spg216.inp",
      "symmetries/06-cubic.10-spg204.inp",
      "symmetries/04-tetragonal.07-spg81.inp",
      "symmetries/04-tetragonal.09-spg83.inp",
      "symmetries/04-tetragonal.05-spg79.inp",
      "photo_electron/05-pfft.01-gs.inp",
      "photo_electron/06-2D.01-Na_gs.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/09-flux_3d.03-Na_gs_cub.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/09-flux_3d.01-Na_gs_sph.inp",
      "photo_electron/13-arpes_2d.01-gs.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "photo_electron/12-spm_3d.01-Na_gs.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.01-N_atom.inp",
      "tutorials/02-octopus_basics-basic_input_options.01-N_atom.inp",
      "functionals/01-xc_1d.oep_kli.inp",
      "functionals/02-xc_2d.gga_b86_mgc.inp",
      "functionals/16-dressed-rdmft.03-rdmft.inp",
      "functionals/05-ks_inversion.03-inversion.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/10-vdw_d3_dna.01-gs_novdw.inp",
      "functionals/01-xc_1d.02-wfs-hf.inp",
      "functionals/02-xc_2d.gga_b86.inp",
      "functionals/01-xc_1d.01-wfs-lda.inp",
      "functionals/05-ks_inversion.02-two_particle.inp",
      "functionals/04-oep.02-jellium-exx_kli.inp",
      "functionals/16-dressed-rdmft.02-hf.inp",
      "functionals/04-oep.01-jellium-lsda.inp",
      "functionals/01-xc_1d.lda_csc.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/01-xc_1d.oep_exx.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/05-ks_inversion.01-target_density.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "functionals/10-vdw_d3_dna.02-gs_d3.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "functionals/04-oep.03-jellium-full_exx.inp",
      "functionals/02-xc_2d.lda_amgb.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/02-xc_2d.lda_prm.inp",
      "functionals/16-dressed-rdmft.01-ip.inp",
      "functionals/02-xc_2d.gga_b88.inp",
      "functionals/02-xc_2d.gga_pbe.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/04-silicon.02-kdotp.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/22-berry.02-cubic_Si.inp",
      "periodic_systems/11-silicon_force.01-gs.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/05-lithium.04-dielectric_function.inp",
      "periodic_systems/11-silicon_force.02-nlcc.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.02_kdotp.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/27-Ar.02-kdotp.inp",
      "periodic_systems/05-lithium.05-tdtdm.inp",
      "periodic_systems/26-Na.01-gs.inp",
      "periodic_systems/22-berry.01-cubic_Si_gs.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/01-free_electrons.02-unocc.inp",
      "periodic_systems/15-bandstructure.04-wannier90_output.inp",
      "periodic_systems/06-h2o_pol_lr.01_gs.inp",
      "periodic_systems/19-unfolding.03-unocc.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/15-bandstructure.05-wannier90_states.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/01-free_electrons.01-ground_state.inp",
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/15-bandstructure.03-wannier90_setup.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/02-cosine_potential.02-unocc.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/05-lithium.01-gs.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "periodic_systems/07-mgga.02-tb09_gs_nosymm.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/20-masked_periodic_boundaries.01-graphene.inp",
      "periodic_systems/27-Ar.01-gs.inp",
      "periodic_systems/24-hartree_fock_1D.01-gs.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "periodic_systems/09-etsf_io.01-gs.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/26-Na.02-kdotp.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/03-sodium_chain.03-ground_state_disp.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/04-silicon.03-emresp.inp",
      "periodic_systems/10-berkeleygw.02-unocc.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/15-bandstructure.02-unocc.inp",
      "periodic_systems/23-hybrids.01-ace.inp",
      "periodic_systems/19-unfolding.02-setup.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/19-unfolding.04-run.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/08-benzene_supercell.01-gs.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "periodic_systems/02-cosine_potential.01-ground_state.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "finite_systems_1d/09-morse.02-unocc.inp",
      "finite_systems_1d/01-hydrogen.03-dummy.inp",
      "finite_systems_1d/09-morse.01-gs.inp",
      "finite_systems_1d/01-hydrogen.02-excited_state.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/05-adw.02-unocc.inp",
      "optimal_control/04-box.01-ground_state.inp",
      "optimal_control/10-current.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.02-unocc.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.01-ground_state.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/06-zbr98.01-ground_state.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/02-sym_doublewell.02-unocc.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/05-adw.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/04-box.02-unocc.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.04-gs-mp.inp",
      "optimal_control/01-asym_doublewell.01-ground_state.inp",
      "optimal_control/03-localtarget.01-gs.inp",
      "optimal_control/09-density+current.01-ground_state.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp",
      "components/22-density_calc.01-Si.inp",
      "components/16-hartree_3d_psolver.02-psolver.inp",
      "components/20-dft_u.04-complex_submesh.inp",
      "components/05-hartree_3d_fft.04-3d_3d_periodic.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/35-helmholtz_decom.01-large_box_no_surf_corr.inp",
      "components/10-hartree_pfft.03-3d_1d_periodic.inp",
      "components/16-hartree_3d_psolver.01-psolver.inp",
      "components/11-hartree_cl.01-fft.inp",
      "components/01-derivatives_1d.02-fortran.inp",
      "components/10-hartree_pfft.05-3d_2d_periodic.inp",
      "components/35-helmholtz_decom.05-sphere_small_box_with_surf_corr.inp",
      "components/35-helmholtz_decom.04-cylinder_small_box_with_surf_corr.inp",
      "components/37-current-density.inp",
      "components/06-hartree_3d_isf.01-isf.inp",
      "components/01-derivatives_1d.01.inp",
      "components/02-derivatives_2d.01.inp",
      "components/03-derivatives_3d.01.inp",
      "components/12-hartree_direct_3d.01.inp",
      "components/08-gs.01-cgs_real.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/21-hamiltonian_apply.01-Si.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/25-subspace.01-jellium.inp",
      "components/10-hartree_pfft.06-fft-parstates.inp",
      "components/13-hartree_3d_mg.01-multigrid.inp",
      "components/10-hartree_pfft.04-3d_3d_periodic.inp",
      "components/05-hartree_3d_fft.02-fft_corrected.inp",
      "components/05-hartree_3d_fft.01-fft.inp",
      "components/35-helmholtz_decom.03-parallelepiped_small_box_with_surf_corr.inp",
      "components/10-hartree_pfft.02-fft_corrected.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/08-gs.05-drcgs_real.inp",
      "components/15-cholesky_parallel.01-real.inp",
      "components/08-gs.03-mgs_real.inp",
      "components/10-hartree_pfft.01-fft.inp",
      "components/29-linear_solver.01-real.inp",
      "components/07-cholesky_serial.01-real.inp",
      "components/04-hartree_3d_cg.01-cg_corrected.inp",
      "components/36-maxwell_vector_potential.inp",
      "components/36-maxwell_vector_potential.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/07-cholesky_serial.03-parindep.inp",
      "components/15-cholesky_parallel.02-complex.inp",
      "components/35-helmholtz_decom.02-small_box_no_surf_corr.inp",
      "components/31-grid_interpolation.01.inp",
      "components/05-hartree_3d_fft.03-3d_1d_periodic.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "components/19-hgh_soc.01-3d.inp",
      "components/08-gs.02-cgs_complex.inp",
      "components/07-cholesky_serial.02-complex.inp",
      "components/08-gs.04-mgs_complex.inp",
      "components/05-hartree_3d_fft.05-3d_2d_periodic.inp",
      "components/23-exponential_apply.01-jellium.inp",
      "components/08-gs.06-drcgs_complex.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/14-quadrupole-pot.01-hydrogen-gs.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/09-basis_from_states.01-lda.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/06-laser.03-velocity_gauge.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/06-laser.01-gs.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "boxshapeimage": {
    "CallLine": "call parse_variable(namespace, 'BoxShapeImage', '', filename)",
    "Default": null,
    "Description": [
      "Name of the file that contains the image that defines the simulation box",
      "when <tt>BoxShape = box_image</tt>. No default. Will search in current",
      "directory and <tt>OCTOPUS-HOME/share/</tt>."
    ],
    "LineNumber": 298,
    "Manuals": [],
    "Name": "BoxShapeImage",
    "Options": [],
    "Section": "Mesh::Simulation Box",
    "Sourcefile": "boxes/box_factory.F90",
    "Testfiles": [
      "finite_systems_2d/06-gdlib.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "boxshapeusdef": {
    "CallLine": "call parse_variable(namespace, 'BoxShapeUsDef', 'x^2+y^2+z^2 < 4', user_def)",
    "Default": null,
    "Description": [
      "Boolean expression that defines the interior of the simulation box. For example,",
      "<tt>BoxShapeUsDef = \"(sqrt(x^2+y^2) <= 4) && z>-2 && z<2\"</tt> defines a cylinder",
      "with axis parallel to the <i>z</i>-axis."
    ],
    "LineNumber": 322,
    "Manuals": [],
    "Name": "BoxShapeUsDef",
    "Options": [],
    "Section": "Mesh::Simulation Box",
    "Sourcefile": "boxes/box_factory.F90",
    "Testfiles": [
      "finite_systems_2d/07-user_def_box.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "calcinfrared": {
    "CallLine": "call parse_variable(sys%namespace, 'CalcInfrared', .true., do_infrared)",
    "Default": [
      "true"
    ],
    "Description": [
      "If set to true, infrared intensities (and born charges) will be calculated",
      "and written in <tt>vib_modes/infrared</tt>."
    ],
    "LineNumber": 154,
    "Manuals": [],
    "Name": "CalcInfrared",
    "Options": [],
    "Section": "Linear Response::Vibrational Modes",
    "Sourcefile": "sternheimer/phonons_lr.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "calcnormalmodewfs": {
    "CallLine": "call parse_variable(sys%namespace, 'CalcNormalModeWfs', .false., normal_mode_wfs)",
    "Default": [
      "false"
    ],
    "Description": [
      "If set to true, the response wavefunctions for each normal mode will be calculated",
      "and written in directory <tt>restart/vib_modes/phn_nm_wfs_XXXXX</tt>.",
      "This part is time-consuming and not parallel, but not needed for most purposes."
    ],
    "LineNumber": 144,
    "Manuals": [],
    "Name": "CalcNormalModeWfs",
    "Options": [],
    "Section": "Linear Response::Vibrational Modes",
    "Sourcefile": "sternheimer/phonons_lr.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "calculatediamagneticcurrent": {
    "CallLine": "call parse_variable(namespace, 'CalculateDiamagneticCurrent', .false., this%include_diamag)",
    "Default": [
      "no"
    ],
    "Description": [
      "This variable decides whether the current density arising from the non-uniform",
      "vector potential, defined as:",
      "<math> \\vec{J}_{dmc}(\\vec{r}, t)=-\\frac{e^2}{m_e c_0} n(\\vec{r}, t) \\vec{A}(\\vec{r},t)$ </math>",
      "is included in the total current density."
    ],
    "LineNumber": 124,
    "Manuals": [],
    "Name": "CalculateDiamagneticCurrent",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "electrons/current.F90",
    "Testfiles": [
      "components/37-current-density.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "calculateselfinducedmagneticfield": {
    "CallLine": "call parse_variable(namespace, 'CalculateSelfInducedMagneticField', .false., hm%self_induced_magnetic)",
    "Default": [
      "no"
    ],
    "Description": [
      "The existence of an electronic current implies the creation of a self-induced magnetic",
      "field, which may in turn back-react on the system. Of course, a fully consistent treatment",
      "of this kind of effect should be done in QED theory, but we will attempt a first",
      "approximation to the problem by considering the lowest-order relativistic terms",
      "plugged into the normal Hamiltonian equations (spin-other-orbit coupling terms, etc.).",
      "For the moment being, none of this is done, but a first step is taken by calculating",
      "the induced magnetic field of a system that has a current, by considering the magnetostatic",
      "approximation and Biot-Savart law:",
      " ",
      "<math> \\nabla^2 \\vec{A} + 4\\pi\\alpha \\vec{J} = 0</math>",
      " ",
      "<math> \\vec{B} = \\vec{\\nabla} \\times \\vec{A}</math>",
      " ",
      "If <tt>CalculateSelfInducedMagneticField</tt> is set to yes, this <i>B</i> field is",
      "calculated at the end of a <tt>gs</tt> calculation (nothing is done -- yet -- in the <tt>td</tt>case)",
      "and printed out, if the <tt>Output</tt> variable contains the <tt>potential</tt> keyword (the prefix",
      "of the output files is <tt>Bind</tt>)."
    ],
    "LineNumber": 385,
    "Manuals": [],
    "Name": "CalculateSelfInducedMagneticField",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/hamiltonian_elec.F90",
    "Testfiles": [
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "calculationmode": {
    "CallLine": "call parse_variable(global_namespace, 'CalculationMode', OPTION__CALCULATIONMODE__GS, inp_calc_mode)",
    "Default": [
      "gs"
    ],
    "Description": [
      "Decides what kind of calculation is to be performed."
    ],
    "LineNumber": 121,
    "Manuals": [],
    "Name": "CalculationMode",
    "Options": [
      {
        "Description": [
          "Calculation of the ground state."
        ],
        "Name": "gs",
        "Value": "01"
      },
      {
        "Description": [
          "Calculation of unoccupied/virtual KS states. Can also be used for a non-self-consistent",
          "calculation of states at arbitrary k-points, if <tt>density.obf</tt> from <tt>gs</tt>",
          "is provided in the <tt>restart/gs</tt> directory."
        ],
        "Name": "unocc",
        "Value": "02"
      },
      {
        "Description": [
          "Time-dependent calculation (experimental for periodic systems)."
        ],
        "Name": "td",
        "Value": "03"
      },
      {
        "Description": [
          "Optimization of the geometry."
        ],
        "Name": "go",
        "Value": "05"
      },
      {
        "Description": [
          "Optimal control."
        ],
        "Name": "opt_control",
        "Value": "07"
      },
      {
        "Description": [
          "Calculation of the electromagnetic response: electric",
          "polarizabilities and hyperpolarizabilities and magnetic",
          "susceptibilities (experimental for periodic systems)."
        ],
        "Name": "em_resp",
        "Value": "08"
      },
      {
        "Description": [
          "Excitations via Casida linear-response TDDFT; for finite systems only."
        ],
        "Name": "casida",
        "Value": "09"
      },
      {
        "Description": [
          "Calculate van der Waals coefficients."
        ],
        "Name": "vdw",
        "Value": "11"
      },
      {
        "Description": [
          "Calculation of the vibrational modes."
        ],
        "Name": "vib_modes",
        "Value": "12"
      },
      {
        "Description": [
          "Obsolete. Use <tt>gs</tt> with <tt>MaximumIter = 0</tt> instead."
        ],
        "Name": "one_shot",
        "Value": "14"
      },
      {
        "Description": [
          "Calculation of effective masses by <math>\\vec{k} \\cdot \\vec{p}</math> perturbation theory (experimental)."
        ],
        "Name": "kdotp",
        "Value": "15"
      },
      {
        "Description": [
          "This calculation mode does nothing. Useful for debugging, testing and benchmarking."
        ],
        "Name": "dummy",
        "Value": "17"
      },
      {
        "Description": [
          "Invert the Kohn-Sham equations (experimental)."
        ],
        "Name": "invert_ks",
        "Value": "18"
      },
      {
        "Description": [],
        "Name": "test",
        "Value": "19"
      },
      {
        "Description": [
          "Prints out a tasty recipe."
        ],
        "Name": "recipe",
        "Value": "99"
      }
    ],
    "Section": "Calculation Modes",
    "Sourcefile": "main/main.F90",
    "Testfiles": [
      "finite_systems_2d/01-quadratic_box.03-hartree+xc.inp",
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_2d/01-quadratic_box.04-spin_polarized.inp",
      "finite_systems_2d/05-spin_precession.01-ground_state.inp",
      "finite_systems_2d/03-helium_atom.02-ground_state.inp",
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/02-fock-darwin.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/01-quadratic_box.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.02-ground_state.inp",
      "finite_systems_2d/07-user_def_box.01-gs.inp",
      "finite_systems_2d/09-magnetic_2d.01-no_field.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "finite_systems_2d/01-quadratic_box.02-hartree.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/03-helium_atom.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "finite_systems_2d/06-gdlib.01-gs.inp",
      "multisystem/05-propagation_beeman.02-three_body.inp",
      "multisystem/06-propagation_expmid.02-three_body.inp",
      "multisystem/09-illegal_system_names.04-white_space.inp",
      "multisystem/03-interactions_creation.03-case3.inp",
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/13-restart_verlet.01-restart-run-part1.inp",
      "multisystem/03-interactions_creation.01-case1.inp",
      "multisystem/05-propagation_beeman.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.01-two_body.inp",
      "multisystem/09-illegal_system_names.02-empty.inp",
      "multisystem/03-interactions_creation.02-case2.inp",
      "multisystem/12-electronic_subsystem_propagators.01-gs.inp",
      "multisystem/14-lennard-jones.01-classical-particles-N2.inp",
      "multisystem/18-incompatible_timing.01-run.inp",
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/01-nested_systems.02-three_levels.inp",
      "multisystem/01-nested_systems.01-two_levels.inp",
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/06-propagation_expmid.05-two_body_verlet_half.inp",
      "multisystem/16-bomd.01-gs.inp",
      "multisystem/09-illegal_system_names.01-duplicated.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "multisystem/04-propagation_verlet.02-three_body.inp",
      "multisystem/10-dftbplus_verlet.01-water.inp",
      "multisystem/99-carbon_hydrogen.03-td_restart.inp",
      "multisystem/99-carbon_hydrogen.01-gs.inp",
      "multisystem/15-electronic_system_restart.04-td_restart_part2.inp",
      "multisystem/06-propagation_expmid.01-two_body.inp",
      "multisystem/08-coulomb_force.01-classical_helium.inp",
      "multisystem/01-nested_systems.03-four_levels.inp",
      "multisystem/09-illegal_system_names.03-illegal_character.inp",
      "multisystem/03-interactions_creation.04-case4.inp",
      "multisystem/13-restart_verlet.03-full-run.inp",
      "multisystem/16-bomd.02-td.inp",
      "multisystem/17-lasers.01-length_gauge.inp",
      "multisystem/06-propagation_expmid.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.04-three_body_different_time_steps.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/06-propagation_expmid.06-two_body_verlet.inp",
      "multisystem/05-propagation_beeman.03-two_body_different_time_steps.inp",
      "multisystem/07-lorentz-force.02-charged_particle_in_static_efield.inp",
      "multisystem/13-restart_verlet.02-restart-run-part2.inp",
      "multisystem/15-electronic_system_restart.01-gs.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "multisystem/04-propagation_verlet.03-two_body_different_time_steps.inp",
      "multisystem/99-carbon_hydrogen.02-td.inp",
      "multisystem/05-propagation_beeman.01-two_body.inp",
      "multisystem/02-interaction_graph.01-three_body.inp",
      "multisystem/06-propagation_expmid.03-two_body_different_time_steps.inp",
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/03-vdw_sternheimer.02-vdw.inp",
      "linear_response/02-h2o_pol_lr.04_h2o_susc.inp",
      "linear_response/05-polarizability.02-sternheimer.inp",
      "linear_response/06-vib_modes_fd.01-vib_modes_fd.inp",
      "linear_response/05-polarizability.01-gs.inp",
      "linear_response/08-sternheimer-photons.01-gs.inp",
      "linear_response/08-sternheimer-photons.02-em_resp.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "linear_response/02-h2o_pol_lr.01_h2o_gs.inp",
      "linear_response/01-casida.09-spectrum.inp",
      "linear_response/06-vib_modes_fd.01-ground_state.inp",
      "linear_response/02-h2o_pol_lr.03_h2o_dyn_pol_cmplx.inp",
      "linear_response/04-vib_modes.01-ground_state.inp",
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/05-polarizability.03-finite-diff.inp",
      "linear_response/02-h2o_pol_lr.02_h2o_dyn_pol.inp",
      "linear_response/04-vib_modes.02-vib_modes.inp",
      "linear_response/04-vib_modes.03-vib_modes_restart.inp",
      "linear_response/07-casida-photons.06-spectrum.inp",
      "linear_response/07-casida-photons.01-gs.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/02-h2o_pol_lr.05_h2o_magn_opt.inp",
      "linear_response/01-casida.01-gs.inp",
      "linear_response/07-casida-photons.02-photons.inp",
      "linear_response/03-vdw_sternheimer.01-ground_state.inp",
      "linear_response/07-casida-photons.04-elpa.inp",
      "finite_systems_3d/14-fullerene_unpacked.02-td-unpacked.inp",
      "finite_systems_3d/42-full_potential_anc.04-fr-zora.inp",
      "finite_systems_3d/22-preconditioner.01-none.inp",
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/22-preconditioner.03-jacobi.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/30-local_multipoles.01-gs.inp",
      "finite_systems_3d/34-walltime.02-restart_gs.inp",
      "finite_systems_3d/06-restart.06-td_calc.inp",
      "finite_systems_3d/05-output.02-gs.inp",
      "finite_systems_3d/16-scfinlcao_std.01-gs.inp",
      "finite_systems_3d/03-magnetic.01-gs-unpolarized.inp",
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/33-cg.02-additional_terms.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/20-eigensolver.01-cg.inp",
      "finite_systems_3d/10-fullerene.01-gs.inp",
      "finite_systems_3d/42-full_potential_anc.02-sc-zora.inp",
      "finite_systems_3d/14-fullerene_unpacked.03-td-packed.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/18-preconditioner_poisson.01-poisson.inp",
      "finite_systems_3d/24-o2-spin.01-gs.inp",
      "finite_systems_3d/39-adsic.02-polarized.inp",
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "finite_systems_3d/12-forces.03-N2_gs.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/35-slater_x.01-gs.inp",
      "finite_systems_3d/06-restart.05-restart_gs.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/22-preconditioner.04-multigrid.inp",
      "finite_systems_3d/06-restart.01-gs_mixrho.inp",
      "finite_systems_3d/33-cg.03-cg_direction.inp",
      "finite_systems_3d/23-go-na2.02-simplex.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/42-full_potential_anc.01-gs.inp",
      "finite_systems_3d/22-preconditioner.05-multigrid_rmmdiis.inp",
      "finite_systems_3d/36-kli_x.01-gs.inp",
      "finite_systems_3d/06-restart.07-restart_td_calc.inp",
      "finite_systems_3d/23-go-na2.04-fire_restart.inp",
      "finite_systems_3d/20-eigensolver.03-plan.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/41-gpu-bug.01-C.inp",
      "finite_systems_3d/28-carbon_big_box.01-ground_state.inp",
      "finite_systems_3d/23-go-na2.03-fire.inp",
      "finite_systems_3d/23-go-na2.01-steep.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/09-spinors.03-rmmdiis_extra_states.inp",
      "finite_systems_3d/42-full_potential_anc.03-sf-zora.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/34-walltime.03-td_walltime.inp",
      "finite_systems_3d/09-spinors.01-ground_state.inp",
      "finite_systems_3d/34-walltime.04-restart_td.inp",
      "finite_systems_3d/23-go-na2.05-constrains.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "finite_systems_3d/20-eigensolver.05-rmmdiis.inp",
      "finite_systems_3d/07-spin_orbit_coupling.02-rkb.inp",
      "finite_systems_3d/06-restart.04-restart_gs_mixvhxc.inp",
      "finite_systems_3d/04-jellium.01-ground_state.inp",
      "finite_systems_3d/31-acetylene_b3lyp.01-gs.inp",
      "finite_systems_3d/32-tdpcm_methane.01-ground_state.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/06-restart.02-restart_gs_mixrho.inp",
      "finite_systems_3d/22-preconditioner.02-filter.inp",
      "finite_systems_3d/34-walltime.01-gs_walltime.inp",
      "finite_systems_3d/12-forces.02-N2_gs.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.03-unocc.inp",
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "finite_systems_3d/33-cg.01-orthogonalize_all.inp",
      "finite_systems_3d/37-sternheimer_polarized.02-em_resp.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "finite_systems_3d/14-fullerene_unpacked.01-gs.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/42-full_potential_anc.05-zora-error.inp",
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/06-restart.03-gs_mixvhxc.inp",
      "finite_systems_3d/39-adsic.01-unpolarized.inp",
      "finite_systems_3d/37-sternheimer_polarized.01-gs.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "finite_systems_3d/12-forces.01-N2_gs.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "finite_systems_3d/09-spinors.02-rmmdiis.inp",
      "real_time/19-td_move_ions.01-gs.inp",
      "real_time/18-hhg.01-gs.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/11-tdmagnetic.02-unocc.inp",
      "real_time/17-absorption-spin_symmetry.01-gs.inp",
      "real_time/10-bomd.02-td.inp",
      "real_time/02-propagators.01-gs.inp",
      "real_time/05-time_propagation.04-td_domains_states-reorder_ranks.inp",
      "real_time/01-propagators.09-magnus.inp",
      "real_time/20-pcm-local-field-absorption.01-gs.inp",
      "real_time/02-propagators.02-cnsparskit.inp",
      "real_time/05-time_propagation.01-gs.inp",
      "real_time/08-laser.01-ground_state.inp",
      "real_time/05-time_propagation.06-td_fast_md.inp",
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/16-sparskit.01-gs.inp",
      "real_time/10-bomd.03-td_restart.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/01-propagators.07-caetrs.inp",
      "real_time/19-td_move_ions.03-td_restart.inp",
      "real_time/12-absorption.01-gs.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/09-angular_momentum.03-td_icl.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/06-caetrs.01-gs.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/05-time_propagation.03-td_domains_states.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/14-absorption-spinors.03-td-restart.inp",
      "real_time/21-scissor.02-td.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/09-angular_momentum.01-gs.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/01-propagators.11-cfmagnus4.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/10-bomd.01-gs.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/13-absorption-spin.03-td-restart.inp",
      "real_time/14-absorption-spinors.02-td.inp",
      "real_time/22-td_move_ions_periodic.01-gs.inp",
      "real_time/09-angular_momentum.02-td_gipaw.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/01-propagators.08-cn.inp",
      "real_time/15-crank_nicolson.01-gs.inp",
      "real_time/01-propagators.05-etrs_chebyshev.inp",
      "real_time/24-adsic_freeze_orbitals.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/11-tdmagnetic.01-gs.inp",
      "real_time/03-td_self_consistent.01-gs.inp",
      "real_time/01-propagators.06-aetrs.inp",
      "real_time/14-absorption-spinors.01-gs.inp",
      "real_time/05-time_propagation.05-td_md.inp",
      "real_time/19-td_move_ions.02-td.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/01-propagators.01-gs.inp",
      "real_time/01-propagators.03-etrs_taylor.inp",
      "real_time/03-td_self_consistent.02-etrs.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/01-propagators.02-expmid.inp",
      "real_time/13-absorption-spin.01-gs.inp",
      "real_time/05-time_propagation.02-td_domains.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "real_time/01-propagators.10-exprk4.inp",
      "real_time/22-td_move_ions_periodic.02-td.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "real_time/21-scissor.01-gs.inp",
      "real_time/12-absorption.03-td-restart.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "real_time/02-propagators.04-rungekutta4.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "pseudopotentials/17-hgh_occupations.01-W.inp",
      "pseudopotentials/17-hgh_occupations.02-Au.inp",
      "pseudopotentials/06-carbon_dojo_pbe.01-gs.inp",
      "pseudopotentials/16-platinum_psp8.01-gs.inp",
      "pseudopotentials/18-Bi_pseudodojo_fr.01-gs.inp",
      "pseudopotentials/17-hgh_occupations.04-Au_sc.inp",
      "pseudopotentials/11-isotopes.02-tritium.inp",
      "pseudopotentials/17-hgh_occupations.03-W_sc.inp",
      "pseudopotentials/10-helium_upf.02-gs_filter_ts.inp",
      "pseudopotentials/01-sg15-h.01-gs.inp",
      "pseudopotentials/08-carbon_fhi.01-gs.inp",
      "pseudopotentials/11-isotopes.01-deuterium.inp",
      "pseudopotentials/07-carbon_dojo_lda.01-gs.inp",
      "pseudopotentials/03-nlcc.01-Fatom.inp",
      "pseudopotentials/13-U235.01-gs.inp",
      "pseudopotentials/10-helium_upf.03-gs_filter_bsb.inp",
      "pseudopotentials/05-carbon_dojo_pbesol.01-gs.inp",
      "pseudopotentials/04-carbon_dojo_psml.01-gs.inp",
      "pseudopotentials/15-calcium_psp8_sic.01-gs.inp",
      "pseudopotentials/10-helium_upf.01-gs_nofilter.inp",
      "pseudopotentials/09-carbon_cpi.01-gs.inp",
      "pseudopotentials/02-cu2_hgh.01_gs.inp",
      "pseudopotentials/02-cu2_hgh.02_gs_current.inp",
      "pseudopotentials/14-carbon_dojo_psp8.01-gs.inp",
      "pseudopotentials/12-mix_and_match.01-mgo.inp",
      "symmetries/05-hexagonal.23-spg165.inp",
      "symmetries/02-monoclinic.05-spg7.inp",
      "symmetries/05-hexagonal.41-spg183.inp",
      "symmetries/02-monoclinic.04-spg6.inp",
      "symmetries/03-orthorombic.14-spg29.inp",
      "symmetries/04-tetragonal.27-spg101.inp",
      "symmetries/06-cubic.29-spg223.inp",
      "symmetries/03-orthorombic.53-spg68.inp",
      "symmetries/04-tetragonal.33-spg107.inp",
      "symmetries/02-monoclinic.07-spg9.inp",
      "symmetries/06-cubic.04-spg198.inp",
      "symmetries/04-tetragonal.51-spg125.inp",
      "symmetries/04-tetragonal.03-spg77.inp",
      "symmetries/03-orthorombic.31-spg46.inp",
      "symmetries/04-tetragonal.08-spg82.inp",
      "symmetries/03-orthorombic.05-spg20.inp",
      "symmetries/04-tetragonal.36-spg110.inp",
      "symmetries/05-hexagonal.15-spg157.inp",
      "symmetries/02-monoclinic.12-spg14.inp",
      "symmetries/03-orthorombic.19-spg34.inp",
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "symmetries/05-hexagonal.28-spg170.inp",
      "symmetries/04-tetragonal.23-spg97.inp",
      "symmetries/04-tetragonal.48-spg122.inp",
      "symmetries/04-tetragonal.21-spg95.inp",
      "symmetries/06-cubic.21-spg215.inp",
      "symmetries/02-monoclinic.09-spg11.inp",
      "symmetries/04-tetragonal.18-spg92.inp",
      "symmetries/04-tetragonal.52-spg126.inp",
      "symmetries/03-orthorombic.55-spg70.inp",
      "symmetries/03-orthorombic.09-spg24.inp",
      "symmetries/04-tetragonal.62-spg136.inp",
      "symmetries/02-monoclinic.08-spg10.inp",
      "symmetries/04-tetragonal.38-spg112.inp",
      "symmetries/04-tetragonal.49-spg123.inp",
      "symmetries/03-orthorombic.20-spg35.inp",
      "symmetries/06-cubic.05-spg199.inp",
      "symmetries/06-cubic.35-spg229.inp",
      "symmetries/02-monoclinic.03-spg5.inp",
      "symmetries/02-monoclinic.06-spg8.inp",
      "symmetries/06-cubic.06-spg200.inp",
      "symmetries/04-tetragonal.57-spg131.inp",
      "symmetries/04-tetragonal.45-spg119.inp",
      "symmetries/05-hexagonal.49-spg191.inp",
      "symmetries/03-orthorombic.26-spg41.inp",
      "symmetries/06-cubic.15-spg209.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/06-cubic.08-spg202.inp",
      "symmetries/04-tetragonal.35-spg109.inp",
      "symmetries/03-orthorombic.07-spg22.inp",
      "symmetries/04-tetragonal.32-spg106.inp",
      "symmetries/04-tetragonal.12-spg86.inp",
      "symmetries/06-cubic.01-spg195.inp",
      "symmetries/05-hexagonal.38-spg180.inp",
      "symmetries/04-tetragonal.01-spg75.inp",
      "symmetries/03-orthorombic.25-spg40.inp",
      "symmetries/04-tetragonal.39-spg113.inp",
      "symmetries/05-hexagonal.02-spg144.inp",
      "symmetries/05-hexagonal.06-spg148.inp",
      "symmetries/06-cubic.32-spg226.inp",
      "symmetries/03-orthorombic.47-spg62.inp",
      "symmetries/05-hexagonal.20-spg162.inp",
      "symmetries/06-cubic.24-spg218.inp",
      "symmetries/06-cubic.30-spg224.inp",
      "symmetries/05-hexagonal.12-spg154.inp",
      "symmetries/05-hexagonal.07-spg149.inp",
      "symmetries/05-hexagonal.27-spg169.inp",
      "symmetries/03-orthorombic.45-spg60.inp",
      "symmetries/05-hexagonal.19-spg161.inp",
      "symmetries/05-hexagonal.16-spg158.inp",
      "symmetries/05-hexagonal.48-spg190.inp",
      "symmetries/06-cubic.09-spg203.inp",
      "symmetries/03-orthorombic.24-spg39.inp",
      "symmetries/03-orthorombic.50-spg65.inp",
      "symmetries/06-cubic.34-spg228.inp",
      "symmetries/05-hexagonal.42-spg184.inp",
      "symmetries/03-orthorombic.23-spg38.inp",
      "symmetries/04-tetragonal.13-spg87.inp",
      "symmetries/06-cubic.02-spg196.inp",
      "symmetries/02-monoclinic.13-spg15.inp",
      "symmetries/05-hexagonal.45-spg187.inp",
      "symmetries/05-hexagonal.22-spg164.inp",
      "symmetries/03-orthorombic.43-spg58.inp",
      "symmetries/03-orthorombic.34-spg49.inp",
      "symmetries/04-tetragonal.47-spg121.inp",
      "symmetries/02-monoclinic.02-spg4.inp",
      "symmetries/03-orthorombic.39-spg54.inp",
      "symmetries/04-tetragonal.17-spg91.inp",
      "symmetries/04-tetragonal.22-spg96.inp",
      "symmetries/05-hexagonal.35-spg177.inp",
      "symmetries/03-orthorombic.13-spg28.inp",
      "symmetries/05-hexagonal.13-spg155.inp",
      "symmetries/03-orthorombic.42-spg57.inp",
      "symmetries/06-cubic.12-spg206.inp",
      "symmetries/02-monoclinic.10-spg12.inp",
      "symmetries/06-cubic.07-spg201.inp",
      "symmetries/03-orthorombic.36-spg51.inp",
      "symmetries/05-hexagonal.44-spg186.inp",
      "symmetries/04-tetragonal.04-spg78.inp",
      "symmetries/05-hexagonal.21-spg163.inp",
      "symmetries/04-tetragonal.02-spg76.inp",
      "symmetries/03-orthorombic.22-spg37.inp",
      "symmetries/05-hexagonal.32-spg174.inp",
      "symmetries/03-orthorombic.35-spg50.inp",
      "symmetries/03-orthorombic.17-spg32.inp",
      "symmetries/05-hexagonal.17-spg159.inp",
      "symmetries/03-orthorombic.04-spg19.inp",
      "symmetries/04-tetragonal.20-spg94.inp",
      "symmetries/06-cubic.20-spg214.inp",
      "symmetries/04-tetragonal.65-spg139.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/03-orthorombic.32-spg47.inp",
      "symmetries/03-orthorombic.02-spg17.inp",
      "symmetries/04-tetragonal.15-spg89.inp",
      "symmetries/03-orthorombic.57-spg72.inp",
      "symmetries/03-orthorombic.15-spg30.inp",
      "symmetries/03-orthorombic.49-spg64.inp",
      "symmetries/06-cubic.11-spg205.inp",
      "symmetries/04-tetragonal.30-spg104.inp",
      "symmetries/04-tetragonal.59-spg133.inp",
      "symmetries/03-orthorombic.54-spg69.inp",
      "symmetries/03-orthorombic.41-spg56.inp",
      "symmetries/06-cubic.19-spg213.inp",
      "symmetries/05-hexagonal.05-spg147.inp",
      "symmetries/04-tetragonal.25-spg99.inp",
      "symmetries/03-orthorombic.58-spg73.inp",
      "symmetries/04-tetragonal.43-spg117.inp",
      "symmetries/01-triclinic.02-spg2.inp",
      "symmetries/04-tetragonal.42-spg116.inp",
      "symmetries/05-hexagonal.50-spg192.inp",
      "symmetries/04-tetragonal.68-spg142.inp",
      "symmetries/04-tetragonal.40-spg114.inp",
      "symmetries/05-hexagonal.34-spg176.inp",
      "symmetries/04-tetragonal.63-spg137.inp",
      "symmetries/06-cubic.31-spg225.inp",
      "symmetries/05-hexagonal.36-spg178.inp",
      "symmetries/05-hexagonal.30-spg172.inp",
      "symmetries/03-orthorombic.48-spg63.inp",
      "symmetries/04-tetragonal.11-spg85.inp",
      "symmetries/05-hexagonal.40-spg182.inp",
      "symmetries/05-hexagonal.11-spg153.inp",
      "symmetries/04-tetragonal.41-spg115.inp",
      "symmetries/01-triclinic.16-spg16.inp",
      "symmetries/04-tetragonal.26-spg100.inp",
      "symmetries/05-hexagonal.24-spg166.inp",
      "symmetries/03-orthorombic.56-spg71.inp",
      "symmetries/06-cubic.16-spg210.inp",
      "symmetries/06-cubic.25-spg219.inp",
      "symmetries/03-orthorombic.51-spg66.inp",
      "symmetries/05-hexagonal.47-spg189.inp",
      "symmetries/04-tetragonal.24-spg98.inp",
      "symmetries/05-hexagonal.51-spg193.inp",
      "symmetries/03-orthorombic.37-spg52.inp",
      "symmetries/05-hexagonal.39-spg181.inp",
      "symmetries/03-orthorombic.27-spg42.inp",
      "symmetries/04-tetragonal.58-spg132.inp",
      "symmetries/04-tetragonal.31-spg105.inp",
      "symmetries/04-tetragonal.06-spg80.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "symmetries/05-hexagonal.10-spg152.inp",
      "symmetries/05-hexagonal.01-spg143.inp",
      "symmetries/05-hexagonal.04-spg146.inp",
      "symmetries/04-tetragonal.19-spg93.inp",
      "symmetries/03-orthorombic.08-spg23.inp",
      "symmetries/07-symmetrization_lda.01-spg2_sym.inp",
      "symmetries/04-tetragonal.29-spg103.inp",
      "symmetries/06-cubic.27-spg221.inp",
      "symmetries/04-tetragonal.56-spg130.inp",
      "symmetries/06-cubic.36-spg230.inp",
      "symmetries/04-tetragonal.55-spg129.inp",
      "symmetries/04-tetragonal.44-spg118.inp",
      "symmetries/04-tetragonal.53-spg127.inp",
      "symmetries/03-orthorombic.11-spg26.inp",
      "symmetries/05-hexagonal.14-spg156.inp",
      "symmetries/06-cubic.33-spg227.inp",
      "symmetries/05-hexagonal.43-spg185.inp",
      "symmetries/03-orthorombic.40-spg55.inp",
      "symmetries/06-cubic.13-spg207.inp",
      "symmetries/06-cubic.03-spg197.inp",
      "symmetries/06-cubic.14-spg208.inp",
      "symmetries/02-monoclinic.11-spg13.inp",
      "symmetries/06-cubic.17-spg211.inp",
      "symmetries/03-orthorombic.30-spg45.inp",
      "symmetries/06-cubic.28-spg222.inp",
      "symmetries/05-hexagonal.46-spg188.inp",
      "symmetries/03-orthorombic.16-spg31.inp",
      "symmetries/06-cubic.23-spg217.inp",
      "symmetries/04-tetragonal.10-spg84.inp",
      "symmetries/06-cubic.18-spg212.inp",
      "symmetries/04-tetragonal.66-spg140.inp",
      "symmetries/04-tetragonal.16-spg90.inp",
      "symmetries/04-tetragonal.61-spg135.inp",
      "symmetries/03-orthorombic.46-spg61.inp",
      "symmetries/01-triclinic.01-spg1.inp",
      "symmetries/03-orthorombic.29-spg44.inp",
      "symmetries/04-tetragonal.67-spg141.inp",
      "symmetries/03-orthorombic.18-spg33.inp",
      "symmetries/05-hexagonal.33-spg175.inp",
      "symmetries/05-hexagonal.25-spg167.inp",
      "symmetries/04-tetragonal.64-spg138.inp",
      "symmetries/03-orthorombic.01-spg16.inp",
      "symmetries/03-orthorombic.21-spg36.inp",
      "symmetries/05-hexagonal.52-spg194.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "symmetries/06-cubic.26-spg220.inp",
      "symmetries/03-orthorombic.52-spg67.inp",
      "symmetries/04-tetragonal.37-spg111.inp",
      "symmetries/04-tetragonal.28-spg102.inp",
      "symmetries/05-hexagonal.26-spg168.inp",
      "symmetries/05-hexagonal.31-spg173.inp",
      "symmetries/03-orthorombic.59-spg74.inp",
      "symmetries/03-orthorombic.33-spg48.inp",
      "symmetries/04-tetragonal.50-spg124.inp",
      "symmetries/05-hexagonal.37-spg179.inp",
      "symmetries/04-tetragonal.60-spg134.inp",
      "symmetries/03-orthorombic.10-spg25.inp",
      "symmetries/05-hexagonal.08-spg150.inp",
      "symmetries/03-orthorombic.03-spg18.inp",
      "symmetries/05-hexagonal.29-spg171.inp",
      "symmetries/04-tetragonal.54-spg128.inp",
      "symmetries/03-orthorombic.44-spg59.inp",
      "symmetries/05-hexagonal.03-spg145.inp",
      "symmetries/05-hexagonal.18-spg160.inp",
      "symmetries/03-orthorombic.06-spg21.inp",
      "symmetries/04-tetragonal.14-spg88.inp",
      "symmetries/04-tetragonal.34-spg108.inp",
      "symmetries/05-hexagonal.09-spg151.inp",
      "symmetries/03-orthorombic.12-spg27.inp",
      "symmetries/03-orthorombic.28-spg43.inp",
      "symmetries/04-tetragonal.46-spg120.inp",
      "symmetries/03-orthorombic.38-spg53.inp",
      "symmetries/02-monoclinic.01-spg3.inp",
      "symmetries/06-cubic.22-spg216.inp",
      "symmetries/06-cubic.10-spg204.inp",
      "symmetries/04-tetragonal.07-spg81.inp",
      "symmetries/04-tetragonal.09-spg83.inp",
      "symmetries/04-tetragonal.05-spg79.inp",
      "photo_electron/05-pfft.01-gs.inp",
      "photo_electron/06-2D.01-Na_gs.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/09-flux_3d.03-Na_gs_cub.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/09-flux_3d.01-Na_gs_sph.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/12-spm_3d.01-Na_gs.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp",
      "errors/02-scf_errors.01-rdmft.inp",
      "errors/01-run_mode.01-one_shot.inp",
      "tutorials/06-octopus_basics-periodic_systems.02-silicon_converged.inp",
      "tutorials/01-octopus_basics-getting_started.01-H_atom.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.01-N_atom.inp",
      "tutorials/04-octopus_basics-visualization.01-benzene.inp",
      "tutorials/01-octopus_basics-getting_started.02-H_atom_spin.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.02-methane.inp",
      "tutorials/02-octopus_basics-basic_input_options.01-N_atom.inp",
      "tutorials/06-octopus_basics-periodic_systems.01-silicon.inp",
      "tutorials/01-octopus_basics-getting_started.03-H_atom_independent.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.01-gs.inp",
      "tutorials/06-octopus_basics-periodic_systems.03-bandstructure.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.02-td.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.03-td_laser.inp",
      "functionals/18-mgga.01-br89.inp",
      "functionals/03-xc.gga_x_lg93.inp",
      "functionals/03-xc.gga_xc_mpwlyp1w.inp",
      "functionals/03-xc.lda_c_pw.inp",
      "functionals/09-vdw_ts_sc.01-gs.inp",
      "functionals/03-xc.exx.inp",
      "functionals/03-xc.gga_x_rpbe.inp",
      "functionals/03-xc.gga_xc_edf1.inp",
      "functionals/03-xc.lda_c_hl.inp",
      "functionals/03-xc.gga_xc_hcth_120.inp",
      "functionals/01-xc_1d.oep_kli.inp",
      "functionals/03-xc.gga_c_pbe_jrgx.inp",
      "functionals/03-xc.gga_xc_hcth_93.inp",
      "functionals/03-xc.gga_c_pbe_sol.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/03-xc.mvorb_hse06_fock.inp",
      "functionals/02-xc_2d.gga_b86_mgc.inp",
      "functionals/03-xc.lda_c_wigner.inp",
      "functionals/16-dressed-rdmft.03-rdmft.inp",
      "functionals/03-xc.gga_x_mpbe.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/05-ks_inversion.03-inversion.inp",
      "functionals/08-vdw_ts.01-gs.inp",
      "functionals/06-rdmft.03-gs_grid.inp",
      "functionals/03-xc.gga_xc_xlyp.inp",
      "functionals/03-xc.gga_x_am05.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/03-xc.01-gs.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/03-xc.gga_x_g96.inp",
      "functionals/03-xc.gga_x_b86.inp",
      "functionals/03-xc.gga_x_pbek1_vdw.inp",
      "functionals/18-mgga.02-br89_oep.inp",
      "functionals/03-xc.gga_xc_pbelyp1w.inp",
      "functionals/03-xc.gga_x_b86_mgc.inp",
      "functionals/10-vdw_d3_dna.01-gs_novdw.inp",
      "functionals/01-xc_1d.02-wfs-hf.inp",
      "functionals/03-xc.gga_c_xpbe.inp",
      "functionals/03-xc.pbe0_fock.inp",
      "functionals/03-xc.gga_x_b88.inp",
      "functionals/03-xc.lda_c_ob_pz.inp",
      "functionals/02-xc_2d.gga_b86.inp",
      "functionals/01-xc_1d.01-wfs-lda.inp",
      "functionals/03-xc.gga_x_ft97_b.inp",
      "functionals/03-xc.lda_c_ob_pw.inp",
      "functionals/03-xc.lda_c_pz_mod.inp",
      "functionals/06-rdmft.01-ip.inp",
      "functionals/05-ks_inversion.02-two_particle.inp",
      "functionals/03-xc.gga_x_optb88_vdw.inp",
      "functionals/03-xc.gga_c_pw91.inp",
      "functionals/04-oep.02-jellium-exx_kli.inp",
      "functionals/16-dressed-rdmft.02-hf.inp",
      "functionals/03-xc.slater.inp",
      "functionals/04-oep.01-jellium-lsda.inp",
      "functionals/03-xc.lda_xc_teter93.inp",
      "functionals/03-xc.sic_pz.inp",
      "functionals/22-xc_lrx.inp",
      "functionals/03-xc.gga_x_xpbe.inp",
      "functionals/01-xc_1d.lda_csc.inp",
      "functionals/03-xc.pbe0_oep.inp",
      "functionals/03-xc.gga_xc_hcth_147.inp",
      "functionals/03-xc.gga_x_pbe_jsjr.inp",
      "functionals/03-xc.gga_c_lm.inp",
      "functionals/03-xc.gga_x_pbe_r.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/03-xc.lda_c_vbh.inp",
      "functionals/03-xc.gga_x_pbea.inp",
      "functionals/03-xc.lda_x.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/03-xc.gga_x_pw91.inp",
      "functionals/03-xc.b3lyp_fock.inp",
      "functionals/03-xc.gga_x_ft97_a.inp",
      "functionals/03-xc.gga_x_pw86.inp",
      "functionals/01-xc_1d.oep_exx.inp",
      "functionals/03-xc.lda_c_rpa.inp",
      "functionals/03-xc.b3lyp_oep.inp",
      "functionals/03-xc.gga_x_dk87_r2.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/03-xc.gga_c_p86.inp",
      "functionals/03-xc.lda_c_vwn_rpa.inp",
      "functionals/05-ks_inversion.01-target_density.inp",
      "functionals/03-xc.lda_c_pw_mod.inp",
      "functionals/03-xc.lda_c_vwn.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "functionals/10-vdw_d3_dna.02-gs_d3.inp",
      "functionals/03-xc.kli.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "functionals/03-xc.lda_c_pz.inp",
      "functionals/04-oep.03-jellium-full_exx.inp",
      "functionals/03-xc.lda_c_xalpha.inp",
      "functionals/02-xc_2d.lda_amgb.inp",
      "functionals/03-xc.lda_c_gl.inp",
      "functionals/03-xc.gga_x_bayesian.inp",
      "functionals/03-xc.gga_xc_b97_d.inp",
      "functionals/03-xc.gga_c_pbe.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/03-xc.gga_x_lb.inp",
      "functionals/02-xc_2d.lda_prm.inp",
      "functionals/03-xc.gga_x_pbe_sol.inp",
      "functionals/16-dressed-rdmft.01-ip.inp",
      "functionals/03-xc.gga_c_lyp.inp",
      "functionals/03-xc.gga_c_am05.inp",
      "functionals/03-xc.gga_x_mpw91.inp",
      "functionals/03-xc.gga_x_pbe.inp",
      "functionals/03-xc.gga_xc_pbe1w.inp",
      "functionals/02-xc_2d.gga_b88.inp",
      "functionals/03-xc.gga_x_optpbe_vdw.inp",
      "functionals/03-xc.gga_xc_hcth_407.inp",
      "functionals/02-xc_2d.gga_pbe.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "functionals/07-sic.02-scdm.inp",
      "functionals/03-xc.gga_x_dk87_r1.inp",
      "functionals/03-xc.gga_x_optx.inp",
      "functionals/12-vdw_solid_c6.01-gs_diamond.inp",
      "functionals/06-rdmft.02-gs_basis.inp",
      "functionals/11-vdw_d3.01-gs.inp",
      "functionals/03-xc.fbex.inp",
      "functionals/03-xc.gga_x_wc.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/04-silicon.02-kdotp.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/22-berry.02-cubic_Si.inp",
      "periodic_systems/11-silicon_force.01-gs.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/11-silicon_force.02-nlcc.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.02_kdotp.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/27-Ar.02-kdotp.inp",
      "periodic_systems/13-primitive.03-bcc_iron.inp",
      "periodic_systems/26-Na.01-gs.inp",
      "periodic_systems/22-berry.01-cubic_Si_gs.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/01-free_electrons.02-unocc.inp",
      "periodic_systems/15-bandstructure.04-wannier90_output.inp",
      "periodic_systems/06-h2o_pol_lr.01_gs.inp",
      "periodic_systems/19-unfolding.03-unocc.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/15-bandstructure.05-wannier90_states.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/01-free_electrons.01-ground_state.inp",
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/15-bandstructure.03-wannier90_setup.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/02-cosine_potential.02-unocc.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/05-lithium.01-gs.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "periodic_systems/32-photodoping.01-gs.inp",
      "periodic_systems/07-mgga.02-tb09_gs_nosymm.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/20-masked_periodic_boundaries.01-graphene.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/27-Ar.01-gs.inp",
      "periodic_systems/24-hartree_fock_1D.01-gs.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "periodic_systems/31-magnon_1d.01-gs.inp",
      "periodic_systems/09-etsf_io.01-gs.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/26-Na.02-kdotp.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/03-sodium_chain.03-ground_state_disp.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/04-silicon.03-emresp.inp",
      "periodic_systems/10-berkeleygw.02-unocc.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/15-bandstructure.02-unocc.inp",
      "periodic_systems/23-hybrids.01-ace.inp",
      "periodic_systems/19-unfolding.02-setup.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/13-primitive.01-diamond.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/19-unfolding.04-run.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/08-benzene_supercell.01-gs.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "periodic_systems/02-cosine_potential.01-ground_state.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "finite_systems_1d/09-morse.02-unocc.inp",
      "finite_systems_1d/02-neon_mpi.03-td_calc-kli_par_states.inp",
      "finite_systems_1d/04-lithium.02-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.03-dummy.inp",
      "finite_systems_1d/09-morse.01-gs.inp",
      "finite_systems_1d/02-neon_mpi.01-ground_state-IP_par_domains.inp",
      "finite_systems_1d/03-He-Hartree-Fock.01-gs.inp",
      "finite_systems_1d/01-hydrogen.02-excited_state.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.01-ground_state.inp",
      "finite_systems_1d/02-neon_mpi.02-ground_state-kli_par_domains.inp",
      "finite_systems_1d/04-lithium.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/05-adw.02-unocc.inp",
      "optimal_control/04-box.01-ground_state.inp",
      "optimal_control/10-current.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.02-unocc.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.01-ground_state.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/06-zbr98.01-ground_state.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/02-sym_doublewell.02-unocc.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/05-adw.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/04-box.02-unocc.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.04-gs-mp.inp",
      "optimal_control/01-asym_doublewell.01-ground_state.inp",
      "optimal_control/03-localtarget.01-gs.inp",
      "optimal_control/09-density+current.01-ground_state.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp",
      "components/22-density_calc.01-Si.inp",
      "components/16-hartree_3d_psolver.02-psolver.inp",
      "components/34-regridding.01-samespacing-mixed.inp",
      "components/20-dft_u.04-complex_submesh.inp",
      "components/26-batch_ops.02-jellium-complex.inp",
      "components/05-hartree_3d_fft.04-3d_3d_periodic.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/35-helmholtz_decom.01-large_box_no_surf_corr.inp",
      "components/26-batch_ops.03-jellium-spinor.inp",
      "components/18-interpolation.01-1d.inp",
      "components/28-cgal.01.inp",
      "components/34-regridding.02-samespacing-parstates.inp",
      "components/10-hartree_pfft.03-3d_1d_periodic.inp",
      "components/34-regridding.07-spacing-ratio3-nearestneighbor-mixed.inp",
      "components/03-derivatives_3d.02-non-orthogonal.inp",
      "components/16-hartree_3d_psolver.01-psolver.inp",
      "components/11-hartree_cl.01-fft.inp",
      "components/01-derivatives_1d.02-fortran.inp",
      "components/17-recipe.inp",
      "components/26-batch_ops.01-jellium.inp",
      "components/18-interpolation.03-3d.inp",
      "components/10-hartree_pfft.05-3d_2d_periodic.inp",
      "components/35-helmholtz_decom.05-sphere_small_box_with_surf_corr.inp",
      "components/35-helmholtz_decom.04-cylinder_small_box_with_surf_corr.inp",
      "components/37-current-density.inp",
      "components/06-hartree_3d_isf.01-isf.inp",
      "components/34-regridding.08-spacing-ratio3-nearestneighbor-parstates.inp",
      "components/01-derivatives_1d.01.inp",
      "components/02-derivatives_2d.01.inp",
      "components/03-derivatives_3d.01.inp",
      "components/27-clock.01.inp",
      "components/12-hartree_direct_3d.01.inp",
      "components/08-gs.01-cgs_real.inp",
      "components/18-interpolation.02-2d.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/21-hamiltonian_apply.01-Si.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/34-regridding.03-samespacing-pardomains.inp",
      "components/25-subspace.01-jellium.inp",
      "components/10-hartree_pfft.06-fft-parstates.inp",
      "components/24-boundaries.01-jellium.inp",
      "components/13-hartree_3d_mg.01-multigrid.inp",
      "components/33-mpiwrappers.01-wrappers.inp",
      "components/10-hartree_pfft.04-3d_3d_periodic.inp",
      "components/32-hash-tables.03-sphash.inp",
      "components/32-hash-tables.01-iihash.inp",
      "components/05-hartree_3d_fft.01-fft.inp",
      "components/35-helmholtz_decom.03-parallelepiped_small_box_with_surf_corr.inp",
      "components/34-regridding.05-spacing-ratio3-parstates.inp",
      "components/10-hartree_pfft.02-fft_corrected.inp",
      "components/30-eigensolver.01.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/08-gs.05-drcgs_real.inp",
      "components/15-cholesky_parallel.01-real.inp",
      "components/34-regridding.06-spacing-ratio3-pardomains.inp",
      "components/08-gs.03-mgs_real.inp",
      "components/10-hartree_pfft.01-fft.inp",
      "components/29-linear_solver.01-real.inp",
      "components/07-cholesky_serial.01-real.inp",
      "components/04-hartree_3d_cg.01-cg_corrected.inp",
      "components/36-maxwell_vector_potential.inp",
      "components/03-derivatives_3d.02-non-orthogonal_unpacked.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/07-cholesky_serial.03-parindep.inp",
      "components/15-cholesky_parallel.02-complex.inp",
      "components/35-helmholtz_decom.02-small_box_no_surf_corr.inp",
      "components/31-grid_interpolation.01.inp",
      "components/05-hartree_3d_fft.03-3d_1d_periodic.inp",
      "components/34-regridding.09-spacing-ratio3-nearestneighbor-pardomains.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "components/19-hgh_soc.01-3d.inp",
      "components/08-gs.02-cgs_complex.inp",
      "components/07-cholesky_serial.02-complex.inp",
      "components/08-gs.04-mgs_complex.inp",
      "components/32-hash-tables.02-sihash.inp",
      "components/34-regridding.04-spacing-ratio3-mixed.inp",
      "components/05-hartree_3d_fft.05-3d_2d_periodic.inp",
      "components/23-exponential_apply.01-jellium.inp",
      "components/08-gs.06-drcgs_complex.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/14-quadrupole-pot.01-hydrogen-gs.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.01-1D-Helium-ground-state.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_restarted.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/12-tddft-currents-to-maxwell.01-benzene-gs.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/01-free-propagation.02-2_pulses_td.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/09-basis_from_states.01-lda.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/11-full_delta.01-gs.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/06-laser.03-velocity_gauge.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.01-Na2.inp",
      "lda_u/05-forces.02-Na2_go.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/06-laser.01-gs.inp",
      "lda_u/10-intersite.01-Na2.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "casidacalcforces": {
    "CallLine": "call parse_variable(sys%namespace, 'CasidaCalcForces', .false., cas%calc_forces)",
    "Default": [
      "false"
    ],
    "Description": [
      "(Experimental) Enable calculation of excited-state forces. Requires previous <tt>vib_modes</tt> calculation."
    ],
    "LineNumber": 582,
    "Manuals": [],
    "Name": "CasidaCalcForces",
    "Options": [],
    "Section": "Linear Response::Casida",
    "Sourcefile": "main/casida.F90",
    "Testfiles": [
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.08-casida_restart.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "casidacalcforceskernel": {
    "CallLine": "call parse_variable(sys%namespace, 'CasidaCalcForcesKernel', .true., cas%calc_forces_kernel)",
    "Default": [
      "true"
    ],
    "Description": [
      "If false, the derivative of the kernel will not be included in the excited-state force calculation."
    ],
    "LineNumber": 593,
    "Manuals": [],
    "Name": "CasidaCalcForcesKernel",
    "Options": [],
    "Section": "Linear Response::Casida",
    "Sourcefile": "main/casida.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "casidacalcforcesscf": {
    "CallLine": "call parse_variable(sys%namespace, 'CasidaCalcForcesSCF', .false., cas%calc_forces_scf)",
    "Default": [
      "false"
    ],
    "Description": [
      "If true, the ground-state forces will be included in the excited-state forces, so they are total forces.",
      "If false, the excited-state forces that are produced are only the gradients of the excitation energy."
    ],
    "LineNumber": 603,
    "Manuals": [],
    "Name": "CasidaCalcForcesSCF",
    "Options": [],
    "Section": "Linear Response::Casida",
    "Sourcefile": "main/casida.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "casidacalctriplet": {
    "CallLine": "call parse_variable(sys%namespace, 'CasidaCalcTriplet', .false., cas%triplet)",
    "Default": [
      "false"
    ],
    "Description": [
      "For a non-spin-polarized ground state, singlet or triplet excitations can be calculated",
      "using different matrix elements. Default is to calculate singlets. This variable has no",
      "effect for a spin-polarized calculation."
    ],
    "LineNumber": 451,
    "Manuals": [],
    "Name": "CasidaCalcTriplet",
    "Options": [],
    "Section": "Linear Response::Casida",
    "Sourcefile": "main/casida.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "casidadistributedmatrix": {
    "CallLine": "call parse_variable(sys%namespace, 'CasidaDistributedMatrix', .false., cas%distributed_matrix)",
    "Default": [
      "false"
    ],
    "Description": [
      "Large matrices with more than a few thousand rows and columns usually do",
      "not fit into the memory of one processor anymore. With this option, the",
      "Casida matrix is distributed in block-cyclic fashion over all cores in the",
      "ParOther group. The diagonalization is done in parallel using ScaLAPACK",
      "or ELPA, if available. For very large matrices (>100000), only the",
      "ParOther strategy should be used because the diagonalization dominates",
      "the run time of the computation."
    ],
    "LineNumber": 485,
    "Manuals": [],
    "Name": "CasidaDistributedMatrix",
    "Options": [],
    "Section": "Linear Response::Casida",
    "Sourcefile": "main/casida.F90",
    "Testfiles": [
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/07-casida-photons.04-elpa.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "casidahermitianconjugate": {
    "CallLine": "call parse_variable(sys%namespace, 'CasidaHermitianConjugate', .false., cas%herm_conj)",
    "Default": [
      "false"
    ],
    "Description": [
      "The Casida matrix is Hermitian, so it should not matter whether we calculate the upper or",
      "lower diagonal. Numerical issues may cause small differences however. Use this variable to",
      "calculate the Hermitian conjugate of the usual matrix, for testing."
    ],
    "LineNumber": 470,
    "Manuals": [],
    "Name": "CasidaHermitianConjugate",
    "Options": [],
    "Section": "Linear Response::Casida",
    "Sourcefile": "main/casida.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "casidakohnshamstates": {
    "CallLine": "call parse_variable(namespace, 'CasidaKohnShamStates', default, wfn_list)",
    "Default": [
      "all",
      "states"
    ],
    "Description": [
      "The calculation of the excitation spectrum of a system in the Casida frequency-domain",
      "formulation of linear-response time-dependent density functional theory (TDDFT)",
      "implies the use of a basis set of occupied/unoccupied Kohn-Sham orbitals. This",
      "basis set should, in principle, include all pairs formed by all occupied states,",
      "and an infinite number of unoccupied states. In practice, one has to truncate this",
      "basis set, selecting a number of occupied and unoccupied states that will form the",
      "pairs. These states are specified with this variable. If there are, say, 15 occupied",
      "states, and one sets this variable to the value \"10-18\", this means that occupied",
      "states from 10 to 15, and unoccupied states from 16 to 18 will be considered.",
      " ",
      "This variable is a string in list form, <i>i.e.</i> expressions such as \"1,2-5,8-15\" are",
      "valid. You should include a non-zero number of unoccupied states and a non-zero number",
      "of occupied states."
    ],
    "LineNumber": 2565,
    "Manuals": [],
    "Name": "CasidaKohnShamStates",
    "Options": [],
    "Section": "Linear Response::Casida",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "casidaksenergywindow": {
    "CallLine": "call parse_variable(namespace, 'CasidaKSEnergyWindow', -M_ONE, energy_window, units_inp%energy)",
    "Default": null,
    "Description": [
      "An alternative to <tt>CasidaKohnShamStates</tt> for specifying which occupied-unoccupied",
      "transitions will be used: all those whose eigenvalue differences are less than this",
      "number will be included. If a value less than 0 is supplied, this criterion will not be used."
    ],
    "LineNumber": 2536,
    "Manuals": [],
    "Name": "CasidaKSEnergyWindow",
    "Options": [],
    "Section": "Linear Response::Casida",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "casidamomentumtransfer": {
    "CallLine": "if (parse_block(sys%namespace, 'CasidaMomentumTransfer', blk) == 0) then",
    "Default": [
      "0"
    ],
    "Description": [
      "Momentum-transfer vector for the calculation of the dynamic structure",
      "factor. When this variable is set, the transition rates are determined",
      "using an exponential operator instead of the normal dipole one."
    ],
    "LineNumber": 412,
    "Manuals": [],
    "Name": "CasidaMomentumTransfer",
    "Options": [],
    "Section": "Linear Response::Casida",
    "Sourcefile": "main/casida.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "casidaparalleleigensolver": {
    "CallLine": "call parse_variable(sys%namespace, 'CasidaParallelEigensolver', default_int, cas%parallel_solver)",
    "Default": null,
    "Description": [
      "Choose library to use for solving the parallel eigenproblem",
      "of the Casida problem. This options is only relevant if a",
      "distributed matrix is used (CasidaDistributedMatrix=true).",
      "By default, elpa is chosen if available."
    ],
    "LineNumber": 526,
    "Manuals": [],
    "Name": "CasidaParallelEigensolver",
    "Options": [
      {
        "Description": [
          "Use ELPA library as parallel eigensolver"
        ],
        "Name": "casida_elpa",
        "Value": "1"
      },
      {
        "Description": [
          "Use Scalapack as parallel eigensolver"
        ],
        "Name": "casida_scalapack",
        "Value": "2"
      }
    ],
    "Section": "Linear Response::Casida",
    "Sourcefile": "main/casida.F90",
    "Testfiles": [
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/07-casida-photons.04-elpa.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "casidaprintexcitations": {
    "CallLine": "call parse_variable(sys%namespace, 'CasidaPrintExcitations', \"all\", cas%print_exst)",
    "Default": [
      "write",
      "all"
    ],
    "Description": [
      "Specifies which excitations are written at the end of the calculation.",
      " ",
      "This variable is a string in list form, <i>i.e.</i> expressions such as \"1,2-5,8-15\" are",
      "valid."
    ],
    "LineNumber": 547,
    "Manuals": [],
    "Name": "CasidaPrintExcitations",
    "Options": [],
    "Section": "Linear Response::Casida",
    "Sourcefile": "main/casida.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "casidaquadratureorder": {
    "CallLine": "call parse_variable(sys%namespace, 'CasidaQuadratureOrder', 5, cas%avg_order)",
    "Default": [
      "5"
    ],
    "Description": [
      "Only applies if <tt>CasidaMomentumTransfer</tt> is nonzero.",
      "Directionally averaged dynamic structure factor is calculated by",
      "averaging over the results from a set of <math>\\vec{q}</math>-vectors. The vectors",
      "are generated using Gauss-Legendre quadrature scheme [see <i>e.g.</i>",
      "K. Atkinson, <i>J. Austral. Math. Soc.</i> <b>23</b>, 332 (1982)], and this",
      "variable determines the order of the scheme."
    ],
    "LineNumber": 435,
    "Manuals": [],
    "Name": "CasidaQuadratureOrder",
    "Options": [],
    "Section": "Linear Response::Casida",
    "Sourcefile": "main/casida.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "casidaspectrumbroadening": {
    "CallLine": "call parse_variable(global_namespace, 'CasidaSpectrumBroadening', 0.005_real64, cs%br, units_inp%energy)",
    "Default": [
      "0.005",
      "Ha"
    ],
    "Description": [
      "Width of the Lorentzian used to broaden the excitations."
    ],
    "LineNumber": 85,
    "Manuals": [],
    "Name": "CasidaSpectrumBroadening",
    "Options": [],
    "Section": "Utilities::oct-casida_spectrum",
    "Sourcefile": "utils/casida_spectrum.F90",
    "Testfiles": [
      "linear_response/07-casida-photons.06-spectrum.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "casidaspectrumenergystep": {
    "CallLine": "call parse_variable(global_namespace, 'CasidaSpectrumEnergyStep', 0.001_real64, cs%energy_step, units_inp%energy)",
    "Default": [
      "0.001",
      "Ha"
    ],
    "Description": [
      "Sampling rate for the spectrum."
    ],
    "LineNumber": 96,
    "Manuals": [],
    "Name": "CasidaSpectrumEnergyStep",
    "Options": [],
    "Section": "Utilities::oct-casida_spectrum",
    "Sourcefile": "utils/casida_spectrum.F90",
    "Testfiles": [
      "linear_response/07-casida-photons.06-spectrum.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "casidaspectrummaxenergy": {
    "CallLine": "call parse_variable(global_namespace, 'CasidaSpectrumMaxEnergy', M_ONE, cs%max_energy, units_inp%energy)",
    "Default": [
      "1.0",
      "Ha"
    ],
    "Description": [
      "The broadening is done for energies smaller than <tt>CasidaSpectrumMaxEnergy</tt>."
    ],
    "LineNumber": 118,
    "Manuals": [],
    "Name": "CasidaSpectrumMaxEnergy",
    "Options": [],
    "Section": "Utilities::oct-casida_spectrum",
    "Sourcefile": "utils/casida_spectrum.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "casidaspectrumminenergy": {
    "CallLine": "call parse_variable(global_namespace, 'CasidaSpectrumMinEnergy', M_ZERO, cs%min_energy, units_inp%energy)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "The broadening is done for energies greater than <tt>CasidaSpectrumMinEnergy</tt>."
    ],
    "LineNumber": 107,
    "Manuals": [],
    "Name": "CasidaSpectrumMinEnergy",
    "Options": [],
    "Section": "Utilities::oct-casida_spectrum",
    "Sourcefile": "utils/casida_spectrum.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "casidaspectrumrotationmatrix": {
    "CallLine": "if (parse_block(global_namespace, 'CasidaSpectrumRotationMatrix', blk) == 0) then",
    "Default": [
      "identity"
    ],
    "Description": [
      "Supply a rotation matrix to apply to the transition dipoles in generating the spectrum. The rotated atomic structure",
      "will also be output. Size of matrix must be <tt>Dimensions</tt>."
    ],
    "LineNumber": 136,
    "Manuals": [],
    "Name": "CasidaSpectrumRotationMatrix",
    "Options": [],
    "Section": "Utilities::oct-casida_spectrum",
    "Sourcefile": "utils/casida_spectrum.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "casidatheorylevel": {
    "CallLine": "call parse_variable(sys%namespace, 'CasidaTheoryLevel', CASIDA_EPS_DIFF + CASIDA_PETERSILKA + CASIDA_CASIDA, theorylevel)",
    "Default": [
      "<tt>eps_diff",
      "+",
      "petersilka",
      "+",
      "lrtddft_casida</tt>"
    ],
    "Description": [
      "Choose which electron-hole matrix-based theory levels to use in calculating excitation energies.",
      "More than one may be used to take advantage of the significant commonality between the calculations.",
      "<tt>variational</tt> and <tt>lrttdft_casida</tt> are not usable with complex wavefunctions.",
      "Note the restart data saved by each theory level is compatible with all the others."
    ],
    "LineNumber": 357,
    "Manuals": [],
    "Name": "CasidaTheoryLevel",
    "Options": [
      {
        "Description": [
          "Difference of eigenvalues, <i>i.e.</i> independent-particle approximation."
        ],
        "Name": "eps_diff",
        "Value": "1"
      },
      {
        "Description": [
          "The Petersilka approximation uses only elements of the Tamm-Dancoff matrix between degenerate",
          "transitions (if no degeneracy, this is just the diagonal elements). Also called the \"single-pole\" approximation.",
          "This is acceptable if there is little mixing between single-particle transitions.",
          "Ref: M Petersilka, UJ Gossmann, and EKU Gross, <i>Phys. Rev. Lett.</i> <b>76</b>, 1212 (1996);",
          "T Grabo, M Petersilka,and EKU Gross, <i>Theochem</i> <b>501-502</b> 353 (2000)."
        ],
        "Name": "petersilka",
        "Value": "2"
      },
      {
        "Description": [
          "The Tamm-Dancoff approximation uses only occupied-unoccupied transitions and not",
          "unoccupied-occupied transitions.",
          "Ref: S Hirata and M Head-Gordon, <i>Chem. Phys. Lett.</i> <b>314</b>, 291 (1999)."
        ],
        "Name": "tamm_dancoff",
        "Value": "4"
      },
      {
        "Description": [
          "Second-order constrained variational theory CV(2)-DFT. Only applies to real wavefunctions.",
          "Ref: T Ziegler, M Seth, M Krykunov, J Autschbach, and F Wang,",
          "<i>J. Chem. Phys.</i> <b>130</b>, 154102 (2009)."
        ],
        "Name": "variational",
        "Value": "8"
      },
      {
        "Description": [
          "The full Casida method. Only applies to real wavefunctions.",
          "Ref: C Jamorski, ME Casida, and DR Salahub, <i>J. Chem. Phys.</i> <b>104</b>, 5134 (1996)",
          "and ME Casida, \"Time-dependent density functional response theory for molecules,\"",
          "in <i>Recent Advances in Density Functional Methods</i>, edited by DE Chong, vol. 1",
          "of <i>Recent Advances in Computational Chemistry</i>, pp. 155-192 (World Scientific,",
          "Singapore, 1995)."
        ],
        "Name": "lrtddft_casida",
        "Value": "16"
      }
    ],
    "Section": "Linear Response::Casida",
    "Sourcefile": "main/casida.F90",
    "Testfiles": [
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/07-casida-photons.06-spectrum.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/07-casida-photons.02-photons.inp",
      "linear_response/07-casida-photons.04-elpa.inp"
    ],
    "Tutorials": [],
    "Type": "flag"
  },
  "casidatransitiondensities": {
    "CallLine": "call parse_variable(sys%namespace, 'CasidaTransitionDensities', \"0\", cas%trandens)",
    "Default": [
      "write",
      "none"
    ],
    "Description": [
      "Specifies which transition densities are to be calculated and written down. The",
      "transition density for the many-body state <i>n</i> will be written to a file called",
      "<tt>rho_0n</tt> prefixed by the theory level. Format is set by <tt>OutputFormat</tt>.",
      " ",
      "This variable is a string in list form, <i>i.e.</i> expressions such as \"1,2-5,8-15\" are",
      "valid."
    ],
    "LineNumber": 394,
    "Manuals": [],
    "Name": "CasidaTransitionDensities",
    "Options": [],
    "Section": "Linear Response::Casida",
    "Sourcefile": "main/casida.F90",
    "Testfiles": [
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "casidaweightthreshold": {
    "CallLine": "call parse_variable(sys%namespace, 'CasidaWeightThreshold', -M_ONE, cas%weight_thresh)",
    "Default": [
      "-1."
    ],
    "Description": [
      "Specifies the threshold value for which the individual excitations are printed.",
      "i.e. juste-h pairs with weight larger than this threshold will be printed.",
      " ",
      "If a negative value (default) is set, all coefficients will be printed.",
      "For many case, a 0.01 value is a valid option."
    ],
    "LineNumber": 567,
    "Manuals": [],
    "Name": "CasidaWeightThreshold",
    "Options": [],
    "Section": "Linear Response::Casida",
    "Sourcefile": "main/casida.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "casidawritedistributedmatrix": {
    "CallLine": "call parse_variable(sys%namespace, 'CasidaWriteDistributedMatrix', .false., cas%write_matrix)",
    "Default": [
      "false"
    ],
    "Description": [
      "Set to true to write out the full distributed Casida matrix to a file",
      "using MPI-IO."
    ],
    "LineNumber": 502,
    "Manuals": [],
    "Name": "CasidaWriteDistributedMatrix",
    "Options": [],
    "Section": "Linear Response::Casida",
    "Sourcefile": "main/casida.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "cgadditionalterms": {
    "CallLine": "call parse_variable(namespace, 'CGAdditionalTerms', .false., eigens%additional_terms)",
    "Default": [
      "no"
    ],
    "Description": [
      "Used by the cg solver only.",
      "Add additional terms during the line minimization, see PTA92, eq. 5.31ff.",
      "These terms can improve convergence for some systems, but they are quite costly.",
      "If you experience convergence problems, you might try out this option.",
      "This feature is still experimental."
    ],
    "LineNumber": 232,
    "Manuals": [],
    "Name": "CGAdditionalTerms",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/eigensolver.F90",
    "Testfiles": [
      "finite_systems_3d/33-cg.02-additional_terms.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "cgdirection": {
    "CallLine": "call parse_variable(namespace, 'CGDirection', OPTION__CGDIRECTION__FLETCHER, eigens%conjugate_direction)",
    "Default": null,
    "Description": [
      "Used by the cg solver only.",
      "The conjugate direction is updated using a certain coefficient to the previous",
      "direction. This coeffiction can be computed in different ways. The default is",
      "to use Fletcher-Reeves (FR), an alternative is Polak-Ribiere (PR)."
    ],
    "LineNumber": 219,
    "Manuals": [],
    "Name": "CGDirection",
    "Options": [
      {
        "Description": [
          "The coefficient for Fletcher-Reeves consists of the current norm of the",
          "steepest descent vector divided by that of the previous iteration."
        ],
        "Name": "fletcher",
        "Value": "1"
      },
      {
        "Description": [
          "For the Polak-Ribiere scheme, a product of the current with the previous",
          "steepest descent vector is subtracted in the nominator."
        ],
        "Name": "polak",
        "Value": "2"
      }
    ],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/eigensolver.F90",
    "Testfiles": [
      "finite_systems_3d/33-cg.03-cg_direction.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "cgenergychangethreshold": {
    "CallLine": "call parse_variable(namespace, 'CGEnergyChangeThreshold', 0.1_real64, eigens%energy_change_threshold)",
    "Default": [
      "0.1"
    ],
    "Description": [
      "Used by the cg solver only.",
      "For each band, the CG iterations are stopped when the change in energy is smaller than the",
      "change in the first iteration multiplied by this factor. This limits the number of CG",
      "iterations for each band, while still showing good convergence for the SCF cycle. The criterion",
      "is discussed in Sec. V.B.6 of Payne et al. (1992), Rev. Mod. Phys. 64, 4.",
      "The default value is 0.1, which is usually a good choice for LDA and GGA potentials. If you",
      "are solving the OEP equation, you might want to set this value to 1e-3 or smaller. In general,",
      "smaller values might help if you experience convergence problems.",
      "For very small convergence tolerances, choose 0 to disable this criterion."
    ],
    "LineNumber": 252,
    "Manuals": [],
    "Name": "CGEnergyChangeThreshold",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/eigensolver.F90",
    "Testfiles": [
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/04-oep.03-jellium-full_exx.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/07-sic.02-scdm.inp",
      "periodic_systems/22-berry.02-cubic_Si.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "cgorthogonalizeall": {
    "CallLine": "call parse_variable(namespace, 'CGOrthogonalizeAll', .false., eigens%orthogonalize_to_all)",
    "Default": [
      "no"
    ],
    "Description": [
      "Used by the cg solver only.",
      "During the cg iterations, the current band can be orthogonalized",
      "against all other bands or only against the lower bands. Orthogonalizing",
      "against all other bands can improve convergence properties, whereas",
      "orthogonalizing against lower bands needs less operations.",
      "Moreover, orthogonalizing against all bands can make converging",
      "the highest band or unoccupied bands more difficult."
    ],
    "LineNumber": 202,
    "Manuals": [],
    "Name": "CGOrthogonalizeAll",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/eigensolver.F90",
    "Testfiles": [
      "linear_response/07-casida-photons.01-gs.inp",
      "finite_systems_3d/33-cg.01-orthogonalize_all.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "chebyshevfilterboundmixing": {
    "CallLine": "call parse_variable(namespace, 'ChebyshevFilterBoundMixing', default_chebyshev_params%bound_mixing, eigens%cheby_params%bound_mixing)",
    "Default": [
      "0.5"
    ],
    "Description": [
      "In the first application of the filter, for the first SCF step, the initial lower bound estimate",
      "is defined as a linear combination of the smallest and largest eigenvalues of the Hamiltonian.",
      "The bound mixing determines the proportion of linear mixing, beta:",
      "$b_{lower} = beta min{\\lambda} + (\\beta - 1) max{\\lambda}$",
      "of the smallest and largest eigenvalues."
    ],
    "LineNumber": 359,
    "Manuals": [],
    "Name": "ChebyshevFilterBoundMixing",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/eigensolver.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "chebyshevfilterdegree": {
    "CallLine": "call parse_variable(namespace, 'ChebyshevFilterDegree', default_chebyshev_params%degree, eigens%cheby_params%degree)",
    "Default": [
      "25"
    ],
    "Description": [
      "Used by the Chebyshev filter only.",
      "The degree of the Chebyshev polynomial used to dampen the interval of eigenstates one is not interested in.",
      "If used in conjunction with \"OptimizeChebyshevFilterDegree\", which is the default, \"ChebyshevFilterDegree\" defines the",
      "the maximum Chebyshev polynomial degree Octopus will consider when determining an approximate, optimal degree.",
      " ",
      "If not used in conjunction with \"OptimizeChebyshevFilterDegree\", this defines the polynomial degree used for all SCF steps.",
      "The larger the degree, the larger the separation between the subspaces, which will reduce the number of SCF iterations",
      "required to reach convergence. However, ChebyshevFilterDegree also directly correlates with the number of matrix-vector",
      "products performed on the Hamiltonian per SCF step, and so larger values result in slower SCF cycles.",
      "A value in the range 8 <= ChebyshevFilterDegree <= 20 is reasonable."
    ],
    "LineNumber": 329,
    "Manuals": [],
    "Name": "ChebyshevFilterDegree",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/eigensolver.F90",
    "Testfiles": [
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "finite_systems_1d/09-morse.01-gs.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "chebyshevfilterlanczosorder": {
    "CallLine": "call parse_variable(namespace, 'ChebyshevFilterLanczosOrder', default_chebyshev_params%n_lanczos, eigens%cheby_params%n_lanczos)",
    "Default": [
      "5"
    ],
    "Description": [
      "Used by the Chebyshev filter only.",
      "The number of Lanczos iterations used to construct the tridiagonal matrix,",
      "from which the upper bound of H is estimated.",
      "A value in the range 4 <= ChebyshevFilterLanczosOrder <= 10 is reasonable.",
      "Values greater than 10 will raise an assertion."
    ],
    "LineNumber": 311,
    "Manuals": [],
    "Name": "ChebyshevFilterLanczosOrder",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/eigensolver.F90",
    "Testfiles": [
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/13-primitive.02-graphene.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "chebyshevfilterniter": {
    "CallLine": "call parse_variable(namespace, 'ChebyshevFilterNIter', default_chebyshev_params%n_iter, eigens%cheby_params%n_iter)",
    "Default": [
      "5"
    ],
    "Description": [
      "The max number of iterations in the first SCF step of the Chebyshev solver. In practice this",
      "does not need to exceed 10, as the eigenstates will vary alot between the first and second",
      "SCF steps."
    ],
    "LineNumber": 371,
    "Manuals": [],
    "Name": "ChebyshevFilterNIter",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/eigensolver.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "checkpointsmediumfromfile": {
    "CallLine": "call parse_variable(namespace, 'CheckPointsMediumFromFile', .false., medium_box%check_medium_points)",
    "Default": [
      "no"
    ],
    "Description": [
      "Whether to re-calculate the points map by artificially shrinking the coordinate system by a factor of",
      "0.99 to check if the points inside the medium surface are properly detected. This works for only one",
      "medium surface which is centered in the origin of the coordinate system."
    ],
    "LineNumber": 785,
    "Manuals": [],
    "Name": "CheckPointsMediumFromFile",
    "Options": [],
    "Section": "Maxwell::Medium",
    "Sourcefile": "maxwell/linear_medium.F90",
    "Testfiles": [
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "conductivityfromforces": {
    "CallLine": "call parse_variable(global_namespace, 'ConductivityFromForces', .false., from_forces)",
    "Default": [
      "no"
    ],
    "Description": [
      "(Experimental) If enabled, Octopus will attempt to calculate the conductivity from the forces instead of the current."
    ],
    "LineNumber": 108,
    "Manuals": [],
    "Name": "ConductivityFromForces",
    "Options": [],
    "Section": "Utilities::oct-conductivity_spectrum",
    "Sourcefile": "utils/conductivity.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "conductivityspectrumtimestepfactor": {
    "CallLine": "call parse_variable(global_namespace, 'ConductivitySpectrumTimeStepFactor', 1, skip)",
    "Default": [
      "1"
    ],
    "Description": [
      "In the calculation of the conductivity, it is not necessary",
      "to read the velocity at every time step. This variable controls",
      "the integer factor between the simulation time step and the",
      "time step used to calculate the conductivity."
    ],
    "LineNumber": 98,
    "Manuals": [],
    "Name": "ConductivitySpectrumTimeStepFactor",
    "Options": [],
    "Section": "Utilities::oct-conductivity_spectrum",
    "Sourcefile": "utils/conductivity.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "convabsdens": {
    "CallLine": "call parse_variable(namespace, 'ConvAbsDens', M_ZERO, conv_abs_dens)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "Absolute convergence of the density:",
      " ",
      "<math>\\varepsilon = \\int {\\rm d}^3r \\left| \\rho^{out}(\\bf r) -\\rho^{inp}(\\bf r) \\right|</math>.",
      " ",
      "A zero value (the default) means do not use this criterion.",
      " ",
      "If this criterion is used, the SCF loop will only stop once it is",
      "fulfilled for two consecutive iterations."
    ],
    "LineNumber": 89,
    "Manuals": [],
    "Name": "ConvAbsDens",
    "Options": [],
    "Section": "SCF::Convergence",
    "Sourcefile": "scf/criteria_factory.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.01-ground_state.inp",
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "finite_systems_3d/34-walltime.02-restart_gs.inp",
      "finite_systems_3d/06-restart.01-gs_mixrho.inp",
      "finite_systems_3d/06-restart.04-restart_gs_mixvhxc.inp",
      "finite_systems_3d/06-restart.02-restart_gs_mixrho.inp",
      "finite_systems_3d/06-restart.03-gs_mixvhxc.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "periodic_systems/02-cosine_potential.01-ground_state.inp",
      "finite_systems_1d/09-morse.01-gs.inp",
      "optimal_control/06-zbr98.01-ground_state.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "convabsev": {
    "CallLine": "call parse_variable(namespace, 'ConvAbsEv', M_ZERO, conv_abs_ev, unit = units_inp%energy)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "Absolute convergence of the sum of the eigenvalues:",
      " ",
      "<math> \\varepsilon = \\left| \\sum_{j=1}^{N_{occ}} \\varepsilon_j^{out} -",
      "\\sum_{j=1}^{N_{occ}} \\varepsilon_j^{inp} \\right| </math>",
      " ",
      "A zero value (the default) means do not use this criterion.",
      " ",
      "If this criterion is used, the SCF loop will only stop once it is",
      "fulfilled for two consecutive iterations."
    ],
    "LineNumber": 129,
    "Manuals": [],
    "Name": "ConvAbsEv",
    "Options": [],
    "Section": "SCF::Convergence",
    "Sourcefile": "scf/criteria_factory.F90",
    "Testfiles": [
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "functionals/01-xc_1d.01-wfs-lda.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "functionals/11-vdw_d3.01-gs.inp",
      "periodic_systems/20-masked_periodic_boundaries.01-graphene.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "conveigenerror": {
    "CallLine": "call parse_variable(namespace, 'ConvEigenError', .false., scf%conv_eigen_error)",
    "Default": [
      "false"
    ],
    "Description": [
      "If true, the calculation will not be considered converged unless all states have",
      "individual errors less than <tt>EigensolverTolerance</tt>.",
      " ",
      "If this criterion is used, the SCF loop will only stop once it is",
      "fulfilled for two consecutive iterations."
    ],
    "LineNumber": 230,
    "Manuals": [],
    "Name": "ConvEigenError",
    "Options": [],
    "Section": "SCF::Convergence",
    "Sourcefile": "scf/scf.F90",
    "Testfiles": [
      "finite_systems_2d/06-gdlib.01-gs.inp",
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "finite_systems_3d/09-spinors.01-ground_state.inp",
      "finite_systems_3d/09-spinors.02-rmmdiis.inp",
      "real_time/02-propagators.01-gs.inp",
      "real_time/01-propagators.01-gs.inp",
      "pseudopotentials/02-cu2_hgh.01_gs.inp",
      "pseudopotentials/02-cu2_hgh.02_gs_current.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/26-Na.01-gs.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/05-lithium.01-gs.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/27-Ar.01-gs.inp",
      "periodic_systems/09-etsf_io.01-gs.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/13-primitive.01-diamond.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "finite_systems_1d/02-neon_mpi.01-ground_state-IP_par_domains.inp",
      "finite_systems_1d/02-neon_mpi.02-ground_state-kli_par_domains.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp",
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "convenergy": {
    "CallLine": "call parse_variable(namespace, 'ConvEnergy', M_ZERO, conv_energy_diff, unit = units_inp%energy)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "Stop the SCF when the magnitude of change in energy during at",
      "one SCF iteration is smaller than this value.",
      " ",
      " ",
      "If this criterion is used, the SCF loop will only stop once it is",
      "fulfilled for two consecutive iterations."
    ],
    "LineNumber": 71,
    "Manuals": [],
    "Name": "ConvEnergy",
    "Options": [],
    "Section": "SCF::Convergence",
    "Sourcefile": "scf/criteria_factory.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "convertend": {
    "CallLine": "call parse_variable(global_namespace, 'ConvertEnd', 1, c_end)",
    "Default": [
      "1"
    ],
    "Description": [
      "The last number of the filename or folder."
    ],
    "LineNumber": 206,
    "Manuals": [],
    "Name": "ConvertEnd",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [
      "finite_systems_3d/05-output.03-convert.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "convertenergymax": {
    "CallLine": "call parse_variable(namespace, 'ConvertEnergyMax',fdefault, max_energy, units_inp%energy)",
    "Default": [
      "w_max"
    ],
    "Description": [
      "Maximum energy to output from Fourier transform."
    ],
    "LineNumber": 515,
    "Manuals": [],
    "Name": "ConvertEnergyMax",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "convertenergymin": {
    "CallLine": "call parse_variable(namespace, 'ConvertEnergyMin', M_ZERO, min_energy, units_inp%energy)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "Minimum energy to output from Fourier transform."
    ],
    "LineNumber": 477,
    "Manuals": [],
    "Name": "ConvertEnergyMin",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "convertenergystep": {
    "CallLine": "call parse_variable(namespace, 'ConvertEnergyStep',fdefault, dw, units_inp%energy)",
    "Default": [
      "<math>2",
      "\\pi",
      "/",
      "T</math>,",
      "where",
      "<math>T</math>",
      "is",
      "the",
      "total",
      "propagation",
      "time"
    ],
    "Description": [
      "Energy step to output from Fourier transform.",
      "Sampling rate for the Fourier transform. If you supply a number equal or smaller than zero, then",
      "the sampling rate will be <math>2 \\pi / T</math>, where <math>T</math> is the total propagation time."
    ],
    "LineNumber": 568,
    "Manuals": [],
    "Name": "ConvertEnergyStep",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "convertfilename": {
    "CallLine": "call parse_variable(global_namespace, 'ConvertFilename', 'density', basename)",
    "Default": [
      "\"density\""
    ],
    "Description": [
      "Input filename. The original filename which is going to be converted in the format",
      "specified in <tt>OutputFormat</tt>. It is going to convert various files, it should",
      "only contain the beginning of the name. For instance, in the case of the restart",
      "files, it should be one space ' '."
    ],
    "LineNumber": 134,
    "Manuals": [],
    "Name": "ConvertFilename",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [
      "finite_systems_3d/05-output.03-convert.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "convertfolder": {
    "CallLine": "call parse_variable(global_namespace, 'ConvertFolder', folder_default, folder)",
    "Default": null,
    "Description": [
      "The folder name where the input files are. The default is",
      "<tt>td.</tt> if <tt>ConvertIterateFolder = true</tt>, otherwise <tt>restart</tt>."
    ],
    "LineNumber": 187,
    "Manuals": [],
    "Name": "ConvertFolder",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [
      "finite_systems_3d/05-output.03-convert.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "convertftmethod": {
    "CallLine": "call parse_variable(namespace, 'ConvertFTMethod', 1, ft_method)",
    "Default": [
      "FAST_FOURIER"
    ],
    "Description": [
      "Describes the method used to perform the Fourier Transform"
    ],
    "LineNumber": 540,
    "Manuals": [],
    "Name": "ConvertFTMethod",
    "Options": [
      {
        "Description": [
          "Uses Fast Fourier Transform as implemented in the external library."
        ],
        "Name": "fast_fourier",
        "Value": "1"
      },
      {
        "Description": [
          "Uses polinomial approach to the computation of discrete Fourier Transform.",
          "It uses the same variable described in how to obtain spectrum from",
          "a time-propagation calculation."
        ],
        "Name": "standard_fourier",
        "Value": "2"
      }
    ],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "converthow": {
    "CallLine": "call parse_variable(global_namespace, 'ConvertHow', CONVERT_FORMAT, c_how)",
    "Default": [
      "convert_format"
    ],
    "Description": [
      "Select how the mesh function will be converted."
    ],
    "LineNumber": 160,
    "Manuals": [],
    "Name": "ConvertHow",
    "Options": [
      {
        "Description": [
          "The format of the mesh function will be convert from the binary file.obf.",
          "The format of the output function is set by OutputHow variable."
        ],
        "Name": "format",
        "Value": "1"
      },
      {
        "Description": [
          "A fourier transform of the mesh function will be computed.",
          "It requieres that ConvertStart and ConvertEnd have to be set."
        ],
        "Name": "fourier_transform",
        "Value": "2"
      },
      {
        "Description": [
          "Convert utility will generate a new mesh function constructed by linear",
          "combination of scalar function of different mesh functions,"
        ],
        "Name": "operation",
        "Value": "3"
      }
    ],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [
      "finite_systems_3d/05-output.04-convert-op.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "convertiteratefolder": {
    "CallLine": "call parse_variable(global_namespace, 'ConvertIterateFolder', .true., iterate_folder)",
    "Default": [
      "true"
    ],
    "Description": [
      "This variable decides if a folder is going to be iterated or the",
      "filename is going to be iterated."
    ],
    "LineNumber": 170,
    "Manuals": [],
    "Name": "ConvertIterateFolder",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [
      "finite_systems_3d/05-output.03-convert.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "convertoutputfilename": {
    "CallLine": "call parse_variable(namespace, 'ConvertOutputFilename', 'density', out_filename)",
    "Default": [
      "\"density\""
    ],
    "Description": [
      "Output filename. The name of the file in which the converted mesh function will be",
      "written in the format specified in <tt>OutputFormat</tt>."
    ],
    "LineNumber": 837,
    "Manuals": [],
    "Name": "ConvertOutputFilename",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "convertoutputfolder": {
    "CallLine": "call parse_variable(namespace, 'ConvertOutputFolder', \"convert\", out_folder)",
    "Default": null,
    "Description": [
      "The folder name where the output files will be write. The default is",
      "<tt>convert</tt>."
    ],
    "LineNumber": 825,
    "Manuals": [],
    "Name": "ConvertOutputFolder",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "convertreadsize": {
    "CallLine": "call parse_variable(namespace, 'ConvertReadSize', mesh%np, chunk_size)",
    "Default": [
      "mesh%np"
    ],
    "Description": [
      "How many points are read at once. For the parallel run this has not been",
      "yet tested, so it should be one. For the serial run, a number",
      "of 100-1000 will speed-up the execution time by this factor."
    ],
    "LineNumber": 489,
    "Manuals": [],
    "Name": "ConvertReadSize",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "convertscalaroperation": {
    "CallLine": "if (parse_block(namespace, 'ConvertScalarOperation', blk) == 0) then",
    "Default": null,
    "Description": [
      "This variable is used to generate a new mesh function as a linear combination",
      "different mesh function having the same mesh. Each row defines an operation for",
      "for a single mesh function.",
      "The format of the block is the following: <br>",
      "'variable name' | 'folder' | 'file' | 'operation'"
    ],
    "LineNumber": 809,
    "Manuals": [],
    "Name": "ConvertScalarOperation",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [
      "finite_systems_3d/05-output.04-convert-op.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "convertstart": {
    "CallLine": "call parse_variable(global_namespace, 'ConvertStart', c_start_default, c_start)",
    "Default": null,
    "Description": [
      "The starting number of the filename or folder.",
      "Default is 0 if <tt>ConvertIterateFolder = true</tt>, otherwise 1."
    ],
    "LineNumber": 197,
    "Manuals": [],
    "Name": "ConvertStart",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [
      "finite_systems_3d/05-output.03-convert.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "convertstep": {
    "CallLine": "call parse_variable(global_namespace, 'ConvertStep', 1, c_step)",
    "Default": [
      "1"
    ],
    "Description": [
      "The padding between the filenames or folder."
    ],
    "LineNumber": 215,
    "Manuals": [],
    "Name": "ConvertStep",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "convertsubtract": {
    "CallLine": "call parse_variable(global_namespace, 'ConvertSubtract', .false., subtract_file)",
    "Default": [
      "false"
    ],
    "Description": [
      "Decides if a reference file is going to be subtracted."
    ],
    "LineNumber": 241,
    "Manuals": [],
    "Name": "ConvertSubtract",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "convertsubtractfilename": {
    "CallLine": "call parse_variable(global_namespace, 'ConvertSubtractFilename', 'density', ref_name)",
    "Default": [
      "density"
    ],
    "Description": [
      "Input filename. The file which is going to subtracted to rest of the files."
    ],
    "LineNumber": 224,
    "Manuals": [],
    "Name": "ConvertSubtractFilename",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "convertsubtractfolder": {
    "CallLine": "call parse_variable(global_namespace, 'ConvertSubtractFolder', '.', ref_folder)",
    "Default": [
      "."
    ],
    "Description": [
      "The folder name which is going to be subtracted."
    ],
    "LineNumber": 250,
    "Manuals": [],
    "Name": "ConvertSubtractFolder",
    "Options": [],
    "Section": "Utilities::oct-convert",
    "Sourcefile": "utils/convert.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "convreldens": {
    "CallLine": "call parse_variable(namespace, 'ConvRelDens', 1e-6_real64, conv_rel_dens)",
    "Default": [
      "1e-6"
    ],
    "Description": [
      "Relative convergence of the density:",
      " ",
      "<math>\\varepsilon = \\frac{1}{N} \\mathrm{ConvAbsDens}</math>.",
      " ",
      "<i>N</i> is the total number of electrons in the problem.  A",
      "zero value means do not use this criterion.",
      " ",
      "If you reduce this value, you should also reduce",
      "<tt>EigensolverTolerance</tt> to a value of roughly 1/10 of",
      "<tt>ConvRelDens</tt> to avoid convergence problems.",
      " ",
      "If this criterion is used, the SCF loop will only stop once it is",
      "fulfilled for two consecutive iterations."
    ],
    "LineNumber": 110,
    "Manuals": [],
    "Name": "ConvRelDens",
    "Options": [],
    "Section": "SCF::Convergence",
    "Sourcefile": "scf/criteria_factory.F90",
    "Testfiles": [
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "multisystem/12-electronic_subsystem_propagators.01-gs.inp",
      "multisystem/15-electronic_system_restart.01-gs.inp",
      "linear_response/06-vib_modes_fd.01-vib_modes_fd.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "linear_response/02-h2o_pol_lr.01_h2o_gs.inp",
      "linear_response/06-vib_modes_fd.01-ground_state.inp",
      "linear_response/04-vib_modes.01-ground_state.inp",
      "linear_response/01-casida.01-gs.inp",
      "finite_systems_3d/30-local_multipoles.01-gs.inp",
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/13-full_potential_hydrogen.02-gs-cg.inp",
      "finite_systems_3d/10-fullerene.01-gs.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/12-forces.03-N2_gs.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/35-slater_x.01-gs.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/36-kli_x.01-gs.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "finite_systems_3d/04-jellium.01-ground_state.inp",
      "finite_systems_3d/12-forces.02-N2_gs.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "finite_systems_3d/12-forces.01-N2_gs.inp",
      "real_time/11-tdmagnetic.02-unocc.inp",
      "real_time/17-absorption-spin_symmetry.01-gs.inp",
      "real_time/02-propagators.01-gs.inp",
      "real_time/24-adsic_freeze_orbitals.01-gs.inp",
      "real_time/11-tdmagnetic.01-gs.inp",
      "real_time/03-td_self_consistent.01-gs.inp",
      "real_time/14-absorption-spinors.01-gs.inp",
      "real_time/01-propagators.01-gs.inp",
      "pseudopotentials/05-carbon_dojo_pbesol.01-gs.inp",
      "pseudopotentials/04-carbon_dojo_psml.01-gs.inp",
      "pseudopotentials/15-calcium_psp8_sic.01-gs.inp",
      "pseudopotentials/14-carbon_dojo_psp8.01-gs.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "functionals/18-mgga.01-br89.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/18-mgga.02-br89_oep.inp",
      "functionals/01-xc_1d.02-wfs-hf.inp",
      "functionals/01-xc_1d.01-wfs-lda.inp",
      "functionals/04-oep.02-jellium-exx_kli.inp",
      "functionals/04-oep.01-jellium-lsda.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/05-ks_inversion.01-target_density.inp",
      "functionals/14-libvdwxc_Be_hcp.01-vdwdfcx.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "functionals/04-oep.03-jellium-full_exx.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "functionals/16-dressed-rdmft.01-ip.inp",
      "functionals/07-sic.02-scdm.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/11-silicon_force.01-gs.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/11-silicon_force.02-nlcc.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.02_kdotp.inp",
      "periodic_systems/26-Na.01-gs.inp",
      "periodic_systems/22-berry.01-cubic_Si_gs.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/06-h2o_pol_lr.01_gs.inp",
      "periodic_systems/19-unfolding.03-unocc.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/27-Ar.01-gs.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/15-bandstructure.02-unocc.inp",
      "periodic_systems/23-hybrids.01-ace.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/13-primitive.01-diamond.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/08-benzene_supercell.01-gs.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "finite_systems_1d/02-neon_mpi.01-ground_state-IP_par_domains.inp",
      "finite_systems_1d/03-He-Hartree-Fock.01-gs.inp",
      "finite_systems_1d/02-neon_mpi.02-ground_state-kli_par_domains.inp",
      "optimal_control/05-adw.02-unocc.inp",
      "optimal_control/10-current.01-ground_state.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/06-zbr98.01-ground_state.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/05-adw.01-ground_state.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/03-localtarget.04-gs-mp.inp",
      "optimal_control/01-asym_doublewell.01-ground_state.inp",
      "optimal_control/09-density+current.01-ground_state.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.01-1D-Helium-ground-state.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/09-basis_from_states.01-lda.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "convrelev": {
    "CallLine": "call parse_variable(namespace, 'ConvRelEv', M_ZERO, conv_rel_ev)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "Relative convergence of the sum of the eigenvalues:",
      " ",
      "<math>\\varepsilon = \\frac{ \\left| \\sum_{j=1}^{N_{occ}} ( \\varepsilon_j^{out} -  \\varepsilon_j^{inp} ) \\right|}",
      "{\\left| \\sum_{j=1}^{N_{occ}} \\varepsilon_j^{out} \\right|} </math>",
      " ",
      " ",
      "If this criterion is used, the SCF loop will only stop once it is",
      "fulfilled for two consecutive iterations."
    ],
    "LineNumber": 146,
    "Manuals": [],
    "Name": "ConvRelEv",
    "Options": [],
    "Section": "SCF::Convergence",
    "Sourcefile": "scf/criteria_factory.F90",
    "Testfiles": [
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/07-mgga.02-tb09_gs_nosymm.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "coordinates": {
    "Default": null,
    "Description": [
      "If <tt>XYZCoordinates</tt>, <tt>PDBCoordinates</tt>, and <tt>XSFCoordinates</tt> were not found,",
      "<tt>Octopus</tt> tries to read the coordinates for the atoms from the block <tt>Coordinates</tt>. The",
      "format is quite straightforward:",
      " ",
      "<tt>%Coordinates",
      "<br>&nbsp;&nbsp;'C' |      -0.56415 | 0.0 | 0.0 | no",
      "<br>&nbsp;&nbsp;'O' | &nbsp;0.56415 | 0.0 | 0.0 | no",
      "<br>%</tt>",
      " ",
      "The first line defines a carbon atom at coordinates (-0.56415, 0.0, 0.0),",
      "that is <b>not</b> allowed to move during dynamical simulations. The second line has",
      "a similar meaning. This block obviously defines a carbon monoxide molecule, if the",
      "input units are <tt>eV_Angstrom</tt>. The number of coordinates for each species",
      "must be equal to the dimension of your space (generally 3).",
      "Note that in this way it is possible to fix some of the atoms (this",
      "is not possible when specifying the coordinates through a <tt>PDBCoordinates</tt> or",
      "<tt>XYZCoordinates</tt> file). The last column is optional, and the default is yes.",
      "It is always possible to fix <b>all</b> atoms using the <tt>MoveIons</tt> directive."
    ],
    "Manuals": [],
    "Name": "Coordinates",
    "Options": [],
    "Section": "System::Coordinates",
    "Sourcefile": "ions/read_coords.F90",
    "Testfiles": [
      "finite_systems_2d/01-quadratic_box.03-hartree+xc.inp",
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_2d/01-quadratic_box.04-spin_polarized.inp",
      "finite_systems_2d/05-spin_precession.01-ground_state.inp",
      "finite_systems_2d/03-helium_atom.02-ground_state.inp",
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/02-fock-darwin.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/01-quadratic_box.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.02-ground_state.inp",
      "finite_systems_2d/07-user_def_box.01-gs.inp",
      "finite_systems_2d/09-magnetic_2d.01-no_field.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "finite_systems_2d/01-quadratic_box.02-hartree.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/03-helium_atom.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "finite_systems_2d/06-gdlib.01-gs.inp",
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/12-electronic_subsystem_propagators.01-gs.inp",
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/16-bomd.01-gs.inp",
      "multisystem/10-dftbplus_verlet.01-water.inp",
      "multisystem/15-electronic_system_restart.04-td_restart_part2.inp",
      "multisystem/16-bomd.02-td.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/15-electronic_system_restart.01-gs.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/03-vdw_sternheimer.02-vdw.inp",
      "linear_response/02-h2o_pol_lr.04_h2o_susc.inp",
      "linear_response/05-polarizability.02-sternheimer.inp",
      "linear_response/06-vib_modes_fd.01-vib_modes_fd.inp",
      "linear_response/05-polarizability.01-gs.inp",
      "linear_response/08-sternheimer-photons.01-gs.inp",
      "linear_response/08-sternheimer-photons.02-em_resp.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "linear_response/02-h2o_pol_lr.01_h2o_gs.inp",
      "linear_response/06-vib_modes_fd.01-ground_state.inp",
      "linear_response/02-h2o_pol_lr.03_h2o_dyn_pol_cmplx.inp",
      "linear_response/04-vib_modes.01-ground_state.inp",
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/05-polarizability.03-finite-diff.inp",
      "linear_response/02-h2o_pol_lr.02_h2o_dyn_pol.inp",
      "linear_response/04-vib_modes.02-vib_modes.inp",
      "linear_response/04-vib_modes.03-vib_modes_restart.inp",
      "linear_response/07-casida-photons.06-spectrum.inp",
      "linear_response/07-casida-photons.01-gs.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/02-h2o_pol_lr.05_h2o_magn_opt.inp",
      "linear_response/01-casida.01-gs.inp",
      "linear_response/07-casida-photons.02-photons.inp",
      "linear_response/03-vdw_sternheimer.01-ground_state.inp",
      "linear_response/07-casida-photons.04-elpa.inp",
      "finite_systems_3d/30-local_multipoles.02-multipoles.inp",
      "finite_systems_3d/14-fullerene_unpacked.02-td-unpacked.inp",
      "finite_systems_3d/42-full_potential_anc.04-fr-zora.inp",
      "finite_systems_3d/22-preconditioner.01-none.inp",
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/22-preconditioner.03-jacobi.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/30-local_multipoles.01-gs.inp",
      "finite_systems_3d/34-walltime.02-restart_gs.inp",
      "finite_systems_3d/06-restart.06-td_calc.inp",
      "finite_systems_3d/05-output.02-gs.inp",
      "finite_systems_3d/16-scfinlcao_std.01-gs.inp",
      "finite_systems_3d/03-magnetic.01-gs-unpolarized.inp",
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/33-cg.02-additional_terms.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/20-eigensolver.01-cg.inp",
      "finite_systems_3d/13-full_potential_hydrogen.02-gs-cg.inp",
      "finite_systems_3d/42-full_potential_anc.02-sc-zora.inp",
      "finite_systems_3d/14-fullerene_unpacked.03-td-packed.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/18-preconditioner_poisson.01-poisson.inp",
      "finite_systems_3d/24-o2-spin.01-gs.inp",
      "finite_systems_3d/39-adsic.02-polarized.inp",
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "finite_systems_3d/12-forces.03-N2_gs.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/35-slater_x.01-gs.inp",
      "finite_systems_3d/06-restart.05-restart_gs.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/30-local_multipoles.03-multipoles_restart.inp",
      "finite_systems_3d/22-preconditioner.04-multigrid.inp",
      "finite_systems_3d/06-restart.01-gs_mixrho.inp",
      "finite_systems_3d/33-cg.03-cg_direction.inp",
      "finite_systems_3d/23-go-na2.02-simplex.inp",
      "finite_systems_3d/05-output.04-convert-op.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/42-full_potential_anc.01-gs.inp",
      "finite_systems_3d/22-preconditioner.05-multigrid_rmmdiis.inp",
      "finite_systems_3d/36-kli_x.01-gs.inp",
      "finite_systems_3d/06-restart.07-restart_td_calc.inp",
      "finite_systems_3d/23-go-na2.04-fire_restart.inp",
      "finite_systems_3d/20-eigensolver.03-plan.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/05-output.03-convert.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/41-gpu-bug.01-C.inp",
      "finite_systems_3d/28-carbon_big_box.01-ground_state.inp",
      "finite_systems_3d/23-go-na2.03-fire.inp",
      "finite_systems_3d/23-go-na2.01-steep.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/09-spinors.03-rmmdiis_extra_states.inp",
      "finite_systems_3d/42-full_potential_anc.03-sf-zora.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/34-walltime.03-td_walltime.inp",
      "finite_systems_3d/09-spinors.01-ground_state.inp",
      "finite_systems_3d/34-walltime.04-restart_td.inp",
      "finite_systems_3d/23-go-na2.05-constrains.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "finite_systems_3d/20-eigensolver.05-rmmdiis.inp",
      "finite_systems_3d/07-spin_orbit_coupling.02-rkb.inp",
      "finite_systems_3d/06-restart.04-restart_gs_mixvhxc.inp",
      "finite_systems_3d/04-jellium.01-ground_state.inp",
      "finite_systems_3d/31-acetylene_b3lyp.01-gs.inp",
      "finite_systems_3d/32-tdpcm_methane.01-ground_state.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/06-restart.02-restart_gs_mixrho.inp",
      "finite_systems_3d/22-preconditioner.02-filter.inp",
      "finite_systems_3d/34-walltime.01-gs_walltime.inp",
      "finite_systems_3d/12-forces.02-N2_gs.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.03-unocc.inp",
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "finite_systems_3d/33-cg.01-orthogonalize_all.inp",
      "finite_systems_3d/37-sternheimer_polarized.02-em_resp.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "finite_systems_3d/14-fullerene_unpacked.01-gs.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/42-full_potential_anc.05-zora-error.inp",
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/06-restart.03-gs_mixvhxc.inp",
      "finite_systems_3d/39-adsic.01-unpolarized.inp",
      "finite_systems_3d/37-sternheimer_polarized.01-gs.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "finite_systems_3d/12-forces.01-N2_gs.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "finite_systems_3d/09-spinors.02-rmmdiis.inp",
      "real_time/19-td_move_ions.01-gs.inp",
      "real_time/18-hhg.01-gs.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/11-tdmagnetic.02-unocc.inp",
      "real_time/17-absorption-spin_symmetry.01-gs.inp",
      "real_time/10-bomd.02-td.inp",
      "real_time/02-propagators.01-gs.inp",
      "real_time/05-time_propagation.04-td_domains_states-reorder_ranks.inp",
      "real_time/01-propagators.09-magnus.inp",
      "real_time/20-pcm-local-field-absorption.01-gs.inp",
      "real_time/02-propagators.02-cnsparskit.inp",
      "real_time/05-time_propagation.01-gs.inp",
      "real_time/08-laser.01-ground_state.inp",
      "real_time/05-time_propagation.06-td_fast_md.inp",
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/16-sparskit.01-gs.inp",
      "real_time/10-bomd.03-td_restart.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/01-propagators.07-caetrs.inp",
      "real_time/19-td_move_ions.03-td_restart.inp",
      "real_time/12-absorption.01-gs.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/09-angular_momentum.03-td_icl.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/06-caetrs.01-gs.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/05-time_propagation.03-td_domains_states.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/14-absorption-spinors.03-td-restart.inp",
      "real_time/21-scissor.02-td.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/09-angular_momentum.01-gs.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/01-propagators.11-cfmagnus4.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/10-bomd.01-gs.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/13-absorption-spin.03-td-restart.inp",
      "real_time/14-absorption-spinors.02-td.inp",
      "real_time/22-td_move_ions_periodic.01-gs.inp",
      "real_time/09-angular_momentum.02-td_gipaw.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/01-propagators.08-cn.inp",
      "real_time/15-crank_nicolson.01-gs.inp",
      "real_time/01-propagators.05-etrs_chebyshev.inp",
      "real_time/24-adsic_freeze_orbitals.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/11-tdmagnetic.01-gs.inp",
      "real_time/03-td_self_consistent.01-gs.inp",
      "real_time/01-propagators.06-aetrs.inp",
      "real_time/14-absorption-spinors.01-gs.inp",
      "real_time/05-time_propagation.05-td_md.inp",
      "real_time/19-td_move_ions.02-td.inp",
      "real_time/01-propagators.01-gs.inp",
      "real_time/01-propagators.03-etrs_taylor.inp",
      "real_time/03-td_self_consistent.02-etrs.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/01-propagators.02-expmid.inp",
      "real_time/13-absorption-spin.01-gs.inp",
      "real_time/05-time_propagation.02-td_domains.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "real_time/01-propagators.10-exprk4.inp",
      "real_time/22-td_move_ions_periodic.02-td.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "real_time/21-scissor.01-gs.inp",
      "real_time/12-absorption.03-td-restart.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "real_time/02-propagators.04-rungekutta4.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "real_time/10-bomd.04-xyz-anim.inp",
      "pseudopotentials/17-hgh_occupations.01-W.inp",
      "pseudopotentials/17-hgh_occupations.02-Au.inp",
      "pseudopotentials/06-carbon_dojo_pbe.01-gs.inp",
      "pseudopotentials/16-platinum_psp8.01-gs.inp",
      "pseudopotentials/18-Bi_pseudodojo_fr.01-gs.inp",
      "pseudopotentials/17-hgh_occupations.04-Au_sc.inp",
      "pseudopotentials/11-isotopes.02-tritium.inp",
      "pseudopotentials/17-hgh_occupations.03-W_sc.inp",
      "pseudopotentials/10-helium_upf.02-gs_filter_ts.inp",
      "pseudopotentials/01-sg15-h.01-gs.inp",
      "pseudopotentials/08-carbon_fhi.01-gs.inp",
      "pseudopotentials/11-isotopes.01-deuterium.inp",
      "pseudopotentials/07-carbon_dojo_lda.01-gs.inp",
      "pseudopotentials/03-nlcc.01-Fatom.inp",
      "pseudopotentials/13-U235.01-gs.inp",
      "pseudopotentials/10-helium_upf.03-gs_filter_bsb.inp",
      "pseudopotentials/05-carbon_dojo_pbesol.01-gs.inp",
      "pseudopotentials/04-carbon_dojo_psml.01-gs.inp",
      "pseudopotentials/15-calcium_psp8_sic.01-gs.inp",
      "pseudopotentials/10-helium_upf.01-gs_nofilter.inp",
      "pseudopotentials/09-carbon_cpi.01-gs.inp",
      "pseudopotentials/02-cu2_hgh.01_gs.inp",
      "pseudopotentials/02-cu2_hgh.02_gs_current.inp",
      "pseudopotentials/14-carbon_dojo_psp8.01-gs.inp",
      "pseudopotentials/12-mix_and_match.01-mgo.inp",
      "photo_electron/05-pfft.01-gs.inp",
      "photo_electron/06-2D.01-Na_gs.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/09-flux_3d.03-Na_gs_cub.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/09-flux_3d.01-Na_gs_sph.inp",
      "photo_electron/13-arpes_2d.01-gs.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "photo_electron/12-spm_3d.01-Na_gs.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp",
      "errors/02-scf_errors.01-rdmft.inp",
      "errors/01-run_mode.01-one_shot.inp",
      "tutorials/01-octopus_basics-getting_started.01-H_atom.inp",
      "tutorials/01-octopus_basics-getting_started.02-H_atom_spin.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.02-methane.inp",
      "tutorials/01-octopus_basics-getting_started.03-H_atom_independent.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.01-gs.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.02-td.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.03-td_laser.inp",
      "functionals/18-mgga.01-br89.inp",
      "functionals/03-xc.gga_x_lg93.inp",
      "functionals/03-xc.gga_xc_mpwlyp1w.inp",
      "functionals/03-xc.lda_c_pw.inp",
      "functionals/09-vdw_ts_sc.01-gs.inp",
      "functionals/03-xc.exx.inp",
      "functionals/03-xc.gga_x_rpbe.inp",
      "functionals/03-xc.gga_xc_edf1.inp",
      "functionals/03-xc.lda_c_hl.inp",
      "functionals/03-xc.gga_xc_hcth_120.inp",
      "functionals/01-xc_1d.oep_kli.inp",
      "functionals/03-xc.gga_c_pbe_jrgx.inp",
      "functionals/03-xc.gga_xc_hcth_93.inp",
      "functionals/03-xc.gga_c_pbe_sol.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/03-xc.mvorb_hse06_fock.inp",
      "functionals/02-xc_2d.gga_b86_mgc.inp",
      "functionals/03-xc.lda_c_wigner.inp",
      "functionals/16-dressed-rdmft.03-rdmft.inp",
      "functionals/03-xc.gga_x_mpbe.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/05-ks_inversion.03-inversion.inp",
      "functionals/08-vdw_ts.01-gs.inp",
      "functionals/06-rdmft.03-gs_grid.inp",
      "functionals/03-xc.gga_xc_xlyp.inp",
      "functionals/03-xc.gga_x_am05.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/03-xc.01-gs.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/03-xc.gga_x_g96.inp",
      "functionals/03-xc.gga_x_b86.inp",
      "functionals/03-xc.gga_x_pbek1_vdw.inp",
      "functionals/18-mgga.02-br89_oep.inp",
      "functionals/03-xc.gga_xc_pbelyp1w.inp",
      "functionals/13-libvdwxc_h2o.01-vdwdfcx.inp",
      "functionals/03-xc.gga_x_b86_mgc.inp",
      "functionals/01-xc_1d.02-wfs-hf.inp",
      "functionals/03-xc.gga_c_xpbe.inp",
      "functionals/03-xc.pbe0_fock.inp",
      "functionals/03-xc.gga_x_b88.inp",
      "functionals/03-xc.lda_c_ob_pz.inp",
      "functionals/02-xc_2d.gga_b86.inp",
      "functionals/01-xc_1d.01-wfs-lda.inp",
      "functionals/03-xc.gga_x_ft97_b.inp",
      "functionals/03-xc.lda_c_ob_pw.inp",
      "functionals/03-xc.lda_c_pz_mod.inp",
      "functionals/06-rdmft.01-ip.inp",
      "functionals/05-ks_inversion.02-two_particle.inp",
      "functionals/03-xc.gga_x_optb88_vdw.inp",
      "functionals/03-xc.gga_c_pw91.inp",
      "functionals/04-oep.02-jellium-exx_kli.inp",
      "functionals/16-dressed-rdmft.02-hf.inp",
      "functionals/03-xc.slater.inp",
      "functionals/04-oep.01-jellium-lsda.inp",
      "functionals/03-xc.lda_xc_teter93.inp",
      "functionals/03-xc.sic_pz.inp",
      "functionals/22-xc_lrx.inp",
      "functionals/03-xc.gga_x_xpbe.inp",
      "functionals/01-xc_1d.lda_csc.inp",
      "functionals/03-xc.pbe0_oep.inp",
      "functionals/03-xc.gga_xc_hcth_147.inp",
      "functionals/03-xc.gga_x_pbe_jsjr.inp",
      "functionals/03-xc.gga_c_lm.inp",
      "functionals/03-xc.gga_x_pbe_r.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/03-xc.lda_c_vbh.inp",
      "functionals/03-xc.gga_x_pbea.inp",
      "functionals/03-xc.lda_x.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/03-xc.gga_x_pw91.inp",
      "functionals/03-xc.b3lyp_fock.inp",
      "functionals/03-xc.gga_x_ft97_a.inp",
      "functionals/03-xc.gga_x_pw86.inp",
      "functionals/01-xc_1d.oep_exx.inp",
      "functionals/03-xc.lda_c_rpa.inp",
      "functionals/03-xc.b3lyp_oep.inp",
      "functionals/03-xc.gga_x_dk87_r2.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/03-xc.gga_c_p86.inp",
      "functionals/03-xc.lda_c_vwn_rpa.inp",
      "functionals/05-ks_inversion.01-target_density.inp",
      "functionals/03-xc.lda_c_pw_mod.inp",
      "functionals/03-xc.lda_c_vwn.inp",
      "functionals/14-libvdwxc_Be_hcp.01-vdwdfcx.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/03-xc.kli.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "functionals/03-xc.lda_c_pz.inp",
      "functionals/04-oep.03-jellium-full_exx.inp",
      "functionals/03-xc.lda_c_xalpha.inp",
      "functionals/02-xc_2d.lda_amgb.inp",
      "functionals/03-xc.lda_c_gl.inp",
      "functionals/03-xc.gga_x_bayesian.inp",
      "functionals/03-xc.gga_xc_b97_d.inp",
      "functionals/03-xc.gga_c_pbe.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/03-xc.gga_x_lb.inp",
      "functionals/02-xc_2d.lda_prm.inp",
      "functionals/03-xc.gga_x_pbe_sol.inp",
      "functionals/16-dressed-rdmft.01-ip.inp",
      "functionals/03-xc.gga_c_lyp.inp",
      "functionals/03-xc.gga_c_am05.inp",
      "functionals/03-xc.gga_x_mpw91.inp",
      "functionals/03-xc.gga_x_pbe.inp",
      "functionals/03-xc.gga_xc_pbe1w.inp",
      "functionals/02-xc_2d.gga_b88.inp",
      "functionals/03-xc.gga_x_optpbe_vdw.inp",
      "functionals/03-xc.gga_xc_hcth_407.inp",
      "functionals/02-xc_2d.gga_pbe.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "functionals/07-sic.02-scdm.inp",
      "functionals/03-xc.gga_x_dk87_r1.inp",
      "functionals/03-xc.gga_x_optx.inp",
      "functionals/06-rdmft.02-gs_basis.inp",
      "functionals/11-vdw_d3.01-gs.inp",
      "functionals/03-xc.fbex.inp",
      "functionals/03-xc.gga_x_wc.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/05-lithium.04-dielectric_function.inp",
      "periodic_systems/06-h2o_pol_lr.02_kdotp.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/05-lithium.05-tdtdm.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/01-free_electrons.02-unocc.inp",
      "periodic_systems/06-h2o_pol_lr.01_gs.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/01-free_electrons.01-ground_state.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/02-cosine_potential.02-unocc.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/05-lithium.01-gs.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "periodic_systems/07-mgga.02-tb09_gs_nosymm.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/24-hartree_fock_1D.01-gs.inp",
      "periodic_systems/31-magnon_1d.01-gs.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/03-sodium_chain.03-ground_state_disp.inp",
      "periodic_systems/23-hybrids.01-ace.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/08-benzene_supercell.01-gs.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "periodic_systems/02-cosine_potential.01-ground_state.inp",
      "finite_systems_1d/09-morse.02-unocc.inp",
      "finite_systems_1d/02-neon_mpi.03-td_calc-kli_par_states.inp",
      "finite_systems_1d/04-lithium.02-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.03-dummy.inp",
      "finite_systems_1d/09-morse.01-gs.inp",
      "finite_systems_1d/02-neon_mpi.01-ground_state-IP_par_domains.inp",
      "finite_systems_1d/03-He-Hartree-Fock.01-gs.inp",
      "finite_systems_1d/01-hydrogen.02-excited_state.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.01-ground_state.inp",
      "finite_systems_1d/02-neon_mpi.02-ground_state-kli_par_domains.inp",
      "finite_systems_1d/04-lithium.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/05-adw.02-unocc.inp",
      "optimal_control/04-box.01-ground_state.inp",
      "optimal_control/10-current.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.02-unocc.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.01-ground_state.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/06-zbr98.01-ground_state.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/02-sym_doublewell.02-unocc.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/05-adw.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/04-box.02-unocc.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.04-gs-mp.inp",
      "optimal_control/01-asym_doublewell.01-ground_state.inp",
      "optimal_control/03-localtarget.01-gs.inp",
      "optimal_control/09-density+current.01-ground_state.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp",
      "components/16-hartree_3d_psolver.02-psolver.inp",
      "components/34-regridding.01-samespacing-mixed.inp",
      "components/26-batch_ops.02-jellium-complex.inp",
      "components/05-hartree_3d_fft.04-3d_3d_periodic.inp",
      "components/35-helmholtz_decom.01-large_box_no_surf_corr.inp",
      "components/26-batch_ops.03-jellium-spinor.inp",
      "components/18-interpolation.01-1d.inp",
      "components/34-regridding.02-samespacing-parstates.inp",
      "components/10-hartree_pfft.03-3d_1d_periodic.inp",
      "components/34-regridding.07-spacing-ratio3-nearestneighbor-mixed.inp",
      "components/16-hartree_3d_psolver.01-psolver.inp",
      "components/11-hartree_cl.01-fft.inp",
      "components/01-derivatives_1d.02-fortran.inp",
      "components/26-batch_ops.01-jellium.inp",
      "components/18-interpolation.03-3d.inp",
      "components/10-hartree_pfft.05-3d_2d_periodic.inp",
      "components/35-helmholtz_decom.05-sphere_small_box_with_surf_corr.inp",
      "components/35-helmholtz_decom.04-cylinder_small_box_with_surf_corr.inp",
      "components/37-current-density.inp",
      "components/06-hartree_3d_isf.01-isf.inp",
      "components/34-regridding.08-spacing-ratio3-nearestneighbor-parstates.inp",
      "components/01-derivatives_1d.01.inp",
      "components/02-derivatives_2d.01.inp",
      "components/03-derivatives_3d.01.inp",
      "components/12-hartree_direct_3d.01.inp",
      "components/08-gs.01-cgs_real.inp",
      "components/18-interpolation.02-2d.inp",
      "components/34-regridding.03-samespacing-pardomains.inp",
      "components/25-subspace.01-jellium.inp",
      "components/10-hartree_pfft.06-fft-parstates.inp",
      "components/24-boundaries.01-jellium.inp",
      "components/13-hartree_3d_mg.01-multigrid.inp",
      "components/10-hartree_pfft.04-3d_3d_periodic.inp",
      "components/05-hartree_3d_fft.02-fft_corrected.inp",
      "components/05-hartree_3d_fft.01-fft.inp",
      "components/35-helmholtz_decom.03-parallelepiped_small_box_with_surf_corr.inp",
      "components/34-regridding.05-spacing-ratio3-parstates.inp",
      "components/10-hartree_pfft.02-fft_corrected.inp",
      "components/14-center-geom.01-run.inp",
      "components/08-gs.05-drcgs_real.inp",
      "components/15-cholesky_parallel.01-real.inp",
      "components/34-regridding.06-spacing-ratio3-pardomains.inp",
      "components/08-gs.03-mgs_real.inp",
      "components/10-hartree_pfft.01-fft.inp",
      "components/29-linear_solver.01-real.inp",
      "components/07-cholesky_serial.01-real.inp",
      "components/04-hartree_3d_cg.01-cg_corrected.inp",
      "components/36-maxwell_vector_potential.inp",
      "components/07-cholesky_serial.03-parindep.inp",
      "components/15-cholesky_parallel.02-complex.inp",
      "components/35-helmholtz_decom.02-small_box_no_surf_corr.inp",
      "components/31-grid_interpolation.01.inp",
      "components/05-hartree_3d_fft.03-3d_1d_periodic.inp",
      "components/34-regridding.09-spacing-ratio3-nearestneighbor-pardomains.inp",
      "components/19-hgh_soc.01-3d.inp",
      "components/08-gs.02-cgs_complex.inp",
      "components/07-cholesky_serial.02-complex.inp",
      "components/08-gs.04-mgs_complex.inp",
      "components/34-regridding.04-spacing-ratio3-mixed.inp",
      "components/05-hartree_3d_fft.05-3d_2d_periodic.inp",
      "components/23-exponential_apply.01-jellium.inp",
      "components/08-gs.06-drcgs_complex.inp",
      "maxwell/14-quadrupole-pot.01-hydrogen-gs.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.01-1D-Helium-ground-state.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp",
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/11-full_delta.01-gs.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/06-laser.03-velocity_gauge.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.01-Na2.inp",
      "lda_u/05-forces.02-Na2_go.inp",
      "lda_u/06-laser.01-gs.inp",
      "lda_u/10-intersite.01-Na2.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "cudaawarempi": {
    "CallLine": "call parse_variable(namespace, 'CudaAwareMPI', default, accel%cuda_mpi)",
    "Default": null,
    "Description": [
      "If Octopus was compiled with CUDA support and MPI support and if the MPI",
      "implementation is CUDA-aware (i.e., it supports communication using device pointers),",
      "this switch can be set to true to use the CUDA-aware MPI features. The advantage",
      "of this approach is that it can do, e.g., peer-to-peer copies between devices without",
      "going through the host memory.",
      "The default is false, except when the configure switch --enable-cudampi is set, in which",
      "case this variable is set to true."
    ],
    "LineNumber": 723,
    "Manuals": [],
    "Name": "CudaAwareMPI",
    "Options": [],
    "Section": "Execution::Accel",
    "Sourcefile": "basic/accel.F90",
    "Testfiles": [
      "real_time/01-propagators.06-aetrs.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/04-box.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.02-unocc.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/04-box.02-unocc.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/01-asym_doublewell.01-ground_state.inp",
      "optimal_control/04-box.05-oct_long.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "currentdensity": {
    "CallLine": "call parse_variable(namespace, 'CurrentDensity', CURRENT_GRADIENT_CORR, this%method)",
    "Default": [
      "gradient_corrected"
    ],
    "Description": [
      "This variable selects the method used to",
      "calculate the current density. For the moment this variable is",
      "for development purposes and users should not need to use",
      "it."
    ],
    "LineNumber": 108,
    "Manuals": [],
    "Name": "CurrentDensity",
    "Options": [
      {
        "Description": [
          "The calculation of current is done using the gradient operator. (Experimental)"
        ],
        "Name": "gradient",
        "Value": "1"
      },
      {
        "Description": [
          "The calculation of current is done using the gradient operator",
          "with additional corrections for the total current from non-local operators."
        ],
        "Name": "gradient_corrected",
        "Value": "2"
      },
      {
        "Description": [
          "The current density is obtained from the commutator of the",
          "Hamiltonian with the position operator. (Experimental)"
        ],
        "Name": "hamiltonian",
        "Value": "3"
      }
    ],
    "Section": "Hamiltonian",
    "Sourcefile": "electrons/current.F90",
    "Testfiles": [
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "currentdensityfactor": {
    "CallLine": "call parse_variable(namespace, 'CurrentDensityFactor', M_ONE, hm%current_factor)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "Fictitous factor to modify the current density coming from partner systems.",
      "Note: This factor does not affect the external current density prescribed by the",
      "<tt>UserDefinedMaxwellExternalCurrent</tt> block."
    ],
    "LineNumber": 238,
    "Manuals": [],
    "Name": "CurrentDensityFactor",
    "Options": [],
    "Section": "Maxwell",
    "Sourcefile": "maxwell/hamiltonian_mxll.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "currentthroughplane": {
    "CallLine": "if (parse_block(namespace, 'CurrentThroughPlane', blk) == 0) then",
    "Default": null,
    "Description": [
      "The code can calculate current",
      "traversing a user-defined portion of a plane, as specified by this block.",
      "A small plain-text file <tt>current-flow</tt> will be written containing this information.",
      "Only available for 1D, 2D, or 3D.",
      "In the format below, <tt>origin</tt> is a point in the plane.",
      "<tt>u</tt> and <tt>v</tt> are the (dimensionless) vectors defining the plane;",
      "they will be normalized. <tt>spacing</tt> is the fineness of the mesh",
      "on the plane. Integers <tt>nu</tt> and <tt>mu</tt> are the length and",
      "width of the portion of the plane, in units of <tt>spacing</tt>.",
      "Thus, the grid points included in the plane are",
      "<tt>x_ij = origin + i*spacing*u + j*spacing*v</tt>,",
      "for <tt>nu <= i <= mu</tt> and <tt>nv <= j <= mv</tt>.",
      "Analogously, in the 2D case, the current flow is calculated through a line;",
      "in the 1D case, the current flow is calculated through a point. Note that the spacing",
      "can differ from the one used in the main calculation; an interpolation will be performed.",
      " ",
      "Example (3D):",
      " ",
      "<tt>%CurrentThroughPlane",
      "<br>&nbsp;&nbsp; 0.0 | 0.0 | 0.0  # origin",
      "<br>&nbsp;&nbsp; 0.0 | 1.0 | 0.0  # u",
      "<br>&nbsp;&nbsp; 0.0 | 0.0 | 1.0  # v",
      "<br>&nbsp;&nbsp; 0.2              # spacing",
      "<br>&nbsp;&nbsp; 0 | 50           # nu | mu",
      "<br>&nbsp;&nbsp; -50 | 50         # nv | mv",
      "<br>%</tt>",
      " ",
      "Example (2D):",
      " ",
      "<tt>%CurrentThroughPlane",
      "<br>&nbsp;&nbsp; 0.0 | 0.0        # origin",
      "<br>&nbsp;&nbsp; 1.0 | 0.0        # u",
      "<br>&nbsp;&nbsp; 0.2              # spacing",
      "<br>&nbsp;&nbsp; 0 | 50           # nu | mu",
      "<br>%</tt>",
      " ",
      "Example (1D):",
      " ",
      "<tt>%CurrentThroughPlane",
      "<br>&nbsp;&nbsp; 0.0              # origin",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 192,
    "Manuals": [],
    "Name": "CurrentThroughPlane",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "output/output.F90",
    "Testfiles": [
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "curvgygia": {
    "CallLine": "call parse_variable(namespace, 'CurvGygiA', M_HALF, gygi%A)",
    "Default": [
      "0.5"
    ],
    "Description": [
      "The grid spacing is reduced locally around each atom, and the reduction is",
      "given by 1/(1+<i>A</i>), where <i>A</i> is specified by this variable. So, if",
      "<i>A</i>=1/2 (the default), the grid spacing is reduced to two thirds = 1/(1+1/2).",
      "[This is the <math>A_{\\alpha}</math> variable in Eq. 2 of F. Gygi and G. Galli, <i>Phys.",
      "Rev. B</i> <b>52</b>, R2229 (1995)]. It must be larger than zero."
    ],
    "LineNumber": 105,
    "Manuals": [],
    "Name": "CurvGygiA",
    "Options": [],
    "Section": "Mesh::Curvilinear::Gygi",
    "Sourcefile": "grid/curv_gygi.F90",
    "Testfiles": [
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "curvgygialpha": {
    "CallLine": "call parse_variable(namespace, 'CurvGygiAlpha', M_TWO, gygi%alpha, units_inp%length)",
    "Default": [
      "2.0",
      "a.u."
    ],
    "Description": [
      "This number determines the region over which the grid is enhanced (range of",
      "enhancement of the resolution). That is, the grid is enhanced on a sphere",
      "around each atom, whose radius is given by this variable. [This is the <math>a_{\\alpha}</math>",
      "variable in Eq. 2 of F. Gygi and G. Galli, <i>Phys. Rev. B</i> <b>52</b>, R2229 (1995)].",
      "It must be larger than zero."
    ],
    "LineNumber": 119,
    "Manuals": [],
    "Name": "CurvGygiAlpha",
    "Options": [],
    "Section": "Mesh::Curvilinear::Gygi",
    "Sourcefile": "grid/curv_gygi.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "curvgygibeta": {
    "CallLine": "call parse_variable(namespace, 'CurvGygiBeta', M_FOUR, gygi%beta, units_inp%length)",
    "Default": [
      "4.0",
      "a.u."
    ],
    "Description": [
      "This number determines the distance over which Euclidean coordinates are",
      "recovered. [This is the <math>b_{\\alpha}</math> variable in Eq. 2 of F. Gygi and G. Galli,",
      "<i>Phys. Rev. B</i> <b>52</b>, R2229 (1995)]. It must be larger than zero."
    ],
    "LineNumber": 129,
    "Manuals": [],
    "Name": "CurvGygiBeta",
    "Options": [],
    "Section": "Mesh::Curvilinear::Gygi",
    "Sourcefile": "grid/curv_gygi.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "curvmethod": {
    "CallLine": "call parse_variable(namespace, 'CurvMethod', CURV_AFFINE, cv_method)",
    "Default": [
      "curv_uniform"
    ],
    "Description": [
      "The relevant functions in octopus are represented on a mesh in real space.",
      "This mesh may be an evenly spaced regular rectangular grid (standard mode),",
      "or else an adaptive or curvilinear grid. We have implemented",
      "three kinds of adaptive meshes, although only one is currently working,",
      "the one invented by F. Gygi (<tt>curv_gygi</tt>). The code will stop if any of",
      "the other two is invoked. All are experimental with domain parallelization."
    ],
    "LineNumber": 313,
    "Manuals": [],
    "Name": "CurvMethod",
    "Options": [
      {
        "Description": [
          "Regular, uniform rectangular grid."
        ],
        "Name": "curv_affine",
        "Value": "1"
      },
      {
        "Description": [
          "The deformation of the grid is done according to the scheme described by",
          "F. Gygi [F. Gygi and G. Galli, <i>Phys. Rev. B</i> <b>52</b>, R2229 (1995)]."
        ],
        "Name": "curv_gygi",
        "Value": "2"
      },
      {
        "Description": [
          "The deformation of the grid is done according to the scheme described by",
          "Briggs [E.L. Briggs, D.J. Sullivan, and J. Bernholc, <i>Phys. Rev. B</i> <b>54</b> 14362 (1996)]",
          "(NOT WORKING)."
        ],
        "Name": "curv_briggs",
        "Value": "3"
      },
      {
        "Description": [
          "The deformation of the grid is done according to the scheme described by",
          "Modine [N.A. Modine, G. Zumbach and E. Kaxiras, <i>Phys. Rev. B</i> <b>55</b>, 10289 (1997)]",
          "(NOT WORKING)."
        ],
        "Name": "curv_modine",
        "Value": "4"
      }
    ],
    "Section": "Mesh::Curvilinear",
    "Sourcefile": "grid/grid.F90",
    "Testfiles": [
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "curvmodinejbar": {
    "CallLine": "call parse_variable(namespace, 'CurvModineJBar', M_HALF, modine%Jbar)",
    "Default": [
      "1/2"
    ],
    "Description": [
      "Increase in density of points is inverse of this parameter.",
      "See N. A. Modine, G. Zumbach, and E. Kaxiras, <i>Phys. Rev. B</i> <b>55</b>, 10289-10301 (1997)."
    ],
    "LineNumber": 120,
    "Manuals": [],
    "Name": "CurvModineJBar",
    "Options": [],
    "Section": "Mesh::Curvilinear::Modine",
    "Sourcefile": "grid/curv_modine.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "curvmodinejlocal": {
    "CallLine": "call parse_variable(namespace, 'CurvModineJlocal', 0.25_real64, modine%Jlocal(1))",
    "Default": [
      "0.25"
    ],
    "Description": [
      "Local refinement around the atoms. Must be between 0 and 1.",
      "See N. A. Modine, G. Zumbach, and E. Kaxiras, <i>Phys. Rev. B</i> <b>55</b>, 10289-10301 (1997)."
    ],
    "LineNumber": 143,
    "Manuals": [],
    "Name": "CurvModineJlocal",
    "Options": [],
    "Section": "Mesh::Curvilinear::Modine",
    "Sourcefile": "grid/curv_modine.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "curvmodinejrange": {
    "CallLine": "call parse_variable(namespace, 'CurvModineJrange', M_TWO, modine%Jrange(1), units_inp%length)",
    "Default": [
      "2",
      "b"
    ],
    "Description": [
      "Local refinement range (a length).",
      "See N. A. Modine, G. Zumbach, and E. Kaxiras, <i>Phys. Rev. B</i> <b>55</b>, 10289-10301 (1997)."
    ],
    "LineNumber": 153,
    "Manuals": [],
    "Name": "CurvModineJrange",
    "Options": [],
    "Section": "Mesh::Curvilinear::Modine",
    "Sourcefile": "grid/curv_modine.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "curvmodinexbar": {
    "CallLine": "call parse_variable(namespace, 'CurvModineXBar', M_ONE/M_THREE, modine%xbar)",
    "Default": [
      "1/3"
    ],
    "Description": [
      "Size of central flat region (in units of <tt>Lsize</tt>). Must be between 0 and 1.",
      "See N. A. Modine, G. Zumbach, and E. Kaxiras, <i>Phys. Rev. B</i> <b>55</b>, 10289-10301 (1997)."
    ],
    "LineNumber": 110,
    "Manuals": [],
    "Name": "CurvModineXBar",
    "Options": [],
    "Section": "Mesh::Curvilinear::Modine",
    "Sourcefile": "grid/curv_modine.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "debug": {
    "CallLine": "call parse_variable(namespace, 'Debug', OPTION__DEBUG__NO, this%bits)",
    "Default": [
      "no"
    ],
    "Description": [
      "This variable controls the amount of debugging information",
      "generated by Octopus. You can use include more than one option",
      "with the + operator."
    ],
    "LineNumber": 106,
    "Manuals": [],
    "Name": "Debug",
    "Options": [
      {
        "Description": [
          "(default) <tt>Octopus</tt> does not enter debug mode."
        ],
        "Name": "no",
        "Value": "0"
      },
      {
        "Description": [
          "Octopus prints additional information to the terminal."
        ],
        "Name": "info",
        "Value": "1"
      },
      {
        "Description": [
          "Octopus generates a stack trace as it enters end exits",
          "subroutines. This information is reported if Octopus stops with",
          "an error."
        ],
        "Name": "trace",
        "Value": "2"
      },
      {
        "Description": [
          "The trace is printed to the terminal as Octopus enters or exits subroutines. This slows down execution considerably."
        ],
        "Name": "trace_term",
        "Value": "4"
      },
      {
        "Description": [
          "The trace is written to files in the <tt>debug</tt>",
          "directory. For each node (when running in parallel) there is a file called",
          "<tt>debug_trace.&lt;rank&gt;</tt>. Writing these files slows down the code by a huge factor and",
          "it is usually only necessary for parallel runs."
        ],
        "Name": "trace_file",
        "Value": "8"
      },
      {
        "Description": [
          "This enables Octopus to perform some extra checks, to ensure",
          "code correctness, that might be too costly for regular runs."
        ],
        "Name": "extra_checks",
        "Value": "16"
      },
      {
        "Description": [
          "Octopus generates a dot file containing the graph for a multisystem run."
        ],
        "Name": "interaction_graph",
        "Value": "32"
      },
      {
        "Description": [
          "Octopus generates a dot file containing the graph for a multisystem run including ghost interactions."
        ],
        "Name": "interaction_graph_full",
        "Value": "64"
      },
      {
        "Description": [
          "Octopus generates a file with information for the propagation diagram."
        ],
        "Name": "propagation_graph",
        "Value": "128"
      }
    ],
    "Section": "Execution::Debug",
    "Sourcefile": "basic/debug.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_2d/05-spin_precession.01-ground_state.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "multisystem/03-interactions_creation.03-case3.inp",
      "multisystem/03-interactions_creation.01-case1.inp",
      "multisystem/03-interactions_creation.02-case2.inp",
      "multisystem/01-nested_systems.02-three_levels.inp",
      "multisystem/03-interactions_creation.04-case4.inp",
      "multisystem/07-lorentz-force.02-charged_particle_in_static_efield.inp",
      "multisystem/02-interaction_graph.01-three_body.inp",
      "linear_response/05-polarizability.02-sternheimer.inp",
      "linear_response/06-vib_modes_fd.01-ground_state.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "finite_systems_3d/13-full_potential_hydrogen.02-gs-cg.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/41-gpu-bug.01-C.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp",
      "real_time/18-hhg.02-td.inp",
      "pseudopotentials/11-isotopes.02-tritium.inp",
      "pseudopotentials/10-helium_upf.02-gs_filter_ts.inp",
      "pseudopotentials/11-isotopes.01-deuterium.inp",
      "pseudopotentials/13-U235.01-gs.inp",
      "pseudopotentials/10-helium_upf.03-gs_filter_bsb.inp",
      "pseudopotentials/10-helium_upf.01-gs_nofilter.inp",
      "pseudopotentials/12-mix_and_match.01-mgo.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/06-rdmft.03-gs_grid.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "finite_systems_1d/02-neon_mpi.03-td_calc-kli_par_states.inp",
      "finite_systems_1d/02-neon_mpi.01-ground_state-IP_par_domains.inp",
      "finite_systems_1d/02-neon_mpi.02-ground_state-kli_par_domains.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "components/20-dft_u.04-complex_submesh.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/36-maxwell_vector_potential.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp"
    ],
    "Tutorials": [],
    "Type": "flag"
  },
  "debugtrapsignals": {
    "CallLine": "call parse_variable(global_namespace, 'DebugTrapSignals', .true., trap_signals)",
    "Default": [
      "yes"
    ],
    "Description": [
      "If true, trap signals to handle them in octopus itself and",
      "print a custom backtrace. If false, do not trap signals; then,",
      "core dumps can be produced or gdb can be used to stop at the",
      "point a signal was produced (e.g. a segmentation fault)."
    ],
    "LineNumber": 168,
    "Manuals": [],
    "Name": "DebugTrapSignals",
    "Options": [],
    "Section": "Execution::Debug",
    "Sourcefile": "basic/messages.F90",
    "Testfiles": [
      "functionals/06-rdmft.03-gs_grid.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "lda_u/10-intersite.02-silicon.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "degeneracythreshold": {
    "CallLine": "call parse_variable(sys%namespace, 'DegeneracyThreshold', units_from_atomic(units_inp%energy, 1e-5_real64), kdotp_vars%degen_thres)",
    "Default": [
      "1e-5"
    ],
    "Description": [
      "States with energy <math>E_i</math> and <math>E_j</math> will be considered degenerate",
      "if <math> \\left| E_i - E_j \\right| < </math><tt>DegeneracyThreshold</tt>."
    ],
    "LineNumber": 442,
    "Manuals": [],
    "Name": "DegeneracyThreshold",
    "Options": [],
    "Section": "States",
    "Sourcefile": "sternheimer/kdotp.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "deltaefmm": {
    "CallLine": "call parse_variable(parser, 'DeltaEFMM', 1e-4_real64, this%delta_E_fmm)",
    "Default": [
      "0.0001"
    ],
    "Description": [
      "Dimensionless parameter for relative convergence of <tt>PoissonSolver = FMM</tt>.",
      "Sets energy error bound.",
      "Strong inhomogeneous systems may violate the error bound.",
      "For inhomogeneous systems we have an error-controlled sequential version available",
      "(from Ivo Kabadshow).",
      " ",
      "Our implementation of FMM (based on H. Dachsel, <i>J. Chem. Phys.</i> <b>131</b>,",
      "244102 (2009)) can keep the error of the Hartree energy below an",
      "arbitrary bound. The quotient of the value chosen for the maximum",
      "error in the Hartree energy and the value of the Hartree energy is",
      "<tt>DeltaEFMM</tt>.",
      " "
    ],
    "LineNumber": 146,
    "Manuals": [],
    "Name": "DeltaEFMM",
    "Options": [],
    "Section": "Hamiltonian::Poisson",
    "Sourcefile": "poisson/poisson_fmm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "densitytocalc": {
    "CallLine": "if (parse_block(namespace, 'DensitytoCalc', blk) /= 0) then",
    "Default": null,
    "Description": [
      "Choice of which particle density (event. matrices) will be calculated and output, in the",
      "modelmb particles scheme.",
      " ",
      "<tt>%DensitytoCalc",
      "<br>&nbsp;&nbsp; \"proton\"   | 1 | 10",
      "<br>&nbsp;&nbsp; \"electron\" | 2 | 15",
      "<br>%</tt>",
      " ",
      "would ask octopus to calculate the density matrix corresponding to the 1st",
      "particle (whose coordinates correspond to dimensions 1 to ndim_modelmb),",
      "which is an proton, then that corresponding to the 2nd particle",
      "(electron with dimensions ndim_modelmb+1 to 2*ndim_modelmb), printing",
      "10 natural orbitals for the first and 15 for the second.",
      " ",
      "<tt>%DensitytoCalc",
      "<br>&nbsp;&nbsp; \"proton\"   | 1 | -1",
      "<br>&nbsp;&nbsp; \"electron\" | 2 | -1",
      "<br>%</tt>",
      " ",
      "would ask octopus to print out just the densities for particles 1 and 2",
      "without any density matrix output.",
      " "
    ],
    "LineNumber": 107,
    "Manuals": [],
    "Name": "DensitytoCalc",
    "Options": [],
    "Section": "States::ModelMB",
    "Sourcefile": "states/modelmb_density_matrix.F90",
    "Testfiles": [
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "derivativesorder": {
    "CallLine": "call parse_variable(namespace, 'DerivativesOrder', 4, der%order)",
    "Default": [
      "4"
    ],
    "Description": [
      "This variable gives the discretization order for the approximation of",
      "the differential operators. This means, basically, that",
      "<tt>DerivativesOrder</tt> points are used in each positive/negative",
      "spatial direction, <i>e.g.</i> <tt>DerivativesOrder = 1</tt> would give",
      "the well-known three-point formula in 1D.",
      "The number of points actually used for the Laplacian",
      "depends on the stencil used. Let <math>O</math> = <tt>DerivativesOrder</tt>, and <math>d</math> = <tt>Dimensions</tt>.",
      "<ul>",
      "<li> <tt>stencil_star</tt>: <math>2 O d + 1</math>",
      "<li> <tt>stencil_cube</tt>: <math>(2 O + 1)^d</math>",
      "<li> <tt>stencil_starplus</tt>: <math>2 O d + 1 + n</math> with <i>n</i> being 8",
      "in 2D and 24 in 3D.",
      "</ul>"
    ],
    "LineNumber": 253,
    "Manuals": [],
    "Name": "DerivativesOrder",
    "Options": [],
    "Section": "Mesh::Derivatives",
    "Sourcefile": "grid/derivatives.F90",
    "Testfiles": [
      "finite_systems_2d/01-quadratic_box.03-hartree+xc.inp",
      "finite_systems_2d/01-quadratic_box.04-spin_polarized.inp",
      "finite_systems_2d/01-quadratic_box.01-ground_state.inp",
      "finite_systems_2d/01-quadratic_box.02-hartree.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/07-casida-photons.06-spectrum.inp",
      "linear_response/07-casida-photons.01-gs.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/07-casida-photons.02-photons.inp",
      "linear_response/07-casida-photons.04-elpa.inp",
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "components/35-helmholtz_decom.01-large_box_no_surf_corr.inp",
      "components/37-current-density.inp",
      "components/35-helmholtz_decom.02-small_box_no_surf_corr.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "derivativesstencil": {
    "CallLine": "call parse_variable(namespace, 'DerivativesStencil', default_stencil, der%stencil_type)",
    "Default": [
      "stencil_star"
    ],
    "Description": [
      "Decides what kind of stencil is used, <i>i.e.</i> which points, around",
      "each point in the mesh, are the neighboring points used in the",
      "expression of the differential operator.",
      " ",
      "If curvilinear coordinates are to be used, then only the <tt>stencil_starplus</tt>",
      "or the <tt>stencil_cube</tt> may be used. We only recommend the <tt>stencil_starplus</tt>,",
      "since the cube typically needs far too much memory."
    ],
    "LineNumber": 222,
    "Manuals": [],
    "Name": "DerivativesStencil",
    "Options": [
      {
        "Description": [
          "A star around each point (<i>i.e.</i>, only points on the axis)."
        ],
        "Name": "stencil_star",
        "Value": "1"
      },
      {
        "Description": [
          "Same as the star, but with coefficients built in a different way."
        ],
        "Name": "stencil_variational",
        "Value": "2"
      },
      {
        "Description": [
          "A cube of points around each point."
        ],
        "Name": "stencil_cube",
        "Value": "3"
      },
      {
        "Description": [
          "The star, plus a number of off-axis points."
        ],
        "Name": "stencil_starplus",
        "Value": "4"
      },
      {
        "Description": [
          "The general star. Default for non-orthogonal grids."
        ],
        "Name": "stencil_stargeneral",
        "Value": "5"
      }
    ],
    "Section": "Mesh::Derivatives",
    "Sourcefile": "grid/derivatives.F90",
    "Testfiles": [
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "components/37-current-density.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "describeparticlesmodelmb": {
    "CallLine": "if (parse_block(namespace, 'DescribeParticlesModelmb', blk) == 0) then",
    "Default": null,
    "Description": [
      "Characterization of different modelmb particles in space%dim dimensional space.",
      " ",
      "<tt>%DescribeParticlesModelmb",
      "<br>&nbsp;&nbsp; \"proton\"   | 1 | 1800. | 1. | fermion",
      "<br>&nbsp;&nbsp; \"proton\"   | 1 | 1800. | 1. | fermion",
      "<br>&nbsp;&nbsp; \"electron\" | 2 | 1.    | 1. | fermion",
      "<br>%</tt>",
      " ",
      "would tell <tt>Octopus</tt> that there are presently 3 particles, called proton, proton,",
      "and electron, with types 1, 1, and 2, and corresponding masses and charges.",
      "All particles should be fermions, and this can be later enforced on the spatial",
      "part of the wavefunctions.",
      "The label and charge are presently only for informational purposes and",
      "are not checked or used in <tt>Octopus</tt>. The interaction has to take the",
      "actual charge into account.",
      " "
    ],
    "LineNumber": 209,
    "Manuals": [],
    "Name": "DescribeParticlesModelmb",
    "Options": [
      {
        "Description": [
          "Particle is a fermion."
        ],
        "Name": "fermion",
        "Value": "1"
      },
      {
        "Description": [
          "Particle is a boson."
        ],
        "Name": "boson",
        "Value": "2"
      },
      {
        "Description": [
          "Particle is neither fermion nor boson."
        ],
        "Name": "anyon",
        "Value": "3"
      }
    ],
    "Section": "States::ModelMB",
    "Sourcefile": "states/modelmb_particles.F90",
    "Testfiles": [
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "dftubasisfromstates": {
    "CallLine": "call parse_variable(namespace, 'DFTUBasisFromStates', .false., this%basisfromstates)",
    "Default": [
      "no"
    ],
    "Description": [
      "If set to yes, Octopus will construct the localized basis from",
      "user-defined states. The states are taken at the Gamma point (or the first k-point of the",
      "states in the restart_proj folder.",
      "The states are defined via the block DFTUBasisStates"
    ],
    "LineNumber": 204,
    "Manuals": [],
    "Name": "DFTUBasisFromStates",
    "Options": [],
    "Section": "Hamiltonian::DFT+U",
    "Sourcefile": "hamiltonian/lda_u.F90",
    "Testfiles": [
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/09-basis_from_states.03-intersite.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "dftubasisstates": {
    "CallLine": "if (parse_block(namespace, 'DFTUBasisStates', blk) == 0) then",
    "Default": [
      "none"
    ],
    "Description": [
      "This block starts by a line containing a single integer describing the number of",
      "orbital sets. One orbital set is a group of orbitals on which one adds a Hubbard U.",
      "Each following line of this block contains the index of a state to be used to construct the",
      "localized basis, followed by the index of the corresponding orbital set.",
      "See DFTUBasisFromStates for details."
    ],
    "LineNumber": 411,
    "Manuals": [],
    "Name": "DFTUBasisStates",
    "Options": [],
    "Section": "Hamiltonian::DFT+U",
    "Sourcefile": "hamiltonian/lda_u.F90",
    "Testfiles": [
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/09-basis_from_states.03-intersite.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "dftudoublecounting": {
    "CallLine": "call parse_variable(namespace, 'DFTUDoubleCounting', DFT_U_FLL, this%double_couting)",
    "Default": [
      "dft_u_fll"
    ],
    "Description": [
      "This variable selects which DFT+U",
      "double counting term is used."
    ],
    "LineNumber": 219,
    "Manuals": [],
    "Name": "DFTUDoubleCounting",
    "Options": [
      {
        "Description": [
          "(Default) The Fully Localized Limit (FLL)"
        ],
        "Name": "dft_u_fll",
        "Value": "0"
      },
      {
        "Description": [
          "(Experimental) Around mean field double counting, as defined in PRB 44, 943 (1991) and PRB 49, 14211 (1994)."
        ],
        "Name": "dft_u_amf",
        "Value": "1"
      }
    ],
    "Section": "Hamiltonian::DFT+U",
    "Sourcefile": "hamiltonian/lda_u.F90",
    "Testfiles": [
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/08-loewdin.02-intersite.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "dftulevel": {
    "CallLine": "call parse_variable(namespace, 'DFTULevel', DFT_U_NONE, hm%lda_u_level)",
    "Default": [
      "no"
    ],
    "Description": [
      "This variable selects which DFT+U expression is added to the Hamiltonian."
    ],
    "LineNumber": 425,
    "Manuals": [],
    "Name": "DFTULevel",
    "Options": [
      {
        "Description": [
          "No +U term is not applied."
        ],
        "Name": "dft_u_none",
        "Value": "0"
      },
      {
        "Description": [
          "An empiricial Hubbard U is added on the orbitals specified in the block species",
          "with hubbard_l and hubbard_u"
        ],
        "Name": "dft_u_empirical",
        "Value": "1"
      },
      {
        "Description": [
          "Octopus determines the effective U term using the",
          "ACBN0 functional as defined in PRX 5, 011006 (2015)"
        ],
        "Name": "dft_u_acbn0",
        "Value": "2"
      }
    ],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/hamiltonian_elec.F90",
    "Testfiles": [
      "components/20-dft_u.04-complex_submesh.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/11-full_delta.01-gs.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/06-laser.03-velocity_gauge.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.01-Na2.inp",
      "lda_u/05-forces.02-Na2_go.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/06-laser.01-gs.inp",
      "lda_u/10-intersite.01-Na2.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "dftupoissonsolver": {
    "CallLine": "call parse_variable(namespace, 'DFTUPoissonSolver', SM_POISSON_FFT, this%sm_poisson)",
    "Default": null,
    "Description": [
      "This variable selects which Poisson solver",
      "is used to compute the Coulomb integrals over a submesh.",
      "These are non-periodic Poisson solvers.",
      "The FFT Poisson solver with spherical cutoff is used by default.",
      " "
    ],
    "LineNumber": 248,
    "Manuals": [],
    "Name": "DFTUPoissonSolver",
    "Options": [
      {
        "Description": [
          "Direct Poisson solver. Slow but working in all cases."
        ],
        "Name": "dft_u_poisson_direct",
        "Value": "0"
      },
      {
        "Description": [
          "(Experimental) ISF Poisson solver on a submesh.",
          "This does not work for non-orthogonal cells nor domain parallelization."
        ],
        "Name": "dft_u_poisson_isf",
        "Value": "1"
      },
      {
        "Description": [
          "(Experimental) PSolver Poisson solver on a submesh.",
          "This does not work for non-orthogonal cells nor domain parallelization.",
          "Requires the PSolver external library."
        ],
        "Name": "dft_u_poisson_psolver",
        "Value": "2"
      },
      {
        "Description": [
          "(Default) FFT Poisson solver on a submesh.",
          "This uses the 0D periodic version of the FFT kernels."
        ],
        "Name": "dft_u_poisson_fft",
        "Value": "3"
      }
    ],
    "Section": "Hamiltonian::DFT+U",
    "Sourcefile": "hamiltonian/lda_u.F90",
    "Testfiles": [
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/11-full_delta.01-gs.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/10-intersite.01-Na2.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "dimensions": {
    "CallLine": "call parse_variable(namespace, 'Dimensions', default_ndim, this%dim)",
    "Default": [
      "3"
    ],
    "Description": [
      "<tt>Octopus</tt> can run in 1, 2 or 3 or more dimensions, depending on",
      "the value of this variable. Note that not all input variables may be",
      "available in all cases."
    ],
    "LineNumber": 73,
    "Manuals": [],
    "Name": "Dimensions",
    "Options": [],
    "Section": "System",
    "Sourcefile": "basic/space.F90",
    "Testfiles": [
      "finite_systems_2d/01-quadratic_box.03-hartree+xc.inp",
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_2d/01-quadratic_box.04-spin_polarized.inp",
      "finite_systems_2d/05-spin_precession.01-ground_state.inp",
      "finite_systems_2d/03-helium_atom.02-ground_state.inp",
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/02-fock-darwin.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/01-quadratic_box.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.02-ground_state.inp",
      "finite_systems_2d/07-user_def_box.01-gs.inp",
      "finite_systems_2d/09-magnetic_2d.01-no_field.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "finite_systems_2d/01-quadratic_box.02-hartree.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/03-helium_atom.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "finite_systems_2d/06-gdlib.01-gs.inp",
      "multisystem/05-propagation_beeman.02-three_body.inp",
      "multisystem/06-propagation_expmid.02-three_body.inp",
      "multisystem/03-interactions_creation.03-case3.inp",
      "multisystem/13-restart_verlet.01-restart-run-part1.inp",
      "multisystem/03-interactions_creation.01-case1.inp",
      "multisystem/05-propagation_beeman.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.01-two_body.inp",
      "multisystem/03-interactions_creation.02-case2.inp",
      "multisystem/14-lennard-jones.01-classical-particles-N2.inp",
      "multisystem/18-incompatible_timing.01-run.inp",
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "multisystem/01-nested_systems.02-three_levels.inp",
      "multisystem/01-nested_systems.01-two_levels.inp",
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/06-propagation_expmid.05-two_body_verlet_half.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "multisystem/04-propagation_verlet.02-three_body.inp",
      "multisystem/10-dftbplus_verlet.01-water.inp",
      "multisystem/06-propagation_expmid.01-two_body.inp",
      "multisystem/08-coulomb_force.01-classical_helium.inp",
      "multisystem/01-nested_systems.03-four_levels.inp",
      "multisystem/03-interactions_creation.04-case4.inp",
      "multisystem/13-restart_verlet.03-full-run.inp",
      "multisystem/17-lasers.01-length_gauge.inp",
      "multisystem/06-propagation_expmid.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.04-three_body_different_time_steps.inp",
      "multisystem/06-propagation_expmid.06-two_body_verlet.inp",
      "multisystem/05-propagation_beeman.03-two_body_different_time_steps.inp",
      "multisystem/07-lorentz-force.02-charged_particle_in_static_efield.inp",
      "multisystem/13-restart_verlet.02-restart-run-part2.inp",
      "multisystem/04-propagation_verlet.03-two_body_different_time_steps.inp",
      "multisystem/05-propagation_beeman.01-two_body.inp",
      "multisystem/02-interaction_graph.01-three_body.inp",
      "multisystem/06-propagation_expmid.03-two_body_different_time_steps.inp",
      "linear_response/08-sternheimer-photons.01-gs.inp",
      "linear_response/08-sternheimer-photons.02-em_resp.inp",
      "real_time/18-hhg.01-gs.inp",
      "real_time/11-tdmagnetic.02-unocc.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/11-tdmagnetic.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "photo_electron/06-2D.01-Na_gs.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/09-flux_3d.03-Na_gs_cub.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/09-flux_3d.01-Na_gs_sph.inp",
      "photo_electron/13-arpes_2d.01-gs.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "photo_electron/12-spm_3d.01-Na_gs.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp",
      "functionals/01-xc_1d.oep_kli.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/02-xc_2d.gga_b86_mgc.inp",
      "functionals/16-dressed-rdmft.03-rdmft.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/05-ks_inversion.03-inversion.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/01-xc_1d.02-wfs-hf.inp",
      "functionals/02-xc_2d.gga_b86.inp",
      "functionals/01-xc_1d.01-wfs-lda.inp",
      "functionals/05-ks_inversion.02-two_particle.inp",
      "functionals/16-dressed-rdmft.02-hf.inp",
      "functionals/01-xc_1d.lda_csc.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/01-xc_1d.oep_exx.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/05-ks_inversion.01-target_density.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "functionals/02-xc_2d.lda_amgb.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/02-xc_2d.lda_prm.inp",
      "functionals/16-dressed-rdmft.01-ip.inp",
      "functionals/02-xc_2d.gga_b88.inp",
      "functionals/02-xc_2d.gga_pbe.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/01-free_electrons.02-unocc.inp",
      "periodic_systems/01-free_electrons.01-ground_state.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/02-cosine_potential.02-unocc.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "periodic_systems/24-hartree_fock_1D.01-gs.inp",
      "periodic_systems/31-magnon_1d.01-gs.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/03-sodium_chain.03-ground_state_disp.inp",
      "periodic_systems/23-hybrids.01-ace.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "periodic_systems/02-cosine_potential.01-ground_state.inp",
      "finite_systems_1d/09-morse.02-unocc.inp",
      "finite_systems_1d/02-neon_mpi.03-td_calc-kli_par_states.inp",
      "finite_systems_1d/04-lithium.02-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.03-dummy.inp",
      "finite_systems_1d/09-morse.01-gs.inp",
      "finite_systems_1d/02-neon_mpi.01-ground_state-IP_par_domains.inp",
      "finite_systems_1d/03-He-Hartree-Fock.01-gs.inp",
      "finite_systems_1d/01-hydrogen.02-excited_state.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.01-ground_state.inp",
      "finite_systems_1d/02-neon_mpi.02-ground_state-kli_par_domains.inp",
      "finite_systems_1d/04-lithium.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/05-adw.02-unocc.inp",
      "optimal_control/04-box.01-ground_state.inp",
      "optimal_control/10-current.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.02-unocc.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.01-ground_state.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/06-zbr98.01-ground_state.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/02-sym_doublewell.02-unocc.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/05-adw.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/04-box.02-unocc.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.04-gs-mp.inp",
      "optimal_control/01-asym_doublewell.01-ground_state.inp",
      "optimal_control/03-localtarget.01-gs.inp",
      "optimal_control/09-density+current.01-ground_state.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp",
      "components/18-interpolation.01-1d.inp",
      "components/01-derivatives_1d.02-fortran.inp",
      "components/01-derivatives_1d.01.inp",
      "components/02-derivatives_2d.01.inp",
      "components/18-interpolation.02-2d.inp",
      "components/36-maxwell_vector_potential.inp",
      "maxwell/14-quadrupole-pot.01-hydrogen-gs.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.01-1D-Helium-ground-state.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/12-tddft-currents-to-maxwell.01-benzene-gs.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "disableaccel": {
    "CallLine": "call parse_variable(namespace, 'DisableAccel', default, disable)",
    "Default": [
      "yes"
    ],
    "Description": [
      "If Octopus was compiled with OpenCL or CUDA support, it will",
      "try to initialize and use an accelerator device. By setting this",
      "variable to <tt>yes</tt> you force Octopus not to use an accelerator even it is available."
    ],
    "LineNumber": 372,
    "Manuals": [],
    "Name": "DisableAccel",
    "Options": [],
    "Section": "Execution::Accel",
    "Sourcefile": "basic/accel.F90",
    "Testfiles": [
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/31-acetylene_b3lyp.01-gs.inp",
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "real_time/19-td_move_ions.03-td_restart.inp",
      "real_time/14-absorption-spinors.03-td-restart.inp",
      "real_time/14-absorption-spinors.02-td.inp",
      "real_time/14-absorption-spinors.01-gs.inp",
      "real_time/19-td_move_ions.02-td.inp",
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "optimal_control/05-adw.02-unocc.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/05-adw.01-ground_state.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/03-localtarget.04-gs-mp.inp",
      "optimal_control/03-localtarget.01-gs.inp",
      "optimal_control/09-density+current.01-ground_state.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "components/01-derivatives_1d.02-fortran.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "displacement": {
    "CallLine": "call parse_variable(sys%namespace, 'Displacement', 0.01_real64, vib%disp, units_inp%length)",
    "Default": [
      "0.01",
      "a.u."
    ],
    "Description": [
      "When calculating phonon properties by finite differences (<tt>CalculationMode = vib_modes,",
      "ResponseMethod = finite_differences</tt>),",
      "<tt>Displacement</tt> controls how much the atoms are to be moved in order to calculate the",
      "dynamical matrix."
    ],
    "LineNumber": 129,
    "Manuals": [],
    "Name": "Displacement",
    "Options": [],
    "Section": "Linear Response::Vibrational Modes",
    "Sourcefile": "main/phonons_fd.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "doscomputepdos": {
    "CallLine": "call parse_variable(namespace, 'DOSComputePDOS', .false., this%computepdos)",
    "Default": [
      "false"
    ],
    "Description": [
      "Determines if projected dos are computed or not.",
      "At the moment, the PDOS is computed from the bare pseudo-atomic orbitals, directly taken from",
      "the pseudopotentials. The orbitals are not orthonormalized, in order to preserve their",
      "atomic orbitals character. As a consequence, the sum of the different PDOS does not integrate",
      "to the total DOS.",
      " ",
      "The radii of the orbitals are controled by the threshold defined by <tt>AOThreshold</tt>,",
      "and the fact that they are normalized or not by <tt>AONormalize</tt>."
    ],
    "LineNumber": 147,
    "Manuals": [],
    "Name": "DOSComputePDOS",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "electrons/dos.F90",
    "Testfiles": [
      "periodic_systems/15-bandstructure.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "dosenergymax": {
    "CallLine": "call parse_variable(namespace, 'DOSEnergyMax', evalmax + eextend, this%emax, units_inp%energy)",
    "Default": null,
    "Description": [
      "Upper bound for the energy mesh of the DOS.",
      "The default is the highest eigenvalue, plus a quarter of the total range of eigenvalues."
    ],
    "LineNumber": 111,
    "Manuals": [],
    "Name": "DOSEnergyMax",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "electrons/dos.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "dosenergymin": {
    "CallLine": "call parse_variable(namespace, 'DOSEnergyMin', evalmin - eextend, this%emin, units_inp%energy)",
    "Default": null,
    "Description": [
      "Lower bound for the energy mesh of the DOS.",
      "The default is the lowest eigenvalue, minus a quarter of the total range of eigenvalues."
    ],
    "LineNumber": 102,
    "Manuals": [],
    "Name": "DOSEnergyMin",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "electrons/dos.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "dosenergypoints": {
    "CallLine": "call parse_variable(namespace, 'DOSEnergyPoints', 500, this%epoints)",
    "Default": [
      "500"
    ],
    "Description": [
      "Determines how many energy points <tt>Octopus</tt> should use for",
      "the DOS energy grid."
    ],
    "LineNumber": 121,
    "Manuals": [],
    "Name": "DOSEnergyPoints",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "electrons/dos.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "dosgamma": {
    "CallLine": "call parse_variable(namespace, 'DOSGamma', units_from_atomic(units_inp%energy, 0.008_real64), this%gamma)",
    "Default": [
      "0.008",
      "Ha"
    ],
    "Description": [
      "Determines the width of the Lorentzian which is used for the DOS sum."
    ],
    "LineNumber": 130,
    "Manuals": [],
    "Name": "DOSGamma",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "electrons/dos.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "doublefftparameter": {
    "CallLine": "call parse_variable(namespace, 'DoubleFFTParameter', M_TWO, fft_alpha)",
    "Default": [
      "2.0"
    ],
    "Description": [
      "For solving the Poisson equation in Fourier space, and for applying the local potential",
      "in Fourier space, an auxiliary cubic mesh is built. This mesh will be larger than",
      "the circumscribed cube of the usual mesh by a factor <tt>DoubleFFTParameter</tt>. See",
      "the section that refers to Poisson equation, and to the local potential for details",
      "[the default value of two is typically good]."
    ],
    "LineNumber": 556,
    "Manuals": [],
    "Name": "DoubleFFTParameter",
    "Options": [],
    "Section": "Mesh::FFTs",
    "Sourcefile": "poisson/poisson.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "dressedorbitals": {
    "CallLine": "call parse_variable(namespace, 'DressedOrbitals', .false., this%is_dressed)",
    "Default": [
      "false"
    ],
    "Description": [
      "Allows for the calculation of coupled elecron-photon problems",
      "by applying the dressed orbital approach. Details can be found in",
      "https://arxiv.org/abs/1812.05562",
      "At the moment, N electrons in d (<=3) spatial dimensions, coupled",
      "to one photon mode can be described. The photon mode is included by",
      "raising the orbital dimension to d+1 and changing the particle interaction",
      "kernel and the local potential, where the former is included automatically,",
      "but the latter needs to by added by hand as a user_defined_potential!",
      "Coordinate 1-d: electron; coordinate d+1: photon."
    ],
    "LineNumber": 191,
    "Manuals": [],
    "Name": "DressedOrbitals",
    "Options": [],
    "Section": "Hamiltonian::Poisson",
    "Sourcefile": "poisson/poisson.F90",
    "Testfiles": [
      "functionals/16-dressed-rdmft.03-rdmft.inp",
      "functionals/16-dressed-rdmft.02-hf.inp",
      "functionals/16-dressed-rdmft.01-ip.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "eigensolver": {
    "CallLine": "call parse_variable(namespace, 'Eigensolver', default_es, eigens%es_type)",
    "Default": null,
    "Description": [
      "Which eigensolver to use to obtain the lowest eigenvalues and",
      "eigenfunctions of the Kohn-Sham Hamiltonian. The default is",
      "conjugate gradients (<tt>cg</tt>), except that when parallelization in states is",
      "enabled, the default is <tt>rmmdiis</tt>."
    ],
    "LineNumber": 173,
    "Manuals": [],
    "Name": "Eigensolver",
    "Options": [
      {
        "Description": [
          "Conjugate-gradients algorithm."
        ],
        "Name": "cg",
        "Value": "5"
      },
      {
        "Description": [
          "Preconditioned Lanczos scheme. Ref: Y. Saad, A. Stathopoulos, J. Chelikowsky, K. Wu and S. Ogut,",
          "\"Solution of Large Eigenvalue Problems in Electronic Structure Calculations\", <i>BIT</i> <b>36</b>, 1 (1996)."
        ],
        "Name": "plan",
        "Value": "11"
      },
      {
        "Description": [
          "(Experimental) Propagation in imaginary time."
        ],
        "Name": "evolution",
        "Value": "9"
      },
      {
        "Description": [
          "Residual minimization scheme, direct inversion in the",
          "iterative subspace eigensolver, based on the implementation of",
          "Kresse and Furthm&uuml;ller [<i>Phys. Rev. B</i> <b>54</b>, 11169",
          "(1996)]. This eigensolver requires almost no orthogonalization",
          "so it can be considerably faster than the other options for",
          "large systems. To improve its performance a large number of <tt>ExtraStates</tt>",
          "are required (around 10-20% of the number of occupied states).",
          "Note: with <tt>unocc</tt>, you will need to stop the calculation",
          "by hand, since the highest states will probably never converge.",
          "Usage with more than one block of states per node is experimental, unfortunately."
        ],
        "Name": "rmmdiis",
        "Value": "10"
      },
      {
        "Description": [
          "A Chebyshev-filtered subspace iteration method, which avoids most of the explicit computation of",
          "eigenvectors and results in a significant speedup over iterative diagonalization methods.",
          "This method may be viewed as an approach to solve the original nonlinear Kohn-Sham equation by a",
          "nonlinear subspace iteration technique, without emphasizing the intermediate linearized Kohn-Sham",
          "eigenvalue problems. For further details, see [Zhou et. al.](http://dx.doi.org/10.1016/j.jcp.2014.06.056)"
        ],
        "Name": "chebyshev_filter",
        "Value": "12"
      }
    ],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/eigensolver.F90",
    "Testfiles": [
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/33-cg.02-additional_terms.inp",
      "finite_systems_3d/20-eigensolver.01-cg.inp",
      "finite_systems_3d/10-fullerene.01-gs.inp",
      "finite_systems_3d/12-forces.03-N2_gs.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/33-cg.03-cg_direction.inp",
      "finite_systems_3d/42-full_potential_anc.01-gs.inp",
      "finite_systems_3d/22-preconditioner.05-multigrid_rmmdiis.inp",
      "finite_systems_3d/20-eigensolver.03-plan.inp",
      "finite_systems_3d/09-spinors.03-rmmdiis_extra_states.inp",
      "finite_systems_3d/09-spinors.01-ground_state.inp",
      "finite_systems_3d/20-eigensolver.05-rmmdiis.inp",
      "finite_systems_3d/31-acetylene_b3lyp.01-gs.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/12-forces.02-N2_gs.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "finite_systems_3d/33-cg.01-orthogonalize_all.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "finite_systems_3d/14-fullerene_unpacked.01-gs.inp",
      "finite_systems_3d/12-forces.01-N2_gs.inp",
      "finite_systems_3d/09-spinors.02-rmmdiis.inp",
      "real_time/11-tdmagnetic.02-unocc.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/11-tdmagnetic.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "pseudopotentials/16-platinum_psp8.01-gs.inp",
      "pseudopotentials/18-Bi_pseudodojo_fr.01-gs.inp",
      "pseudopotentials/15-calcium_psp8_sic.01-gs.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/10-vdw_d3_dna.02-gs_d3.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "periodic_systems/11-silicon_force.01-gs.inp",
      "periodic_systems/11-silicon_force.02-nlcc.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/08-benzene_supercell.01-gs.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "finite_systems_1d/09-morse.01-gs.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/10-intersite.01-Na2.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "eigensolverimaginarytime": {
    "CallLine": "call parse_variable(namespace, 'EigensolverImaginaryTime', 0.1_real64, eigens%imag_time)",
    "Default": [
      "0.1"
    ],
    "Description": [
      "The imaginary-time step that is used in the imaginary-time evolution",
      "method (<tt>Eigensolver = evolution</tt>) to obtain the lowest eigenvalues/eigenvectors.",
      "It must satisfy <tt>EigensolverImaginaryTime > 0</tt>.",
      "Increasing this value can make the propagation faster, but could lead to unstable propagations."
    ],
    "LineNumber": 270,
    "Manuals": [],
    "Name": "EigensolverImaginaryTime",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/eigensolver.F90",
    "Testfiles": [
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "eigensolvermaxiter": {
    "CallLine": "call parse_variable(namespace, 'EigensolverMaxIter', default_iter, eigens%es_maxiter)",
    "Default": null,
    "Description": [
      "Determines the maximum number of iterations that the",
      "eigensolver will perform if the desired tolerance is not",
      "achieved. The default is 25 iterations for all eigensolvers",
      "except for <tt>rmdiis</tt>, which performs only 5 iterations.",
      "Increasing this value for <tt>rmdiis</tt> increases the convergence speed,",
      "at the cost of an increased memory footprint.",
      " ",
      "In the case of imaginary time propatation, this variable controls the number of iterations",
      "for which the Hxc potential is frozen. Default is 1 for the imaginary time evolution."
    ],
    "LineNumber": 414,
    "Manuals": [],
    "Name": "EigensolverMaxIter",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/eigensolver.F90",
    "Testfiles": [
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/01-quadratic_box.01-ground_state.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "finite_systems_3d/09-spinors.01-ground_state.inp",
      "real_time/11-tdmagnetic.01-gs.inp",
      "pseudopotentials/15-calcium_psp8_sic.01-gs.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/05-ks_inversion.01-target_density.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/04-oep.03-jellium-full_exx.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/07-sic.02-scdm.inp",
      "periodic_systems/22-berry.02-cubic_Si.inp",
      "periodic_systems/22-berry.01-cubic_Si_gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "finite_systems_1d/02-neon_mpi.02-ground_state-kli_par_domains.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "eigensolverminimizationiter": {
    "CallLine": "call parse_variable(namespace, 'EigensolverMinimizationIter', 0, eigens%rmmdiis_minimization_iter)",
    "Default": [
      "0"
    ],
    "Description": [
      "During the first iterations, the RMMDIIS eigensolver requires",
      "some steepest-descent minimizations to improve",
      "convergence. This variable determines the number of those",
      "minimizations."
    ],
    "LineNumber": 294,
    "Manuals": [],
    "Name": "EigensolverMinimizationIter",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/eigensolver.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "eigensolvertolerance": {
    "CallLine": "call parse_variable(namespace, 'EigensolverTolerance', default_tol, eigens%tolerance)",
    "Default": null,
    "Description": [
      "This is the tolerance for the eigenvectors. The default is 1e-7."
    ],
    "LineNumber": 398,
    "Manuals": [],
    "Name": "EigensolverTolerance",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/eigensolver.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "multisystem/12-electronic_subsystem_propagators.01-gs.inp",
      "multisystem/15-electronic_system_restart.01-gs.inp",
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/08-sternheimer-photons.01-gs.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "linear_response/04-vib_modes.01-ground_state.inp",
      "linear_response/01-casida.01-gs.inp",
      "finite_systems_3d/30-local_multipoles.01-gs.inp",
      "finite_systems_3d/13-full_potential_hydrogen.02-gs-cg.inp",
      "finite_systems_3d/10-fullerene.01-gs.inp",
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "finite_systems_3d/12-forces.03-N2_gs.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/28-carbon_big_box.01-ground_state.inp",
      "finite_systems_3d/09-spinors.03-rmmdiis_extra_states.inp",
      "finite_systems_3d/09-spinors.01-ground_state.inp",
      "finite_systems_3d/04-jellium.01-ground_state.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/12-forces.02-N2_gs.inp",
      "finite_systems_3d/12-forces.01-N2_gs.inp",
      "finite_systems_3d/09-spinors.02-rmmdiis.inp",
      "real_time/11-tdmagnetic.02-unocc.inp",
      "real_time/17-absorption-spin_symmetry.01-gs.inp",
      "real_time/02-propagators.01-gs.inp",
      "real_time/24-adsic_freeze_orbitals.01-gs.inp",
      "real_time/11-tdmagnetic.01-gs.inp",
      "real_time/03-td_self_consistent.01-gs.inp",
      "real_time/14-absorption-spinors.01-gs.inp",
      "real_time/01-propagators.01-gs.inp",
      "pseudopotentials/15-calcium_psp8_sic.01-gs.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/01-xc_1d.02-wfs-hf.inp",
      "functionals/04-oep.02-jellium-exx_kli.inp",
      "functionals/04-oep.01-jellium-lsda.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/14-libvdwxc_Be_hcp.01-vdwdfcx.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/04-oep.03-jellium-full_exx.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/16-dressed-rdmft.01-ip.inp",
      "functionals/07-sic.02-scdm.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/22-berry.02-cubic_Si.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/26-Na.01-gs.inp",
      "periodic_systems/22-berry.01-cubic_Si_gs.inp",
      "periodic_systems/19-unfolding.03-unocc.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/05-lithium.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/27-Ar.01-gs.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/13-primitive.01-diamond.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/08-benzene_supercell.01-gs.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "finite_systems_1d/03-He-Hartree-Fock.01-gs.inp",
      "optimal_control/01-asym_doublewell.02-unocc.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/06-zbr98.01-ground_state.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/01-asym_doublewell.01-ground_state.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/02-ACBN0.02-lif.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "elfwithcurrentterm": {
    "CallLine": "call parse_variable(namespace, 'ELFWithCurrentTerm', .true., with_current_term)",
    "Default": [
      "true"
    ],
    "Description": [
      "The ELF, when calculated for complex wavefunctions, should contain",
      "a term dependent on the current. This term is properly calculated by",
      "default; however, for research purposes it may be useful not to add it.",
      "If this feature proves to be useless, this option should go away."
    ],
    "LineNumber": 65,
    "Manuals": [],
    "Name": "ELFWithCurrentTerm",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "electrons/elf.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "emcalcborncharges": {
    "CallLine": "call parse_variable(sys%namespace, 'EMCalcBornCharges', .false., em_vars%calc_Born)",
    "Default": [
      "false"
    ],
    "Description": [
      "Calculate linear-response Born effective charges from electric perturbation (experimental)."
    ],
    "LineNumber": 964,
    "Manuals": [],
    "Name": "EMCalcBornCharges",
    "Options": [],
    "Section": "Linear Response::Polarizabilities",
    "Sourcefile": "sternheimer/em_resp.F90",
    "Testfiles": [
      "linear_response/02-h2o_pol_lr.03_h2o_dyn_pol_cmplx.inp",
      "linear_response/05-polarizability.03-finite-diff.inp",
      "linear_response/02-h2o_pol_lr.02_h2o_dyn_pol.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/04-silicon.03-emresp.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "emcalcdiagonalfield": {
    "CallLine": "call parse_variable(sys%namespace, 'EMCalcDiagonalField', .true., calc_diagonal)",
    "Default": [
      "true"
    ],
    "Description": [
      "Calculate <i>yz</i>-field for <math>\\beta_{xyz}</math> hyperpolarizability, which is sometimes harder to converge.",
      "Only applies if <tt>ResponseMethod = finite_differences</tt>."
    ],
    "LineNumber": 503,
    "Manuals": [],
    "Name": "EMCalcDiagonalField",
    "Options": [],
    "Section": "Linear Response::Static Polarization",
    "Sourcefile": "main/static_pol.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "emcalcmagnetooptics": {
    "CallLine": "call parse_variable(sys%namespace, 'EMCalcMagnetooptics', .false., em_vars%calc_magnetooptics)",
    "Default": [
      "false"
    ],
    "Description": [
      "Calculate magneto-optical response."
    ],
    "LineNumber": 917,
    "Manuals": [],
    "Name": "EMCalcMagnetooptics",
    "Options": [],
    "Section": "Linear Response::Polarizabilities",
    "Sourcefile": "sternheimer/em_resp.F90",
    "Testfiles": [
      "linear_response/02-h2o_pol_lr.05_h2o_magn_opt.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "emcalcrotatoryresponse": {
    "CallLine": "call parse_variable(sys%namespace, 'EMCalcRotatoryResponse', .false., em_vars%calc_rotatory)",
    "Default": [
      "false"
    ],
    "Description": [
      "Calculate circular-dichroism spectrum from electric perturbation,",
      "and write to file <tt>rotatory_strength</tt>."
    ],
    "LineNumber": 881,
    "Manuals": [],
    "Name": "EMCalcRotatoryResponse",
    "Options": [],
    "Section": "Linear Response::Polarizabilities",
    "Sourcefile": "sternheimer/em_resp.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "emeta": {
    "CallLine": "call parse_variable(sys%namespace, 'EMEta', M_ZERO, em_vars%eta, units_inp%energy)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "The imaginary part of the frequency, effectively a Lorentzian broadening",
      "for peaks in the spectrum. It can help convergence of the SCF cycle for the",
      "Sternheimer equation when on a resonance, and it can be used as a positive",
      "infinitesimal to get the imaginary parts of response functions at poles.",
      "In units of energy. Cannot be negative."
    ],
    "LineNumber": 829,
    "Manuals": [],
    "Name": "EMEta",
    "Options": [],
    "Section": "Linear Response::Polarizabilities",
    "Sourcefile": "sternheimer/em_resp.F90",
    "Testfiles": [
      "linear_response/08-sternheimer-photons.02-em_resp.inp",
      "linear_response/02-h2o_pol_lr.03_h2o_dyn_pol_cmplx.inp",
      "linear_response/02-h2o_pol_lr.05_h2o_magn_opt.inp",
      "finite_systems_3d/37-sternheimer_polarized.02-em_resp.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp",
      "periodic_systems/04-silicon.03-emresp.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "emforcenokdotp": {
    "CallLine": "call parse_variable(sys%namespace, 'EMForceNoKdotP', .false., em_vars%force_no_kdotp)",
    "Default": [
      "false"
    ],
    "Description": [
      "If the system is periodic, by default wavefunctions from a previous <tt>kdotp</tt> run will",
      "be read, to be used in the formulas for the polarizability and",
      "hyperpolarizability in the quantum theory of polarization. For testing purposes,",
      "you can set this variable to true to disregard the <tt>kdotp</tt> run, and use the formulas",
      "for the finite system. This variable has no effect for a finite system."
    ],
    "LineNumber": 954,
    "Manuals": [],
    "Name": "EMForceNoKdotP",
    "Options": [],
    "Section": "Linear Response::Polarizabilities",
    "Sourcefile": "sternheimer/em_resp.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "emfreqs": {
    "CallLine": "if (parse_block(sys%namespace, 'EMFreqs', blk) == 0) then",
    "Default": null,
    "Description": [
      "This block defines for which frequencies the polarizabilities",
      "will be calculated. If it is not present, the static (<math>\\omega = 0</math>) response",
      "is calculated.",
      " ",
      "Each row of the block indicates a sequence of frequency values, the",
      "first column is an integer that indicates the number of steps, the",
      "second number is the initial frequency, and the third number the final",
      "frequency. If the first number is one, then only the initial value is",
      "considered. The block can have any number of rows. Consider the next example:",
      " ",
      "<tt>%EMFreqs",
      "<br>31 | 0.0 | 1.0",
      "<br> 1 | 0.32",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 760,
    "Manuals": [],
    "Name": "EMFreqs",
    "Options": [],
    "Section": "Linear Response::Polarizabilities",
    "Sourcefile": "sternheimer/em_resp.F90",
    "Testfiles": [
      "linear_response/08-sternheimer-photons.02-em_resp.inp",
      "linear_response/02-h2o_pol_lr.03_h2o_dyn_pol_cmplx.inp",
      "linear_response/02-h2o_pol_lr.02_h2o_dyn_pol.inp",
      "linear_response/02-h2o_pol_lr.05_h2o_magn_opt.inp",
      "finite_systems_3d/37-sternheimer_polarized.02-em_resp.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp",
      "periodic_systems/04-silicon.03-emresp.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "emfreqssort": {
    "CallLine": "call parse_variable(sys%namespace, 'EMFreqsSort', .true., freq_sort)",
    "Default": [
      "true"
    ],
    "Description": [
      "If true, the frequencies specified by the <tt>EMFreqs</tt> block are sorted, so that",
      "they are calculated in increasing order. Can be set to false to use the order as stated,",
      "in case this makes better use of available restart information."
    ],
    "LineNumber": 806,
    "Manuals": [],
    "Name": "EMFreqsSort",
    "Options": [],
    "Section": "Linear Response::Polarizabilities",
    "Sourcefile": "sternheimer/em_resp.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "emhyperpol": {
    "CallLine": "if (parse_block(sys%namespace, 'EMHyperpol', blk) == 0) then",
    "Default": null,
    "Description": [
      "This block describes the multiples of the frequency used for",
      "the dynamic hyperpolarizability. The results are written to the",
      "file <tt>beta</tt> in the directory for the first multiple.",
      "There must be three factors, summing to zero: <math>\\omega_1 + \\omega_2 + \\omega_3 = 0</math>.",
      "For example, for second-harmonic generation, you could use",
      "<tt>1 | 1 | -2</tt>."
    ],
    "LineNumber": 895,
    "Manuals": [],
    "Name": "EMHyperpol",
    "Options": [],
    "Section": "Linear Response::Polarizabilities",
    "Sourcefile": "sternheimer/em_resp.F90",
    "Testfiles": [
      "linear_response/02-h2o_pol_lr.03_h2o_dyn_pol_cmplx.inp",
      "finite_systems_3d/37-sternheimer_polarized.02-em_resp.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "emkpointoutput": {
    "CallLine": "call parse_variable(sys%namespace, 'EMKPointOutput', .false., em_vars%kpt_output)",
    "Default": [
      "false"
    ],
    "Description": [
      "Give in the output contributions of different k-points to the dielectric constant.",
      "Can be also used for magneto-optical effects."
    ],
    "LineNumber": 938,
    "Manuals": [],
    "Name": "EMKPointOutput",
    "Options": [],
    "Section": "Linear Response::Polarizabilities",
    "Sourcefile": "sternheimer/em_resp.F90",
    "Testfiles": [
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "emmagnetoopticsnohvar": {
    "CallLine": "call parse_variable(sys%namespace, 'EMMagnetoopticsNoHVar', .true., em_vars%magnetooptics_nohvar)",
    "Default": [
      "true"
    ],
    "Description": [
      "Exclude corrections to the exchange-correlation and Hartree terms",
      "from consideration of perturbations induced by a magnetic field"
    ],
    "LineNumber": 927,
    "Manuals": [],
    "Name": "EMMagnetoopticsNoHVar",
    "Options": [],
    "Section": "Linear Response::Polarizabilities",
    "Sourcefile": "sternheimer/em_resp.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "emoccupiedresponse": {
    "CallLine": "call parse_variable(sys%namespace, 'EMOccupiedResponse', .false., em_vars%occ_response)",
    "Default": [
      "false"
    ],
    "Description": [
      "Solve for full response without projector into unoccupied subspace.",
      "Not possible if there are partial occupations.",
      "When <tt>EMHyperpol</tt> is set for a periodic system, this variable is ignored and",
      "the full response is always calculated."
    ],
    "LineNumber": 978,
    "Manuals": [],
    "Name": "EMOccupiedResponse",
    "Options": [],
    "Section": "Linear Response::Polarizabilities",
    "Sourcefile": "sternheimer/em_resp.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "emperturbationtype": {
    "CallLine": "call parse_variable(sys%namespace, 'EMPerturbationType', PERTURBATION_ELECTRIC, perturb_type)",
    "Default": [
      "electric"
    ],
    "Description": [
      "Which perturbation to consider for electromagnetic linear response."
    ],
    "LineNumber": 856,
    "Manuals": [],
    "Name": "EMPerturbationType",
    "Options": [
      {
        "Description": [
          "Electric perturbation used to calculate electric polarizabilities",
          "and hyperpolarizabilities."
        ],
        "Name": "electric",
        "Value": "1"
      },
      {
        "Description": [
          "Magnetic perturbation used to calculate magnetic susceptibilities."
        ],
        "Name": "magnetic",
        "Value": "2"
      },
      {
        "Description": [
          "Zero perturbation, for use in testing."
        ],
        "Name": "none",
        "Value": "0"
      }
    ],
    "Section": "Linear Response::Polarizabilities",
    "Sourcefile": "sternheimer/em_resp.F90",
    "Testfiles": [
      "linear_response/02-h2o_pol_lr.04_h2o_susc.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "emstartdensityiszerofield": {
    "CallLine": "call parse_variable(sys%namespace, 'EMStartDensityIsZeroField', .true., start_density_is_zero_field)",
    "Default": [
      "true"
    ],
    "Description": [
      "Use the charge density from the zero-field calculation as the starting density for",
      "SCF calculations with applied fields. For small fields, this will be fastest.",
      "If there is trouble converging with larger fields, set to false,",
      "to initialize the calculation for each field from scratch, as specified by the LCAO variables.",
      "Only applies if <tt>ResponseMethod = finite_differences</tt>."
    ],
    "LineNumber": 493,
    "Manuals": [],
    "Name": "EMStartDensityIsZeroField",
    "Options": [],
    "Section": "Linear Response::Static Polarization",
    "Sourcefile": "main/static_pol.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "emstaticelectricfield": {
    "CallLine": "call parse_variable(sys%namespace, 'EMStaticElectricField', 0.01_real64, e_field, units_inp%force)",
    "Default": [
      "0.01",
      "a.u."
    ],
    "Description": [
      "Magnitude of the static electric field used to calculate the static polarizability,",
      "if <tt>ResponseMethod = finite_differences</tt>."
    ],
    "LineNumber": 471,
    "Manuals": [],
    "Name": "EMStaticElectricField",
    "Options": [],
    "Section": "Linear Response::Static Polarization",
    "Sourcefile": "main/static_pol.F90",
    "Testfiles": [
      "linear_response/05-polarizability.03-finite-diff.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "emverbose": {
    "CallLine": "call parse_variable(sys%namespace, 'EMVerbose', .false., verbose)",
    "Default": [
      "false"
    ],
    "Description": [
      "Write full SCF output.",
      "Only applies if <tt>ResponseMethod = finite_differences</tt>."
    ],
    "LineNumber": 524,
    "Manuals": [],
    "Name": "EMVerbose",
    "Options": [],
    "Section": "Linear Response::Static Polarization",
    "Sourcefile": "main/static_pol.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "emwavefunctionsfromscratch": {
    "CallLine": "call parse_variable(sys%namespace, 'EMWavefunctionsFromScratch', .false., em_vars%wfns_from_scratch)",
    "Default": [
      "false"
    ],
    "Description": [
      "Do not use saved linear-response wavefunctions from a previous run as starting guess.",
      "Instead initialize to zero as in <tt>FromScratch</tt>, but restart densities will still",
      "be used. Restart wavefunctions from a very different frequency can hinder convergence."
    ],
    "LineNumber": 994,
    "Manuals": [],
    "Name": "EMWavefunctionsFromScratch",
    "Options": [],
    "Section": "Linear Response::Polarizabilities",
    "Sourcefile": "sternheimer/em_resp.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "emwriterestartdensities": {
    "CallLine": "call parse_variable(sys%namespace, 'EMWriteRestartDensities', .true., write_restart_densities)",
    "Default": [
      "true"
    ],
    "Description": [
      "Write density after each calculation for restart, rather than just the resulting electronic dipole moment.",
      "Only applies if <tt>ResponseMethod = finite_differences</tt>. Restarting from calculations at smaller",
      "fields can be helpful if there are convergence problems."
    ],
    "LineNumber": 514,
    "Manuals": [],
    "Name": "EMWriteRestartDensities",
    "Options": [],
    "Section": "Linear Response::Static Polarization",
    "Sourcefile": "main/static_pol.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "enablephotons": {
    "CallLine": "call parse_variable(namespace, 'EnablePhotons', .false., has_photons)",
    "Default": [
      "no"
    ],
    "Description": [
      "This variable can be used to enable photons in several types of calculations.",
      "It can be used to activate the one-photon OEP formalism.",
      "In the case of CalculationMode = casida, it enables photon modes as",
      "described in ACS Photonics 2019, 6, 11, 2757-2778.",
      "Finally, if set to yes when solving the ferquency-dependent Sternheimer",
      "equation, the photons are coupled to the electronic subsystem."
    ],
    "LineNumber": 256,
    "Manuals": [],
    "Name": "EnablePhotons",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "electrons/electrons.F90",
    "Testfiles": [
      "linear_response/08-sternheimer-photons.02-em_resp.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/07-casida-photons.06-spectrum.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/07-casida-photons.02-photons.inp",
      "linear_response/07-casida-photons.04-elpa.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "ewaldalpha": {
    "CallLine": "call parse_variable(namespace, 'EwaldAlpha', 0.21_real64, this%alpha)",
    "Default": [
      "0.21"
    ],
    "Description": [
      "The value 'Alpha' that controls the splitting of the Coulomb",
      "interaction in the Ewald sum used to calculation the ion-ion",
      "interaction for periodic systems. This value affects the speed",
      "of the calculation, normally users do not need to modify it."
    ],
    "LineNumber": 86,
    "Manuals": [],
    "Name": "EwaldAlpha",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/ion_interaction.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "excesscharge": {
    "CallLine": "call parse_variable(namespace, 'ExcessCharge', M_ZERO, excess_charge)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "The net charge of the system. A negative value means that we are adding",
      "electrons, while a positive value means we are taking electrons",
      "from the system."
    ],
    "LineNumber": 314,
    "Manuals": [],
    "Name": "ExcessCharge",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/07-spin_orbit_coupling.02-rkb.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.03-unocc.inp",
      "finite_systems_3d/37-sternheimer_polarized.02-em_resp.inp",
      "finite_systems_3d/37-sternheimer_polarized.01-gs.inp",
      "real_time/08-laser.01-ground_state.inp",
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/12-absorption.01-gs.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/14-absorption-spinors.03-td-restart.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/13-absorption-spin.03-td-restart.inp",
      "real_time/14-absorption-spinors.02-td.inp",
      "real_time/14-absorption-spinors.01-gs.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/13-absorption-spin.01-gs.inp",
      "real_time/12-absorption.03-td-restart.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "functionals/03-xc.gga_x_lg93.inp",
      "functionals/03-xc.gga_xc_mpwlyp1w.inp",
      "functionals/03-xc.lda_c_pw.inp",
      "functionals/03-xc.exx.inp",
      "functionals/03-xc.gga_x_rpbe.inp",
      "functionals/03-xc.gga_xc_edf1.inp",
      "functionals/03-xc.lda_c_hl.inp",
      "functionals/03-xc.gga_xc_hcth_120.inp",
      "functionals/03-xc.gga_c_pbe_jrgx.inp",
      "functionals/03-xc.gga_xc_hcth_93.inp",
      "functionals/03-xc.gga_c_pbe_sol.inp",
      "functionals/03-xc.mvorb_hse06_fock.inp",
      "functionals/03-xc.lda_c_wigner.inp",
      "functionals/03-xc.gga_x_mpbe.inp",
      "functionals/03-xc.gga_xc_xlyp.inp",
      "functionals/03-xc.gga_x_am05.inp",
      "functionals/03-xc.01-gs.inp",
      "functionals/03-xc.gga_x_g96.inp",
      "functionals/03-xc.gga_x_b86.inp",
      "functionals/03-xc.gga_x_pbek1_vdw.inp",
      "functionals/03-xc.gga_xc_pbelyp1w.inp",
      "functionals/03-xc.gga_x_b86_mgc.inp",
      "functionals/03-xc.gga_c_xpbe.inp",
      "functionals/03-xc.pbe0_fock.inp",
      "functionals/03-xc.gga_x_b88.inp",
      "functionals/03-xc.lda_c_ob_pz.inp",
      "functionals/03-xc.gga_x_ft97_b.inp",
      "functionals/03-xc.lda_c_ob_pw.inp",
      "functionals/03-xc.lda_c_pz_mod.inp",
      "functionals/03-xc.gga_x_optb88_vdw.inp",
      "functionals/03-xc.gga_c_pw91.inp",
      "functionals/03-xc.slater.inp",
      "functionals/03-xc.lda_xc_teter93.inp",
      "functionals/03-xc.sic_pz.inp",
      "functionals/03-xc.gga_x_xpbe.inp",
      "functionals/03-xc.pbe0_oep.inp",
      "functionals/03-xc.gga_xc_hcth_147.inp",
      "functionals/03-xc.gga_x_pbe_jsjr.inp",
      "functionals/03-xc.gga_c_lm.inp",
      "functionals/03-xc.gga_x_pbe_r.inp",
      "functionals/03-xc.lda_c_vbh.inp",
      "functionals/03-xc.gga_x_pbea.inp",
      "functionals/03-xc.lda_x.inp",
      "functionals/03-xc.gga_x_pw91.inp",
      "functionals/03-xc.b3lyp_fock.inp",
      "functionals/03-xc.gga_x_ft97_a.inp",
      "functionals/03-xc.gga_x_pw86.inp",
      "functionals/03-xc.lda_c_rpa.inp",
      "functionals/03-xc.b3lyp_oep.inp",
      "functionals/03-xc.gga_x_dk87_r2.inp",
      "functionals/03-xc.gga_c_p86.inp",
      "functionals/03-xc.lda_c_vwn_rpa.inp",
      "functionals/03-xc.lda_c_pw_mod.inp",
      "functionals/03-xc.lda_c_vwn.inp",
      "functionals/03-xc.kli.inp",
      "functionals/03-xc.lda_c_pz.inp",
      "functionals/03-xc.lda_c_xalpha.inp",
      "functionals/03-xc.lda_c_gl.inp",
      "functionals/03-xc.gga_x_bayesian.inp",
      "functionals/03-xc.gga_xc_b97_d.inp",
      "functionals/03-xc.gga_c_pbe.inp",
      "functionals/03-xc.gga_x_lb.inp",
      "functionals/03-xc.gga_x_pbe_sol.inp",
      "functionals/03-xc.gga_c_lyp.inp",
      "functionals/03-xc.gga_c_am05.inp",
      "functionals/03-xc.gga_x_mpw91.inp",
      "functionals/03-xc.gga_x_pbe.inp",
      "functionals/03-xc.gga_xc_pbe1w.inp",
      "functionals/03-xc.gga_x_optpbe_vdw.inp",
      "functionals/03-xc.gga_xc_hcth_407.inp",
      "functionals/03-xc.gga_x_dk87_r1.inp",
      "functionals/03-xc.gga_x_optx.inp",
      "functionals/03-xc.fbex.inp",
      "functionals/03-xc.gga_x_wc.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/06-laser.03-velocity_gauge.inp",
      "lda_u/06-laser.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "experimentalfeatures": {
    "CallLine": "call parse_variable(global_namespace, 'ExperimentalFeatures', .false., conf%devel_version)",
    "Default": [
      "no"
    ],
    "Description": [
      "If true, allows the use of certain parts of the code that are",
      "still under development and are not suitable for production",
      "runs. This should not be used unless you know what you are doing.",
      "See details on",
      "<a href=https://www.octopus-code.org/documentation/main/variables/execution/debug/experimentalfeatures>wiki page</a>."
    ],
    "LineNumber": 149,
    "Manuals": [],
    "Name": "ExperimentalFeatures",
    "Options": [],
    "Section": "Execution::Debug",
    "Sourcefile": "basic/messages.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/02-fock-darwin.02-ground_state.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "multisystem/05-propagation_beeman.02-three_body.inp",
      "multisystem/06-propagation_expmid.02-three_body.inp",
      "multisystem/09-illegal_system_names.04-white_space.inp",
      "multisystem/03-interactions_creation.03-case3.inp",
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/13-restart_verlet.01-restart-run-part1.inp",
      "multisystem/03-interactions_creation.01-case1.inp",
      "multisystem/05-propagation_beeman.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.01-two_body.inp",
      "multisystem/09-illegal_system_names.02-empty.inp",
      "multisystem/03-interactions_creation.02-case2.inp",
      "multisystem/14-lennard-jones.01-classical-particles-N2.inp",
      "multisystem/18-incompatible_timing.01-run.inp",
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/01-nested_systems.02-three_levels.inp",
      "multisystem/01-nested_systems.01-two_levels.inp",
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/06-propagation_expmid.05-two_body_verlet_half.inp",
      "multisystem/09-illegal_system_names.01-duplicated.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "multisystem/04-propagation_verlet.02-three_body.inp",
      "multisystem/10-dftbplus_verlet.01-water.inp",
      "multisystem/15-electronic_system_restart.04-td_restart_part2.inp",
      "multisystem/06-propagation_expmid.01-two_body.inp",
      "multisystem/08-coulomb_force.01-classical_helium.inp",
      "multisystem/01-nested_systems.03-four_levels.inp",
      "multisystem/09-illegal_system_names.03-illegal_character.inp",
      "multisystem/03-interactions_creation.04-case4.inp",
      "multisystem/13-restart_verlet.03-full-run.inp",
      "multisystem/16-bomd.02-td.inp",
      "multisystem/17-lasers.01-length_gauge.inp",
      "multisystem/06-propagation_expmid.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.04-three_body_different_time_steps.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/06-propagation_expmid.06-two_body_verlet.inp",
      "multisystem/05-propagation_beeman.03-two_body_different_time_steps.inp",
      "multisystem/07-lorentz-force.02-charged_particle_in_static_efield.inp",
      "multisystem/13-restart_verlet.02-restart-run-part2.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "multisystem/04-propagation_verlet.03-two_body_different_time_steps.inp",
      "multisystem/05-propagation_beeman.01-two_body.inp",
      "multisystem/02-interaction_graph.01-three_body.inp",
      "multisystem/06-propagation_expmid.03-two_body_different_time_steps.inp",
      "linear_response/08-sternheimer-photons.02-em_resp.inp",
      "linear_response/02-h2o_pol_lr.03_h2o_dyn_pol_cmplx.inp",
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/05-polarizability.03-finite-diff.inp",
      "linear_response/02-h2o_pol_lr.02_h2o_dyn_pol.inp",
      "linear_response/07-casida-photons.06-spectrum.inp",
      "linear_response/07-casida-photons.01-gs.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/02-h2o_pol_lr.05_h2o_magn_opt.inp",
      "linear_response/07-casida-photons.02-photons.inp",
      "linear_response/07-casida-photons.04-elpa.inp",
      "finite_systems_3d/30-local_multipoles.02-multipoles.inp",
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/30-local_multipoles.01-gs.inp",
      "finite_systems_3d/05-output.02-gs.inp",
      "finite_systems_3d/16-scfinlcao_std.01-gs.inp",
      "finite_systems_3d/16-scfinlcao_std.01-gs.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/33-cg.02-additional_terms.inp",
      "finite_systems_3d/20-eigensolver.01-cg.inp",
      "finite_systems_3d/10-fullerene.01-gs.inp",
      "finite_systems_3d/10-fullerene.01-gs.inp",
      "finite_systems_3d/24-o2-spin.01-gs.inp",
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/30-local_multipoles.03-multipoles_restart.inp",
      "finite_systems_3d/33-cg.03-cg_direction.inp",
      "finite_systems_3d/23-go-na2.02-simplex.inp",
      "finite_systems_3d/05-output.04-convert-op.inp",
      "finite_systems_3d/23-go-na2.04-fire_restart.inp",
      "finite_systems_3d/20-eigensolver.03-plan.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/05-output.03-convert.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/23-go-na2.03-fire.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/23-go-na2.05-constrains.inp",
      "finite_systems_3d/20-eigensolver.05-rmmdiis.inp",
      "finite_systems_3d/07-spin_orbit_coupling.02-rkb.inp",
      "finite_systems_3d/31-acetylene_b3lyp.01-gs.inp",
      "finite_systems_3d/32-tdpcm_methane.01-ground_state.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.03-unocc.inp",
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "finite_systems_3d/33-cg.01-orthogonalize_all.inp",
      "finite_systems_3d/37-sternheimer_polarized.02-em_resp.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "finite_systems_3d/14-fullerene_unpacked.01-gs.inp",
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "real_time/10-bomd.02-td.inp",
      "real_time/05-time_propagation.04-td_domains_states-reorder_ranks.inp",
      "real_time/01-propagators.09-magnus.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/01-propagators.07-caetrs.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/05-time_propagation.03-td_domains_states.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/01-propagators.11-cfmagnus4.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/12-absorption.05-spectrum_compressed_sensing.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/03-td_self_consistent.02-etrs.inp",
      "real_time/01-propagators.10-exprk4.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "real_time/02-propagators.04-rungekutta4.inp",
      "real_time/14-absorption-spinors.05-spectrum_compressed_sensing.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "pseudopotentials/11-isotopes.01-deuterium.inp",
      "pseudopotentials/03-nlcc.01-Fatom.inp",
      "pseudopotentials/05-carbon_dojo_pbesol.01-gs.inp",
      "pseudopotentials/04-carbon_dojo_psml.01-gs.inp",
      "pseudopotentials/10-helium_upf.01-gs_nofilter.inp",
      "symmetries/05-hexagonal.23-spg165.inp",
      "symmetries/02-monoclinic.05-spg7.inp",
      "symmetries/05-hexagonal.41-spg183.inp",
      "symmetries/02-monoclinic.04-spg6.inp",
      "symmetries/03-orthorombic.14-spg29.inp",
      "symmetries/04-tetragonal.27-spg101.inp",
      "symmetries/06-cubic.29-spg223.inp",
      "symmetries/03-orthorombic.53-spg68.inp",
      "symmetries/04-tetragonal.33-spg107.inp",
      "symmetries/02-monoclinic.07-spg9.inp",
      "symmetries/06-cubic.04-spg198.inp",
      "symmetries/04-tetragonal.51-spg125.inp",
      "symmetries/04-tetragonal.03-spg77.inp",
      "symmetries/03-orthorombic.31-spg46.inp",
      "symmetries/04-tetragonal.08-spg82.inp",
      "symmetries/03-orthorombic.05-spg20.inp",
      "symmetries/04-tetragonal.36-spg110.inp",
      "symmetries/05-hexagonal.15-spg157.inp",
      "symmetries/02-monoclinic.12-spg14.inp",
      "symmetries/03-orthorombic.19-spg34.inp",
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "symmetries/05-hexagonal.28-spg170.inp",
      "symmetries/04-tetragonal.23-spg97.inp",
      "symmetries/04-tetragonal.48-spg122.inp",
      "symmetries/04-tetragonal.21-spg95.inp",
      "symmetries/06-cubic.21-spg215.inp",
      "symmetries/02-monoclinic.09-spg11.inp",
      "symmetries/04-tetragonal.18-spg92.inp",
      "symmetries/04-tetragonal.52-spg126.inp",
      "symmetries/03-orthorombic.55-spg70.inp",
      "symmetries/03-orthorombic.09-spg24.inp",
      "symmetries/04-tetragonal.62-spg136.inp",
      "symmetries/02-monoclinic.08-spg10.inp",
      "symmetries/04-tetragonal.38-spg112.inp",
      "symmetries/04-tetragonal.49-spg123.inp",
      "symmetries/03-orthorombic.20-spg35.inp",
      "symmetries/06-cubic.05-spg199.inp",
      "symmetries/06-cubic.35-spg229.inp",
      "symmetries/02-monoclinic.03-spg5.inp",
      "symmetries/02-monoclinic.06-spg8.inp",
      "symmetries/06-cubic.06-spg200.inp",
      "symmetries/04-tetragonal.57-spg131.inp",
      "symmetries/04-tetragonal.45-spg119.inp",
      "symmetries/05-hexagonal.49-spg191.inp",
      "symmetries/03-orthorombic.26-spg41.inp",
      "symmetries/06-cubic.15-spg209.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/06-cubic.08-spg202.inp",
      "symmetries/04-tetragonal.35-spg109.inp",
      "symmetries/03-orthorombic.07-spg22.inp",
      "symmetries/04-tetragonal.32-spg106.inp",
      "symmetries/04-tetragonal.12-spg86.inp",
      "symmetries/06-cubic.01-spg195.inp",
      "symmetries/05-hexagonal.38-spg180.inp",
      "symmetries/04-tetragonal.01-spg75.inp",
      "symmetries/03-orthorombic.25-spg40.inp",
      "symmetries/04-tetragonal.39-spg113.inp",
      "symmetries/05-hexagonal.02-spg144.inp",
      "symmetries/05-hexagonal.06-spg148.inp",
      "symmetries/06-cubic.32-spg226.inp",
      "symmetries/03-orthorombic.47-spg62.inp",
      "symmetries/05-hexagonal.20-spg162.inp",
      "symmetries/06-cubic.24-spg218.inp",
      "symmetries/06-cubic.30-spg224.inp",
      "symmetries/05-hexagonal.12-spg154.inp",
      "symmetries/05-hexagonal.07-spg149.inp",
      "symmetries/05-hexagonal.27-spg169.inp",
      "symmetries/03-orthorombic.45-spg60.inp",
      "symmetries/05-hexagonal.19-spg161.inp",
      "symmetries/05-hexagonal.16-spg158.inp",
      "symmetries/05-hexagonal.48-spg190.inp",
      "symmetries/06-cubic.09-spg203.inp",
      "symmetries/03-orthorombic.24-spg39.inp",
      "symmetries/03-orthorombic.50-spg65.inp",
      "symmetries/06-cubic.34-spg228.inp",
      "symmetries/05-hexagonal.42-spg184.inp",
      "symmetries/03-orthorombic.23-spg38.inp",
      "symmetries/04-tetragonal.13-spg87.inp",
      "symmetries/06-cubic.02-spg196.inp",
      "symmetries/02-monoclinic.13-spg15.inp",
      "symmetries/05-hexagonal.45-spg187.inp",
      "symmetries/05-hexagonal.22-spg164.inp",
      "symmetries/03-orthorombic.43-spg58.inp",
      "symmetries/03-orthorombic.34-spg49.inp",
      "symmetries/04-tetragonal.47-spg121.inp",
      "symmetries/02-monoclinic.02-spg4.inp",
      "symmetries/03-orthorombic.39-spg54.inp",
      "symmetries/04-tetragonal.17-spg91.inp",
      "symmetries/04-tetragonal.22-spg96.inp",
      "symmetries/05-hexagonal.35-spg177.inp",
      "symmetries/03-orthorombic.13-spg28.inp",
      "symmetries/05-hexagonal.13-spg155.inp",
      "symmetries/03-orthorombic.42-spg57.inp",
      "symmetries/06-cubic.12-spg206.inp",
      "symmetries/02-monoclinic.10-spg12.inp",
      "symmetries/06-cubic.07-spg201.inp",
      "symmetries/03-orthorombic.36-spg51.inp",
      "symmetries/05-hexagonal.44-spg186.inp",
      "symmetries/04-tetragonal.04-spg78.inp",
      "symmetries/05-hexagonal.21-spg163.inp",
      "symmetries/04-tetragonal.02-spg76.inp",
      "symmetries/03-orthorombic.22-spg37.inp",
      "symmetries/05-hexagonal.32-spg174.inp",
      "symmetries/03-orthorombic.35-spg50.inp",
      "symmetries/03-orthorombic.17-spg32.inp",
      "symmetries/05-hexagonal.17-spg159.inp",
      "symmetries/03-orthorombic.04-spg19.inp",
      "symmetries/04-tetragonal.20-spg94.inp",
      "symmetries/06-cubic.20-spg214.inp",
      "symmetries/04-tetragonal.65-spg139.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/03-orthorombic.32-spg47.inp",
      "symmetries/03-orthorombic.02-spg17.inp",
      "symmetries/04-tetragonal.15-spg89.inp",
      "symmetries/03-orthorombic.57-spg72.inp",
      "symmetries/03-orthorombic.15-spg30.inp",
      "symmetries/03-orthorombic.49-spg64.inp",
      "symmetries/06-cubic.11-spg205.inp",
      "symmetries/04-tetragonal.30-spg104.inp",
      "symmetries/04-tetragonal.59-spg133.inp",
      "symmetries/03-orthorombic.54-spg69.inp",
      "symmetries/03-orthorombic.41-spg56.inp",
      "symmetries/06-cubic.19-spg213.inp",
      "symmetries/05-hexagonal.05-spg147.inp",
      "symmetries/04-tetragonal.25-spg99.inp",
      "symmetries/03-orthorombic.58-spg73.inp",
      "symmetries/04-tetragonal.43-spg117.inp",
      "symmetries/01-triclinic.02-spg2.inp",
      "symmetries/04-tetragonal.42-spg116.inp",
      "symmetries/05-hexagonal.50-spg192.inp",
      "symmetries/04-tetragonal.68-spg142.inp",
      "symmetries/04-tetragonal.40-spg114.inp",
      "symmetries/05-hexagonal.34-spg176.inp",
      "symmetries/04-tetragonal.63-spg137.inp",
      "symmetries/06-cubic.31-spg225.inp",
      "symmetries/05-hexagonal.36-spg178.inp",
      "symmetries/05-hexagonal.30-spg172.inp",
      "symmetries/03-orthorombic.48-spg63.inp",
      "symmetries/04-tetragonal.11-spg85.inp",
      "symmetries/05-hexagonal.40-spg182.inp",
      "symmetries/05-hexagonal.11-spg153.inp",
      "symmetries/04-tetragonal.41-spg115.inp",
      "symmetries/01-triclinic.16-spg16.inp",
      "symmetries/04-tetragonal.26-spg100.inp",
      "symmetries/05-hexagonal.24-spg166.inp",
      "symmetries/03-orthorombic.56-spg71.inp",
      "symmetries/06-cubic.16-spg210.inp",
      "symmetries/06-cubic.25-spg219.inp",
      "symmetries/03-orthorombic.51-spg66.inp",
      "symmetries/05-hexagonal.47-spg189.inp",
      "symmetries/04-tetragonal.24-spg98.inp",
      "symmetries/05-hexagonal.51-spg193.inp",
      "symmetries/03-orthorombic.37-spg52.inp",
      "symmetries/05-hexagonal.39-spg181.inp",
      "symmetries/03-orthorombic.27-spg42.inp",
      "symmetries/04-tetragonal.58-spg132.inp",
      "symmetries/04-tetragonal.31-spg105.inp",
      "symmetries/04-tetragonal.06-spg80.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "symmetries/05-hexagonal.10-spg152.inp",
      "symmetries/05-hexagonal.01-spg143.inp",
      "symmetries/05-hexagonal.04-spg146.inp",
      "symmetries/04-tetragonal.19-spg93.inp",
      "symmetries/03-orthorombic.08-spg23.inp",
      "symmetries/07-symmetrization_lda.01-spg2_sym.inp",
      "symmetries/04-tetragonal.29-spg103.inp",
      "symmetries/06-cubic.27-spg221.inp",
      "symmetries/04-tetragonal.56-spg130.inp",
      "symmetries/06-cubic.36-spg230.inp",
      "symmetries/04-tetragonal.55-spg129.inp",
      "symmetries/04-tetragonal.44-spg118.inp",
      "symmetries/04-tetragonal.53-spg127.inp",
      "symmetries/03-orthorombic.11-spg26.inp",
      "symmetries/05-hexagonal.14-spg156.inp",
      "symmetries/06-cubic.33-spg227.inp",
      "symmetries/05-hexagonal.43-spg185.inp",
      "symmetries/03-orthorombic.40-spg55.inp",
      "symmetries/06-cubic.13-spg207.inp",
      "symmetries/06-cubic.03-spg197.inp",
      "symmetries/06-cubic.14-spg208.inp",
      "symmetries/02-monoclinic.11-spg13.inp",
      "symmetries/06-cubic.17-spg211.inp",
      "symmetries/03-orthorombic.30-spg45.inp",
      "symmetries/06-cubic.28-spg222.inp",
      "symmetries/05-hexagonal.46-spg188.inp",
      "symmetries/03-orthorombic.16-spg31.inp",
      "symmetries/06-cubic.23-spg217.inp",
      "symmetries/04-tetragonal.10-spg84.inp",
      "symmetries/06-cubic.18-spg212.inp",
      "symmetries/04-tetragonal.66-spg140.inp",
      "symmetries/04-tetragonal.16-spg90.inp",
      "symmetries/04-tetragonal.61-spg135.inp",
      "symmetries/03-orthorombic.46-spg61.inp",
      "symmetries/01-triclinic.01-spg1.inp",
      "symmetries/03-orthorombic.29-spg44.inp",
      "symmetries/04-tetragonal.67-spg141.inp",
      "symmetries/03-orthorombic.18-spg33.inp",
      "symmetries/05-hexagonal.33-spg175.inp",
      "symmetries/05-hexagonal.25-spg167.inp",
      "symmetries/04-tetragonal.64-spg138.inp",
      "symmetries/03-orthorombic.01-spg16.inp",
      "symmetries/03-orthorombic.21-spg36.inp",
      "symmetries/05-hexagonal.52-spg194.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "symmetries/06-cubic.26-spg220.inp",
      "symmetries/03-orthorombic.52-spg67.inp",
      "symmetries/04-tetragonal.37-spg111.inp",
      "symmetries/04-tetragonal.28-spg102.inp",
      "symmetries/05-hexagonal.26-spg168.inp",
      "symmetries/05-hexagonal.31-spg173.inp",
      "symmetries/03-orthorombic.59-spg74.inp",
      "symmetries/03-orthorombic.33-spg48.inp",
      "symmetries/04-tetragonal.50-spg124.inp",
      "symmetries/05-hexagonal.37-spg179.inp",
      "symmetries/04-tetragonal.60-spg134.inp",
      "symmetries/03-orthorombic.10-spg25.inp",
      "symmetries/05-hexagonal.08-spg150.inp",
      "symmetries/03-orthorombic.03-spg18.inp",
      "symmetries/05-hexagonal.29-spg171.inp",
      "symmetries/04-tetragonal.54-spg128.inp",
      "symmetries/03-orthorombic.44-spg59.inp",
      "symmetries/05-hexagonal.03-spg145.inp",
      "symmetries/05-hexagonal.18-spg160.inp",
      "symmetries/03-orthorombic.06-spg21.inp",
      "symmetries/04-tetragonal.14-spg88.inp",
      "symmetries/04-tetragonal.34-spg108.inp",
      "symmetries/05-hexagonal.09-spg151.inp",
      "symmetries/03-orthorombic.12-spg27.inp",
      "symmetries/03-orthorombic.28-spg43.inp",
      "symmetries/04-tetragonal.46-spg120.inp",
      "symmetries/03-orthorombic.38-spg53.inp",
      "symmetries/02-monoclinic.01-spg3.inp",
      "symmetries/06-cubic.22-spg216.inp",
      "symmetries/06-cubic.10-spg204.inp",
      "symmetries/04-tetragonal.07-spg81.inp",
      "symmetries/04-tetragonal.09-spg83.inp",
      "symmetries/04-tetragonal.05-spg79.inp",
      "photo_electron/05-pfft.01-gs.inp",
      "photo_electron/06-2D.01-Na_gs.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/09-flux_3d.03-Na_gs_cub.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/09-flux_3d.01-Na_gs_sph.inp",
      "photo_electron/13-arpes_2d.01-gs.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "photo_electron/12-spm_3d.01-Na_gs.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp",
      "functionals/18-mgga.01-br89.inp",
      "functionals/09-vdw_ts_sc.01-gs.inp",
      "functionals/03-xc.exx.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/03-xc.mvorb_hse06_fock.inp",
      "functionals/16-dressed-rdmft.03-rdmft.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/05-ks_inversion.03-inversion.inp",
      "functionals/08-vdw_ts.01-gs.inp",
      "functionals/06-rdmft.03-gs_grid.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/18-mgga.02-br89_oep.inp",
      "functionals/13-libvdwxc_h2o.01-vdwdfcx.inp",
      "functionals/10-vdw_d3_dna.01-gs_novdw.inp",
      "functionals/05-ks_inversion.02-two_particle.inp",
      "functionals/16-dressed-rdmft.02-hf.inp",
      "functionals/22-xc_lrx.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/01-xc_1d.oep_exx.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/14-libvdwxc_Be_hcp.01-vdwdfcx.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "functionals/10-vdw_d3_dna.02-gs_d3.inp",
      "functionals/04-oep.03-jellium-full_exx.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/16-dressed-rdmft.01-ip.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "functionals/07-sic.02-scdm.inp",
      "functionals/12-vdw_solid_c6.01-gs_diamond.inp",
      "functionals/06-rdmft.02-gs_basis.inp",
      "functionals/11-vdw_d3.01-gs.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/04-silicon.02-kdotp.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/11-silicon_force.01-gs.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/05-lithium.04-dielectric_function.inp",
      "periodic_systems/11-silicon_force.02-nlcc.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.02_kdotp.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/27-Ar.02-kdotp.inp",
      "periodic_systems/13-primitive.03-bcc_iron.inp",
      "periodic_systems/05-lithium.05-tdtdm.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/15-bandstructure.04-wannier90_output.inp",
      "periodic_systems/19-unfolding.03-unocc.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/15-bandstructure.05-wannier90_states.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/15-bandstructure.03-wannier90_setup.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "periodic_systems/07-mgga.02-tb09_gs_nosymm.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/20-masked_periodic_boundaries.01-graphene.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/24-hartree_fock_1D.01-gs.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "periodic_systems/09-etsf_io.01-gs.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/26-Na.02-kdotp.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/03-sodium_chain.03-ground_state_disp.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/04-silicon.03-emresp.inp",
      "periodic_systems/10-berkeleygw.02-unocc.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/15-bandstructure.02-unocc.inp",
      "periodic_systems/23-hybrids.01-ace.inp",
      "periodic_systems/19-unfolding.02-setup.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/13-primitive.01-diamond.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/19-unfolding.04-run.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "finite_systems_1d/03-He-Hartree-Fock.01-gs.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/05-adw.02-unocc.inp",
      "optimal_control/04-box.01-ground_state.inp",
      "optimal_control/10-current.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.02-unocc.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.01-ground_state.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/06-zbr98.01-ground_state.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/02-sym_doublewell.02-unocc.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/05-adw.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/04-box.02-unocc.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.04-gs-mp.inp",
      "optimal_control/01-asym_doublewell.01-ground_state.inp",
      "optimal_control/03-localtarget.01-gs.inp",
      "optimal_control/09-density+current.01-ground_state.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp",
      "components/22-density_calc.01-Si.inp",
      "components/16-hartree_3d_psolver.02-psolver.inp",
      "components/20-dft_u.04-complex_submesh.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/10-hartree_pfft.03-3d_1d_periodic.inp",
      "components/16-hartree_3d_psolver.01-psolver.inp",
      "components/10-hartree_pfft.05-3d_2d_periodic.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/21-hamiltonian_apply.01-Si.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/05-hartree_3d_fft.03-3d_1d_periodic.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "components/19-hgh_soc.01-3d.inp",
      "components/05-hartree_3d_fft.05-3d_2d_periodic.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/14-quadrupole-pot.01-hydrogen-gs.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_restarted.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/12-tddft-currents-to-maxwell.01-benzene-gs.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/01-free-propagation.02-2_pulses_td.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/09-basis_from_states.01-lda.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/11-full_delta.01-gs.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/06-laser.03-velocity_gauge.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.01-Na2.inp",
      "lda_u/05-forces.02-Na2_go.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/06-laser.01-gs.inp",
      "lda_u/10-intersite.01-Na2.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "externalcurrent": {
    "CallLine": "call parse_variable(namespace, 'ExternalCurrent', .false., hm%current_density_ext_flag)",
    "Default": [
      "no"
    ],
    "Description": [
      "If an external current density will be used."
    ],
    "LineNumber": 210,
    "Manuals": [],
    "Name": "ExternalCurrent",
    "Options": [],
    "Section": "Maxwell",
    "Sourcefile": "maxwell/hamiltonian_mxll.F90",
    "Testfiles": [
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "externalsourcebesseloutput": {
    "CallLine": "if (parse_block(namespace, 'ExternalSourceBesselOutput', blk) == 0) then",
    "Default": null,
    "Description": [
      "The ExternalSourceBesselOutput block allows to output analytically calculated fields at a",
      "particular point in space. The columns denote the x, y, and z coordinate of the point.",
      "Please be aware that ExternalSource lives on the grid of the system that it is applied to.",
      "Therefore, it might not be evaluated at every point in space. When comparing, please be sure",
      "to check the log and compare if your required point in space matches the evaluated position.",
      " ",
      "<tt>%ExternalSourceBesselOutput",
      "<br>&nbsp;&nbsp;    -1.0 | 2.0 |  4.0",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 293,
    "Manuals": [],
    "Name": "ExternalSourceBesselOutput",
    "Options": [],
    "Section": "Maxwell",
    "Sourcefile": "maxwell/external_waves.F90",
    "Testfiles": [
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "extrastates": {
    "CallLine": "call parse_variable(namespace, 'ExtraStates', 0, nempty)",
    "Default": [
      "0"
    ],
    "Description": [
      "The number of states is in principle calculated considering the minimum",
      "numbers of states necessary to hold the electrons present in the system.",
      "The number of electrons is",
      "in turn calculated considering the nature of the species supplied in the",
      "<tt>Species</tt> block, and the value of the <tt>ExcessCharge</tt> variable.",
      "However, one may command <tt>Octopus</tt> to use more states, which is necessary if one wants to",
      "use fractional occupational numbers, either fixed from the beginning through",
      "the <tt>Occupations</tt> block or by prescribing",
      "an electronic temperature with <tt>Smearing</tt>, or in order to calculate",
      "excited states (including with <tt>CalculationMode = unocc</tt>)."
    ],
    "LineNumber": 352,
    "Manuals": [],
    "Name": "ExtraStates",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "finite_systems_2d/01-quadratic_box.04-spin_polarized.inp",
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/09-magnetic_2d.01-no_field.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/05-polarizability.02-sternheimer.inp",
      "linear_response/05-polarizability.01-gs.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/05-polarizability.03-finite-diff.inp",
      "linear_response/07-casida-photons.06-spectrum.inp",
      "linear_response/07-casida-photons.01-gs.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/07-casida-photons.02-photons.inp",
      "linear_response/07-casida-photons.04-elpa.inp",
      "finite_systems_3d/14-fullerene_unpacked.02-td-unpacked.inp",
      "finite_systems_3d/42-full_potential_anc.04-fr-zora.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/03-magnetic.01-gs-unpolarized.inp",
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/42-full_potential_anc.02-sc-zora.inp",
      "finite_systems_3d/14-fullerene_unpacked.03-td-packed.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/24-o2-spin.01-gs.inp",
      "finite_systems_3d/39-adsic.02-polarized.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/42-full_potential_anc.01-gs.inp",
      "finite_systems_3d/22-preconditioner.05-multigrid_rmmdiis.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/41-gpu-bug.01-C.inp",
      "finite_systems_3d/28-carbon_big_box.01-ground_state.inp",
      "finite_systems_3d/09-spinors.03-rmmdiis_extra_states.inp",
      "finite_systems_3d/42-full_potential_anc.03-sf-zora.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "finite_systems_3d/20-eigensolver.05-rmmdiis.inp",
      "finite_systems_3d/31-acetylene_b3lyp.01-gs.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.03-unocc.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "finite_systems_3d/14-fullerene_unpacked.01-gs.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/42-full_potential_anc.05-zora-error.inp",
      "finite_systems_3d/39-adsic.01-unpolarized.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "real_time/11-tdmagnetic.02-unocc.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "pseudopotentials/06-carbon_dojo_pbe.01-gs.inp",
      "pseudopotentials/16-platinum_psp8.01-gs.inp",
      "pseudopotentials/18-Bi_pseudodojo_fr.01-gs.inp",
      "pseudopotentials/08-carbon_fhi.01-gs.inp",
      "pseudopotentials/07-carbon_dojo_lda.01-gs.inp",
      "pseudopotentials/05-carbon_dojo_pbesol.01-gs.inp",
      "pseudopotentials/04-carbon_dojo_psml.01-gs.inp",
      "pseudopotentials/15-calcium_psp8_sic.01-gs.inp",
      "pseudopotentials/09-carbon_cpi.01-gs.inp",
      "pseudopotentials/02-cu2_hgh.01_gs.inp",
      "pseudopotentials/02-cu2_hgh.02_gs_current.inp",
      "pseudopotentials/14-carbon_dojo_psp8.01-gs.inp",
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "tutorials/06-octopus_basics-periodic_systems.02-silicon_converged.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.01-N_atom.inp",
      "tutorials/02-octopus_basics-basic_input_options.01-N_atom.inp",
      "tutorials/06-octopus_basics-periodic_systems.01-silicon.inp",
      "tutorials/06-octopus_basics-periodic_systems.03-bandstructure.inp",
      "functionals/02-xc_2d.gga_b86_mgc.inp",
      "functionals/16-dressed-rdmft.03-rdmft.inp",
      "functionals/06-rdmft.03-gs_grid.inp",
      "functionals/10-vdw_d3_dna.01-gs_novdw.inp",
      "functionals/02-xc_2d.gga_b86.inp",
      "functionals/06-rdmft.01-ip.inp",
      "functionals/16-dressed-rdmft.02-hf.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "functionals/02-xc_2d.lda_amgb.inp",
      "functionals/02-xc_2d.lda_prm.inp",
      "functionals/16-dressed-rdmft.01-ip.inp",
      "functionals/02-xc_2d.gga_b88.inp",
      "functionals/02-xc_2d.gga_pbe.inp",
      "functionals/06-rdmft.02-gs_basis.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/04-silicon.02-kdotp.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/22-berry.02-cubic_Si.inp",
      "periodic_systems/11-silicon_force.01-gs.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/11-silicon_force.02-nlcc.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/27-Ar.02-kdotp.inp",
      "periodic_systems/13-primitive.03-bcc_iron.inp",
      "periodic_systems/26-Na.01-gs.inp",
      "periodic_systems/22-berry.01-cubic_Si_gs.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/01-free_electrons.02-unocc.inp",
      "periodic_systems/19-unfolding.03-unocc.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/02-cosine_potential.02-unocc.inp",
      "periodic_systems/05-lithium.01-gs.inp",
      "periodic_systems/32-photodoping.01-gs.inp",
      "periodic_systems/07-mgga.02-tb09_gs_nosymm.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/20-masked_periodic_boundaries.01-graphene.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/27-Ar.01-gs.inp",
      "periodic_systems/24-hartree_fock_1D.01-gs.inp",
      "periodic_systems/09-etsf_io.01-gs.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/26-Na.02-kdotp.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/04-silicon.03-emresp.inp",
      "periodic_systems/10-berkeleygw.02-unocc.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/15-bandstructure.02-unocc.inp",
      "periodic_systems/23-hybrids.01-ace.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/13-primitive.01-diamond.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/19-unfolding.04-run.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "finite_systems_1d/09-morse.02-unocc.inp",
      "finite_systems_1d/04-lithium.02-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.03-dummy.inp",
      "finite_systems_1d/09-morse.01-gs.inp",
      "finite_systems_1d/02-neon_mpi.01-ground_state-IP_par_domains.inp",
      "finite_systems_1d/03-He-Hartree-Fock.01-gs.inp",
      "finite_systems_1d/01-hydrogen.02-excited_state.inp",
      "finite_systems_1d/02-neon_mpi.02-ground_state-kli_par_domains.inp",
      "finite_systems_1d/04-lithium.01-ground_state.inp",
      "optimal_control/05-adw.02-unocc.inp",
      "optimal_control/01-asym_doublewell.02-unocc.inp",
      "optimal_control/06-zbr98.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.02-unocc.inp",
      "optimal_control/04-box.02-unocc.inp",
      "optimal_control/03-localtarget.04-gs-mp.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp",
      "components/08-gs.01-cgs_real.inp",
      "components/10-hartree_pfft.06-fft-parstates.inp",
      "components/08-gs.05-drcgs_real.inp",
      "components/15-cholesky_parallel.01-real.inp",
      "components/08-gs.03-mgs_real.inp",
      "components/07-cholesky_serial.01-real.inp",
      "components/07-cholesky_serial.03-parindep.inp",
      "components/15-cholesky_parallel.02-complex.inp",
      "components/08-gs.02-cgs_complex.inp",
      "components/07-cholesky_serial.02-complex.inp",
      "components/08-gs.04-mgs_complex.inp",
      "components/08-gs.06-drcgs_complex.inp",
      "maxwell/14-quadrupole-pot.01-hydrogen-gs.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/09-basis_from_states.01-lda.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/11-full_delta.01-gs.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/10-intersite.01-Na2.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "extrastatesinpercent": {
    "CallLine": "call parse_variable(namespace, 'ExtraStatesInPercent', M_ZERO, nempty_percent)",
    "Default": [
      "0"
    ],
    "Description": [
      "This variable allows to set the number of extra/empty states as percentage of the",
      "used occupied states. For example, a value 35 for ExtraStatesInPercent would amount",
      "to ceiling(35/100 * nstates) extra states, where nstates denotes the amount of occupied",
      "states Octopus is using for the system at hand."
    ],
    "LineNumber": 374,
    "Manuals": [],
    "Name": "ExtraStatesInPercent",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "finite_systems_3d/10-fullerene.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "extrastatestoconverge": {
    "CallLine": "call parse_variable(namespace, 'ExtraStatesToConverge', nempty, nempty_conv)",
    "Default": [
      "0"
    ],
    "Description": [
      "Only for unocc calculations.",
      "Specifies the number of extra states that will be considered for reaching the convergence.",
      "Together with <tt>ExtraStates</tt>, one can have some more states which will not be",
      "considered for the convergence criteria, thus making the convergence of the",
      "unocc calculation faster.",
      "By default, all extra states need to be converged."
    ],
    "LineNumber": 398,
    "Manuals": [],
    "Name": "ExtraStatesToConverge",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "tutorials/06-octopus_basics-periodic_systems.03-bandstructure.inp",
      "periodic_systems/19-unfolding.03-unocc.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "lda_u/01-nio.02-unocc.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "fftlibrary": {
    "CallLine": "call parse_variable(namespace, 'FFTLibrary', fft_default, fft_default_lib)",
    "Default": [
      "fftw"
    ],
    "Description": [
      "(experimental) You can select the FFT library to use."
    ],
    "LineNumber": 272,
    "Manuals": [],
    "Name": "FFTLibrary",
    "Options": [
      {
        "Description": [
          "Uses FFTW3 library."
        ],
        "Name": "fftw",
        "Value": "1"
      },
      {
        "Description": [
          "(experimental) Uses PFFT library, which has to be linked."
        ],
        "Name": "pfft",
        "Value": "2"
      },
      {
        "Description": [
          "(experimental) Uses a GPU accelerated library. This only",
          "works if Octopus was compiled with Cuda or OpenCL support."
        ],
        "Name": "accel",
        "Value": "3"
      }
    ],
    "Section": "Mesh::FFTs",
    "Sourcefile": "math/fft.F90",
    "Testfiles": [
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "components/10-hartree_pfft.03-3d_1d_periodic.inp",
      "components/11-hartree_cl.01-fft.inp",
      "components/10-hartree_pfft.05-3d_2d_periodic.inp",
      "components/10-hartree_pfft.06-fft-parstates.inp",
      "components/10-hartree_pfft.04-3d_3d_periodic.inp",
      "components/10-hartree_pfft.02-fft_corrected.inp",
      "components/10-hartree_pfft.01-fft.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "fftoptimize": {
    "CallLine": "call parse_variable(namespace, 'FFTOptimize', .true., fft_optimize)",
    "Default": [
      "yes"
    ],
    "Description": [
      "Should <tt>octopus</tt> optimize the FFT dimensions?",
      "This means that the mesh to which FFTs are applied is not taken to be as small",
      "as possible: some points may be added to each direction in order to get a \"good number\"",
      "for the performance of the FFT algorithm.",
      "The best FFT grid dimensions are given by <math>2^a 3^b 5^c 7^d 11^e 13^f</math>",
      "where <math>a,b,c,d</math> are arbitrary and <math>e,f</math> are 0 or 1.",
      "(<a href=http://www.fftw.org/doc/Complex-DFTs.html>ref</a>).",
      "In some cases, namely when using",
      "the split-operator, or Suzuki-Trotter propagators, this option should be turned off.",
      "For spatial FFTs in periodic directions, the grid is never optimized, but a warning will",
      "be written if the number is not good, with a suggestion of a better one to use, so you",
      "can try a different spacing if you want to get a good number."
    ],
    "LineNumber": 213,
    "Manuals": [],
    "Name": "FFTOptimize",
    "Options": [],
    "Section": "Mesh::FFTs",
    "Sourcefile": "math/fft.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "fftprepareplan": {
    "CallLine": "call parse_variable(namespace, 'FFTPreparePlan', FFTW_ESTIMATE, fft_prepare_plan)",
    "Default": [
      "fftw_measure"
    ],
    "Description": [
      "The FFTs are performed in octopus with the help of <a href=http://www.fftw.org>FFTW</a> and similar packages.",
      "Before doing the actual computations, this package prepares a \"plan\", which means that",
      "the precise numerical strategy to be followed to compute the FFT is machine/compiler-dependent,",
      "and therefore the software attempts to figure out which is this precise strategy (see the",
      "FFTW documentation for details). This plan preparation, which has to be done for each particular",
      "FFT shape, can be done exhaustively and carefully (slow), or merely estimated. Since this is",
      "a rather critical numerical step, by default it is done carefully, which implies a longer initial",
      "initialization, but faster subsequent computations. You can change this behaviour by changing",
      "this <tt>FFTPreparePlan</tt> variable, and in this way you can force FFTW to do a fast guess or",
      "estimation of which is the best way to perform the FFT."
    ],
    "LineNumber": 249,
    "Manuals": [],
    "Name": "FFTPreparePlan",
    "Options": [
      {
        "Description": [
          "This plan implies a longer initialization, but involves a more careful analysis",
          "of the strategy to follow, and therefore more efficient FFTs. A side effect of the runtime",
          "choices is that this plan can introduce slight numerical fluctuations between runs."
        ],
        "Name": "fftw_measure",
        "Value": "0"
      },
      {
        "Description": [
          "This is the \"fast initialization\" scheme, in which the plan is merely guessed from \"reasonable\"",
          "assumptions. This is the default option, as it guarantees stable results"
        ],
        "Name": "fftw_estimate",
        "Value": "64"
      },
      {
        "Description": [
          "It is like fftw_measure, but considers a wider range of algorithms and often produces a",
          "\"more optimal\" plan (especially for large transforms), but at the expense of several times",
          "longer planning time (especially for large transforms)."
        ],
        "Name": "fftw_patient",
        "Value": "32"
      },
      {
        "Description": [
          "It is like fftw_patient, but considers an even wider range of algorithms,",
          "including many that we think are unlikely to be fast, to produce the most optimal",
          "plan but with a substantially increased planning time."
        ],
        "Name": "fftw_exhaustive",
        "Value": "8"
      }
    ],
    "Section": "Mesh::FFTs",
    "Sourcefile": "math/fft.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "filterpotentials": {
    "CallLine": "call parse_variable(namespace, 'FilterPotentials', PS_FILTER_TS, filter)",
    "Default": [
      "filter_ts"
    ],
    "Description": [
      "<tt>Octopus</tt> can filter the pseudopotentials so that they no",
      "longer contain Fourier components larger than the mesh itself. This is",
      "very useful to decrease the egg-box effect, and so should be used in",
      "all instances where atoms move (<i>e.g.</i> geometry optimization,",
      "molecular dynamics, and vibrational modes)."
    ],
    "LineNumber": 152,
    "Manuals": [],
    "Name": "FilterPotentials",
    "Options": [
      {
        "Description": [
          "Do not filter."
        ],
        "Name": "filter_none",
        "Value": "0"
      },
      {
        "Description": [
          "The filter of M. Tafipolsky and R. Schmid, <i>J. Chem. Phys.</i> <b>124</b>, 174102 (2006)."
        ],
        "Name": "filter_TS",
        "Value": "2"
      },
      {
        "Description": [
          "The filter of E. L. Briggs, D. J. Sullivan, and J. Bernholc, <i>Phys. Rev. B</i> <b>54</b>, 14362 (1996)."
        ],
        "Name": "filter_BSB",
        "Value": "3"
      }
    ],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/epot.F90",
    "Testfiles": [
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/09-magnetic_2d.01-no_field.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "linear_response/03-vdw_sternheimer.02-vdw.inp",
      "linear_response/02-h2o_pol_lr.04_h2o_susc.inp",
      "linear_response/02-h2o_pol_lr.01_h2o_gs.inp",
      "linear_response/02-h2o_pol_lr.03_h2o_dyn_pol_cmplx.inp",
      "linear_response/02-h2o_pol_lr.02_h2o_dyn_pol.inp",
      "linear_response/02-h2o_pol_lr.05_h2o_magn_opt.inp",
      "linear_response/03-vdw_sternheimer.01-ground_state.inp",
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/34-walltime.02-restart_gs.inp",
      "finite_systems_3d/06-restart.06-td_calc.inp",
      "finite_systems_3d/05-output.02-gs.inp",
      "finite_systems_3d/03-magnetic.01-gs-unpolarized.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/20-eigensolver.01-cg.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/24-o2-spin.01-gs.inp",
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/35-slater_x.01-gs.inp",
      "finite_systems_3d/06-restart.05-restart_gs.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/06-restart.01-gs_mixrho.inp",
      "finite_systems_3d/23-go-na2.02-simplex.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/36-kli_x.01-gs.inp",
      "finite_systems_3d/06-restart.07-restart_td_calc.inp",
      "finite_systems_3d/23-go-na2.04-fire_restart.inp",
      "finite_systems_3d/20-eigensolver.03-plan.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/23-go-na2.03-fire.inp",
      "finite_systems_3d/23-go-na2.01-steep.inp",
      "finite_systems_3d/09-spinors.03-rmmdiis_extra_states.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/34-walltime.03-td_walltime.inp",
      "finite_systems_3d/34-walltime.04-restart_td.inp",
      "finite_systems_3d/23-go-na2.05-constrains.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "finite_systems_3d/20-eigensolver.05-rmmdiis.inp",
      "finite_systems_3d/06-restart.04-restart_gs_mixvhxc.inp",
      "finite_systems_3d/04-jellium.01-ground_state.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/06-restart.02-restart_gs_mixrho.inp",
      "finite_systems_3d/34-walltime.01-gs_walltime.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.03-unocc.inp",
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/06-restart.03-gs_mixvhxc.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "real_time/17-absorption-spin_symmetry.01-gs.inp",
      "real_time/05-time_propagation.04-td_domains_states-reorder_ranks.inp",
      "real_time/05-time_propagation.01-gs.inp",
      "real_time/08-laser.01-ground_state.inp",
      "real_time/05-time_propagation.06-td_fast_md.inp",
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/12-absorption.01-gs.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/05-time_propagation.03-td_domains_states.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/13-absorption-spin.03-td-restart.inp",
      "real_time/24-adsic_freeze_orbitals.01-gs.inp",
      "real_time/05-time_propagation.05-td_md.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/13-absorption-spin.01-gs.inp",
      "real_time/05-time_propagation.02-td_domains.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "real_time/09-angular_momentum.04-rotatory_strength.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "real_time/12-absorption.03-td-restart.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "pseudopotentials/17-hgh_occupations.01-W.inp",
      "pseudopotentials/17-hgh_occupations.02-Au.inp",
      "pseudopotentials/18-Bi_pseudodojo_fr.01-gs.inp",
      "pseudopotentials/17-hgh_occupations.04-Au_sc.inp",
      "pseudopotentials/17-hgh_occupations.03-W_sc.inp",
      "pseudopotentials/10-helium_upf.02-gs_filter_ts.inp",
      "pseudopotentials/01-sg15-h.01-gs.inp",
      "pseudopotentials/08-carbon_fhi.01-gs.inp",
      "pseudopotentials/03-nlcc.01-Fatom.inp",
      "pseudopotentials/10-helium_upf.03-gs_filter_bsb.inp",
      "pseudopotentials/10-helium_upf.01-gs_nofilter.inp",
      "pseudopotentials/09-carbon_cpi.01-gs.inp",
      "symmetries/05-hexagonal.23-spg165.inp",
      "symmetries/02-monoclinic.05-spg7.inp",
      "symmetries/05-hexagonal.41-spg183.inp",
      "symmetries/02-monoclinic.04-spg6.inp",
      "symmetries/03-orthorombic.14-spg29.inp",
      "symmetries/04-tetragonal.27-spg101.inp",
      "symmetries/06-cubic.29-spg223.inp",
      "symmetries/03-orthorombic.53-spg68.inp",
      "symmetries/04-tetragonal.33-spg107.inp",
      "symmetries/02-monoclinic.07-spg9.inp",
      "symmetries/06-cubic.04-spg198.inp",
      "symmetries/04-tetragonal.51-spg125.inp",
      "symmetries/04-tetragonal.03-spg77.inp",
      "symmetries/03-orthorombic.31-spg46.inp",
      "symmetries/04-tetragonal.08-spg82.inp",
      "symmetries/03-orthorombic.05-spg20.inp",
      "symmetries/04-tetragonal.36-spg110.inp",
      "symmetries/05-hexagonal.15-spg157.inp",
      "symmetries/02-monoclinic.12-spg14.inp",
      "symmetries/03-orthorombic.19-spg34.inp",
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "symmetries/05-hexagonal.28-spg170.inp",
      "symmetries/04-tetragonal.23-spg97.inp",
      "symmetries/04-tetragonal.48-spg122.inp",
      "symmetries/04-tetragonal.21-spg95.inp",
      "symmetries/06-cubic.21-spg215.inp",
      "symmetries/02-monoclinic.09-spg11.inp",
      "symmetries/04-tetragonal.18-spg92.inp",
      "symmetries/04-tetragonal.52-spg126.inp",
      "symmetries/03-orthorombic.55-spg70.inp",
      "symmetries/03-orthorombic.09-spg24.inp",
      "symmetries/04-tetragonal.62-spg136.inp",
      "symmetries/02-monoclinic.08-spg10.inp",
      "symmetries/04-tetragonal.38-spg112.inp",
      "symmetries/04-tetragonal.49-spg123.inp",
      "symmetries/03-orthorombic.20-spg35.inp",
      "symmetries/06-cubic.05-spg199.inp",
      "symmetries/06-cubic.35-spg229.inp",
      "symmetries/02-monoclinic.03-spg5.inp",
      "symmetries/02-monoclinic.06-spg8.inp",
      "symmetries/06-cubic.06-spg200.inp",
      "symmetries/04-tetragonal.57-spg131.inp",
      "symmetries/04-tetragonal.45-spg119.inp",
      "symmetries/05-hexagonal.49-spg191.inp",
      "symmetries/03-orthorombic.26-spg41.inp",
      "symmetries/06-cubic.15-spg209.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/06-cubic.08-spg202.inp",
      "symmetries/04-tetragonal.35-spg109.inp",
      "symmetries/03-orthorombic.07-spg22.inp",
      "symmetries/04-tetragonal.32-spg106.inp",
      "symmetries/04-tetragonal.12-spg86.inp",
      "symmetries/06-cubic.01-spg195.inp",
      "symmetries/05-hexagonal.38-spg180.inp",
      "symmetries/04-tetragonal.01-spg75.inp",
      "symmetries/03-orthorombic.25-spg40.inp",
      "symmetries/04-tetragonal.39-spg113.inp",
      "symmetries/05-hexagonal.02-spg144.inp",
      "symmetries/05-hexagonal.06-spg148.inp",
      "symmetries/06-cubic.32-spg226.inp",
      "symmetries/03-orthorombic.47-spg62.inp",
      "symmetries/05-hexagonal.20-spg162.inp",
      "symmetries/06-cubic.24-spg218.inp",
      "symmetries/06-cubic.30-spg224.inp",
      "symmetries/05-hexagonal.12-spg154.inp",
      "symmetries/05-hexagonal.07-spg149.inp",
      "symmetries/05-hexagonal.27-spg169.inp",
      "symmetries/03-orthorombic.45-spg60.inp",
      "symmetries/05-hexagonal.19-spg161.inp",
      "symmetries/05-hexagonal.16-spg158.inp",
      "symmetries/05-hexagonal.48-spg190.inp",
      "symmetries/06-cubic.09-spg203.inp",
      "symmetries/03-orthorombic.24-spg39.inp",
      "symmetries/03-orthorombic.50-spg65.inp",
      "symmetries/06-cubic.34-spg228.inp",
      "symmetries/05-hexagonal.42-spg184.inp",
      "symmetries/03-orthorombic.23-spg38.inp",
      "symmetries/04-tetragonal.13-spg87.inp",
      "symmetries/06-cubic.02-spg196.inp",
      "symmetries/02-monoclinic.13-spg15.inp",
      "symmetries/05-hexagonal.45-spg187.inp",
      "symmetries/05-hexagonal.22-spg164.inp",
      "symmetries/03-orthorombic.43-spg58.inp",
      "symmetries/03-orthorombic.34-spg49.inp",
      "symmetries/04-tetragonal.47-spg121.inp",
      "symmetries/02-monoclinic.02-spg4.inp",
      "symmetries/03-orthorombic.39-spg54.inp",
      "symmetries/04-tetragonal.17-spg91.inp",
      "symmetries/04-tetragonal.22-spg96.inp",
      "symmetries/05-hexagonal.35-spg177.inp",
      "symmetries/03-orthorombic.13-spg28.inp",
      "symmetries/05-hexagonal.13-spg155.inp",
      "symmetries/03-orthorombic.42-spg57.inp",
      "symmetries/06-cubic.12-spg206.inp",
      "symmetries/02-monoclinic.10-spg12.inp",
      "symmetries/06-cubic.07-spg201.inp",
      "symmetries/03-orthorombic.36-spg51.inp",
      "symmetries/05-hexagonal.44-spg186.inp",
      "symmetries/04-tetragonal.04-spg78.inp",
      "symmetries/05-hexagonal.21-spg163.inp",
      "symmetries/04-tetragonal.02-spg76.inp",
      "symmetries/03-orthorombic.22-spg37.inp",
      "symmetries/05-hexagonal.32-spg174.inp",
      "symmetries/03-orthorombic.35-spg50.inp",
      "symmetries/03-orthorombic.17-spg32.inp",
      "symmetries/05-hexagonal.17-spg159.inp",
      "symmetries/03-orthorombic.04-spg19.inp",
      "symmetries/04-tetragonal.20-spg94.inp",
      "symmetries/06-cubic.20-spg214.inp",
      "symmetries/04-tetragonal.65-spg139.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/03-orthorombic.32-spg47.inp",
      "symmetries/03-orthorombic.02-spg17.inp",
      "symmetries/04-tetragonal.15-spg89.inp",
      "symmetries/03-orthorombic.57-spg72.inp",
      "symmetries/03-orthorombic.15-spg30.inp",
      "symmetries/03-orthorombic.49-spg64.inp",
      "symmetries/06-cubic.11-spg205.inp",
      "symmetries/04-tetragonal.30-spg104.inp",
      "symmetries/04-tetragonal.59-spg133.inp",
      "symmetries/03-orthorombic.54-spg69.inp",
      "symmetries/03-orthorombic.41-spg56.inp",
      "symmetries/06-cubic.19-spg213.inp",
      "symmetries/05-hexagonal.05-spg147.inp",
      "symmetries/04-tetragonal.25-spg99.inp",
      "symmetries/03-orthorombic.58-spg73.inp",
      "symmetries/04-tetragonal.43-spg117.inp",
      "symmetries/01-triclinic.02-spg2.inp",
      "symmetries/04-tetragonal.42-spg116.inp",
      "symmetries/05-hexagonal.50-spg192.inp",
      "symmetries/04-tetragonal.68-spg142.inp",
      "symmetries/04-tetragonal.40-spg114.inp",
      "symmetries/05-hexagonal.34-spg176.inp",
      "symmetries/04-tetragonal.63-spg137.inp",
      "symmetries/06-cubic.31-spg225.inp",
      "symmetries/05-hexagonal.36-spg178.inp",
      "symmetries/05-hexagonal.30-spg172.inp",
      "symmetries/03-orthorombic.48-spg63.inp",
      "symmetries/04-tetragonal.11-spg85.inp",
      "symmetries/05-hexagonal.40-spg182.inp",
      "symmetries/05-hexagonal.11-spg153.inp",
      "symmetries/04-tetragonal.41-spg115.inp",
      "symmetries/01-triclinic.16-spg16.inp",
      "symmetries/04-tetragonal.26-spg100.inp",
      "symmetries/05-hexagonal.24-spg166.inp",
      "symmetries/03-orthorombic.56-spg71.inp",
      "symmetries/06-cubic.16-spg210.inp",
      "symmetries/06-cubic.25-spg219.inp",
      "symmetries/03-orthorombic.51-spg66.inp",
      "symmetries/05-hexagonal.47-spg189.inp",
      "symmetries/04-tetragonal.24-spg98.inp",
      "symmetries/05-hexagonal.51-spg193.inp",
      "symmetries/03-orthorombic.37-spg52.inp",
      "symmetries/05-hexagonal.39-spg181.inp",
      "symmetries/03-orthorombic.27-spg42.inp",
      "symmetries/04-tetragonal.58-spg132.inp",
      "symmetries/04-tetragonal.31-spg105.inp",
      "symmetries/04-tetragonal.06-spg80.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "symmetries/05-hexagonal.10-spg152.inp",
      "symmetries/05-hexagonal.01-spg143.inp",
      "symmetries/05-hexagonal.04-spg146.inp",
      "symmetries/04-tetragonal.19-spg93.inp",
      "symmetries/03-orthorombic.08-spg23.inp",
      "symmetries/07-symmetrization_lda.01-spg2_sym.inp",
      "symmetries/04-tetragonal.29-spg103.inp",
      "symmetries/06-cubic.27-spg221.inp",
      "symmetries/04-tetragonal.56-spg130.inp",
      "symmetries/06-cubic.36-spg230.inp",
      "symmetries/04-tetragonal.55-spg129.inp",
      "symmetries/04-tetragonal.44-spg118.inp",
      "symmetries/04-tetragonal.53-spg127.inp",
      "symmetries/03-orthorombic.11-spg26.inp",
      "symmetries/05-hexagonal.14-spg156.inp",
      "symmetries/06-cubic.33-spg227.inp",
      "symmetries/05-hexagonal.43-spg185.inp",
      "symmetries/03-orthorombic.40-spg55.inp",
      "symmetries/06-cubic.13-spg207.inp",
      "symmetries/06-cubic.03-spg197.inp",
      "symmetries/06-cubic.14-spg208.inp",
      "symmetries/02-monoclinic.11-spg13.inp",
      "symmetries/06-cubic.17-spg211.inp",
      "symmetries/03-orthorombic.30-spg45.inp",
      "symmetries/06-cubic.28-spg222.inp",
      "symmetries/05-hexagonal.46-spg188.inp",
      "symmetries/03-orthorombic.16-spg31.inp",
      "symmetries/06-cubic.23-spg217.inp",
      "symmetries/04-tetragonal.10-spg84.inp",
      "symmetries/06-cubic.18-spg212.inp",
      "symmetries/04-tetragonal.66-spg140.inp",
      "symmetries/04-tetragonal.16-spg90.inp",
      "symmetries/04-tetragonal.61-spg135.inp",
      "symmetries/03-orthorombic.46-spg61.inp",
      "symmetries/01-triclinic.01-spg1.inp",
      "symmetries/03-orthorombic.29-spg44.inp",
      "symmetries/04-tetragonal.67-spg141.inp",
      "symmetries/03-orthorombic.18-spg33.inp",
      "symmetries/05-hexagonal.33-spg175.inp",
      "symmetries/05-hexagonal.25-spg167.inp",
      "symmetries/04-tetragonal.64-spg138.inp",
      "symmetries/03-orthorombic.01-spg16.inp",
      "symmetries/03-orthorombic.21-spg36.inp",
      "symmetries/05-hexagonal.52-spg194.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "symmetries/06-cubic.26-spg220.inp",
      "symmetries/03-orthorombic.52-spg67.inp",
      "symmetries/04-tetragonal.37-spg111.inp",
      "symmetries/04-tetragonal.28-spg102.inp",
      "symmetries/05-hexagonal.26-spg168.inp",
      "symmetries/05-hexagonal.31-spg173.inp",
      "symmetries/03-orthorombic.59-spg74.inp",
      "symmetries/03-orthorombic.33-spg48.inp",
      "symmetries/04-tetragonal.50-spg124.inp",
      "symmetries/05-hexagonal.37-spg179.inp",
      "symmetries/04-tetragonal.60-spg134.inp",
      "symmetries/03-orthorombic.10-spg25.inp",
      "symmetries/05-hexagonal.08-spg150.inp",
      "symmetries/03-orthorombic.03-spg18.inp",
      "symmetries/05-hexagonal.29-spg171.inp",
      "symmetries/04-tetragonal.54-spg128.inp",
      "symmetries/03-orthorombic.44-spg59.inp",
      "symmetries/05-hexagonal.03-spg145.inp",
      "symmetries/05-hexagonal.18-spg160.inp",
      "symmetries/03-orthorombic.06-spg21.inp",
      "symmetries/04-tetragonal.14-spg88.inp",
      "symmetries/04-tetragonal.34-spg108.inp",
      "symmetries/05-hexagonal.09-spg151.inp",
      "symmetries/03-orthorombic.12-spg27.inp",
      "symmetries/03-orthorombic.28-spg43.inp",
      "symmetries/04-tetragonal.46-spg120.inp",
      "symmetries/03-orthorombic.38-spg53.inp",
      "symmetries/02-monoclinic.01-spg3.inp",
      "symmetries/06-cubic.22-spg216.inp",
      "symmetries/06-cubic.10-spg204.inp",
      "symmetries/04-tetragonal.07-spg81.inp",
      "symmetries/04-tetragonal.09-spg83.inp",
      "symmetries/04-tetragonal.05-spg79.inp",
      "photo_electron/05-pfft.01-gs.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "functionals/18-mgga.01-br89.inp",
      "functionals/03-xc.gga_x_lg93.inp",
      "functionals/03-xc.gga_xc_mpwlyp1w.inp",
      "functionals/03-xc.lda_c_pw.inp",
      "functionals/03-xc.exx.inp",
      "functionals/03-xc.gga_x_rpbe.inp",
      "functionals/03-xc.gga_xc_edf1.inp",
      "functionals/03-xc.lda_c_hl.inp",
      "functionals/03-xc.gga_xc_hcth_120.inp",
      "functionals/03-xc.gga_c_pbe_jrgx.inp",
      "functionals/03-xc.gga_xc_hcth_93.inp",
      "functionals/03-xc.gga_c_pbe_sol.inp",
      "functionals/03-xc.mvorb_hse06_fock.inp",
      "functionals/03-xc.lda_c_wigner.inp",
      "functionals/03-xc.gga_x_mpbe.inp",
      "functionals/05-ks_inversion.03-inversion.inp",
      "functionals/03-xc.gga_xc_xlyp.inp",
      "functionals/03-xc.gga_x_am05.inp",
      "functionals/03-xc.01-gs.inp",
      "functionals/03-xc.gga_x_g96.inp",
      "functionals/03-xc.gga_x_b86.inp",
      "functionals/03-xc.gga_x_pbek1_vdw.inp",
      "functionals/18-mgga.02-br89_oep.inp",
      "functionals/03-xc.gga_xc_pbelyp1w.inp",
      "functionals/03-xc.gga_x_b86_mgc.inp",
      "functionals/03-xc.gga_c_xpbe.inp",
      "functionals/03-xc.pbe0_fock.inp",
      "functionals/03-xc.gga_x_b88.inp",
      "functionals/03-xc.lda_c_ob_pz.inp",
      "functionals/03-xc.gga_x_ft97_b.inp",
      "functionals/03-xc.lda_c_ob_pw.inp",
      "functionals/03-xc.lda_c_pz_mod.inp",
      "functionals/05-ks_inversion.02-two_particle.inp",
      "functionals/03-xc.gga_x_optb88_vdw.inp",
      "functionals/03-xc.gga_c_pw91.inp",
      "functionals/03-xc.slater.inp",
      "functionals/03-xc.lda_xc_teter93.inp",
      "functionals/03-xc.sic_pz.inp",
      "functionals/22-xc_lrx.inp",
      "functionals/03-xc.gga_x_xpbe.inp",
      "functionals/03-xc.pbe0_oep.inp",
      "functionals/03-xc.gga_xc_hcth_147.inp",
      "functionals/03-xc.gga_x_pbe_jsjr.inp",
      "functionals/03-xc.gga_c_lm.inp",
      "functionals/03-xc.gga_x_pbe_r.inp",
      "functionals/03-xc.lda_c_vbh.inp",
      "functionals/03-xc.gga_x_pbea.inp",
      "functionals/03-xc.lda_x.inp",
      "functionals/03-xc.gga_x_pw91.inp",
      "functionals/03-xc.b3lyp_fock.inp",
      "functionals/03-xc.gga_x_ft97_a.inp",
      "functionals/03-xc.gga_x_pw86.inp",
      "functionals/03-xc.lda_c_rpa.inp",
      "functionals/03-xc.b3lyp_oep.inp",
      "functionals/03-xc.gga_x_dk87_r2.inp",
      "functionals/03-xc.gga_c_p86.inp",
      "functionals/03-xc.lda_c_vwn_rpa.inp",
      "functionals/03-xc.lda_c_pw_mod.inp",
      "functionals/03-xc.lda_c_vwn.inp",
      "functionals/03-xc.kli.inp",
      "functionals/03-xc.lda_c_pz.inp",
      "functionals/03-xc.lda_c_xalpha.inp",
      "functionals/03-xc.lda_c_gl.inp",
      "functionals/03-xc.gga_x_bayesian.inp",
      "functionals/03-xc.gga_xc_b97_d.inp",
      "functionals/03-xc.gga_c_pbe.inp",
      "functionals/03-xc.gga_x_lb.inp",
      "functionals/03-xc.gga_x_pbe_sol.inp",
      "functionals/03-xc.gga_c_lyp.inp",
      "functionals/03-xc.gga_c_am05.inp",
      "functionals/03-xc.gga_x_mpw91.inp",
      "functionals/03-xc.gga_x_pbe.inp",
      "functionals/03-xc.gga_xc_pbe1w.inp",
      "functionals/03-xc.gga_x_optpbe_vdw.inp",
      "functionals/03-xc.gga_xc_hcth_407.inp",
      "functionals/03-xc.gga_x_dk87_r1.inp",
      "functionals/03-xc.gga_x_optx.inp",
      "functionals/03-xc.fbex.inp",
      "functionals/03-xc.gga_x_wc.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/04-silicon.02-kdotp.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/11-silicon_force.01-gs.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/11-silicon_force.02-nlcc.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/06-h2o_pol_lr.02_kdotp.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/05-lithium.05-tdtdm.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/06-h2o_pol_lr.01_gs.inp",
      "periodic_systems/19-unfolding.03-unocc.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/05-lithium.01-gs.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "periodic_systems/07-mgga.02-tb09_gs_nosymm.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/09-etsf_io.01-gs.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp",
      "periodic_systems/03-sodium_chain.03-ground_state_disp.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/04-silicon.03-emresp.inp",
      "periodic_systems/10-berkeleygw.02-unocc.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "components/22-density_calc.01-Si.inp",
      "components/20-dft_u.04-complex_submesh.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/21-hamiltonian_apply.01-Si.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/06-laser.03-velocity_gauge.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.01-Na2.inp",
      "lda_u/05-forces.02-Na2_go.inp",
      "lda_u/06-laser.01-gs.inp",
      "lda_u/10-intersite.01-Na2.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "forcecomplex": {
    "CallLine": "call parse_variable(namespace, 'ForceComplex', .false., force)",
    "Default": [
      "no"
    ],
    "Description": [
      "Normally <tt>Octopus</tt> determines automatically the type necessary",
      "for the wavefunctions. When set to yes this variable will",
      "force the use of complex wavefunctions.",
      " ",
      "Warning: This variable is designed for testing and",
      "benchmarking and normal users need not use it."
    ],
    "LineNumber": 606,
    "Manuals": [],
    "Name": "ForceComplex",
    "Options": [],
    "Section": "Execution::Debug",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "components/26-batch_ops.02-jellium-complex.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/23-exponential_apply.01-jellium.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "forcetotalenforce": {
    "CallLine": "call parse_variable(namespace, 'ForceTotalEnforce', .false., ions%force_total_enforce)",
    "Default": [
      "no"
    ],
    "Description": [
      "(Experimental) If this variable is set to \"yes\", then the sum",
      "of the total forces will be enforced to be zero."
    ],
    "LineNumber": 269,
    "Manuals": [],
    "Name": "ForceTotalEnforce",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "ions/ions.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "fromscratch": {
    "CallLine": "call parse_variable(namespace, 'FromScratch', .false., from_scratch)",
    "Default": [
      "false"
    ],
    "Description": [
      "When this variable is set to true, <tt>Octopus</tt> will perform a",
      "calculation from the beginning, without looking for restart",
      "information.",
      "NOTE: If available, mesh partitioning information will be used for",
      "initializing the calculation regardless of the set value for this variable."
    ],
    "LineNumber": 235,
    "Manuals": [],
    "Name": "FromScratch",
    "Options": [],
    "Section": "Execution",
    "Sourcefile": "main/run.F90",
    "Testfiles": [
      "finite_systems_2d/01-quadratic_box.03-hartree+xc.inp",
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_2d/01-quadratic_box.04-spin_polarized.inp",
      "finite_systems_2d/05-spin_precession.01-ground_state.inp",
      "finite_systems_2d/03-helium_atom.02-ground_state.inp",
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/02-fock-darwin.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/01-quadratic_box.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.02-ground_state.inp",
      "finite_systems_2d/07-user_def_box.01-gs.inp",
      "finite_systems_2d/09-magnetic_2d.01-no_field.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "finite_systems_2d/01-quadratic_box.02-hartree.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/03-helium_atom.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "finite_systems_2d/06-gdlib.01-gs.inp",
      "multisystem/05-propagation_beeman.02-three_body.inp",
      "multisystem/06-propagation_expmid.02-three_body.inp",
      "multisystem/03-interactions_creation.03-case3.inp",
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/03-interactions_creation.01-case1.inp",
      "multisystem/05-propagation_beeman.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.01-two_body.inp",
      "multisystem/03-interactions_creation.02-case2.inp",
      "multisystem/12-electronic_subsystem_propagators.01-gs.inp",
      "multisystem/14-lennard-jones.01-classical-particles-N2.inp",
      "multisystem/18-incompatible_timing.01-run.inp",
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/01-nested_systems.02-three_levels.inp",
      "multisystem/01-nested_systems.01-two_levels.inp",
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/06-propagation_expmid.05-two_body_verlet_half.inp",
      "multisystem/16-bomd.01-gs.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "multisystem/04-propagation_verlet.02-three_body.inp",
      "multisystem/10-dftbplus_verlet.01-water.inp",
      "multisystem/99-carbon_hydrogen.01-gs.inp",
      "multisystem/06-propagation_expmid.01-two_body.inp",
      "multisystem/08-coulomb_force.01-classical_helium.inp",
      "multisystem/01-nested_systems.03-four_levels.inp",
      "multisystem/03-interactions_creation.04-case4.inp",
      "multisystem/13-restart_verlet.03-full-run.inp",
      "multisystem/16-bomd.02-td.inp",
      "multisystem/17-lasers.01-length_gauge.inp",
      "multisystem/06-propagation_expmid.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.04-three_body_different_time_steps.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/06-propagation_expmid.06-two_body_verlet.inp",
      "multisystem/05-propagation_beeman.03-two_body_different_time_steps.inp",
      "multisystem/07-lorentz-force.02-charged_particle_in_static_efield.inp",
      "multisystem/15-electronic_system_restart.01-gs.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "multisystem/04-propagation_verlet.03-two_body_different_time_steps.inp",
      "multisystem/99-carbon_hydrogen.02-td.inp",
      "multisystem/05-propagation_beeman.01-two_body.inp",
      "multisystem/02-interaction_graph.01-three_body.inp",
      "multisystem/06-propagation_expmid.03-two_body_different_time_steps.inp",
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/03-vdw_sternheimer.02-vdw.inp",
      "linear_response/02-h2o_pol_lr.04_h2o_susc.inp",
      "linear_response/05-polarizability.02-sternheimer.inp",
      "linear_response/06-vib_modes_fd.01-vib_modes_fd.inp",
      "linear_response/05-polarizability.01-gs.inp",
      "linear_response/02-h2o_pol_lr.01_h2o_gs.inp",
      "linear_response/01-casida.09-spectrum.inp",
      "linear_response/06-vib_modes_fd.01-ground_state.inp",
      "linear_response/04-vib_modes.01-ground_state.inp",
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/05-polarizability.03-finite-diff.inp",
      "linear_response/02-h2o_pol_lr.02_h2o_dyn_pol.inp",
      "linear_response/04-vib_modes.02-vib_modes.inp",
      "linear_response/04-vib_modes.03-vib_modes_restart.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "linear_response/01-casida.01-gs.inp",
      "linear_response/03-vdw_sternheimer.01-ground_state.inp",
      "finite_systems_3d/14-fullerene_unpacked.02-td-unpacked.inp",
      "finite_systems_3d/42-full_potential_anc.04-fr-zora.inp",
      "finite_systems_3d/22-preconditioner.01-none.inp",
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/22-preconditioner.03-jacobi.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/34-walltime.02-restart_gs.inp",
      "finite_systems_3d/06-restart.06-td_calc.inp",
      "finite_systems_3d/05-output.02-gs.inp",
      "finite_systems_3d/16-scfinlcao_std.01-gs.inp",
      "finite_systems_3d/03-magnetic.01-gs-unpolarized.inp",
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/33-cg.02-additional_terms.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/20-eigensolver.01-cg.inp",
      "finite_systems_3d/13-full_potential_hydrogen.02-gs-cg.inp",
      "finite_systems_3d/10-fullerene.01-gs.inp",
      "finite_systems_3d/42-full_potential_anc.02-sc-zora.inp",
      "finite_systems_3d/14-fullerene_unpacked.03-td-packed.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/18-preconditioner_poisson.01-poisson.inp",
      "finite_systems_3d/24-o2-spin.01-gs.inp",
      "finite_systems_3d/39-adsic.02-polarized.inp",
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/35-slater_x.01-gs.inp",
      "finite_systems_3d/06-restart.05-restart_gs.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/22-preconditioner.04-multigrid.inp",
      "finite_systems_3d/06-restart.01-gs_mixrho.inp",
      "finite_systems_3d/33-cg.03-cg_direction.inp",
      "finite_systems_3d/23-go-na2.02-simplex.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/42-full_potential_anc.01-gs.inp",
      "finite_systems_3d/22-preconditioner.05-multigrid_rmmdiis.inp",
      "finite_systems_3d/36-kli_x.01-gs.inp",
      "finite_systems_3d/06-restart.07-restart_td_calc.inp",
      "finite_systems_3d/23-go-na2.04-fire_restart.inp",
      "finite_systems_3d/20-eigensolver.03-plan.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/41-gpu-bug.01-C.inp",
      "finite_systems_3d/28-carbon_big_box.01-ground_state.inp",
      "finite_systems_3d/23-go-na2.03-fire.inp",
      "finite_systems_3d/23-go-na2.01-steep.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/09-spinors.03-rmmdiis_extra_states.inp",
      "finite_systems_3d/42-full_potential_anc.03-sf-zora.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/34-walltime.03-td_walltime.inp",
      "finite_systems_3d/09-spinors.01-ground_state.inp",
      "finite_systems_3d/23-go-na2.05-constrains.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "finite_systems_3d/20-eigensolver.05-rmmdiis.inp",
      "finite_systems_3d/07-spin_orbit_coupling.02-rkb.inp",
      "finite_systems_3d/06-restart.04-restart_gs_mixvhxc.inp",
      "finite_systems_3d/04-jellium.01-ground_state.inp",
      "finite_systems_3d/31-acetylene_b3lyp.01-gs.inp",
      "finite_systems_3d/32-tdpcm_methane.01-ground_state.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/06-restart.02-restart_gs_mixrho.inp",
      "finite_systems_3d/22-preconditioner.02-filter.inp",
      "finite_systems_3d/34-walltime.01-gs_walltime.inp",
      "finite_systems_3d/12-forces.02-N2_gs.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "finite_systems_3d/33-cg.01-orthogonalize_all.inp",
      "finite_systems_3d/37-sternheimer_polarized.02-em_resp.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "finite_systems_3d/14-fullerene_unpacked.01-gs.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/42-full_potential_anc.05-zora-error.inp",
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/06-restart.03-gs_mixvhxc.inp",
      "finite_systems_3d/39-adsic.01-unpolarized.inp",
      "finite_systems_3d/37-sternheimer_polarized.01-gs.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "finite_systems_3d/12-forces.01-N2_gs.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "finite_systems_3d/09-spinors.02-rmmdiis.inp",
      "real_time/18-hhg.01-gs.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/11-tdmagnetic.02-unocc.inp",
      "real_time/17-absorption-spin_symmetry.01-gs.inp",
      "real_time/10-bomd.02-td.inp",
      "real_time/02-propagators.01-gs.inp",
      "real_time/01-propagators.09-magnus.inp",
      "real_time/20-pcm-local-field-absorption.01-gs.inp",
      "real_time/02-propagators.02-cnsparskit.inp",
      "real_time/08-laser.01-ground_state.inp",
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/16-sparskit.01-gs.inp",
      "real_time/01-propagators.07-caetrs.inp",
      "real_time/12-absorption.01-gs.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/09-angular_momentum.03-td_icl.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/06-caetrs.01-gs.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/21-scissor.02-td.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/09-angular_momentum.01-gs.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/01-propagators.11-cfmagnus4.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/10-bomd.01-gs.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/14-absorption-spinors.02-td.inp",
      "real_time/09-angular_momentum.02-td_gipaw.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/01-propagators.08-cn.inp",
      "real_time/15-crank_nicolson.01-gs.inp",
      "real_time/01-propagators.05-etrs_chebyshev.inp",
      "real_time/24-adsic_freeze_orbitals.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/11-tdmagnetic.01-gs.inp",
      "real_time/03-td_self_consistent.01-gs.inp",
      "real_time/01-propagators.06-aetrs.inp",
      "real_time/14-absorption-spinors.01-gs.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/01-propagators.01-gs.inp",
      "real_time/01-propagators.03-etrs_taylor.inp",
      "real_time/03-td_self_consistent.02-etrs.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/01-propagators.02-expmid.inp",
      "real_time/13-absorption-spin.01-gs.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "real_time/01-propagators.10-exprk4.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "real_time/21-scissor.01-gs.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "real_time/02-propagators.04-rungekutta4.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "pseudopotentials/17-hgh_occupations.01-W.inp",
      "pseudopotentials/17-hgh_occupations.02-Au.inp",
      "pseudopotentials/06-carbon_dojo_pbe.01-gs.inp",
      "pseudopotentials/16-platinum_psp8.01-gs.inp",
      "pseudopotentials/18-Bi_pseudodojo_fr.01-gs.inp",
      "pseudopotentials/17-hgh_occupations.04-Au_sc.inp",
      "pseudopotentials/17-hgh_occupations.03-W_sc.inp",
      "pseudopotentials/01-sg15-h.01-gs.inp",
      "pseudopotentials/08-carbon_fhi.01-gs.inp",
      "pseudopotentials/07-carbon_dojo_lda.01-gs.inp",
      "pseudopotentials/03-nlcc.01-Fatom.inp",
      "pseudopotentials/05-carbon_dojo_pbesol.01-gs.inp",
      "pseudopotentials/04-carbon_dojo_psml.01-gs.inp",
      "pseudopotentials/15-calcium_psp8_sic.01-gs.inp",
      "pseudopotentials/09-carbon_cpi.01-gs.inp",
      "pseudopotentials/14-carbon_dojo_psp8.01-gs.inp",
      "photo_electron/05-pfft.01-gs.inp",
      "photo_electron/06-2D.01-Na_gs.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/09-flux_3d.03-Na_gs_cub.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/09-flux_3d.01-Na_gs_sph.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/12-spm_3d.01-Na_gs.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp",
      "errors/01-run_mode.01-one_shot.inp",
      "tutorials/06-octopus_basics-periodic_systems.02-silicon_converged.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.02-methane.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.03-td_laser.inp",
      "functionals/18-mgga.01-br89.inp",
      "functionals/09-vdw_ts_sc.01-gs.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/05-ks_inversion.03-inversion.inp",
      "functionals/08-vdw_ts.01-gs.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/03-xc.01-gs.inp",
      "functionals/18-mgga.02-br89_oep.inp",
      "functionals/01-xc_1d.01-wfs-lda.inp",
      "functionals/06-rdmft.01-ip.inp",
      "functionals/06-rdmft.01-ip.inp",
      "functionals/05-ks_inversion.02-two_particle.inp",
      "functionals/04-oep.01-jellium-lsda.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/05-ks_inversion.01-target_density.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "functionals/04-oep.03-jellium-full_exx.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "functionals/02-xc_2d.lda_prm.inp",
      "functionals/16-dressed-rdmft.01-ip.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "functionals/07-sic.02-scdm.inp",
      "functionals/12-vdw_solid_c6.01-gs_diamond.inp",
      "functionals/11-vdw_d3.01-gs.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/11-silicon_force.01-gs.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/11-silicon_force.02-nlcc.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.02_kdotp.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/13-primitive.03-bcc_iron.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/01-free_electrons.02-unocc.inp",
      "periodic_systems/06-h2o_pol_lr.01_gs.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/01-free_electrons.01-ground_state.inp",
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/02-cosine_potential.02-unocc.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "periodic_systems/32-photodoping.01-gs.inp",
      "periodic_systems/07-mgga.02-tb09_gs_nosymm.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/20-masked_periodic_boundaries.01-graphene.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/24-hartree_fock_1D.01-gs.inp",
      "periodic_systems/31-magnon_1d.01-gs.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/03-sodium_chain.03-ground_state_disp.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/23-hybrids.01-ace.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/13-primitive.01-diamond.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/08-benzene_supercell.01-gs.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "periodic_systems/02-cosine_potential.01-ground_state.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "finite_systems_1d/09-morse.02-unocc.inp",
      "finite_systems_1d/02-neon_mpi.03-td_calc-kli_par_states.inp",
      "finite_systems_1d/04-lithium.02-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.03-dummy.inp",
      "finite_systems_1d/09-morse.01-gs.inp",
      "finite_systems_1d/02-neon_mpi.01-ground_state-IP_par_domains.inp",
      "finite_systems_1d/01-hydrogen.02-excited_state.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.01-ground_state.inp",
      "finite_systems_1d/04-lithium.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/05-adw.02-unocc.inp",
      "optimal_control/04-box.01-ground_state.inp",
      "optimal_control/10-current.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.02-unocc.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.01-ground_state.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/06-zbr98.01-ground_state.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/02-sym_doublewell.02-unocc.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/05-adw.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/04-box.02-unocc.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.04-gs-mp.inp",
      "optimal_control/01-asym_doublewell.01-ground_state.inp",
      "optimal_control/03-localtarget.01-gs.inp",
      "optimal_control/09-density+current.01-ground_state.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.01-1D-Helium-ground-state.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/12-tddft-currents-to-maxwell.01-benzene-gs.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/01-free-propagation.02-2_pulses_td.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/09-basis_from_states.01-lda.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/11-full_delta.01-gs.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/06-laser.03-velocity_gauge.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.01-Na2.inp",
      "lda_u/05-forces.02-Na2_go.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/06-laser.01-gs.inp",
      "lda_u/10-intersite.01-Na2.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "gaugefielddelay": {
    "CallLine": "call parse_variable(namespace, 'GaugeFieldDelay', M_ZERO, this%kicktime)",
    "Default": [
      "0."
    ],
    "Description": [
      "The application of the gauge field acts as a probe of the system. For dynamical",
      "systems one can apply this probe with a delay relative to the start of the simulation."
    ],
    "LineNumber": 203,
    "Manuals": [],
    "Name": "GaugeFieldDelay",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/gauge_field.F90",
    "Testfiles": [
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "gaugefielddynamics": {
    "CallLine": "call parse_variable(namespace, 'GaugeFieldDynamics', OPTION__GAUGEFIELDDYNAMICS__POLARIZATION, this%dynamics)",
    "Default": [
      "polarization"
    ],
    "Description": [
      "This variable select the dynamics of the gauge field used to",
      "apply a finite electric field to periodic systems in",
      "time-dependent runs."
    ],
    "LineNumber": 149,
    "Manuals": [],
    "Name": "GaugeFieldDynamics",
    "Options": [
      {
        "Description": [
          "The gauge field does not have dynamics. The induced polarization field is zero."
        ],
        "Name": "none",
        "Value": "0"
      },
      {
        "Description": [
          "The gauge field follows the dynamic described in",
          "Bertsch et al, Phys. Rev. B 62 7998 (2000)."
        ],
        "Name": "polarization",
        "Value": "1"
      }
    ],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/gauge_field.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "gaugefieldpropagate": {
    "CallLine": "call parse_variable(namespace, 'GaugeFieldPropagate', .false., this%with_gauge_field)",
    "Default": [
      "no"
    ],
    "Description": [
      "Propagate the gauge field with initial condition set by GaugeVectorField or zero if not specified"
    ],
    "LineNumber": 159,
    "Manuals": [],
    "Name": "GaugeFieldPropagate",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/gauge_field.F90",
    "Testfiles": [
      "periodic_systems/14-silicon_shifts.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "gaugevectorfield": {
    "CallLine": "if (parse_block(namespace, 'GaugeVectorField', blk) == 0) then",
    "Default": null,
    "Description": [
      "The gauge vector field is used to include a uniform (but time-dependent)",
      "external electric field in a time-dependent run for",
      "a periodic system. An optional second row specifies the initial",
      "value for the time derivative of the gauge field (which is set",
      "to zero by default). By default this field is not included.",
      "If <tt>KPointsUseSymmetries = yes</tt>, then <tt>SymmetryBreakDir</tt>",
      "must be set in the same direction.",
      "This is used with utility <tt>oct-dielectric_function</tt>",
      "according to GF Bertsch, J-I Iwata, A Rubio, and K Yabana,",
      "<i>Phys. Rev. B</i> <b>62</b>, 7998-8002 (2000)."
    ],
    "LineNumber": 178,
    "Manuals": [],
    "Name": "GaugeVectorField",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/gauge_field.F90",
    "Testfiles": [
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/05-lithium.04-dielectric_function.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "gocenter": {
    "CallLine": "call parse_variable(sys%namespace, 'GOCenter', .false.,  center)",
    "Default": [
      "no"
    ],
    "Description": [
      "(Experimental) If set to yes, Octopus centers the geometry at",
      "every optimization step. It also reduces the degrees of",
      "freedom of the optimization by using the translational",
      "invariance."
    ],
    "LineNumber": 325,
    "Manuals": [],
    "Name": "GOCenter",
    "Options": [],
    "Section": "Calculation Modes::Geometry Optimization",
    "Sourcefile": "main/geom_opt.F90",
    "Testfiles": [
      "finite_systems_3d/23-go-na2.02-simplex.inp",
      "finite_systems_3d/23-go-na2.04-fire_restart.inp",
      "finite_systems_3d/23-go-na2.03-fire.inp",
      "finite_systems_3d/23-go-na2.05-constrains.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.02-Na2_go.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "goconstrains": {
    "Default": null,
    "Description": [
      "If <tt>XYZGOConstrains</tt>, <tt>PDBConstrains</tt>, and <tt>XSFGOConstrains</tt>",
      "are not present, <tt>Octopus</tt> will try to fetch the geometry optimization",
      "contrains from this block. If this block is not present, <tt>Octopus</tt>",
      "will not set any constrains. The format of this block can be",
      "illustrated by this example:",
      " ",
      "<tt>%GOConstrains",
      "<br>&nbsp;&nbsp;'C'  |      1 | 0 | 0",
      "<br>&nbsp;&nbsp;'O'  | &nbsp;1 | 0 | 0",
      "<br>%</tt>",
      " ",
      "Coordinates with a constrain value of 0 will be optimized, while",
      "coordinates with a constrain different from zero will be kept fixed. So,",
      "in this example the x coordinates of both atoms will remain fixed and the",
      "distance between the two atoms along the x axis will be constant.",
      " ",
      "Note: It is important for the constrains to maintain the ordering",
      "in which the atoms were defined in the coordinates specifications.",
      "Moreover, constrains impose fixed absolute coordinates, therefore",
      "constrains are not compatible with GOCenter = yes"
    ],
    "Manuals": [],
    "Name": "GOConstrains",
    "Options": [],
    "Section": "Calculation Modes::Geometry Optimization",
    "Sourcefile": "main/geom_opt.F90",
    "Testfiles": [
      "finite_systems_3d/23-go-na2.05-constrains.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "gofireintegrator": {
    "CallLine": "call parse_variable(sys%namespace, 'GOFireIntegrator', OPTION__GOFIREINTEGRATOR__VERLET, g_opt%fire_integrator)",
    "Default": [
      "verlet"
    ],
    "Description": [
      "The Fire algorithm (<tt>GOMethod = fire</tt>) uses a molecular dynamics",
      "integrator to compute new geometries and velocities.",
      "Currently, two integrator schemes can be selected"
    ],
    "LineNumber": 503,
    "Manuals": [],
    "Name": "GOFireIntegrator",
    "Options": [
      {
        "Description": [
          "The Velocity Verlet algorithm."
        ],
        "Name": "verlet",
        "Value": "1"
      },
      {
        "Description": [
          "The Euler method."
        ],
        "Name": "euler",
        "Value": "0"
      }
    ],
    "Section": "Calculation Modes::Geometry Optimization",
    "Sourcefile": "main/geom_opt.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "gofiremass": {
    "CallLine": "call parse_variable(sys%namespace, 'GOFireMass', M_ONE*unit_amu%factor, g_opt%fire_mass, unit = unit_amu)",
    "Default": [
      "1.0",
      "amu"
    ],
    "Description": [
      "The Fire algorithm (<tt>GOMethod = fire</tt>) assumes that all degrees of freedom",
      "are comparable. All the velocities should be on the same",
      "scale,  which  for  heteronuclear  systems  can  be  roughly",
      "achieved by setting all the atom masses equal, to the value",
      "specified by this variable.",
      "By default the mass of a proton is selected (1 amu).",
      "However, a selection of <tt>GOFireMass = 0.01</tt> can, in manys systems,",
      "speed up the geometry optimization procedure.",
      "If <tt>GOFireMass</tt> <= 0, the masses of each",
      "species will be used."
    ],
    "LineNumber": 488,
    "Manuals": [],
    "Name": "GOFireMass",
    "Options": [],
    "Section": "Calculation Modes::Geometry Optimization",
    "Sourcefile": "main/geom_opt.F90",
    "Testfiles": [
      "finite_systems_3d/23-go-na2.04-fire_restart.inp",
      "finite_systems_3d/23-go-na2.03-fire.inp",
      "finite_systems_3d/23-go-na2.05-constrains.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.02-Na2_go.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "golinetol": {
    "CallLine": "call parse_variable(sys%namespace, 'GOLineTol', 0.1_real64, g_opt%line_tol)",
    "Default": [
      "0.1"
    ],
    "Description": [
      "Tolerance for line-minimization. Applies only to GSL methods",
      "that use the forces.",
      "WARNING: in some weird units."
    ],
    "LineNumber": 456,
    "Manuals": [],
    "Name": "GOLineTol",
    "Options": [],
    "Section": "Calculation Modes::Geometry Optimization",
    "Sourcefile": "main/geom_opt.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "gomaxiter": {
    "CallLine": "call parse_variable(sys%namespace, 'GOMaxIter', 200, g_opt%max_iter)",
    "Default": [
      "200"
    ],
    "Description": [
      "Even if the convergence criterion is not satisfied, the minimization will stop",
      "after this number of iterations."
    ],
    "LineNumber": 466,
    "Manuals": [],
    "Name": "GOMaxIter",
    "Options": [],
    "Section": "Calculation Modes::Geometry Optimization",
    "Sourcefile": "main/geom_opt.F90",
    "Testfiles": [
      "finite_systems_3d/23-go-na2.02-simplex.inp",
      "finite_systems_3d/23-go-na2.03-fire.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "gomethod": {
    "CallLine": "call parse_variable(sys%namespace, 'GOMethod', MINMETHOD_FIRE, g_opt%method)",
    "Default": [
      "fire"
    ],
    "Description": [
      "Method by which the minimization is performed. For more information see the",
      "<a href=http://www.gnu.org/software/gsl/manual/html_node/Multidimensional-Minimization.html>",
      "GSL documentation</a>."
    ],
    "LineNumber": 381,
    "Manuals": [],
    "Name": "GOMethod",
    "Options": [
      {
        "Description": [
          "Simple steepest descent."
        ],
        "Name": "steep",
        "Value": "1"
      },
      {
        "Description": [
          "(Experimental) Non-gsl implementation of steepest descent."
        ],
        "Name": "steep_native",
        "Value": "-1"
      },
      {
        "Description": [
          "Fletcher-Reeves conjugate-gradient algorithm. The",
          "conjugate-gradient algorithm proceeds as a succession of line",
          "minimizations. The sequence of search directions is used to build",
          "up an approximation to the curvature of the function in the",
          "neighborhood of the minimum."
        ],
        "Name": "cg_fr",
        "Value": "2"
      },
      {
        "Description": [
          "Polak-Ribiere conjugate-gradient algorithm."
        ],
        "Name": "cg_pr",
        "Value": "3"
      },
      {
        "Description": [
          "Vector Broyden-Fletcher-Goldfarb-Shanno (BFGS) conjugate-gradient algorithm.",
          "It is a quasi-Newton method which builds up an approximation to the second",
          "derivatives of the function <i>f</i> using the difference between successive gradient",
          "vectors.  By combining the first and second derivatives, the algorithm is able",
          "to take Newton-type steps towards the function minimum, assuming quadratic",
          "behavior in that region."
        ],
        "Name": "cg_bfgs",
        "Value": "4"
      },
      {
        "Description": [
          "The bfgs2 version of this minimizer is the most efficient version available,",
          "and is a faithful implementation of the line minimization scheme described in",
          "Fletcher, <i>Practical Methods of Optimization</i>, Algorithms 2.6.2 and 2.6.4."
        ],
        "Name": "cg_bfgs2",
        "Value": "5"
      },
      {
        "Description": [
          "This is experimental, and in fact, <b>not</b> recommended unless you just want to",
          "fool around. It is the Nead-Melder simplex algorithm, as implemented in the",
          "GNU Scientific Library (GSL). It does not make use of the gradients (<i>i.e.</i>, the",
          "forces) which makes it less efficient than other schemes. It is included here",
          "for completeness, since it is free."
        ],
        "Name": "simplex",
        "Value": "6"
      },
      {
        "Description": [
          "The FIRE algorithm. See also <tt>GOFireMass</tt> and <tt>GOFireIntegrator</tt>.",
          "Ref: E. Bitzek, P. Koskinen, F. Gahler, M. Moseler, and P. Gumbsch, <i>Phys. Rev. Lett.</i> <b>97</b>, 170201 (2006)."
        ],
        "Name": "fire",
        "Value": "8"
      }
    ],
    "Section": "Calculation Modes::Geometry Optimization",
    "Sourcefile": "main/geom_opt.F90",
    "Testfiles": [
      "finite_systems_3d/23-go-na2.02-simplex.inp",
      "finite_systems_3d/23-go-na2.01-steep.inp",
      "finite_systems_3d/23-go-na2.05-constrains.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.02-Na2_go.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "gominimummove": {
    "CallLine": "call parse_variable(sys%namespace, 'GOMinimumMove', default_toldr, g_opt%toldr, units_inp%length)",
    "Default": null,
    "Description": [
      "Convergence criterion, for stopping the minimization. In",
      "units of length; minimization is stopped when the coordinates",
      "of all species change less than <tt>GOMinimumMove</tt>, or the",
      "<tt>GOTolerance</tt> criterion is satisfied.",
      "If <tt>GOMinimumMove < 0</tt>, this criterion is ignored.",
      "Default is -1, except 0.001 b with <tt>GOMethod = simplex</tt>.",
      "Note that if you use <tt>GOMethod = simplex</tt>,",
      "then you must supply a non-zero <tt>GOMinimumMove</tt>."
    ],
    "LineNumber": 426,
    "Manuals": [],
    "Name": "GOMinimumMove",
    "Options": [],
    "Section": "Calculation Modes::Geometry Optimization",
    "Sourcefile": "main/geom_opt.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "goobjective": {
    "CallLine": "call parse_variable(sys%namespace, 'GOObjective', MINWHAT_ENERGY, g_opt%what2minimize)",
    "Default": [
      "minimize_energy"
    ],
    "Description": [
      "This rather esoteric option allows one to choose which",
      "objective function to minimize during a geometry",
      "minimization. The use of this variable may lead to",
      "inconsistencies, so please make sure you know what you are",
      "doing."
    ],
    "LineNumber": 524,
    "Manuals": [],
    "Name": "GOObjective",
    "Options": [
      {
        "Description": [
          "Use the total energy as objective function."
        ],
        "Name": "minimize_energy",
        "Value": "1"
      },
      {
        "Description": [
          "Use <math>\\sqrt{\\sum_i \\left| f_i \\right|^2}</math> as objective function.",
          "Note that in this case one still uses the forces as the gradient of the objective function.",
          "This is, of course, inconsistent, and may lead to very strange behavior."
        ],
        "Name": "minimize_forces",
        "Value": "2"
      }
    ],
    "Section": "Calculation Modes::Geometry Optimization",
    "Sourcefile": "main/geom_opt.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "gostep": {
    "CallLine": "call parse_variable(sys%namespace, 'GOStep', default_step, g_opt%step, unit = units_inp%time)",
    "Default": null,
    "Description": [
      "Initial step for the geometry optimizer. The default is 0.5.",
      "WARNING: in some weird units.",
      "For the FIRE minimizer, default value is 0.1 fs,",
      "and corresponds to the initial time-step for the MD."
    ],
    "LineNumber": 444,
    "Manuals": [],
    "Name": "GOStep",
    "Options": [],
    "Section": "Calculation Modes::Geometry Optimization",
    "Sourcefile": "main/geom_opt.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "gotolerance": {
    "CallLine": "call parse_variable(sys%namespace, 'GOTolerance', 0.001_real64, g_opt%tolgrad, units_inp%force)",
    "Default": [
      "0.001",
      "H/b",
      "(0.051",
      "eV/A)"
    ],
    "Description": [
      "Convergence criterion, for stopping the minimization. In",
      "units of force; minimization is stopped when all forces on",
      "ions are smaller than this criterion, or the",
      "<tt>GOMinimumMove</tt> is satisfied. If <tt>GOTolerance < 0</tt>,",
      "this criterion is ignored."
    ],
    "LineNumber": 406,
    "Manuals": [],
    "Name": "GOTolerance",
    "Options": [],
    "Section": "Calculation Modes::Geometry Optimization",
    "Sourcefile": "main/geom_opt.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "gotype": {
    "CallLine": "call parse_variable(sys%namespace, 'GOType', OPTION__GOTYPE__IONS, g_opt%type)",
    "Default": [
      "ions"
    ],
    "Description": [
      "This variable defines which parameters are allowed to change during the optimization.",
      "Multiple options can be chosen e.g. \u201cions + cell_shape\u201d"
    ],
    "LineNumber": 266,
    "Manuals": [],
    "Name": "GOType",
    "Options": [
      {
        "Description": [
          "Relax position of ions"
        ],
        "Name": "ions",
        "Value": "bit(0)"
      },
      {
        "Description": [
          "Relax cell shape"
        ],
        "Name": "cell_shape",
        "Value": "bit(1)"
      },
      {
        "Description": [
          "Relax cell volume"
        ],
        "Name": "cell_volume",
        "Value": "bit(2)"
      }
    ],
    "Section": "Calculation Modes::Geometry Optimization",
    "Sourcefile": "main/geom_opt.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "flag"
  },
  "guessmagnetdensity": {
    "CallLine": "call parse_variable(namespace, 'GuessMagnetDensity', INITRHO_FERROMAGNETIC, gmd_opt)",
    "Default": [
      "ferromagnetic"
    ],
    "Description": [
      "The guess density for the SCF cycle is just the sum of all the atomic densities.",
      "When performing spin-polarized or non-collinear-spin calculations this option sets",
      "the guess magnetization density.",
      " ",
      "For anti-ferromagnetic configurations, the <tt>user_defined</tt> option should be used.",
      " ",
      "Note that if the <tt>paramagnetic</tt> option is used, the final ground state will also be",
      "paramagnetic, but the same is not true for the other options."
    ],
    "LineNumber": 1165,
    "Manuals": [],
    "Name": "GuessMagnetDensity",
    "Options": [
      {
        "Description": [
          "Magnetization density is zero."
        ],
        "Name": "paramagnetic",
        "Value": "1"
      },
      {
        "Description": [
          "Magnetization density is the sum of the atomic magnetization densities."
        ],
        "Name": "ferromagnetic",
        "Value": "2"
      },
      {
        "Description": [
          "Each atomic magnetization density is randomly rotated."
        ],
        "Name": "random",
        "Value": "3"
      },
      {
        "Description": [
          "The atomic magnetization densities are rotated so that the magnetization",
          "vector has the same direction as a vector provided by the user. In this case,",
          "the <tt>AtomsMagnetDirection</tt> block has to be set."
        ],
        "Name": "user_defined",
        "Value": "77"
      }
    ],
    "Section": "SCF::LCAO",
    "Sourcefile": "scf/lcao.F90",
    "Testfiles": [
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/09-spinors.03-rmmdiis_extra_states.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/09-spinors.01-ground_state.inp",
      "finite_systems_3d/07-spin_orbit_coupling.02-rkb.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "finite_systems_3d/09-spinors.02-rmmdiis.inp",
      "pseudopotentials/18-Bi_pseudodojo_fr.01-gs.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "gyromagneticratio": {
    "CallLine": "call parse_variable(namespace, 'GyromagneticRatio', P_g, ep%gyromagnetic_ratio)",
    "Default": [
      "2.0023193043768"
    ],
    "Description": [
      "The gyromagnetic ratio of the electron. This is of course a physical",
      "constant, and the default value is the exact one that you should not",
      "touch, unless:",
      "(i)  You want to disconnect the anomalous Zeeman term in the Hamiltonian",
      "(then set it to zero; this number only affects that term);",
      "(ii) You are using an effective Hamiltonian, as is the case when",
      "you calculate a 2D electron gas, in which case you have an effective",
      "gyromagnetic factor that depends on the material."
    ],
    "LineNumber": 188,
    "Manuals": [],
    "Name": "GyromagneticRatio",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/epot.F90",
    "Testfiles": [
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/12-spintarget.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "hamiltonianapplypacked": {
    "CallLine": "call parse_variable(namespace, 'HamiltonianApplyPacked', .true., hm%is_applied_packed)",
    "Default": [
      "yes"
    ],
    "Description": [
      "If set to yes (the default), Octopus will 'pack' the",
      "wave-functions when operating with them. This might involve some",
      "additional copying but makes operations more efficient.",
      "See also the related <tt>StatesPack</tt> variable."
    ],
    "LineNumber": 453,
    "Manuals": [],
    "Name": "HamiltonianApplyPacked",
    "Options": [],
    "Section": "Execution::Optimization",
    "Sourcefile": "hamiltonian/hamiltonian_elec.F90",
    "Testfiles": [
      "finite_systems_3d/14-fullerene_unpacked.02-td-unpacked.inp",
      "finite_systems_3d/14-fullerene_unpacked.03-td-packed.inp",
      "finite_systems_3d/14-fullerene_unpacked.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "hamiltonianvariation": {
    "CallLine": "call parse_variable(namespace, 'HamiltonianVariation', 3, ham_var)",
    "Default": [
      "hartree+fxc"
    ],
    "Description": [
      "The terms to be considered in the variation of the",
      "Hamiltonian. The external potential (V_ext) is always considered. The default is to include",
      "also the exchange-correlation and Hartree terms, which fully",
      "takes into account local fields.",
      "Just <tt>hartree</tt> gives you the random-phase approximation (RPA).",
      "If you want to choose the exchange-correlation kernel, use the variable",
      "<tt>XCKernel</tt>. For <tt>kdotp</tt> and magnetic <tt>em_resp</tt> modes,",
      "or if <tt>TheoryLevel = independent_particles</tt>,",
      "the value <tt>V_ext_only</tt> is used and this variable is ignored."
    ],
    "LineNumber": 219,
    "Manuals": [],
    "Name": "HamiltonianVariation",
    "Options": [
      {
        "Description": [
          "Neither Hartree nor XC potentials included."
        ],
        "Name": "V_ext_only",
        "Value": "0"
      },
      {
        "Description": [
          "The variation of the Hartree potential only."
        ],
        "Name": "hartree",
        "Value": "1"
      },
      {
        "Description": [
          "The exchange-correlation kernel (the variation of the",
          "exchange-correlation potential) only."
        ],
        "Name": "fxc",
        "Value": "2"
      }
    ],
    "Section": "Linear Response::Sternheimer",
    "Sourcefile": "sternheimer/sternheimer.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "helmholtzcoulombgaugetolerance": {
    "CallLine": "call parse_variable(namespace, 'HelmholtzCoulombGaugeTolerance', 1e-5_real64, this%coulomb_gauge_tolerance)",
    "Default": [
      "1e-5"
    ],
    "Description": [
      "If the vector potential should enforced to be in Coulomb Gauge, this variable defines the tolerance. The code will",
      "evaluate the following expression: $spacing * \\frac{\\nabla \\cdot A}{|A|}$"
    ],
    "LineNumber": 180,
    "Manuals": [],
    "Name": "HelmholtzCoulombGaugeTolerance",
    "Options": [],
    "Section": "Calculation Modes::Test",
    "Sourcefile": "math/helmholtz_decomposition.F90",
    "Testfiles": [
      "components/35-helmholtz_decom.01-large_box_no_surf_corr.inp",
      "components/35-helmholtz_decom.02-small_box_no_surf_corr.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "helmholtzenforcecoulombgauge": {
    "CallLine": "call parse_variable(namespace, 'HelmholtzEnforceCoulombGauge', .true., this%enforce_coulomb_gauge)",
    "Default": [
      "yes"
    ],
    "Description": [
      "If true, the Vector Potential is enforced to be in Coulomb Gauge.",
      "See proof of eq 30 of: https://www.scirp.org/pdf/jmp_2016053115275279.pdf"
    ],
    "LineNumber": 170,
    "Manuals": [],
    "Name": "HelmholtzEnforceCoulombGauge",
    "Options": [],
    "Section": "Calculation Modes::Test",
    "Sourcefile": "math/helmholtz_decomposition.F90",
    "Testfiles": [
      "components/35-helmholtz_decom.01-large_box_no_surf_corr.inp",
      "components/35-helmholtz_decom.02-small_box_no_surf_corr.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "helmholtzvisualizeboxes": {
    "CallLine": "call parse_variable(namespace, 'HelmholtzVisualizeBoxes', .false., visualize_boxes)",
    "Default": [
      "no"
    ],
    "Description": [
      "If true, output the volume points for the three boxes of the Helmholtz surface correction.",
      "1) The volume points of the system box",
      "2) The inner mask for the system box. This region has the thickness of the stencil and it is used to set to zero",
      "the longitudinal or transverse field after computing the final divergence or curl (to avoid spikes)",
      "3) The surface points of the system box",
      " "
    ],
    "LineNumber": 234,
    "Manuals": [],
    "Name": "HelmholtzVisualizeBoxes",
    "Options": [],
    "Section": "Calculation Modes::Test",
    "Sourcefile": "math/helmholtz_decomposition.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "hfsingularity": {
    "CallLine": "call parse_variable(namespace, 'HFSingularity', default, this%coulomb_singularity)",
    "Default": [
      "general"
    ],
    "Description": [
      "(Experimental) This variable selects the method used for the treatment of the",
      "singularity of the Coulomb potential in Hatree-Fock and hybrid-functional DFT calculations.",
      "This shoulbe be only applied for periodic systems and is only",
      "used for FFT kernels of the Poisson solvers."
    ],
    "LineNumber": 109,
    "Manuals": [],
    "Name": "HFSingularity",
    "Options": [
      {
        "Description": [
          "The singularity is replaced by zero."
        ],
        "Name": "none",
        "Value": "0"
      },
      {
        "Description": [
          "The general treatment of the singularity, as described in Carrier et al, PRB 75 205126 (2007).",
          "This is the default option"
        ],
        "Name": "general",
        "Value": "1"
      },
      {
        "Description": [
          "The treatment of the singulariy as described in Gygi and Baldereschi, PRB 34, 4405 (1986).",
          "This is formally valid for cubic systems only."
        ],
        "Name": "fcc",
        "Value": "2"
      },
      {
        "Description": [
          "The divergence in q=0 is treated analytically assuming a spherical Brillouin zone"
        ],
        "Name": "spherical_bz",
        "Value": "3"
      }
    ],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/singularity.F90",
    "Testfiles": [
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/23-hybrids.01-ace.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "hfsingularitynk": {
    "CallLine": "call parse_variable(namespace, 'HFSingularityNk', default_nk, Nk)",
    "Default": [
      "60",
      "in",
      "3D,",
      "1200",
      "in",
      "1D"
    ],
    "Description": [
      "Number of k-point used (total number of k-points) is (2*Nk+1)^3) in the numerical integration",
      "of the auxiliary function f(q). See PRB 75, 205126 (2007) for more details.",
      "Only for HFSingularity=general.",
      "Also used in 1D."
    ],
    "LineNumber": 223,
    "Manuals": [],
    "Name": "HFSingularityNk",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/singularity.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "hfsingularitynsteps": {
    "CallLine": "call parse_variable(namespace, 'HFSingularityNsteps', default_step, Nsteps)",
    "Default": [
      "7",
      "in",
      "3D,",
      "15",
      "in",
      "1D"
    ],
    "Description": [
      "Number of grid refinement steps in the numerical integration of the auxiliary function f(q).",
      "See PRB 75, 205126 (2007) for more details. Only for HFSingularity=general.",
      "Also used in 1D."
    ],
    "LineNumber": 240,
    "Manuals": [],
    "Name": "HFSingularityNsteps",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/singularity.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "initialionictemperature": {
    "CallLine": "call parse_variable(namespace, 'InitialIonicTemperature', M_zero, initial_temp, unit = unit_kelvin)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "If this variable is present, the ions will have initial velocities",
      "velocities to the atoms following a Boltzmann distribution with",
      "this temperature (in Kelvin). Used only if <tt>TDDynamics = Ehrenfest</tt>",
      "and  <tt>MoveIons = yes</tt>."
    ],
    "LineNumber": 268,
    "Manuals": [],
    "Name": "InitialIonicTemperature",
    "Options": [],
    "Section": "DFTBPlusInterface",
    "Sourcefile": "dftbplus/dftb.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "initializegpubuffers": {
    "CallLine": "call parse_variable(namespace, 'InitializeGPUBuffers', .false., accel%initialize_buffers)",
    "Default": null,
    "Description": [
      "Initialize new GPU buffers to zero on creation (use only for debugging, as it has a performance impact!)."
    ],
    "LineNumber": 752,
    "Manuals": [],
    "Name": "InitializeGPUBuffers",
    "Options": [],
    "Section": "Execution::Accel",
    "Sourcefile": "basic/accel.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "initialspins": {
    "CallLine": "spin_fix: if (parse_block(namespace, 'InitialSpins', blk) == 0) then",
    "Default": null,
    "Description": [
      "The spin character of the initial random guesses for the spinors can",
      "be fixed by making use of this block. Note that this will not \"fix\" the",
      "the spins during the calculation (this cannot be done in spinors mode, in",
      "being able to change the spins is why the spinors mode exists in the first",
      "place).",
      " ",
      "This block is meaningless and ignored if the run is not in spinors mode",
      "(<tt>SpinComponents = spinors</tt>).",
      " ",
      "The structure of the block is very simple: each column contains the desired",
      "<math>\\left< S_x \\right>, \\left< S_y \\right>, \\left< S_z \\right> </math> for each spinor.",
      "If the calculation is for a periodic system",
      "and there is more than one <i>k</i>-point, the spins of all the <i>k</i>-points are",
      "the same.",
      " ",
      "For example, if we have two spinors, and we want one in the <math>S_x</math> \"down\" state,",
      "and another one in the <math>S_x</math> \"up\" state:",
      " ",
      "<tt>%InitialSpins",
      "<br>&nbsp;&nbsp;&nbsp; 0.5 | 0.0 | 0.0",
      "<br>&nbsp;&nbsp; -0.5 | 0.0 | 0.0",
      "<br>%</tt>",
      " ",
      "WARNING: if the calculation is for a system described by pseudopotentials (as",
      "opposed to user-defined potentials or model systems), this option is",
      "meaningless since the random spinors are overwritten by the atomic orbitals.",
      " ",
      "This constraint must be fulfilled:",
      "<br><math> \\left< S_x \\right>^2 + \\left< S_y \\right>^2 + \\left< S_z \\right>^2 = \\frac{1}{4} </math>"
    ],
    "LineNumber": 963,
    "Manuals": [],
    "Name": "InitialSpins",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.01-ground_state.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "interaction1d": {
    "CallLine": "call parse_variable(namespace, 'Interaction1D', OPTION__INTERACTION1D__INTERACTION_SOFT_COULOMB, interact_1d)",
    "Default": [
      "interaction_soft_coulomb"
    ],
    "Description": [
      "When running in 1D, one has to soften the Coulomb interaction. This softening",
      "is not unique, and several possibilities exist in the literature."
    ],
    "LineNumber": 261,
    "Manuals": [],
    "Name": "Interaction1D",
    "Options": [
      {
        "Description": [
          "Exponentially screened Coulomb interaction.",
          "See, <i>e.g.</i>, M Casula, S Sorella, and G Senatore, <i>Phys. Rev. B</i> <b>74</b>, 245427 (2006)."
        ],
        "Name": "interaction_exp_screened",
        "Value": "0"
      },
      {
        "Description": [
          "Soft Coulomb interaction of the form <math>1/\\sqrt{x^2 + \\alpha^2}</math>."
        ],
        "Name": "interaction_soft_coulomb",
        "Value": "1"
      }
    ],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/xc_functional.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "interaction1dscreening": {
    "CallLine": "call parse_variable(namespace, 'Interaction1DScreening', M_ONE, alpha)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "Defines the screening parameter <math>\\alpha</math> of the softened Coulomb interaction",
      "when running in 1D."
    ],
    "LineNumber": 272,
    "Manuals": [],
    "Name": "Interaction1DScreening",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/xc_functional.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "interactions": {
    "Default": null,
    "Description": [
      "This input option controls the interactions between systems. It basically",
      "allows to select which systems will interact with another system through",
      "a given interaction type. The format of the block is the following:",
      " ",
      "<br>%<tt>Namespace.Interactions",
      "<br>&nbsp;&nbsp;interaction_type | interaction_mode | ...",
      "<br>%</tt>",
      " ",
      "Here is an example to better understand how this works:",
      " ",
      "<br>%<tt>SystemA.Interactions",
      "<br>&nbsp;&nbsp;gravity | all_except | \"SystemB\"",
      "<br>%</tt>",
      " ",
      "This means that SystemA and all the systems that belong to the same",
      "namespace (i.e., all its subsystems) will interact through gravity with",
      "all interaction partners that are also able to interact through gravity,",
      "except with SystemB. Note that the opposite is not true so, although",
      "clearly unphysical, this will not prevent SystemB from feeling the",
      "gravity from SystemA (in <tt>Octopus</tt> the interactions are always",
      "one-sided).",
      " ",
      "NB: Each interaction type should only appear once in the block. Any",
      "further instances beyond the first will be ignored.",
      " ",
      "Available modes and interaction types:"
    ],
    "Manuals": [],
    "Name": "Interactions",
    "Options": [
      {
        "Description": [
          "(interaction mode)",
          "Do not interact with any partner."
        ],
        "Name": "no_partners",
        "Value": "-1"
      },
      {
        "Description": [
          "(interaction mode)",
          "Interact with all available partners."
        ],
        "Name": "all_partners",
        "Value": "-2"
      },
      {
        "Description": [
          "(interaction mode)",
          "Interact only with some specified partners. A list of partner names must",
          "be given."
        ],
        "Name": "only_partners",
        "Value": "-3"
      },
      {
        "Description": [
          "(interaction mode)",
          "Interact with all available partners except with some specified",
          "partners. A list of partner names to exclude must be given."
        ],
        "Name": "all_except",
        "Value": "-4"
      },
      {
        "Description": [
          "(interaction type)",
          "Gravity interaction between two masses."
        ],
        "Name": "gravity",
        "Value": "1"
      },
      {
        "Description": [
          "(interaction type)",
          "Lorentz force resulting from an EM field acting on a moving charge."
        ],
        "Name": "lorentz_force",
        "Value": "2"
      },
      {
        "Description": [
          "(interaction type)",
          "Coulomb force between two charged particles."
        ],
        "Name": "coulomb_force",
        "Value": "3"
      },
      {
        "Description": [
          "(interaction type)",
          "Linear medium for propagation of EM fields."
        ],
        "Name": "linear_medium_to_em_field",
        "Value": "4"
      },
      {
        "Description": [
          "(interaction type)",
          "Drude dispersive linear medium for propagation of EM fields."
        ],
        "Name": "current_to_mxll_field",
        "Value": "5"
      },
      {
        "Description": [
          "(interaction type)",
          "Electric field resulting from the Maxwell solver."
        ],
        "Name": "maxwell_e_field",
        "Value": "6"
      },
      {
        "Description": [
          "(interaction type)",
          "Magnetic field resulting from the Maxwell solver."
        ],
        "Name": "maxwell_b_field",
        "Value": "7"
      },
      {
        "Description": [
          "(interaction type)",
          "Vector potential resulting from the Maxwell solver."
        ],
        "Name": "maxwell_vector_potential",
        "Value": "8"
      },
      {
        "Description": [
          "(interaction type)",
          "Force resulting from a Lennard Jones potential between classical particles."
        ],
        "Name": "lennard_jones",
        "Value": "9"
      }
    ],
    "Section": "System",
    "Sourcefile": "interactions/interactions_factory.F90",
    "Testfiles": [
      "multisystem/05-propagation_beeman.02-three_body.inp",
      "multisystem/06-propagation_expmid.02-three_body.inp",
      "multisystem/03-interactions_creation.03-case3.inp",
      "multisystem/13-restart_verlet.01-restart-run-part1.inp",
      "multisystem/03-interactions_creation.01-case1.inp",
      "multisystem/05-propagation_beeman.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.01-two_body.inp",
      "multisystem/03-interactions_creation.02-case2.inp",
      "multisystem/14-lennard-jones.01-classical-particles-N2.inp",
      "multisystem/01-nested_systems.02-three_levels.inp",
      "multisystem/01-nested_systems.01-two_levels.inp",
      "multisystem/06-propagation_expmid.05-two_body_verlet_half.inp",
      "multisystem/04-propagation_verlet.02-three_body.inp",
      "multisystem/06-propagation_expmid.01-two_body.inp",
      "multisystem/01-nested_systems.03-four_levels.inp",
      "multisystem/03-interactions_creation.04-case4.inp",
      "multisystem/13-restart_verlet.03-full-run.inp",
      "multisystem/06-propagation_expmid.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.04-three_body_different_time_steps.inp",
      "multisystem/06-propagation_expmid.06-two_body_verlet.inp",
      "multisystem/05-propagation_beeman.03-two_body_different_time_steps.inp",
      "multisystem/13-restart_verlet.02-restart-run-part2.inp",
      "multisystem/04-propagation_verlet.03-two_body_different_time_steps.inp",
      "multisystem/05-propagation_beeman.01-two_body.inp",
      "multisystem/02-interaction_graph.01-three_body.inp",
      "multisystem/06-propagation_expmid.03-two_body_different_time_steps.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "interactiontiming": {
    "CallLine": "call parse_variable(this%namespace, 'InteractionTiming', TIMING_EXACT, timing)",
    "Default": [
      "timing_exact"
    ],
    "Description": [
      "A parameter to determine if interactions should use the quantities",
      "at the exact iteration or if retardation is allowed."
    ],
    "LineNumber": 408,
    "Manuals": [],
    "Name": "InteractionTiming",
    "Options": [
      {
        "Description": [
          "Only allow interactions at the exact iterations required by the algorithms behing executed"
        ],
        "Name": "timing_exact",
        "Value": "1"
      },
      {
        "Description": [
          "Allow retarded interactions"
        ],
        "Name": "timing_retarded",
        "Value": "2"
      }
    ],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "multisystem/system.F90",
    "Testfiles": [
      "multisystem/13-restart_verlet.01-restart-run-part1.inp",
      "multisystem/05-propagation_beeman.04-three_body_different_time_steps.inp",
      "multisystem/13-restart_verlet.03-full-run.inp",
      "multisystem/06-propagation_expmid.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.04-three_body_different_time_steps.inp",
      "multisystem/06-propagation_expmid.06-two_body_verlet.inp",
      "multisystem/05-propagation_beeman.03-two_body_different_time_steps.inp",
      "multisystem/13-restart_verlet.02-restart-run-part2.inp",
      "multisystem/04-propagation_verlet.03-two_body_different_time_steps.inp",
      "multisystem/06-propagation_expmid.03-two_body_different_time_steps.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "interpolationtestorder": {
    "CallLine": "call parse_variable(global_namespace, 'InterpolationTestOrder', 1, order)",
    "Default": [
      "1"
    ],
    "Description": [
      "This variable controls the order of the grid interpolation",
      "used in the corresponding unit test."
    ],
    "LineNumber": 1899,
    "Manuals": [],
    "Name": "InterpolationTestOrder",
    "Options": [],
    "Section": "Calculation Modes::Test",
    "Sourcefile": "main/test.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "invertksconvabsdens": {
    "CallLine": "call parse_variable(namespace, 'InvertKSConvAbsDens', 1e-5_real64, convdensity)",
    "Default": [
      "1e-5"
    ],
    "Description": [
      "Absolute difference between the calculated and the target density in the KS",
      "inversion. Has to be larger than the convergence of the density in the SCF run."
    ],
    "LineNumber": 418,
    "Manuals": [],
    "Name": "InvertKSConvAbsDens",
    "Options": [],
    "Section": "Calculation Modes::Invert KS",
    "Sourcefile": "electrons/xc_ks_inversion.F90",
    "Testfiles": [
      "functionals/05-ks_inversion.03-inversion.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "invertksgodbymu": {
    "CallLine": "call parse_variable(namespace, 'InvertKSGodbyMu', M_ONE, mu)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "prefactor for iterative KS inversion convergence scheme from Godby based on van Leeuwen scheme"
    ],
    "LineNumber": 445,
    "Manuals": [],
    "Name": "InvertKSGodbyMu",
    "Options": [],
    "Section": "Calculation Modes::Invert KS",
    "Sourcefile": "electrons/xc_ks_inversion.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "invertksgodbypower": {
    "CallLine": "call parse_variable(namespace, 'InvertKSGodbyPower', 0.05_real64, npower_in)",
    "Default": [
      "0.05"
    ],
    "Description": [
      "power to which density is elevated for iterative KS inversion convergence",
      "scheme from Godby based on van Leeuwen scheme"
    ],
    "LineNumber": 455,
    "Manuals": [],
    "Name": "InvertKSGodbyPower",
    "Options": [],
    "Section": "Calculation Modes::Invert KS",
    "Sourcefile": "electrons/xc_ks_inversion.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "invertksmaxiter": {
    "CallLine": "call parse_variable(namespace, 'InvertKSMaxIter', 200, max_iter)",
    "Default": [
      "200"
    ],
    "Description": [
      "Selects how many iterations of inversion will be done in the iterative scheme"
    ],
    "LineNumber": 486,
    "Manuals": [],
    "Name": "InvertKSMaxIter",
    "Options": [],
    "Section": "Calculation Modes::Invert KS",
    "Sourcefile": "electrons/xc_ks_inversion.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "invertksmethod": {
    "CallLine": "call parse_variable(namespace, 'InvertKSmethod', XC_INV_METHOD_ITER_STELLA, ks_inv%method)",
    "Default": [
      "iterative"
    ],
    "Description": [
      "Selects whether the exact two-particle method or the iterative scheme",
      "is used to invert the density to get the KS potential."
    ],
    "LineNumber": 140,
    "Manuals": [],
    "Name": "InvertKSmethod",
    "Options": [
      {
        "Description": [
          "Exact two-particle scheme."
        ],
        "Name": "two_particle",
        "Value": "1"
      },
      {
        "Description": [
          "Iterative scheme for <math>v_s</math>."
        ],
        "Name": "iterative",
        "Value": "2"
      },
      {
        "Description": [
          "Iterative scheme for <math>v_s</math> using Stella and Verstraete method."
        ],
        "Name": "iter_stella",
        "Value": "3"
      },
      {
        "Description": [
          "Iterative scheme for <math>v_s</math> using power method from Rex Godby."
        ],
        "Name": "iter_godby",
        "Value": "4"
      }
    ],
    "Section": "Calculation Modes::Invert KS",
    "Sourcefile": "electrons/xc_ks_inversion.F90",
    "Testfiles": [
      "functionals/05-ks_inversion.03-inversion.inp",
      "functionals/05-ks_inversion.02-two_particle.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "invertksstellaalpha": {
    "CallLine": "call parse_variable(namespace, 'InvertKSStellaAlpha', 0.25_real64, alpha)",
    "Default": [
      "0.05"
    ],
    "Description": [
      "prefactor term in iterative scheme from L Stella"
    ],
    "LineNumber": 436,
    "Manuals": [],
    "Name": "InvertKSStellaAlpha",
    "Options": [],
    "Section": "Calculation Modes::Invert KS",
    "Sourcefile": "electrons/xc_ks_inversion.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "invertksstellabeta": {
    "CallLine": "call parse_variable(namespace, 'InvertKSStellaBeta', .000001_real64, beta)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "residual term in Stella iterative scheme to avoid 0 denominators"
    ],
    "LineNumber": 427,
    "Manuals": [],
    "Name": "InvertKSStellaBeta",
    "Options": [],
    "Section": "Calculation Modes::Invert KS",
    "Sourcefile": "electrons/xc_ks_inversion.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "invertkstargetdensity": {
    "CallLine": "call parse_variable(sys%namespace, 'InvertKSTargetDensity', \"target_density.dat\", filename)",
    "Default": [
      "<tt>target_density.dat</tt>"
    ],
    "Description": [
      "Name of the file that contains the density used as the target in the",
      "inversion of the KS equations."
    ],
    "LineNumber": 206,
    "Manuals": [],
    "Name": "InvertKSTargetDensity",
    "Options": [],
    "Section": "Calculation Modes::Invert KS",
    "Sourcefile": "main/invert_ks.F90",
    "Testfiles": [
      "functionals/05-ks_inversion.03-inversion.inp",
      "functionals/05-ks_inversion.02-two_particle.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "invertksverbosity": {
    "CallLine": "call parse_variable(namespace, 'InvertKSVerbosity', 0, verbosity)",
    "Default": [
      "0"
    ],
    "Description": [
      "Selects what is output during the calculation of the KS potential."
    ],
    "LineNumber": 473,
    "Manuals": [],
    "Name": "InvertKSVerbosity",
    "Options": [
      {
        "Description": [
          "Only outputs the converged density and KS potential."
        ],
        "Name": "0"
      },
      {
        "Description": [
          "Same as 0 but outputs the maximum difference to the target density in each",
          "iteration in addition."
        ],
        "Name": "1"
      },
      {
        "Description": [
          "Same as 1 but outputs the density and the KS potential in each iteration in",
          "addition."
        ],
        "Name": "2"
      }
    ],
    "Section": "Calculation Modes::Invert KS",
    "Sourcefile": "electrons/xc_ks_inversion.F90",
    "Testfiles": [
      "functionals/05-ks_inversion.03-inversion.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "ionsconstantvelocity": {
    "CallLine": "call parse_variable(namespace, 'IonsConstantVelocity', .false., this%constant_velocity)",
    "Default": [
      "no"
    ],
    "Description": [
      "(Experimental) If this variable is set to yes, the ions will",
      "move with a constant velocity given by the initial",
      "conditions. They will not be affected by any forces."
    ],
    "LineNumber": 190,
    "Manuals": [],
    "Name": "IonsConstantVelocity",
    "Options": [],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "ions/ion_dynamics.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "ionstimedependentdisplacements": {
    "CallLine": "if (parse_block(namespace, 'IonsTimeDependentDisplacements', blk) == 0) then",
    "Default": null,
    "Description": [
      "(Experimental) This variable allows you to specify a",
      "time-dependent function describing the displacement of the ions",
      "from their equilibrium position: <math>r(t) = r_0 + \\Delta",
      "r(t)</math>.  Specify the displacements dx(t), dy(t), dz(t) as",
      "follows, for some or all of the atoms:",
      " ",
      "<tt>%IonsTimeDependentDisplacements",
      "<br>&nbsp;&nbsp; atom_index | \"dx(t)\" | \"dy(t)\" | \"dz(t)\"",
      "<br>%</tt>",
      " ",
      "The displacement functions are time-dependent functions and should match one",
      "of the function names given in the first column of the <tt>TDFunctions</tt> block.",
      "If this block is set, the ions will not be affected by any forces."
    ],
    "LineNumber": 220,
    "Manuals": [],
    "Name": "IonsTimeDependentDisplacements",
    "Options": [],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "ions/ion_dynamics.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "kdotpcalcsecondorder": {
    "CallLine": "call parse_variable(sys%namespace, 'KdotPCalcSecondOrder', .false., calc_2nd_order)",
    "Default": [
      "false"
    ],
    "Description": [
      "If true, calculates second-order response of wavefunctions as well as first-order response.",
      "Note that the second derivative of the Hamiltonian is NOT included in this calculation.",
      "This is needed for a subsequent run in <tt>CalculationMode = em_resp</tt> with <tt>EMHyperpol</tt>."
    ],
    "LineNumber": 477,
    "Manuals": [],
    "Name": "KdotPCalcSecondOrder",
    "Options": [],
    "Section": "Linear Response::KdotP",
    "Sourcefile": "sternheimer/kdotp.F90",
    "Testfiles": [
      "periodic_systems/04-silicon.02-kdotp.inp",
      "periodic_systems/06-h2o_pol_lr.02_kdotp.inp",
      "periodic_systems/27-Ar.02-kdotp.inp",
      "periodic_systems/26-Na.02-kdotp.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "kdotpcalculateeffectivemasses": {
    "CallLine": "call parse_variable(sys%namespace, 'KdotPCalculateEffectiveMasses', .true., calc_eff_mass)",
    "Default": [
      "true"
    ],
    "Description": [
      "If true, uses <tt>kdotp</tt> perturbations of ground-state wavefunctions",
      "to calculate effective masses. It is not correct for degenerate states."
    ],
    "LineNumber": 466,
    "Manuals": [],
    "Name": "KdotPCalculateEffectiveMasses",
    "Options": [],
    "Section": "Linear Response::KdotP",
    "Sourcefile": "sternheimer/kdotp.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "kdotpeta": {
    "CallLine": "call parse_variable(sys%namespace, 'KdotPEta', M_ZERO, kdotp_vars%eta)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "Imaginary frequency added to Sternheimer equation which may improve convergence.",
      "Not recommended."
    ],
    "LineNumber": 454,
    "Manuals": [],
    "Name": "KdotPEta",
    "Options": [],
    "Section": "Linear Response::KdotP",
    "Sourcefile": "sternheimer/kdotp.F90",
    "Testfiles": [
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "kdotpoccupiedsolutionmethod": {
    "CallLine": "call parse_variable(sys%namespace, 'KdotPOccupiedSolutionMethod', 0, kdotp_vars%occ_solution_method)",
    "Default": [
      "sternheimer_eqn"
    ],
    "Description": [
      "Method of calculating the contribution of the projection of the",
      "linear-response wavefunctions in the occupied subspace."
    ],
    "LineNumber": 427,
    "Manuals": [],
    "Name": "KdotPOccupiedSolutionMethod",
    "Options": [
      {
        "Description": [
          "The Sternheimer equation is solved including the occupied subspace,",
          "to get the full linear-response wavefunctions."
        ],
        "Name": "sternheimer_eqn",
        "Value": "0"
      },
      {
        "Description": [
          "The Sternheimer equation is solved only in the unoccupied subspace,",
          "and a sum-over-states perturbation-theory expression is used to",
          "evaluate the contributions in the occupied subspace."
        ],
        "Name": "sum_over_states",
        "Value": "1"
      }
    ],
    "Section": "Linear Response::KdotP",
    "Sourcefile": "sternheimer/kdotp.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "kdotpusenonlocalpseudopotential": {
    "CallLine": "call parse_variable(namespace, 'KdotPUseNonLocalPseudopotential', .true., this%use_nonlocalpps)",
    "Default": [
      "true"
    ],
    "Description": [
      "For testing purposes, set to false to ignore the term <math>-i \\left[\\vec{r}, V\\right]</math> in",
      "the <math>\\vec{k} \\cdot \\vec{p}</math> perturbation, which is due to non-local pseudopotentials."
    ],
    "LineNumber": 120,
    "Manuals": [],
    "Name": "KdotPUseNonLocalPseudopotential",
    "Options": [],
    "Section": "Linear Response::KdotP",
    "Sourcefile": "electrons/perturbation_kdotp.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "kdotpvelmethod": {
    "CallLine": "call parse_variable(namespace, 'KdotPVelMethod', OPTION__KDOTPVELMETHOD__GRAD_VEL, this%vel_method)",
    "Default": [
      "grad_vel"
    ],
    "Description": [
      "Method of velocity calculation."
    ],
    "LineNumber": 133,
    "Manuals": [],
    "Name": "KdotPVelMethod",
    "Options": [
      {
        "Description": [
          "<math>-i \\left(\\nabla + \\left[r, V_{\\rm nl} \\right] \\right)</math>"
        ],
        "Name": "grad_vel",
        "Value": "0"
      },
      {
        "Description": [
          "As a commutator of the position operator and Hamiltonian, <math>-i \\left[ r, H \\right]</math>."
        ],
        "Name": "hcom_vel",
        "Value": "1"
      }
    ],
    "Section": "Linear Response::KdotP",
    "Sourcefile": "electrons/perturbation_kdotp.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "kliphotoncoc": {
    "CallLine": "call parse_variable(namespace, 'KLIPhotonCOC', .false., oep%coc_translation)",
    "Default": [
      ".false."
    ],
    "Description": [
      "Activate the center of charge translation of the electric dipole operator which should avoid the dependence of the photon KLI on an permanent dipole."
    ],
    "LineNumber": 200,
    "Manuals": [],
    "Name": "KLIPhotonCOC",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "photons/xc_oep_photon.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "kpoints": {
    "CallLine": "if (parse_block(namespace, 'KPoints', blk) /= 0) then",
    "Default": null,
    "Description": [
      "This block defines an explicit set of <i>k</i>-points and their weights for",
      "a periodic-system calculation. The first column is the weight",
      "of each <i>k</i>-point and the following are the components of the <i>k</i>-point",
      "vector. You only need to specify the components for the",
      "periodic directions. Note that the <i>k</i>-points should be given in",
      "Cartesian coordinates (not in reduced coordinates), in the units of inverse length.",
      "The weights will be renormalized so they sum to 1 (and must be rational numbers).",
      " ",
      "For example, if you want to include only the Gamma point, you can",
      "use:",
      " ",
      "<tt>%KPoints",
      "<br>&nbsp;&nbsp;1.0 | 0 | 0 | 0",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 823,
    "Manuals": [],
    "Name": "KPoints",
    "Options": [],
    "Section": "Mesh::KPoints",
    "Sourcefile": "electrons/kpoints.F90",
    "Testfiles": [
      "periodic_systems/01-free_electrons.02-unocc.inp",
      "periodic_systems/01-free_electrons.01-ground_state.inp",
      "periodic_systems/02-cosine_potential.02-unocc.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/03-sodium_chain.03-ground_state_disp.inp",
      "periodic_systems/02-cosine_potential.01-ground_state.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "kpointsgrid": {
    "CallLine": "gamma_only_ = (parse_block(namespace, 'KPointsGrid', blk) /= 0)",
    "Default": [
      "<math>\\Gamma</math>-point",
      "only"
    ],
    "Description": [
      "When this block is given (and the <tt>KPoints</tt> block is not present),",
      "<i>k</i>-points are distributed in a uniform grid, according to a modified",
      "version of the Monkhorst-Pack scheme. For the original MP scheme, see",
      "James D. Pack and Hendrik J. Monkhorst,",
      "<i>Phys. Rev. B</i> <b>13</b>, 5188 (1976) and <i>Phys. Rev. B</i> <b>16</b>, 1748 (1977).",
      " ",
      "The number of columns should be equal to <tt>Dimensions</tt>,",
      "but the grid and shift numbers should be 1 and zero in finite directions.",
      " ",
      "The first row of the block is a set of integers defining",
      "the number of <i>k</i>-points to be used along each direction",
      "in reciprocal space. The numbers refer to the whole Brillouin",
      "zone, and the actual number of <i>k</i>-points is usually",
      "reduced exploiting the symmetries of the system.  By default",
      "the grid will always include the <math>\\Gamma</math>-point.",
      " ",
      "Optional rows can be added to specify multiple shifts in the <i>k</i>-points (between 0.0 and 1.0),",
      "in units of the Brillouin zone divided by the number in the first row.",
      "Please note that without specifying any shift, an implicit shift of -0.5 is added for odd number",
      "of k-points, such that the Gamma point is always included.",
      " ",
      "For example, the following input samples the BZ with 100 points in the",
      "<i>xy</i>-plane of reciprocal space:",
      " ",
      "<tt>%KPointsGrid",
      "<br>&nbsp;&nbsp;10 | 10 | 1",
      "<br>%</tt>",
      " ",
      "is equivalent to",
      " ",
      "<tt>%KPointsGrid",
      "<br> 10 | 10 | 1",
      "<br> 0 | 0 | -0.5",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 448,
    "Manuals": [],
    "Name": "KPointsGrid",
    "Options": [],
    "Section": "Mesh::KPoints",
    "Sourcefile": "electrons/kpoints.F90",
    "Testfiles": [
      "symmetries/05-hexagonal.23-spg165.inp",
      "symmetries/02-monoclinic.05-spg7.inp",
      "symmetries/05-hexagonal.41-spg183.inp",
      "symmetries/02-monoclinic.04-spg6.inp",
      "symmetries/03-orthorombic.14-spg29.inp",
      "symmetries/04-tetragonal.27-spg101.inp",
      "symmetries/06-cubic.29-spg223.inp",
      "symmetries/03-orthorombic.53-spg68.inp",
      "symmetries/04-tetragonal.33-spg107.inp",
      "symmetries/02-monoclinic.07-spg9.inp",
      "symmetries/06-cubic.04-spg198.inp",
      "symmetries/04-tetragonal.51-spg125.inp",
      "symmetries/04-tetragonal.03-spg77.inp",
      "symmetries/03-orthorombic.31-spg46.inp",
      "symmetries/04-tetragonal.08-spg82.inp",
      "symmetries/03-orthorombic.05-spg20.inp",
      "symmetries/04-tetragonal.36-spg110.inp",
      "symmetries/05-hexagonal.15-spg157.inp",
      "symmetries/02-monoclinic.12-spg14.inp",
      "symmetries/03-orthorombic.19-spg34.inp",
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "symmetries/05-hexagonal.28-spg170.inp",
      "symmetries/04-tetragonal.23-spg97.inp",
      "symmetries/04-tetragonal.48-spg122.inp",
      "symmetries/04-tetragonal.21-spg95.inp",
      "symmetries/06-cubic.21-spg215.inp",
      "symmetries/02-monoclinic.09-spg11.inp",
      "symmetries/04-tetragonal.18-spg92.inp",
      "symmetries/04-tetragonal.52-spg126.inp",
      "symmetries/03-orthorombic.55-spg70.inp",
      "symmetries/03-orthorombic.09-spg24.inp",
      "symmetries/04-tetragonal.62-spg136.inp",
      "symmetries/02-monoclinic.08-spg10.inp",
      "symmetries/04-tetragonal.38-spg112.inp",
      "symmetries/04-tetragonal.49-spg123.inp",
      "symmetries/03-orthorombic.20-spg35.inp",
      "symmetries/06-cubic.05-spg199.inp",
      "symmetries/06-cubic.35-spg229.inp",
      "symmetries/02-monoclinic.03-spg5.inp",
      "symmetries/02-monoclinic.06-spg8.inp",
      "symmetries/06-cubic.06-spg200.inp",
      "symmetries/04-tetragonal.57-spg131.inp",
      "symmetries/04-tetragonal.45-spg119.inp",
      "symmetries/05-hexagonal.49-spg191.inp",
      "symmetries/03-orthorombic.26-spg41.inp",
      "symmetries/06-cubic.15-spg209.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/06-cubic.08-spg202.inp",
      "symmetries/04-tetragonal.35-spg109.inp",
      "symmetries/03-orthorombic.07-spg22.inp",
      "symmetries/04-tetragonal.32-spg106.inp",
      "symmetries/04-tetragonal.12-spg86.inp",
      "symmetries/06-cubic.01-spg195.inp",
      "symmetries/05-hexagonal.38-spg180.inp",
      "symmetries/04-tetragonal.01-spg75.inp",
      "symmetries/03-orthorombic.25-spg40.inp",
      "symmetries/04-tetragonal.39-spg113.inp",
      "symmetries/05-hexagonal.02-spg144.inp",
      "symmetries/05-hexagonal.06-spg148.inp",
      "symmetries/06-cubic.32-spg226.inp",
      "symmetries/03-orthorombic.47-spg62.inp",
      "symmetries/05-hexagonal.20-spg162.inp",
      "symmetries/06-cubic.24-spg218.inp",
      "symmetries/06-cubic.30-spg224.inp",
      "symmetries/05-hexagonal.12-spg154.inp",
      "symmetries/05-hexagonal.07-spg149.inp",
      "symmetries/05-hexagonal.27-spg169.inp",
      "symmetries/03-orthorombic.45-spg60.inp",
      "symmetries/05-hexagonal.19-spg161.inp",
      "symmetries/05-hexagonal.16-spg158.inp",
      "symmetries/05-hexagonal.48-spg190.inp",
      "symmetries/06-cubic.09-spg203.inp",
      "symmetries/03-orthorombic.24-spg39.inp",
      "symmetries/03-orthorombic.50-spg65.inp",
      "symmetries/06-cubic.34-spg228.inp",
      "symmetries/05-hexagonal.42-spg184.inp",
      "symmetries/03-orthorombic.23-spg38.inp",
      "symmetries/04-tetragonal.13-spg87.inp",
      "symmetries/06-cubic.02-spg196.inp",
      "symmetries/02-monoclinic.13-spg15.inp",
      "symmetries/05-hexagonal.45-spg187.inp",
      "symmetries/05-hexagonal.22-spg164.inp",
      "symmetries/03-orthorombic.43-spg58.inp",
      "symmetries/03-orthorombic.34-spg49.inp",
      "symmetries/04-tetragonal.47-spg121.inp",
      "symmetries/02-monoclinic.02-spg4.inp",
      "symmetries/03-orthorombic.39-spg54.inp",
      "symmetries/04-tetragonal.17-spg91.inp",
      "symmetries/04-tetragonal.22-spg96.inp",
      "symmetries/05-hexagonal.35-spg177.inp",
      "symmetries/03-orthorombic.13-spg28.inp",
      "symmetries/05-hexagonal.13-spg155.inp",
      "symmetries/03-orthorombic.42-spg57.inp",
      "symmetries/06-cubic.12-spg206.inp",
      "symmetries/02-monoclinic.10-spg12.inp",
      "symmetries/06-cubic.07-spg201.inp",
      "symmetries/03-orthorombic.36-spg51.inp",
      "symmetries/05-hexagonal.44-spg186.inp",
      "symmetries/04-tetragonal.04-spg78.inp",
      "symmetries/05-hexagonal.21-spg163.inp",
      "symmetries/04-tetragonal.02-spg76.inp",
      "symmetries/03-orthorombic.22-spg37.inp",
      "symmetries/05-hexagonal.32-spg174.inp",
      "symmetries/03-orthorombic.35-spg50.inp",
      "symmetries/03-orthorombic.17-spg32.inp",
      "symmetries/05-hexagonal.17-spg159.inp",
      "symmetries/03-orthorombic.04-spg19.inp",
      "symmetries/04-tetragonal.20-spg94.inp",
      "symmetries/06-cubic.20-spg214.inp",
      "symmetries/04-tetragonal.65-spg139.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/03-orthorombic.32-spg47.inp",
      "symmetries/03-orthorombic.02-spg17.inp",
      "symmetries/04-tetragonal.15-spg89.inp",
      "symmetries/03-orthorombic.57-spg72.inp",
      "symmetries/03-orthorombic.15-spg30.inp",
      "symmetries/03-orthorombic.49-spg64.inp",
      "symmetries/06-cubic.11-spg205.inp",
      "symmetries/04-tetragonal.30-spg104.inp",
      "symmetries/04-tetragonal.59-spg133.inp",
      "symmetries/03-orthorombic.54-spg69.inp",
      "symmetries/03-orthorombic.41-spg56.inp",
      "symmetries/06-cubic.19-spg213.inp",
      "symmetries/05-hexagonal.05-spg147.inp",
      "symmetries/04-tetragonal.25-spg99.inp",
      "symmetries/03-orthorombic.58-spg73.inp",
      "symmetries/04-tetragonal.43-spg117.inp",
      "symmetries/01-triclinic.02-spg2.inp",
      "symmetries/04-tetragonal.42-spg116.inp",
      "symmetries/05-hexagonal.50-spg192.inp",
      "symmetries/04-tetragonal.68-spg142.inp",
      "symmetries/04-tetragonal.40-spg114.inp",
      "symmetries/05-hexagonal.34-spg176.inp",
      "symmetries/04-tetragonal.63-spg137.inp",
      "symmetries/06-cubic.31-spg225.inp",
      "symmetries/05-hexagonal.36-spg178.inp",
      "symmetries/05-hexagonal.30-spg172.inp",
      "symmetries/03-orthorombic.48-spg63.inp",
      "symmetries/04-tetragonal.11-spg85.inp",
      "symmetries/05-hexagonal.40-spg182.inp",
      "symmetries/05-hexagonal.11-spg153.inp",
      "symmetries/04-tetragonal.41-spg115.inp",
      "symmetries/04-tetragonal.26-spg100.inp",
      "symmetries/05-hexagonal.24-spg166.inp",
      "symmetries/03-orthorombic.56-spg71.inp",
      "symmetries/06-cubic.16-spg210.inp",
      "symmetries/06-cubic.25-spg219.inp",
      "symmetries/03-orthorombic.51-spg66.inp",
      "symmetries/05-hexagonal.47-spg189.inp",
      "symmetries/04-tetragonal.24-spg98.inp",
      "symmetries/05-hexagonal.51-spg193.inp",
      "symmetries/03-orthorombic.37-spg52.inp",
      "symmetries/05-hexagonal.39-spg181.inp",
      "symmetries/03-orthorombic.27-spg42.inp",
      "symmetries/04-tetragonal.58-spg132.inp",
      "symmetries/04-tetragonal.31-spg105.inp",
      "symmetries/04-tetragonal.06-spg80.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "symmetries/05-hexagonal.10-spg152.inp",
      "symmetries/05-hexagonal.01-spg143.inp",
      "symmetries/05-hexagonal.04-spg146.inp",
      "symmetries/04-tetragonal.19-spg93.inp",
      "symmetries/03-orthorombic.08-spg23.inp",
      "symmetries/07-symmetrization_lda.01-spg2_sym.inp",
      "symmetries/04-tetragonal.29-spg103.inp",
      "symmetries/06-cubic.27-spg221.inp",
      "symmetries/04-tetragonal.56-spg130.inp",
      "symmetries/06-cubic.36-spg230.inp",
      "symmetries/04-tetragonal.55-spg129.inp",
      "symmetries/04-tetragonal.44-spg118.inp",
      "symmetries/04-tetragonal.53-spg127.inp",
      "symmetries/03-orthorombic.11-spg26.inp",
      "symmetries/05-hexagonal.14-spg156.inp",
      "symmetries/06-cubic.33-spg227.inp",
      "symmetries/05-hexagonal.43-spg185.inp",
      "symmetries/03-orthorombic.40-spg55.inp",
      "symmetries/06-cubic.13-spg207.inp",
      "symmetries/06-cubic.03-spg197.inp",
      "symmetries/06-cubic.14-spg208.inp",
      "symmetries/02-monoclinic.11-spg13.inp",
      "symmetries/06-cubic.17-spg211.inp",
      "symmetries/03-orthorombic.30-spg45.inp",
      "symmetries/06-cubic.28-spg222.inp",
      "symmetries/05-hexagonal.46-spg188.inp",
      "symmetries/03-orthorombic.16-spg31.inp",
      "symmetries/06-cubic.23-spg217.inp",
      "symmetries/04-tetragonal.10-spg84.inp",
      "symmetries/06-cubic.18-spg212.inp",
      "symmetries/04-tetragonal.66-spg140.inp",
      "symmetries/04-tetragonal.16-spg90.inp",
      "symmetries/04-tetragonal.61-spg135.inp",
      "symmetries/03-orthorombic.46-spg61.inp",
      "symmetries/01-triclinic.01-spg1.inp",
      "symmetries/03-orthorombic.29-spg44.inp",
      "symmetries/04-tetragonal.67-spg141.inp",
      "symmetries/03-orthorombic.18-spg33.inp",
      "symmetries/05-hexagonal.33-spg175.inp",
      "symmetries/05-hexagonal.25-spg167.inp",
      "symmetries/04-tetragonal.64-spg138.inp",
      "symmetries/03-orthorombic.01-spg16.inp",
      "symmetries/03-orthorombic.21-spg36.inp",
      "symmetries/05-hexagonal.52-spg194.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "symmetries/06-cubic.26-spg220.inp",
      "symmetries/03-orthorombic.52-spg67.inp",
      "symmetries/04-tetragonal.37-spg111.inp",
      "symmetries/04-tetragonal.28-spg102.inp",
      "symmetries/05-hexagonal.26-spg168.inp",
      "symmetries/05-hexagonal.31-spg173.inp",
      "symmetries/03-orthorombic.59-spg74.inp",
      "symmetries/03-orthorombic.33-spg48.inp",
      "symmetries/04-tetragonal.50-spg124.inp",
      "symmetries/05-hexagonal.37-spg179.inp",
      "symmetries/04-tetragonal.60-spg134.inp",
      "symmetries/03-orthorombic.10-spg25.inp",
      "symmetries/05-hexagonal.08-spg150.inp",
      "symmetries/03-orthorombic.03-spg18.inp",
      "symmetries/05-hexagonal.29-spg171.inp",
      "symmetries/04-tetragonal.54-spg128.inp",
      "symmetries/03-orthorombic.44-spg59.inp",
      "symmetries/05-hexagonal.03-spg145.inp",
      "symmetries/05-hexagonal.18-spg160.inp",
      "symmetries/03-orthorombic.06-spg21.inp",
      "symmetries/04-tetragonal.14-spg88.inp",
      "symmetries/04-tetragonal.34-spg108.inp",
      "symmetries/05-hexagonal.09-spg151.inp",
      "symmetries/03-orthorombic.12-spg27.inp",
      "symmetries/03-orthorombic.28-spg43.inp",
      "symmetries/04-tetragonal.46-spg120.inp",
      "symmetries/03-orthorombic.38-spg53.inp",
      "symmetries/02-monoclinic.01-spg3.inp",
      "symmetries/06-cubic.22-spg216.inp",
      "symmetries/06-cubic.10-spg204.inp",
      "symmetries/04-tetragonal.07-spg81.inp",
      "symmetries/04-tetragonal.09-spg83.inp",
      "symmetries/04-tetragonal.05-spg79.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/13-arpes_2d.01-gs.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "tutorials/06-octopus_basics-periodic_systems.02-silicon_converged.inp",
      "tutorials/06-octopus_basics-periodic_systems.01-silicon.inp",
      "functionals/14-libvdwxc_Be_hcp.01-vdwdfcx.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "functionals/12-vdw_solid_c6.01-gs_diamond.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/04-silicon.02-kdotp.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/11-silicon_force.01-gs.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/05-lithium.04-dielectric_function.inp",
      "periodic_systems/11-silicon_force.02-nlcc.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.02_kdotp.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/27-Ar.02-kdotp.inp",
      "periodic_systems/13-primitive.03-bcc_iron.inp",
      "periodic_systems/05-lithium.05-tdtdm.inp",
      "periodic_systems/26-Na.01-gs.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/15-bandstructure.04-wannier90_output.inp",
      "periodic_systems/06-h2o_pol_lr.01_gs.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/15-bandstructure.05-wannier90_states.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/15-bandstructure.03-wannier90_setup.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/05-lithium.01-gs.inp",
      "periodic_systems/32-photodoping.01-gs.inp",
      "periodic_systems/07-mgga.02-tb09_gs_nosymm.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/27-Ar.01-gs.inp",
      "periodic_systems/24-hartree_fock_1D.01-gs.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "periodic_systems/31-magnon_1d.01-gs.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/26-Na.02-kdotp.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/04-silicon.03-emresp.inp",
      "periodic_systems/23-hybrids.01-ace.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "components/20-dft_u.04-complex_submesh.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "kpointspath": {
    "CallLine": "if (parse_block(namespace, 'KPointsPath', blk) /= 0) then",
    "Default": null,
    "Description": [
      "When this block is given, <i>k</i>-points are generated along a path",
      "defined by the points of the list.",
      "The points must be given in reduced coordinates.",
      " ",
      "The first row of the block is a set of integers defining",
      "the number of <i>k</i>-points for each segments of the path.",
      "The number of columns should be equal to <tt>Dimensions</tt>,",
      "and the k-points coordinate should be zero in finite directions.",
      " ",
      "For example, the following input samples the BZ with 15 points:",
      " ",
      "<tt>%KPointsPath",
      "<br>&nbsp;&nbsp;10 | 5",
      "<br>&nbsp;&nbsp; 0 | 0 | 0",
      "<br>&nbsp;&nbsp; 0.5 | 0 | 0",
      "<br>&nbsp;&nbsp; 0.5 | 0.5 | 0.5",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 672,
    "Manuals": [],
    "Name": "KPointsPath",
    "Options": [],
    "Section": "Mesh::KPoints",
    "Sourcefile": "electrons/kpoints.F90",
    "Testfiles": [
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/13-arpes_2d.01-gs.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "tutorials/06-octopus_basics-periodic_systems.03-bandstructure.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/15-bandstructure.02-unocc.inp",
      "lda_u/01-nio.02-unocc.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "kpointsreduced": {
    "CallLine": "if (parse_block(namespace, 'KPointsReduced', blk) == 0) then",
    "Default": null,
    "Description": [
      "Same as the block <tt>KPoints</tt> but this time the input is given in reduced",
      "coordinates, <i>i.e.</i>",
      "what <tt>Octopus</tt> writes in a line in the ground-state standard output as",
      " ",
      "<tt>#k =   1, k = (    0.154000,    0.154000,    0.154000)</tt>."
    ],
    "LineNumber": 824,
    "Manuals": [],
    "Name": "KPointsReduced",
    "Options": [],
    "Section": "Mesh::KPoints",
    "Sourcefile": "electrons/kpoints.F90",
    "Testfiles": [
      "periodic_systems/09-etsf_io.01-gs.inp",
      "periodic_systems/10-berkeleygw.02-unocc.inp",
      "periodic_systems/13-primitive.01-diamond.inp",
      "periodic_systems/13-primitive.02-graphene.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "kpointsusesymmetries": {
    "CallLine": "call parse_variable(namespace, 'KPointsUseSymmetries', .false., this%use_symmetries)",
    "Default": [
      "no"
    ],
    "Description": [
      "This variable defines whether symmetries are taken into account",
      "or not for the choice of <i>k</i>-points. If it is set to no, the <i>k</i>-point",
      "sampling will range over the full Brillouin zone.",
      " ",
      "When a perturbation is applied to the system, the full",
      "symmetries of the system cannot be used. In this case you must",
      "not use symmetries or use the <tt>SymmetryBreakDir</tt> to tell",
      "Octopus the direction of the perturbation (for the moment this",
      "has to be done by hand by the user, in the future it will be",
      "automatic).",
      " "
    ],
    "LineNumber": 271,
    "Manuals": [],
    "Name": "KPointsUseSymmetries",
    "Options": [],
    "Section": "Mesh::KPoints",
    "Sourcefile": "electrons/kpoints.F90",
    "Testfiles": [
      "symmetries/05-hexagonal.23-spg165.inp",
      "symmetries/02-monoclinic.05-spg7.inp",
      "symmetries/05-hexagonal.41-spg183.inp",
      "symmetries/02-monoclinic.04-spg6.inp",
      "symmetries/03-orthorombic.14-spg29.inp",
      "symmetries/04-tetragonal.27-spg101.inp",
      "symmetries/06-cubic.29-spg223.inp",
      "symmetries/03-orthorombic.53-spg68.inp",
      "symmetries/04-tetragonal.33-spg107.inp",
      "symmetries/02-monoclinic.07-spg9.inp",
      "symmetries/06-cubic.04-spg198.inp",
      "symmetries/04-tetragonal.51-spg125.inp",
      "symmetries/04-tetragonal.03-spg77.inp",
      "symmetries/03-orthorombic.31-spg46.inp",
      "symmetries/04-tetragonal.08-spg82.inp",
      "symmetries/03-orthorombic.05-spg20.inp",
      "symmetries/04-tetragonal.36-spg110.inp",
      "symmetries/05-hexagonal.15-spg157.inp",
      "symmetries/02-monoclinic.12-spg14.inp",
      "symmetries/03-orthorombic.19-spg34.inp",
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "symmetries/05-hexagonal.28-spg170.inp",
      "symmetries/04-tetragonal.23-spg97.inp",
      "symmetries/04-tetragonal.48-spg122.inp",
      "symmetries/04-tetragonal.21-spg95.inp",
      "symmetries/06-cubic.21-spg215.inp",
      "symmetries/02-monoclinic.09-spg11.inp",
      "symmetries/04-tetragonal.18-spg92.inp",
      "symmetries/04-tetragonal.52-spg126.inp",
      "symmetries/03-orthorombic.55-spg70.inp",
      "symmetries/03-orthorombic.09-spg24.inp",
      "symmetries/04-tetragonal.62-spg136.inp",
      "symmetries/02-monoclinic.08-spg10.inp",
      "symmetries/04-tetragonal.38-spg112.inp",
      "symmetries/04-tetragonal.49-spg123.inp",
      "symmetries/03-orthorombic.20-spg35.inp",
      "symmetries/06-cubic.05-spg199.inp",
      "symmetries/06-cubic.35-spg229.inp",
      "symmetries/02-monoclinic.03-spg5.inp",
      "symmetries/02-monoclinic.06-spg8.inp",
      "symmetries/06-cubic.06-spg200.inp",
      "symmetries/04-tetragonal.57-spg131.inp",
      "symmetries/04-tetragonal.45-spg119.inp",
      "symmetries/05-hexagonal.49-spg191.inp",
      "symmetries/03-orthorombic.26-spg41.inp",
      "symmetries/06-cubic.15-spg209.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/06-cubic.08-spg202.inp",
      "symmetries/04-tetragonal.35-spg109.inp",
      "symmetries/03-orthorombic.07-spg22.inp",
      "symmetries/04-tetragonal.32-spg106.inp",
      "symmetries/04-tetragonal.12-spg86.inp",
      "symmetries/06-cubic.01-spg195.inp",
      "symmetries/05-hexagonal.38-spg180.inp",
      "symmetries/04-tetragonal.01-spg75.inp",
      "symmetries/03-orthorombic.25-spg40.inp",
      "symmetries/04-tetragonal.39-spg113.inp",
      "symmetries/05-hexagonal.02-spg144.inp",
      "symmetries/05-hexagonal.06-spg148.inp",
      "symmetries/06-cubic.32-spg226.inp",
      "symmetries/03-orthorombic.47-spg62.inp",
      "symmetries/05-hexagonal.20-spg162.inp",
      "symmetries/06-cubic.24-spg218.inp",
      "symmetries/06-cubic.30-spg224.inp",
      "symmetries/05-hexagonal.12-spg154.inp",
      "symmetries/05-hexagonal.07-spg149.inp",
      "symmetries/05-hexagonal.27-spg169.inp",
      "symmetries/03-orthorombic.45-spg60.inp",
      "symmetries/05-hexagonal.19-spg161.inp",
      "symmetries/05-hexagonal.16-spg158.inp",
      "symmetries/05-hexagonal.48-spg190.inp",
      "symmetries/06-cubic.09-spg203.inp",
      "symmetries/03-orthorombic.24-spg39.inp",
      "symmetries/03-orthorombic.50-spg65.inp",
      "symmetries/06-cubic.34-spg228.inp",
      "symmetries/05-hexagonal.42-spg184.inp",
      "symmetries/03-orthorombic.23-spg38.inp",
      "symmetries/04-tetragonal.13-spg87.inp",
      "symmetries/06-cubic.02-spg196.inp",
      "symmetries/02-monoclinic.13-spg15.inp",
      "symmetries/05-hexagonal.45-spg187.inp",
      "symmetries/05-hexagonal.22-spg164.inp",
      "symmetries/03-orthorombic.43-spg58.inp",
      "symmetries/03-orthorombic.34-spg49.inp",
      "symmetries/04-tetragonal.47-spg121.inp",
      "symmetries/02-monoclinic.02-spg4.inp",
      "symmetries/03-orthorombic.39-spg54.inp",
      "symmetries/04-tetragonal.17-spg91.inp",
      "symmetries/04-tetragonal.22-spg96.inp",
      "symmetries/05-hexagonal.35-spg177.inp",
      "symmetries/03-orthorombic.13-spg28.inp",
      "symmetries/05-hexagonal.13-spg155.inp",
      "symmetries/03-orthorombic.42-spg57.inp",
      "symmetries/06-cubic.12-spg206.inp",
      "symmetries/02-monoclinic.10-spg12.inp",
      "symmetries/06-cubic.07-spg201.inp",
      "symmetries/03-orthorombic.36-spg51.inp",
      "symmetries/05-hexagonal.44-spg186.inp",
      "symmetries/04-tetragonal.04-spg78.inp",
      "symmetries/05-hexagonal.21-spg163.inp",
      "symmetries/04-tetragonal.02-spg76.inp",
      "symmetries/03-orthorombic.22-spg37.inp",
      "symmetries/05-hexagonal.32-spg174.inp",
      "symmetries/03-orthorombic.35-spg50.inp",
      "symmetries/03-orthorombic.17-spg32.inp",
      "symmetries/05-hexagonal.17-spg159.inp",
      "symmetries/03-orthorombic.04-spg19.inp",
      "symmetries/04-tetragonal.20-spg94.inp",
      "symmetries/06-cubic.20-spg214.inp",
      "symmetries/04-tetragonal.65-spg139.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/03-orthorombic.32-spg47.inp",
      "symmetries/03-orthorombic.02-spg17.inp",
      "symmetries/04-tetragonal.15-spg89.inp",
      "symmetries/03-orthorombic.57-spg72.inp",
      "symmetries/03-orthorombic.15-spg30.inp",
      "symmetries/03-orthorombic.49-spg64.inp",
      "symmetries/06-cubic.11-spg205.inp",
      "symmetries/04-tetragonal.30-spg104.inp",
      "symmetries/04-tetragonal.59-spg133.inp",
      "symmetries/03-orthorombic.54-spg69.inp",
      "symmetries/03-orthorombic.41-spg56.inp",
      "symmetries/06-cubic.19-spg213.inp",
      "symmetries/05-hexagonal.05-spg147.inp",
      "symmetries/04-tetragonal.25-spg99.inp",
      "symmetries/03-orthorombic.58-spg73.inp",
      "symmetries/04-tetragonal.43-spg117.inp",
      "symmetries/01-triclinic.02-spg2.inp",
      "symmetries/04-tetragonal.42-spg116.inp",
      "symmetries/05-hexagonal.50-spg192.inp",
      "symmetries/04-tetragonal.68-spg142.inp",
      "symmetries/04-tetragonal.40-spg114.inp",
      "symmetries/05-hexagonal.34-spg176.inp",
      "symmetries/04-tetragonal.63-spg137.inp",
      "symmetries/06-cubic.31-spg225.inp",
      "symmetries/05-hexagonal.36-spg178.inp",
      "symmetries/05-hexagonal.30-spg172.inp",
      "symmetries/03-orthorombic.48-spg63.inp",
      "symmetries/04-tetragonal.11-spg85.inp",
      "symmetries/05-hexagonal.40-spg182.inp",
      "symmetries/05-hexagonal.11-spg153.inp",
      "symmetries/04-tetragonal.41-spg115.inp",
      "symmetries/04-tetragonal.26-spg100.inp",
      "symmetries/05-hexagonal.24-spg166.inp",
      "symmetries/03-orthorombic.56-spg71.inp",
      "symmetries/06-cubic.16-spg210.inp",
      "symmetries/06-cubic.25-spg219.inp",
      "symmetries/03-orthorombic.51-spg66.inp",
      "symmetries/05-hexagonal.47-spg189.inp",
      "symmetries/04-tetragonal.24-spg98.inp",
      "symmetries/05-hexagonal.51-spg193.inp",
      "symmetries/03-orthorombic.37-spg52.inp",
      "symmetries/05-hexagonal.39-spg181.inp",
      "symmetries/03-orthorombic.27-spg42.inp",
      "symmetries/04-tetragonal.58-spg132.inp",
      "symmetries/04-tetragonal.31-spg105.inp",
      "symmetries/04-tetragonal.06-spg80.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "symmetries/05-hexagonal.10-spg152.inp",
      "symmetries/05-hexagonal.01-spg143.inp",
      "symmetries/05-hexagonal.04-spg146.inp",
      "symmetries/04-tetragonal.19-spg93.inp",
      "symmetries/03-orthorombic.08-spg23.inp",
      "symmetries/07-symmetrization_lda.01-spg2_sym.inp",
      "symmetries/04-tetragonal.29-spg103.inp",
      "symmetries/06-cubic.27-spg221.inp",
      "symmetries/04-tetragonal.56-spg130.inp",
      "symmetries/06-cubic.36-spg230.inp",
      "symmetries/04-tetragonal.55-spg129.inp",
      "symmetries/04-tetragonal.44-spg118.inp",
      "symmetries/04-tetragonal.53-spg127.inp",
      "symmetries/03-orthorombic.11-spg26.inp",
      "symmetries/05-hexagonal.14-spg156.inp",
      "symmetries/06-cubic.33-spg227.inp",
      "symmetries/05-hexagonal.43-spg185.inp",
      "symmetries/03-orthorombic.40-spg55.inp",
      "symmetries/06-cubic.13-spg207.inp",
      "symmetries/06-cubic.03-spg197.inp",
      "symmetries/06-cubic.14-spg208.inp",
      "symmetries/02-monoclinic.11-spg13.inp",
      "symmetries/06-cubic.17-spg211.inp",
      "symmetries/03-orthorombic.30-spg45.inp",
      "symmetries/06-cubic.28-spg222.inp",
      "symmetries/05-hexagonal.46-spg188.inp",
      "symmetries/03-orthorombic.16-spg31.inp",
      "symmetries/06-cubic.23-spg217.inp",
      "symmetries/04-tetragonal.10-spg84.inp",
      "symmetries/06-cubic.18-spg212.inp",
      "symmetries/04-tetragonal.66-spg140.inp",
      "symmetries/04-tetragonal.16-spg90.inp",
      "symmetries/04-tetragonal.61-spg135.inp",
      "symmetries/03-orthorombic.46-spg61.inp",
      "symmetries/01-triclinic.01-spg1.inp",
      "symmetries/03-orthorombic.29-spg44.inp",
      "symmetries/04-tetragonal.67-spg141.inp",
      "symmetries/03-orthorombic.18-spg33.inp",
      "symmetries/05-hexagonal.33-spg175.inp",
      "symmetries/05-hexagonal.25-spg167.inp",
      "symmetries/04-tetragonal.64-spg138.inp",
      "symmetries/03-orthorombic.01-spg16.inp",
      "symmetries/03-orthorombic.21-spg36.inp",
      "symmetries/05-hexagonal.52-spg194.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "symmetries/06-cubic.26-spg220.inp",
      "symmetries/03-orthorombic.52-spg67.inp",
      "symmetries/04-tetragonal.37-spg111.inp",
      "symmetries/04-tetragonal.28-spg102.inp",
      "symmetries/05-hexagonal.26-spg168.inp",
      "symmetries/05-hexagonal.31-spg173.inp",
      "symmetries/03-orthorombic.59-spg74.inp",
      "symmetries/03-orthorombic.33-spg48.inp",
      "symmetries/04-tetragonal.50-spg124.inp",
      "symmetries/05-hexagonal.37-spg179.inp",
      "symmetries/04-tetragonal.60-spg134.inp",
      "symmetries/03-orthorombic.10-spg25.inp",
      "symmetries/05-hexagonal.08-spg150.inp",
      "symmetries/03-orthorombic.03-spg18.inp",
      "symmetries/05-hexagonal.29-spg171.inp",
      "symmetries/04-tetragonal.54-spg128.inp",
      "symmetries/03-orthorombic.44-spg59.inp",
      "symmetries/05-hexagonal.03-spg145.inp",
      "symmetries/05-hexagonal.18-spg160.inp",
      "symmetries/03-orthorombic.06-spg21.inp",
      "symmetries/04-tetragonal.14-spg88.inp",
      "symmetries/04-tetragonal.34-spg108.inp",
      "symmetries/05-hexagonal.09-spg151.inp",
      "symmetries/03-orthorombic.12-spg27.inp",
      "symmetries/03-orthorombic.28-spg43.inp",
      "symmetries/04-tetragonal.46-spg120.inp",
      "symmetries/03-orthorombic.38-spg53.inp",
      "symmetries/02-monoclinic.01-spg3.inp",
      "symmetries/06-cubic.22-spg216.inp",
      "symmetries/06-cubic.10-spg204.inp",
      "symmetries/04-tetragonal.07-spg81.inp",
      "symmetries/04-tetragonal.09-spg83.inp",
      "symmetries/04-tetragonal.05-spg79.inp",
      "tutorials/06-octopus_basics-periodic_systems.02-silicon_converged.inp",
      "tutorials/06-octopus_basics-periodic_systems.01-silicon.inp",
      "tutorials/06-octopus_basics-periodic_systems.03-bandstructure.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "functionals/12-vdw_solid_c6.01-gs_diamond.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/04-silicon.02-kdotp.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/11-silicon_force.01-gs.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/05-lithium.04-dielectric_function.inp",
      "periodic_systems/11-silicon_force.02-nlcc.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/05-lithium.05-tdtdm.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/05-lithium.01-gs.inp",
      "periodic_systems/32-photodoping.01-gs.inp",
      "periodic_systems/07-mgga.02-tb09_gs_nosymm.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/04-silicon.03-emresp.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "kpointsusetimereversal": {
    "CallLine": "call parse_variable(namespace, 'KPointsUseTimeReversal', default_timereversal, this%use_time_reversal)",
    "Default": null,
    "Description": [
      "If symmetries are used to reduce the number of <i>k</i>-points,",
      "this variable defines whether time-reversal symmetry is taken",
      "into account or not. If it is set to no, the <i>k</i>-point",
      "sampling will not be reduced according to time-reversal",
      "symmetry.",
      " ",
      "The default is yes, unless symmetries are broken in one",
      "direction by the <tt>SymmetryBreakDir</tt> block.",
      " ",
      "Warning: For time propagation runs with an external field,",
      "time-reversal symmetry should not be used.",
      " "
    ],
    "LineNumber": 291,
    "Manuals": [],
    "Name": "KPointsUseTimeReversal",
    "Options": [],
    "Section": "Mesh::KPoints",
    "Sourcefile": "electrons/kpoints.F90",
    "Testfiles": [
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "ksinversionasymptotics": {
    "CallLine": "call parse_variable(namespace, 'KSInversionAsymptotics', XC_ASYMPTOTICS_NONE, ks_inv%asymp)",
    "Default": [
      "xc_asymptotics_none"
    ],
    "Description": [
      "Asymptotic correction applied to <math>v_{xc}</math>."
    ],
    "LineNumber": 174,
    "Manuals": [],
    "Name": "KSInversionAsymptotics",
    "Options": [
      {
        "Description": [
          "Do not apply any correction in the asymptotic region."
        ],
        "Name": "xc_asymptotics_none",
        "Value": "1"
      },
      {
        "Description": [
          "Applies the soft-Coulomb decay of <math>-1/\\sqrt{r^2+1}</math> to <math>v_{xc}</math> in the asymptotic region."
        ],
        "Name": "xc_asymptotics_sc",
        "Value": "2"
      }
    ],
    "Section": "Calculation Modes::Invert KS",
    "Sourcefile": "electrons/xc_ks_inversion.F90",
    "Testfiles": [
      "functionals/05-ks_inversion.03-inversion.inp",
      "functionals/05-ks_inversion.02-two_particle.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "ksinversionlevel": {
    "CallLine": "call parse_variable(namespace, 'KSInversionLevel', XC_KS_INVERSION_ADIABATIC, ks_inv%level)",
    "Default": [
      "ks_inversion_adiabatic"
    ],
    "Description": [
      "At what level <tt>Octopus</tt> shall handle the KS inversion."
    ],
    "LineNumber": 160,
    "Manuals": [],
    "Name": "KSInversionLevel",
    "Options": [
      {
        "Description": [
          "Do not compute KS inversion."
        ],
        "Name": "ks_inversion_none",
        "Value": "1"
      },
      {
        "Description": [
          "Compute exact adiabatic <math>v_{xc}</math>."
        ],
        "Name": "ks_inversion_adiabatic",
        "Value": "2"
      }
    ],
    "Section": "Calculation Modes::Invert KS",
    "Sourcefile": "electrons/xc_ks_inversion.F90",
    "Testfiles": [
      "functionals/05-ks_inversion.03-inversion.inp",
      "functionals/05-ks_inversion.02-two_particle.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "latticeparameters": {
    "CallLine": "if (parse_block(namespace, prefix//'LatticeParameters', blk) == 0) then",
    "Default": null,
    "Description": [
      "The lattice parameters (a, b, c).",
      "This variable is mandatory for periodic systems and is ignored otherwise.",
      "When PeriodicDimensions = 3, a second optional line can be used to",
      "define the angles between the lattice vectors. If the angles are not",
      "provided, then the variable LatticeVectors must be set.",
      "The number of parameters specified in the block must be at least equal",
      "to the number of periodic dimensions, but it is not mandatory to",
      "specify parameters for the non-periodic dimensions (in that case they",
      "are set to 1)."
    ],
    "LineNumber": 195,
    "Manuals": [],
    "Name": "LatticeParameters",
    "Options": [],
    "Section": "Mesh::Simulation Box",
    "Sourcefile": "basic/lattice_vectors.F90",
    "Testfiles": [
      "real_time/22-td_move_ions_periodic.01-gs.inp",
      "real_time/22-td_move_ions_periodic.02-td.inp",
      "symmetries/05-hexagonal.23-spg165.inp",
      "symmetries/02-monoclinic.05-spg7.inp",
      "symmetries/05-hexagonal.41-spg183.inp",
      "symmetries/02-monoclinic.04-spg6.inp",
      "symmetries/03-orthorombic.14-spg29.inp",
      "symmetries/04-tetragonal.27-spg101.inp",
      "symmetries/06-cubic.29-spg223.inp",
      "symmetries/03-orthorombic.53-spg68.inp",
      "symmetries/04-tetragonal.33-spg107.inp",
      "symmetries/02-monoclinic.07-spg9.inp",
      "symmetries/06-cubic.04-spg198.inp",
      "symmetries/04-tetragonal.51-spg125.inp",
      "symmetries/04-tetragonal.03-spg77.inp",
      "symmetries/03-orthorombic.31-spg46.inp",
      "symmetries/04-tetragonal.08-spg82.inp",
      "symmetries/03-orthorombic.05-spg20.inp",
      "symmetries/04-tetragonal.36-spg110.inp",
      "symmetries/05-hexagonal.15-spg157.inp",
      "symmetries/02-monoclinic.12-spg14.inp",
      "symmetries/03-orthorombic.19-spg34.inp",
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "symmetries/05-hexagonal.28-spg170.inp",
      "symmetries/04-tetragonal.23-spg97.inp",
      "symmetries/04-tetragonal.48-spg122.inp",
      "symmetries/04-tetragonal.21-spg95.inp",
      "symmetries/06-cubic.21-spg215.inp",
      "symmetries/02-monoclinic.09-spg11.inp",
      "symmetries/04-tetragonal.18-spg92.inp",
      "symmetries/04-tetragonal.52-spg126.inp",
      "symmetries/03-orthorombic.55-spg70.inp",
      "symmetries/03-orthorombic.09-spg24.inp",
      "symmetries/04-tetragonal.62-spg136.inp",
      "symmetries/02-monoclinic.08-spg10.inp",
      "symmetries/04-tetragonal.38-spg112.inp",
      "symmetries/04-tetragonal.49-spg123.inp",
      "symmetries/03-orthorombic.20-spg35.inp",
      "symmetries/06-cubic.05-spg199.inp",
      "symmetries/06-cubic.35-spg229.inp",
      "symmetries/02-monoclinic.03-spg5.inp",
      "symmetries/02-monoclinic.06-spg8.inp",
      "symmetries/06-cubic.06-spg200.inp",
      "symmetries/04-tetragonal.57-spg131.inp",
      "symmetries/04-tetragonal.45-spg119.inp",
      "symmetries/05-hexagonal.49-spg191.inp",
      "symmetries/03-orthorombic.26-spg41.inp",
      "symmetries/06-cubic.15-spg209.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/06-cubic.08-spg202.inp",
      "symmetries/04-tetragonal.35-spg109.inp",
      "symmetries/03-orthorombic.07-spg22.inp",
      "symmetries/04-tetragonal.32-spg106.inp",
      "symmetries/04-tetragonal.12-spg86.inp",
      "symmetries/06-cubic.01-spg195.inp",
      "symmetries/05-hexagonal.38-spg180.inp",
      "symmetries/04-tetragonal.01-spg75.inp",
      "symmetries/03-orthorombic.25-spg40.inp",
      "symmetries/04-tetragonal.39-spg113.inp",
      "symmetries/05-hexagonal.02-spg144.inp",
      "symmetries/05-hexagonal.06-spg148.inp",
      "symmetries/06-cubic.32-spg226.inp",
      "symmetries/03-orthorombic.47-spg62.inp",
      "symmetries/05-hexagonal.20-spg162.inp",
      "symmetries/06-cubic.24-spg218.inp",
      "symmetries/06-cubic.30-spg224.inp",
      "symmetries/05-hexagonal.12-spg154.inp",
      "symmetries/05-hexagonal.07-spg149.inp",
      "symmetries/05-hexagonal.27-spg169.inp",
      "symmetries/03-orthorombic.45-spg60.inp",
      "symmetries/05-hexagonal.19-spg161.inp",
      "symmetries/05-hexagonal.16-spg158.inp",
      "symmetries/05-hexagonal.48-spg190.inp",
      "symmetries/06-cubic.09-spg203.inp",
      "symmetries/03-orthorombic.24-spg39.inp",
      "symmetries/03-orthorombic.50-spg65.inp",
      "symmetries/06-cubic.34-spg228.inp",
      "symmetries/05-hexagonal.42-spg184.inp",
      "symmetries/03-orthorombic.23-spg38.inp",
      "symmetries/04-tetragonal.13-spg87.inp",
      "symmetries/06-cubic.02-spg196.inp",
      "symmetries/02-monoclinic.13-spg15.inp",
      "symmetries/05-hexagonal.45-spg187.inp",
      "symmetries/05-hexagonal.22-spg164.inp",
      "symmetries/03-orthorombic.43-spg58.inp",
      "symmetries/03-orthorombic.34-spg49.inp",
      "symmetries/04-tetragonal.47-spg121.inp",
      "symmetries/02-monoclinic.02-spg4.inp",
      "symmetries/03-orthorombic.39-spg54.inp",
      "symmetries/04-tetragonal.17-spg91.inp",
      "symmetries/04-tetragonal.22-spg96.inp",
      "symmetries/05-hexagonal.35-spg177.inp",
      "symmetries/03-orthorombic.13-spg28.inp",
      "symmetries/05-hexagonal.13-spg155.inp",
      "symmetries/03-orthorombic.42-spg57.inp",
      "symmetries/06-cubic.12-spg206.inp",
      "symmetries/02-monoclinic.10-spg12.inp",
      "symmetries/06-cubic.07-spg201.inp",
      "symmetries/03-orthorombic.36-spg51.inp",
      "symmetries/05-hexagonal.44-spg186.inp",
      "symmetries/04-tetragonal.04-spg78.inp",
      "symmetries/05-hexagonal.21-spg163.inp",
      "symmetries/04-tetragonal.02-spg76.inp",
      "symmetries/03-orthorombic.22-spg37.inp",
      "symmetries/05-hexagonal.32-spg174.inp",
      "symmetries/03-orthorombic.35-spg50.inp",
      "symmetries/03-orthorombic.17-spg32.inp",
      "symmetries/05-hexagonal.17-spg159.inp",
      "symmetries/03-orthorombic.04-spg19.inp",
      "symmetries/04-tetragonal.20-spg94.inp",
      "symmetries/06-cubic.20-spg214.inp",
      "symmetries/04-tetragonal.65-spg139.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/03-orthorombic.32-spg47.inp",
      "symmetries/03-orthorombic.02-spg17.inp",
      "symmetries/04-tetragonal.15-spg89.inp",
      "symmetries/03-orthorombic.57-spg72.inp",
      "symmetries/03-orthorombic.15-spg30.inp",
      "symmetries/03-orthorombic.49-spg64.inp",
      "symmetries/06-cubic.11-spg205.inp",
      "symmetries/04-tetragonal.30-spg104.inp",
      "symmetries/04-tetragonal.59-spg133.inp",
      "symmetries/03-orthorombic.54-spg69.inp",
      "symmetries/03-orthorombic.41-spg56.inp",
      "symmetries/06-cubic.19-spg213.inp",
      "symmetries/05-hexagonal.05-spg147.inp",
      "symmetries/04-tetragonal.25-spg99.inp",
      "symmetries/03-orthorombic.58-spg73.inp",
      "symmetries/04-tetragonal.43-spg117.inp",
      "symmetries/01-triclinic.02-spg2.inp",
      "symmetries/04-tetragonal.42-spg116.inp",
      "symmetries/05-hexagonal.50-spg192.inp",
      "symmetries/04-tetragonal.68-spg142.inp",
      "symmetries/04-tetragonal.40-spg114.inp",
      "symmetries/05-hexagonal.34-spg176.inp",
      "symmetries/04-tetragonal.63-spg137.inp",
      "symmetries/06-cubic.31-spg225.inp",
      "symmetries/05-hexagonal.36-spg178.inp",
      "symmetries/05-hexagonal.30-spg172.inp",
      "symmetries/03-orthorombic.48-spg63.inp",
      "symmetries/04-tetragonal.11-spg85.inp",
      "symmetries/05-hexagonal.40-spg182.inp",
      "symmetries/05-hexagonal.11-spg153.inp",
      "symmetries/04-tetragonal.41-spg115.inp",
      "symmetries/01-triclinic.16-spg16.inp",
      "symmetries/04-tetragonal.26-spg100.inp",
      "symmetries/05-hexagonal.24-spg166.inp",
      "symmetries/03-orthorombic.56-spg71.inp",
      "symmetries/06-cubic.16-spg210.inp",
      "symmetries/06-cubic.25-spg219.inp",
      "symmetries/03-orthorombic.51-spg66.inp",
      "symmetries/05-hexagonal.47-spg189.inp",
      "symmetries/04-tetragonal.24-spg98.inp",
      "symmetries/05-hexagonal.51-spg193.inp",
      "symmetries/03-orthorombic.37-spg52.inp",
      "symmetries/05-hexagonal.39-spg181.inp",
      "symmetries/03-orthorombic.27-spg42.inp",
      "symmetries/04-tetragonal.58-spg132.inp",
      "symmetries/04-tetragonal.31-spg105.inp",
      "symmetries/04-tetragonal.06-spg80.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "symmetries/05-hexagonal.10-spg152.inp",
      "symmetries/05-hexagonal.01-spg143.inp",
      "symmetries/05-hexagonal.04-spg146.inp",
      "symmetries/04-tetragonal.19-spg93.inp",
      "symmetries/03-orthorombic.08-spg23.inp",
      "symmetries/07-symmetrization_lda.01-spg2_sym.inp",
      "symmetries/04-tetragonal.29-spg103.inp",
      "symmetries/06-cubic.27-spg221.inp",
      "symmetries/04-tetragonal.56-spg130.inp",
      "symmetries/06-cubic.36-spg230.inp",
      "symmetries/04-tetragonal.55-spg129.inp",
      "symmetries/04-tetragonal.44-spg118.inp",
      "symmetries/04-tetragonal.53-spg127.inp",
      "symmetries/03-orthorombic.11-spg26.inp",
      "symmetries/05-hexagonal.14-spg156.inp",
      "symmetries/06-cubic.33-spg227.inp",
      "symmetries/05-hexagonal.43-spg185.inp",
      "symmetries/03-orthorombic.40-spg55.inp",
      "symmetries/06-cubic.13-spg207.inp",
      "symmetries/06-cubic.03-spg197.inp",
      "symmetries/06-cubic.14-spg208.inp",
      "symmetries/02-monoclinic.11-spg13.inp",
      "symmetries/06-cubic.17-spg211.inp",
      "symmetries/03-orthorombic.30-spg45.inp",
      "symmetries/06-cubic.28-spg222.inp",
      "symmetries/05-hexagonal.46-spg188.inp",
      "symmetries/03-orthorombic.16-spg31.inp",
      "symmetries/06-cubic.23-spg217.inp",
      "symmetries/04-tetragonal.10-spg84.inp",
      "symmetries/06-cubic.18-spg212.inp",
      "symmetries/04-tetragonal.66-spg140.inp",
      "symmetries/04-tetragonal.16-spg90.inp",
      "symmetries/04-tetragonal.61-spg135.inp",
      "symmetries/03-orthorombic.46-spg61.inp",
      "symmetries/01-triclinic.01-spg1.inp",
      "symmetries/03-orthorombic.29-spg44.inp",
      "symmetries/04-tetragonal.67-spg141.inp",
      "symmetries/03-orthorombic.18-spg33.inp",
      "symmetries/05-hexagonal.33-spg175.inp",
      "symmetries/05-hexagonal.25-spg167.inp",
      "symmetries/04-tetragonal.64-spg138.inp",
      "symmetries/03-orthorombic.01-spg16.inp",
      "symmetries/03-orthorombic.21-spg36.inp",
      "symmetries/05-hexagonal.52-spg194.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "symmetries/06-cubic.26-spg220.inp",
      "symmetries/03-orthorombic.52-spg67.inp",
      "symmetries/04-tetragonal.37-spg111.inp",
      "symmetries/04-tetragonal.28-spg102.inp",
      "symmetries/05-hexagonal.26-spg168.inp",
      "symmetries/05-hexagonal.31-spg173.inp",
      "symmetries/03-orthorombic.59-spg74.inp",
      "symmetries/03-orthorombic.33-spg48.inp",
      "symmetries/04-tetragonal.50-spg124.inp",
      "symmetries/05-hexagonal.37-spg179.inp",
      "symmetries/04-tetragonal.60-spg134.inp",
      "symmetries/03-orthorombic.10-spg25.inp",
      "symmetries/05-hexagonal.08-spg150.inp",
      "symmetries/03-orthorombic.03-spg18.inp",
      "symmetries/05-hexagonal.29-spg171.inp",
      "symmetries/04-tetragonal.54-spg128.inp",
      "symmetries/03-orthorombic.44-spg59.inp",
      "symmetries/05-hexagonal.03-spg145.inp",
      "symmetries/05-hexagonal.18-spg160.inp",
      "symmetries/03-orthorombic.06-spg21.inp",
      "symmetries/04-tetragonal.14-spg88.inp",
      "symmetries/04-tetragonal.34-spg108.inp",
      "symmetries/05-hexagonal.09-spg151.inp",
      "symmetries/03-orthorombic.12-spg27.inp",
      "symmetries/03-orthorombic.28-spg43.inp",
      "symmetries/04-tetragonal.46-spg120.inp",
      "symmetries/03-orthorombic.38-spg53.inp",
      "symmetries/02-monoclinic.01-spg3.inp",
      "symmetries/06-cubic.22-spg216.inp",
      "symmetries/06-cubic.10-spg204.inp",
      "symmetries/04-tetragonal.07-spg81.inp",
      "symmetries/04-tetragonal.09-spg83.inp",
      "symmetries/04-tetragonal.05-spg79.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/13-arpes_2d.01-gs.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "tutorials/06-octopus_basics-periodic_systems.02-silicon_converged.inp",
      "tutorials/06-octopus_basics-periodic_systems.01-silicon.inp",
      "tutorials/06-octopus_basics-periodic_systems.03-bandstructure.inp",
      "functionals/03-xc.mvorb_hse06_fock.inp",
      "functionals/10-vdw_d3_dna.01-gs_novdw.inp",
      "functionals/14-libvdwxc_Be_hcp.01-vdwdfcx.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "functionals/10-vdw_d3_dna.02-gs_d3.inp",
      "functionals/12-vdw_solid_c6.01-gs_diamond.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/04-silicon.02-kdotp.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/22-berry.02-cubic_Si.inp",
      "periodic_systems/11-silicon_force.01-gs.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/05-lithium.04-dielectric_function.inp",
      "periodic_systems/11-silicon_force.02-nlcc.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.02_kdotp.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/27-Ar.02-kdotp.inp",
      "periodic_systems/13-primitive.03-bcc_iron.inp",
      "periodic_systems/05-lithium.05-tdtdm.inp",
      "periodic_systems/26-Na.01-gs.inp",
      "periodic_systems/22-berry.01-cubic_Si_gs.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/01-free_electrons.02-unocc.inp",
      "periodic_systems/15-bandstructure.04-wannier90_output.inp",
      "periodic_systems/06-h2o_pol_lr.01_gs.inp",
      "periodic_systems/19-unfolding.03-unocc.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/15-bandstructure.05-wannier90_states.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/01-free_electrons.01-ground_state.inp",
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/15-bandstructure.03-wannier90_setup.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/02-cosine_potential.02-unocc.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/05-lithium.01-gs.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "periodic_systems/32-photodoping.01-gs.inp",
      "periodic_systems/07-mgga.02-tb09_gs_nosymm.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/20-masked_periodic_boundaries.01-graphene.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/27-Ar.01-gs.inp",
      "periodic_systems/24-hartree_fock_1D.01-gs.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "periodic_systems/31-magnon_1d.01-gs.inp",
      "periodic_systems/09-etsf_io.01-gs.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/26-Na.02-kdotp.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/03-sodium_chain.03-ground_state_disp.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/04-silicon.03-emresp.inp",
      "periodic_systems/10-berkeleygw.02-unocc.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/15-bandstructure.02-unocc.inp",
      "periodic_systems/23-hybrids.01-ace.inp",
      "periodic_systems/19-unfolding.02-setup.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/13-primitive.01-diamond.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/19-unfolding.04-run.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/08-benzene_supercell.01-gs.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "periodic_systems/02-cosine_potential.01-ground_state.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "components/22-density_calc.01-Si.inp",
      "components/20-dft_u.04-complex_submesh.inp",
      "components/26-batch_ops.02-jellium-complex.inp",
      "components/05-hartree_3d_fft.04-3d_3d_periodic.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/26-batch_ops.03-jellium-spinor.inp",
      "components/10-hartree_pfft.03-3d_1d_periodic.inp",
      "components/03-derivatives_3d.02-non-orthogonal.inp",
      "components/26-batch_ops.01-jellium.inp",
      "components/10-hartree_pfft.05-3d_2d_periodic.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/21-hamiltonian_apply.01-Si.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/24-boundaries.01-jellium.inp",
      "components/10-hartree_pfft.04-3d_3d_periodic.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/03-derivatives_3d.02-non-orthogonal_unpacked.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/05-hartree_3d_fft.03-3d_1d_periodic.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "components/05-hartree_3d_fft.05-3d_2d_periodic.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/09-basis_from_states.01-lda.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "latticevectors": {
    "CallLine": "if (parse_block(namespace, prefix//'LatticeVectors', blk) == 0) then",
    "Default": [
      "simple",
      "cubic"
    ],
    "Description": [
      "Primitive lattice vectors. Vectors are stored in rows.",
      "LatticeVectors are normalized and then used, if both LatticeParameters and",
      "LatticeVectors are defined, norm of LatticeVectors are",
      "used as multipliers of lattice parameters.",
      "Default:",
      "<br><br><tt>%LatticeVectors",
      "<br>&nbsp;&nbsp;1.0 | 0.0 | 0.0",
      "<br>&nbsp;&nbsp;0.0 | 1.0 | 0.0",
      "<br>&nbsp;&nbsp;0.0 | 0.0 | 1.0",
      "<br>%<br></tt>"
    ],
    "LineNumber": 266,
    "Manuals": [],
    "Name": "LatticeVectors",
    "Options": [],
    "Section": "Mesh::Simulation Box",
    "Sourcefile": "basic/lattice_vectors.F90",
    "Testfiles": [
      "symmetries/05-hexagonal.23-spg165.inp",
      "symmetries/02-monoclinic.05-spg7.inp",
      "symmetries/05-hexagonal.41-spg183.inp",
      "symmetries/02-monoclinic.04-spg6.inp",
      "symmetries/03-orthorombic.14-spg29.inp",
      "symmetries/04-tetragonal.27-spg101.inp",
      "symmetries/06-cubic.29-spg223.inp",
      "symmetries/03-orthorombic.53-spg68.inp",
      "symmetries/04-tetragonal.33-spg107.inp",
      "symmetries/02-monoclinic.07-spg9.inp",
      "symmetries/06-cubic.04-spg198.inp",
      "symmetries/04-tetragonal.51-spg125.inp",
      "symmetries/04-tetragonal.03-spg77.inp",
      "symmetries/03-orthorombic.31-spg46.inp",
      "symmetries/04-tetragonal.08-spg82.inp",
      "symmetries/03-orthorombic.05-spg20.inp",
      "symmetries/04-tetragonal.36-spg110.inp",
      "symmetries/05-hexagonal.15-spg157.inp",
      "symmetries/02-monoclinic.12-spg14.inp",
      "symmetries/03-orthorombic.19-spg34.inp",
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "symmetries/05-hexagonal.28-spg170.inp",
      "symmetries/04-tetragonal.23-spg97.inp",
      "symmetries/04-tetragonal.48-spg122.inp",
      "symmetries/04-tetragonal.21-spg95.inp",
      "symmetries/06-cubic.21-spg215.inp",
      "symmetries/02-monoclinic.09-spg11.inp",
      "symmetries/04-tetragonal.18-spg92.inp",
      "symmetries/04-tetragonal.52-spg126.inp",
      "symmetries/03-orthorombic.55-spg70.inp",
      "symmetries/03-orthorombic.09-spg24.inp",
      "symmetries/04-tetragonal.62-spg136.inp",
      "symmetries/02-monoclinic.08-spg10.inp",
      "symmetries/04-tetragonal.38-spg112.inp",
      "symmetries/04-tetragonal.49-spg123.inp",
      "symmetries/03-orthorombic.20-spg35.inp",
      "symmetries/06-cubic.05-spg199.inp",
      "symmetries/06-cubic.35-spg229.inp",
      "symmetries/02-monoclinic.03-spg5.inp",
      "symmetries/02-monoclinic.06-spg8.inp",
      "symmetries/06-cubic.06-spg200.inp",
      "symmetries/04-tetragonal.57-spg131.inp",
      "symmetries/04-tetragonal.45-spg119.inp",
      "symmetries/05-hexagonal.49-spg191.inp",
      "symmetries/03-orthorombic.26-spg41.inp",
      "symmetries/06-cubic.15-spg209.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/06-cubic.08-spg202.inp",
      "symmetries/04-tetragonal.35-spg109.inp",
      "symmetries/03-orthorombic.07-spg22.inp",
      "symmetries/04-tetragonal.32-spg106.inp",
      "symmetries/04-tetragonal.12-spg86.inp",
      "symmetries/06-cubic.01-spg195.inp",
      "symmetries/05-hexagonal.38-spg180.inp",
      "symmetries/04-tetragonal.01-spg75.inp",
      "symmetries/03-orthorombic.25-spg40.inp",
      "symmetries/04-tetragonal.39-spg113.inp",
      "symmetries/05-hexagonal.02-spg144.inp",
      "symmetries/05-hexagonal.06-spg148.inp",
      "symmetries/06-cubic.32-spg226.inp",
      "symmetries/03-orthorombic.47-spg62.inp",
      "symmetries/05-hexagonal.20-spg162.inp",
      "symmetries/06-cubic.24-spg218.inp",
      "symmetries/06-cubic.30-spg224.inp",
      "symmetries/05-hexagonal.12-spg154.inp",
      "symmetries/05-hexagonal.07-spg149.inp",
      "symmetries/05-hexagonal.27-spg169.inp",
      "symmetries/03-orthorombic.45-spg60.inp",
      "symmetries/05-hexagonal.19-spg161.inp",
      "symmetries/05-hexagonal.16-spg158.inp",
      "symmetries/05-hexagonal.48-spg190.inp",
      "symmetries/06-cubic.09-spg203.inp",
      "symmetries/03-orthorombic.24-spg39.inp",
      "symmetries/03-orthorombic.50-spg65.inp",
      "symmetries/06-cubic.34-spg228.inp",
      "symmetries/05-hexagonal.42-spg184.inp",
      "symmetries/03-orthorombic.23-spg38.inp",
      "symmetries/04-tetragonal.13-spg87.inp",
      "symmetries/06-cubic.02-spg196.inp",
      "symmetries/02-monoclinic.13-spg15.inp",
      "symmetries/05-hexagonal.45-spg187.inp",
      "symmetries/05-hexagonal.22-spg164.inp",
      "symmetries/03-orthorombic.43-spg58.inp",
      "symmetries/03-orthorombic.34-spg49.inp",
      "symmetries/04-tetragonal.47-spg121.inp",
      "symmetries/02-monoclinic.02-spg4.inp",
      "symmetries/03-orthorombic.39-spg54.inp",
      "symmetries/04-tetragonal.17-spg91.inp",
      "symmetries/04-tetragonal.22-spg96.inp",
      "symmetries/05-hexagonal.35-spg177.inp",
      "symmetries/03-orthorombic.13-spg28.inp",
      "symmetries/05-hexagonal.13-spg155.inp",
      "symmetries/03-orthorombic.42-spg57.inp",
      "symmetries/06-cubic.12-spg206.inp",
      "symmetries/02-monoclinic.10-spg12.inp",
      "symmetries/06-cubic.07-spg201.inp",
      "symmetries/03-orthorombic.36-spg51.inp",
      "symmetries/05-hexagonal.44-spg186.inp",
      "symmetries/04-tetragonal.04-spg78.inp",
      "symmetries/05-hexagonal.21-spg163.inp",
      "symmetries/04-tetragonal.02-spg76.inp",
      "symmetries/03-orthorombic.22-spg37.inp",
      "symmetries/05-hexagonal.32-spg174.inp",
      "symmetries/03-orthorombic.35-spg50.inp",
      "symmetries/03-orthorombic.17-spg32.inp",
      "symmetries/05-hexagonal.17-spg159.inp",
      "symmetries/03-orthorombic.04-spg19.inp",
      "symmetries/04-tetragonal.20-spg94.inp",
      "symmetries/06-cubic.20-spg214.inp",
      "symmetries/04-tetragonal.65-spg139.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/03-orthorombic.32-spg47.inp",
      "symmetries/03-orthorombic.02-spg17.inp",
      "symmetries/04-tetragonal.15-spg89.inp",
      "symmetries/03-orthorombic.57-spg72.inp",
      "symmetries/03-orthorombic.15-spg30.inp",
      "symmetries/03-orthorombic.49-spg64.inp",
      "symmetries/06-cubic.11-spg205.inp",
      "symmetries/04-tetragonal.30-spg104.inp",
      "symmetries/04-tetragonal.59-spg133.inp",
      "symmetries/03-orthorombic.54-spg69.inp",
      "symmetries/03-orthorombic.41-spg56.inp",
      "symmetries/06-cubic.19-spg213.inp",
      "symmetries/05-hexagonal.05-spg147.inp",
      "symmetries/04-tetragonal.25-spg99.inp",
      "symmetries/03-orthorombic.58-spg73.inp",
      "symmetries/04-tetragonal.43-spg117.inp",
      "symmetries/01-triclinic.02-spg2.inp",
      "symmetries/04-tetragonal.42-spg116.inp",
      "symmetries/05-hexagonal.50-spg192.inp",
      "symmetries/04-tetragonal.68-spg142.inp",
      "symmetries/04-tetragonal.40-spg114.inp",
      "symmetries/05-hexagonal.34-spg176.inp",
      "symmetries/04-tetragonal.63-spg137.inp",
      "symmetries/06-cubic.31-spg225.inp",
      "symmetries/05-hexagonal.36-spg178.inp",
      "symmetries/05-hexagonal.30-spg172.inp",
      "symmetries/03-orthorombic.48-spg63.inp",
      "symmetries/04-tetragonal.11-spg85.inp",
      "symmetries/05-hexagonal.40-spg182.inp",
      "symmetries/05-hexagonal.11-spg153.inp",
      "symmetries/04-tetragonal.41-spg115.inp",
      "symmetries/01-triclinic.16-spg16.inp",
      "symmetries/04-tetragonal.26-spg100.inp",
      "symmetries/05-hexagonal.24-spg166.inp",
      "symmetries/03-orthorombic.56-spg71.inp",
      "symmetries/06-cubic.16-spg210.inp",
      "symmetries/06-cubic.25-spg219.inp",
      "symmetries/03-orthorombic.51-spg66.inp",
      "symmetries/05-hexagonal.47-spg189.inp",
      "symmetries/04-tetragonal.24-spg98.inp",
      "symmetries/05-hexagonal.51-spg193.inp",
      "symmetries/03-orthorombic.37-spg52.inp",
      "symmetries/05-hexagonal.39-spg181.inp",
      "symmetries/03-orthorombic.27-spg42.inp",
      "symmetries/04-tetragonal.58-spg132.inp",
      "symmetries/04-tetragonal.31-spg105.inp",
      "symmetries/04-tetragonal.06-spg80.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "symmetries/05-hexagonal.10-spg152.inp",
      "symmetries/05-hexagonal.01-spg143.inp",
      "symmetries/05-hexagonal.04-spg146.inp",
      "symmetries/04-tetragonal.19-spg93.inp",
      "symmetries/03-orthorombic.08-spg23.inp",
      "symmetries/07-symmetrization_lda.01-spg2_sym.inp",
      "symmetries/04-tetragonal.29-spg103.inp",
      "symmetries/06-cubic.27-spg221.inp",
      "symmetries/04-tetragonal.56-spg130.inp",
      "symmetries/06-cubic.36-spg230.inp",
      "symmetries/04-tetragonal.55-spg129.inp",
      "symmetries/04-tetragonal.44-spg118.inp",
      "symmetries/04-tetragonal.53-spg127.inp",
      "symmetries/03-orthorombic.11-spg26.inp",
      "symmetries/05-hexagonal.14-spg156.inp",
      "symmetries/06-cubic.33-spg227.inp",
      "symmetries/05-hexagonal.43-spg185.inp",
      "symmetries/03-orthorombic.40-spg55.inp",
      "symmetries/06-cubic.13-spg207.inp",
      "symmetries/06-cubic.03-spg197.inp",
      "symmetries/06-cubic.14-spg208.inp",
      "symmetries/02-monoclinic.11-spg13.inp",
      "symmetries/06-cubic.17-spg211.inp",
      "symmetries/03-orthorombic.30-spg45.inp",
      "symmetries/06-cubic.28-spg222.inp",
      "symmetries/05-hexagonal.46-spg188.inp",
      "symmetries/03-orthorombic.16-spg31.inp",
      "symmetries/06-cubic.23-spg217.inp",
      "symmetries/04-tetragonal.10-spg84.inp",
      "symmetries/06-cubic.18-spg212.inp",
      "symmetries/04-tetragonal.66-spg140.inp",
      "symmetries/04-tetragonal.16-spg90.inp",
      "symmetries/04-tetragonal.61-spg135.inp",
      "symmetries/03-orthorombic.46-spg61.inp",
      "symmetries/01-triclinic.01-spg1.inp",
      "symmetries/03-orthorombic.29-spg44.inp",
      "symmetries/04-tetragonal.67-spg141.inp",
      "symmetries/03-orthorombic.18-spg33.inp",
      "symmetries/05-hexagonal.33-spg175.inp",
      "symmetries/05-hexagonal.25-spg167.inp",
      "symmetries/04-tetragonal.64-spg138.inp",
      "symmetries/03-orthorombic.01-spg16.inp",
      "symmetries/03-orthorombic.21-spg36.inp",
      "symmetries/05-hexagonal.52-spg194.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "symmetries/06-cubic.26-spg220.inp",
      "symmetries/03-orthorombic.52-spg67.inp",
      "symmetries/04-tetragonal.37-spg111.inp",
      "symmetries/04-tetragonal.28-spg102.inp",
      "symmetries/05-hexagonal.26-spg168.inp",
      "symmetries/05-hexagonal.31-spg173.inp",
      "symmetries/03-orthorombic.59-spg74.inp",
      "symmetries/03-orthorombic.33-spg48.inp",
      "symmetries/04-tetragonal.50-spg124.inp",
      "symmetries/05-hexagonal.37-spg179.inp",
      "symmetries/04-tetragonal.60-spg134.inp",
      "symmetries/03-orthorombic.10-spg25.inp",
      "symmetries/05-hexagonal.08-spg150.inp",
      "symmetries/03-orthorombic.03-spg18.inp",
      "symmetries/05-hexagonal.29-spg171.inp",
      "symmetries/04-tetragonal.54-spg128.inp",
      "symmetries/03-orthorombic.44-spg59.inp",
      "symmetries/05-hexagonal.03-spg145.inp",
      "symmetries/05-hexagonal.18-spg160.inp",
      "symmetries/03-orthorombic.06-spg21.inp",
      "symmetries/04-tetragonal.14-spg88.inp",
      "symmetries/04-tetragonal.34-spg108.inp",
      "symmetries/05-hexagonal.09-spg151.inp",
      "symmetries/03-orthorombic.12-spg27.inp",
      "symmetries/03-orthorombic.28-spg43.inp",
      "symmetries/04-tetragonal.46-spg120.inp",
      "symmetries/03-orthorombic.38-spg53.inp",
      "symmetries/02-monoclinic.01-spg3.inp",
      "symmetries/06-cubic.22-spg216.inp",
      "symmetries/06-cubic.10-spg204.inp",
      "symmetries/04-tetragonal.07-spg81.inp",
      "symmetries/04-tetragonal.09-spg83.inp",
      "symmetries/04-tetragonal.05-spg79.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/13-arpes_2d.01-gs.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "tutorials/06-octopus_basics-periodic_systems.02-silicon_converged.inp",
      "tutorials/06-octopus_basics-periodic_systems.01-silicon.inp",
      "tutorials/06-octopus_basics-periodic_systems.03-bandstructure.inp",
      "functionals/14-libvdwxc_Be_hcp.01-vdwdfcx.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "functionals/12-vdw_solid_c6.01-gs_diamond.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/13-primitive.03-bcc_iron.inp",
      "periodic_systems/15-bandstructure.04-wannier90_output.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/15-bandstructure.05-wannier90_states.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/15-bandstructure.03-wannier90_setup.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/32-photodoping.01-gs.inp",
      "periodic_systems/20-masked_periodic_boundaries.01-graphene.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/15-bandstructure.02-unocc.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/13-primitive.01-diamond.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "components/22-density_calc.01-Si.inp",
      "components/20-dft_u.04-complex_submesh.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/03-derivatives_3d.02-non-orthogonal.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/21-hamiltonian_apply.01-Si.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/03-derivatives_3d.02-non-orthogonal_unpacked.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/09-basis_from_states.01-lda.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "lcaoalternative": {
    "CallLine": "call parse_variable(namespace, 'LCAOAlternative', .false., this%alternative)",
    "Default": [
      "false"
    ],
    "Description": [
      "If this variable is set, the LCAO procedure will use an",
      "alternative (and experimental) implementation. It is faster for",
      "large systems and parallel in states. It is not working for spinors, however."
    ],
    "LineNumber": 234,
    "Manuals": [],
    "Name": "LCAOAlternative",
    "Options": [],
    "Section": "SCF::LCAO",
    "Sourcefile": "scf/lcao.F90",
    "Testfiles": [
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/10-fullerene.01-gs.inp",
      "finite_systems_3d/14-fullerene_unpacked.01-gs.inp",
      "functionals/09-vdw_ts_sc.01-gs.inp",
      "functionals/08-vdw_ts.01-gs.inp",
      "functionals/11-vdw_d3.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "lcaocomplexylms": {
    "CallLine": "call parse_variable(namespace, 'LCAOComplexYlms', .false., this%complex_ylms)",
    "Default": [
      "false"
    ],
    "Description": [
      "If set to true, and using complex states, complex spherical harmonics will be used, <i>i.e.</i>",
      "with <math>e^{\\pm i m \\phi}</math>.",
      "If false, real spherical harmonics with <math>\\sin(m \\phi)</math> or <math>\\cos(m \\phi)</math> are used.",
      "This variable will make it more likely to get states that are eigenvectors of the <math>L_z</math>",
      "operator, with a definite angular momentum."
    ],
    "LineNumber": 259,
    "Manuals": [],
    "Name": "LCAOComplexYlms",
    "Options": [],
    "Section": "SCF::LCAO",
    "Sourcefile": "scf/lcao.F90",
    "Testfiles": [
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "lcaodiagtol": {
    "CallLine": "call parse_variable(namespace, 'LCAODiagTol', 1e-10_real64, this%diag_tol)",
    "Default": [
      "1e-10"
    ],
    "Description": [
      "Only applies if <tt>LCAOAlternative = true</tt>.",
      "The tolerance for the diagonalization of the LCAO Hamiltonian."
    ],
    "LineNumber": 565,
    "Manuals": [],
    "Name": "LCAODiagTol",
    "Options": [],
    "Section": "SCF::LCAO",
    "Sourcefile": "scf/lcao.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "lcaodimension": {
    "CallLine": "call parse_variable(namespace, 'LCAODimension', 0, n)",
    "Default": null,
    "Description": [
      "(Only applies if <tt>LCAOAlternative = no</tt>.)",
      "Before starting the SCF cycle, an initial LCAO calculation can be performed",
      "in order to obtain reasonable initial guesses for spin-orbitals and densities.",
      "For this purpose, the code calculates a number of atomic orbitals.",
      "The number available for a species described by a pseudopotential is all the",
      "orbitals up the maximum angular momentum in the pseudopotential, minus any orbitals that",
      "are found to be unbound. For non-pseudopotential species, the number is equal to",
      "twice the valence charge.",
      "The default dimension for the LCAO basis",
      "set will be the sum of all these numbers, or twice the number of required orbitals",
      "for the full calculation, whichever is less.",
      " ",
      "This dimension however can be changed by making use of this",
      "variable. Note that <tt>LCAODimension</tt> cannot be smaller than the",
      "number of orbitals needed in the full calculation -- if",
      "<tt>LCAODimension</tt> is smaller, it will be silently increased to meet",
      "this requirement. In the same way, if <tt>LCAODimension</tt> is larger",
      "than the available number of atomic orbitals, it will be",
      "reduced. If you want to use the largest possible number, set",
      "<tt>LCAODimension</tt> to a negative number."
    ],
    "LineNumber": 466,
    "Manuals": [],
    "Name": "LCAODimension",
    "Options": [],
    "Section": "SCF::LCAO",
    "Sourcefile": "scf/lcao.F90",
    "Testfiles": [
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "linear_response/01-casida.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "lcaoextraorbitals": {
    "CallLine": "call parse_variable(namespace, 'LCAOExtraOrbitals', .false., this%derivative)",
    "Default": [
      "false"
    ],
    "Description": [
      "Only applies if <tt>LCAOAlternative = true</tt>, and all species are pseudopotentials.",
      "(experimental) If this variable is set to yes, the LCAO",
      "procedure will add an extra set of numerical orbitals (by",
      "using the derivative of the radial part of the original",
      "orbitals). Note that this corresponds roughly to adding orbitals",
      "with higher principal quantum numbers, but the same angular momentum.",
      "This option may cause problems for unoccupied states since you may miss",
      "some lower-lying states which correspond to higher angular momenta instead",
      "of higher principal quantum number."
    ],
    "LineNumber": 541,
    "Manuals": [],
    "Name": "LCAOExtraOrbitals",
    "Options": [],
    "Section": "SCF::LCAO",
    "Sourcefile": "scf/lcao.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "lcaokeeporbitals": {
    "CallLine": "call parse_variable(namespace, 'LCAOKeepOrbitals', .true., this%keep_orb)",
    "Default": [
      "yes"
    ],
    "Description": [
      "Only applies if <tt>LCAOAlternative = true</tt>.",
      "If set to yes (the default) Octopus keeps atomic orbitals in",
      "memory during the LCAO procedure. If set to no, the orbitals",
      "are generated each time that they are needed, increasing",
      "computational time but saving memory.",
      " ",
      "When set to yes, Octopus prints the amount of memory per node",
      "that is required to store the orbitals.",
      " "
    ],
    "LineNumber": 524,
    "Manuals": [],
    "Name": "LCAOKeepOrbitals",
    "Options": [],
    "Section": "SCF::LCAO",
    "Sourcefile": "scf/lcao.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "lcaomaximumorbitalradius": {
    "CallLine": "call parse_variable(namespace, 'LCAOMaximumOrbitalRadius', 20.0_real64, max_orb_radius, unit = units_inp%length)",
    "Default": [
      "20.0",
      "a.u."
    ],
    "Description": [
      "The LCAO procedure will ignore orbitals that have an",
      "extent greater that this value."
    ],
    "LineNumber": 302,
    "Manuals": [],
    "Name": "LCAOMaximumOrbitalRadius",
    "Options": [],
    "Section": "SCF::LCAO",
    "Sourcefile": "scf/lcao.F90",
    "Testfiles": [
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/01-casida.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "lcaosavememory": {
    "CallLine": "call parse_variable(namespace, 'LCAOSaveMemory', .false., this%save_memory)",
    "Default": [
      "false"
    ],
    "Description": [
      "If set to true, the LCAO will allocate extra memory needed in single precision instead of",
      "double precision."
    ],
    "LineNumber": 272,
    "Manuals": [],
    "Name": "LCAOSaveMemory",
    "Options": [],
    "Section": "SCF::LCAO",
    "Sourcefile": "scf/lcao.F90",
    "Testfiles": [
      "linear_response/01-casida.01-gs.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "periodic_systems/22-berry.02-cubic_Si.inp",
      "periodic_systems/22-berry.01-cubic_Si_gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "lcaoscalefactor": {
    "CallLine": "call parse_variable(namespace, 'LCAOScaleFactor', M_ONE, this%orbital_scale_factor)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "The coordinates of the atomic orbitals used by the LCAO",
      "procedure will be rescaled by the value of this variable. 1.0 means no rescaling."
    ],
    "LineNumber": 291,
    "Manuals": [],
    "Name": "LCAOScaleFactor",
    "Options": [],
    "Section": "SCF::LCAO",
    "Sourcefile": "scf/lcao.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "lcaostart": {
    "CallLine": "call parse_variable(namespace, 'LCAOStart', mode_default, this%mode)",
    "Default": null,
    "Description": [
      "Before starting a SCF calculation, <tt>Octopus</tt> can perform",
      "a linear combination of atomic orbitals (LCAO) calculation.",
      "These can provide <tt>Octopus</tt> with a good set",
      "of initial wavefunctions and with a new guess for the density.",
      "(Up to the current version, only a minimal basis set is used.)",
      "The default is <tt>lcao_states</tt> if at least one species representing an atom is present.",
      "The default is <tt>lcao_none</tt> if all species are <tt>species_user_defined</tt>,",
      "<tt>species_charge_density</tt>, <tt>species_from_file</tt>, or <tt>species_jellium_slab</tt>.",
      " ",
      "The initial guess densities for LCAO are taken from the atomic orbitals for pseudopotential species;",
      "from the natural charge density for <tt>species_charge_density</tt>, <tt>species_point</tt>,",
      "<tt>species_jellium</tt>, and <tt>species_jellium_slab</tt>;",
      "or uniform for <tt>species_full_delta</tt>, <tt>species_full_gaussian</tt>,",
      "<tt>species_user_defined</tt>, or <tt>species_from_file</tt>.",
      "Pseudopotential species use the pseudo-wavefunctions as orbitals, full-potential atomic species",
      "(<tt>species_full_delta</tt> and <tt>species_full_gaussian</tt>) use hydrogenic wavefunctions, and",
      "others use harmonic-oscillator wavefunctions.",
      " ",
      "Note: Some pseudopotential files (CPI, FHI for example) do not",
      "contain full information about the orbitals. In this case,",
      "Octopus generates the starting density from the normalized",
      "square root of the local potential. If no orbitals are",
      "available at all from the pseudopotential files, Octopus will",
      "not be able to perform an LCAO and the initial states will be",
      "randomized.",
      " "
    ],
    "LineNumber": 215,
    "Manuals": [],
    "Name": "LCAOStart",
    "Options": [
      {
        "Description": [
          "Do not perform a LCAO calculation before the SCF cycle. Instead use random wavefunctions."
        ],
        "Name": "lcao_none",
        "Value": "0"
      },
      {
        "Description": [
          "Do a LCAO calculation before the SCF cycle and use the resulting wavefunctions as",
          "initial wavefunctions without changing the guess density.",
          "This will speed up the convergence of the eigensolver during the first SCF iterations."
        ],
        "Name": "lcao_states",
        "Value": "2"
      },
      {
        "Description": [
          "Do a LCAO calculation before the SCF cycle and use the LCAO wavefunctions to build a new",
          "guess density and a new KS potential.",
          "Using the LCAO density as a new guess density may improve the convergence, but can",
          "also slow it down or yield wrong results (especially for spin-polarized calculations)."
        ],
        "Name": "lcao_full",
        "Value": "3"
      }
    ],
    "Section": "SCF::LCAO",
    "Sourcefile": "scf/lcao.F90",
    "Testfiles": [
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/09-magnetic_2d.01-no_field.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_3d/03-magnetic.01-gs-unpolarized.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/09-spinors.03-rmmdiis_extra_states.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.03-unocc.inp",
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "symmetries/05-hexagonal.23-spg165.inp",
      "symmetries/02-monoclinic.05-spg7.inp",
      "symmetries/05-hexagonal.41-spg183.inp",
      "symmetries/02-monoclinic.04-spg6.inp",
      "symmetries/03-orthorombic.14-spg29.inp",
      "symmetries/04-tetragonal.27-spg101.inp",
      "symmetries/06-cubic.29-spg223.inp",
      "symmetries/03-orthorombic.53-spg68.inp",
      "symmetries/04-tetragonal.33-spg107.inp",
      "symmetries/02-monoclinic.07-spg9.inp",
      "symmetries/06-cubic.04-spg198.inp",
      "symmetries/04-tetragonal.51-spg125.inp",
      "symmetries/04-tetragonal.03-spg77.inp",
      "symmetries/03-orthorombic.31-spg46.inp",
      "symmetries/04-tetragonal.08-spg82.inp",
      "symmetries/03-orthorombic.05-spg20.inp",
      "symmetries/04-tetragonal.36-spg110.inp",
      "symmetries/05-hexagonal.15-spg157.inp",
      "symmetries/02-monoclinic.12-spg14.inp",
      "symmetries/03-orthorombic.19-spg34.inp",
      "symmetries/05-hexagonal.28-spg170.inp",
      "symmetries/04-tetragonal.23-spg97.inp",
      "symmetries/04-tetragonal.48-spg122.inp",
      "symmetries/04-tetragonal.21-spg95.inp",
      "symmetries/06-cubic.21-spg215.inp",
      "symmetries/02-monoclinic.09-spg11.inp",
      "symmetries/04-tetragonal.18-spg92.inp",
      "symmetries/04-tetragonal.52-spg126.inp",
      "symmetries/03-orthorombic.55-spg70.inp",
      "symmetries/03-orthorombic.09-spg24.inp",
      "symmetries/04-tetragonal.62-spg136.inp",
      "symmetries/02-monoclinic.08-spg10.inp",
      "symmetries/04-tetragonal.38-spg112.inp",
      "symmetries/04-tetragonal.49-spg123.inp",
      "symmetries/03-orthorombic.20-spg35.inp",
      "symmetries/06-cubic.05-spg199.inp",
      "symmetries/06-cubic.35-spg229.inp",
      "symmetries/02-monoclinic.03-spg5.inp",
      "symmetries/02-monoclinic.06-spg8.inp",
      "symmetries/06-cubic.06-spg200.inp",
      "symmetries/04-tetragonal.57-spg131.inp",
      "symmetries/04-tetragonal.45-spg119.inp",
      "symmetries/05-hexagonal.49-spg191.inp",
      "symmetries/03-orthorombic.26-spg41.inp",
      "symmetries/06-cubic.15-spg209.inp",
      "symmetries/06-cubic.08-spg202.inp",
      "symmetries/04-tetragonal.35-spg109.inp",
      "symmetries/03-orthorombic.07-spg22.inp",
      "symmetries/04-tetragonal.32-spg106.inp",
      "symmetries/04-tetragonal.12-spg86.inp",
      "symmetries/06-cubic.01-spg195.inp",
      "symmetries/05-hexagonal.38-spg180.inp",
      "symmetries/04-tetragonal.01-spg75.inp",
      "symmetries/03-orthorombic.25-spg40.inp",
      "symmetries/04-tetragonal.39-spg113.inp",
      "symmetries/05-hexagonal.02-spg144.inp",
      "symmetries/05-hexagonal.06-spg148.inp",
      "symmetries/06-cubic.32-spg226.inp",
      "symmetries/03-orthorombic.47-spg62.inp",
      "symmetries/05-hexagonal.20-spg162.inp",
      "symmetries/06-cubic.24-spg218.inp",
      "symmetries/06-cubic.30-spg224.inp",
      "symmetries/05-hexagonal.12-spg154.inp",
      "symmetries/05-hexagonal.07-spg149.inp",
      "symmetries/05-hexagonal.27-spg169.inp",
      "symmetries/03-orthorombic.45-spg60.inp",
      "symmetries/05-hexagonal.19-spg161.inp",
      "symmetries/05-hexagonal.16-spg158.inp",
      "symmetries/05-hexagonal.48-spg190.inp",
      "symmetries/06-cubic.09-spg203.inp",
      "symmetries/03-orthorombic.24-spg39.inp",
      "symmetries/03-orthorombic.50-spg65.inp",
      "symmetries/06-cubic.34-spg228.inp",
      "symmetries/05-hexagonal.42-spg184.inp",
      "symmetries/03-orthorombic.23-spg38.inp",
      "symmetries/04-tetragonal.13-spg87.inp",
      "symmetries/06-cubic.02-spg196.inp",
      "symmetries/02-monoclinic.13-spg15.inp",
      "symmetries/05-hexagonal.45-spg187.inp",
      "symmetries/05-hexagonal.22-spg164.inp",
      "symmetries/03-orthorombic.43-spg58.inp",
      "symmetries/03-orthorombic.34-spg49.inp",
      "symmetries/04-tetragonal.47-spg121.inp",
      "symmetries/02-monoclinic.02-spg4.inp",
      "symmetries/03-orthorombic.39-spg54.inp",
      "symmetries/04-tetragonal.17-spg91.inp",
      "symmetries/04-tetragonal.22-spg96.inp",
      "symmetries/05-hexagonal.35-spg177.inp",
      "symmetries/03-orthorombic.13-spg28.inp",
      "symmetries/05-hexagonal.13-spg155.inp",
      "symmetries/03-orthorombic.42-spg57.inp",
      "symmetries/06-cubic.12-spg206.inp",
      "symmetries/02-monoclinic.10-spg12.inp",
      "symmetries/06-cubic.07-spg201.inp",
      "symmetries/03-orthorombic.36-spg51.inp",
      "symmetries/05-hexagonal.44-spg186.inp",
      "symmetries/04-tetragonal.04-spg78.inp",
      "symmetries/05-hexagonal.21-spg163.inp",
      "symmetries/04-tetragonal.02-spg76.inp",
      "symmetries/03-orthorombic.22-spg37.inp",
      "symmetries/05-hexagonal.32-spg174.inp",
      "symmetries/03-orthorombic.35-spg50.inp",
      "symmetries/03-orthorombic.17-spg32.inp",
      "symmetries/05-hexagonal.17-spg159.inp",
      "symmetries/03-orthorombic.04-spg19.inp",
      "symmetries/04-tetragonal.20-spg94.inp",
      "symmetries/06-cubic.20-spg214.inp",
      "symmetries/04-tetragonal.65-spg139.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/03-orthorombic.32-spg47.inp",
      "symmetries/03-orthorombic.02-spg17.inp",
      "symmetries/04-tetragonal.15-spg89.inp",
      "symmetries/03-orthorombic.57-spg72.inp",
      "symmetries/03-orthorombic.15-spg30.inp",
      "symmetries/03-orthorombic.49-spg64.inp",
      "symmetries/06-cubic.11-spg205.inp",
      "symmetries/04-tetragonal.30-spg104.inp",
      "symmetries/04-tetragonal.59-spg133.inp",
      "symmetries/03-orthorombic.54-spg69.inp",
      "symmetries/03-orthorombic.41-spg56.inp",
      "symmetries/06-cubic.19-spg213.inp",
      "symmetries/05-hexagonal.05-spg147.inp",
      "symmetries/04-tetragonal.25-spg99.inp",
      "symmetries/03-orthorombic.58-spg73.inp",
      "symmetries/04-tetragonal.43-spg117.inp",
      "symmetries/01-triclinic.02-spg2.inp",
      "symmetries/04-tetragonal.42-spg116.inp",
      "symmetries/05-hexagonal.50-spg192.inp",
      "symmetries/04-tetragonal.68-spg142.inp",
      "symmetries/04-tetragonal.40-spg114.inp",
      "symmetries/05-hexagonal.34-spg176.inp",
      "symmetries/04-tetragonal.63-spg137.inp",
      "symmetries/06-cubic.31-spg225.inp",
      "symmetries/05-hexagonal.36-spg178.inp",
      "symmetries/05-hexagonal.30-spg172.inp",
      "symmetries/03-orthorombic.48-spg63.inp",
      "symmetries/04-tetragonal.11-spg85.inp",
      "symmetries/05-hexagonal.40-spg182.inp",
      "symmetries/05-hexagonal.11-spg153.inp",
      "symmetries/04-tetragonal.41-spg115.inp",
      "symmetries/01-triclinic.16-spg16.inp",
      "symmetries/04-tetragonal.26-spg100.inp",
      "symmetries/05-hexagonal.24-spg166.inp",
      "symmetries/03-orthorombic.56-spg71.inp",
      "symmetries/06-cubic.16-spg210.inp",
      "symmetries/06-cubic.25-spg219.inp",
      "symmetries/03-orthorombic.51-spg66.inp",
      "symmetries/05-hexagonal.47-spg189.inp",
      "symmetries/04-tetragonal.24-spg98.inp",
      "symmetries/05-hexagonal.51-spg193.inp",
      "symmetries/03-orthorombic.37-spg52.inp",
      "symmetries/05-hexagonal.39-spg181.inp",
      "symmetries/03-orthorombic.27-spg42.inp",
      "symmetries/04-tetragonal.58-spg132.inp",
      "symmetries/04-tetragonal.31-spg105.inp",
      "symmetries/04-tetragonal.06-spg80.inp",
      "symmetries/05-hexagonal.10-spg152.inp",
      "symmetries/05-hexagonal.01-spg143.inp",
      "symmetries/05-hexagonal.04-spg146.inp",
      "symmetries/04-tetragonal.19-spg93.inp",
      "symmetries/03-orthorombic.08-spg23.inp",
      "symmetries/04-tetragonal.29-spg103.inp",
      "symmetries/06-cubic.27-spg221.inp",
      "symmetries/04-tetragonal.56-spg130.inp",
      "symmetries/06-cubic.36-spg230.inp",
      "symmetries/04-tetragonal.55-spg129.inp",
      "symmetries/04-tetragonal.44-spg118.inp",
      "symmetries/04-tetragonal.53-spg127.inp",
      "symmetries/03-orthorombic.11-spg26.inp",
      "symmetries/05-hexagonal.14-spg156.inp",
      "symmetries/06-cubic.33-spg227.inp",
      "symmetries/05-hexagonal.43-spg185.inp",
      "symmetries/03-orthorombic.40-spg55.inp",
      "symmetries/06-cubic.13-spg207.inp",
      "symmetries/06-cubic.03-spg197.inp",
      "symmetries/06-cubic.14-spg208.inp",
      "symmetries/02-monoclinic.11-spg13.inp",
      "symmetries/06-cubic.17-spg211.inp",
      "symmetries/03-orthorombic.30-spg45.inp",
      "symmetries/06-cubic.28-spg222.inp",
      "symmetries/05-hexagonal.46-spg188.inp",
      "symmetries/03-orthorombic.16-spg31.inp",
      "symmetries/06-cubic.23-spg217.inp",
      "symmetries/04-tetragonal.10-spg84.inp",
      "symmetries/06-cubic.18-spg212.inp",
      "symmetries/04-tetragonal.66-spg140.inp",
      "symmetries/04-tetragonal.16-spg90.inp",
      "symmetries/04-tetragonal.61-spg135.inp",
      "symmetries/03-orthorombic.46-spg61.inp",
      "symmetries/01-triclinic.01-spg1.inp",
      "symmetries/03-orthorombic.29-spg44.inp",
      "symmetries/04-tetragonal.67-spg141.inp",
      "symmetries/03-orthorombic.18-spg33.inp",
      "symmetries/05-hexagonal.33-spg175.inp",
      "symmetries/05-hexagonal.25-spg167.inp",
      "symmetries/04-tetragonal.64-spg138.inp",
      "symmetries/03-orthorombic.01-spg16.inp",
      "symmetries/03-orthorombic.21-spg36.inp",
      "symmetries/05-hexagonal.52-spg194.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "symmetries/06-cubic.26-spg220.inp",
      "symmetries/03-orthorombic.52-spg67.inp",
      "symmetries/04-tetragonal.37-spg111.inp",
      "symmetries/04-tetragonal.28-spg102.inp",
      "symmetries/05-hexagonal.26-spg168.inp",
      "symmetries/05-hexagonal.31-spg173.inp",
      "symmetries/03-orthorombic.59-spg74.inp",
      "symmetries/03-orthorombic.33-spg48.inp",
      "symmetries/04-tetragonal.50-spg124.inp",
      "symmetries/05-hexagonal.37-spg179.inp",
      "symmetries/04-tetragonal.60-spg134.inp",
      "symmetries/03-orthorombic.10-spg25.inp",
      "symmetries/05-hexagonal.08-spg150.inp",
      "symmetries/03-orthorombic.03-spg18.inp",
      "symmetries/05-hexagonal.29-spg171.inp",
      "symmetries/04-tetragonal.54-spg128.inp",
      "symmetries/03-orthorombic.44-spg59.inp",
      "symmetries/05-hexagonal.03-spg145.inp",
      "symmetries/05-hexagonal.18-spg160.inp",
      "symmetries/03-orthorombic.06-spg21.inp",
      "symmetries/04-tetragonal.14-spg88.inp",
      "symmetries/04-tetragonal.34-spg108.inp",
      "symmetries/05-hexagonal.09-spg151.inp",
      "symmetries/03-orthorombic.12-spg27.inp",
      "symmetries/03-orthorombic.28-spg43.inp",
      "symmetries/04-tetragonal.46-spg120.inp",
      "symmetries/03-orthorombic.38-spg53.inp",
      "symmetries/02-monoclinic.01-spg3.inp",
      "symmetries/06-cubic.22-spg216.inp",
      "symmetries/06-cubic.10-spg204.inp",
      "symmetries/04-tetragonal.07-spg81.inp",
      "symmetries/04-tetragonal.09-spg83.inp",
      "symmetries/04-tetragonal.05-spg79.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "optimal_control/06-zbr98.01-ground_state.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/08-loewdin.02-intersite.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "ldbaderthreshold": {
    "CallLine": "call parse_variable(namespace, 'LDBaderThreshold', 0.01_real64, bader_threshold)",
    "Default": [
      "0.01"
    ],
    "Description": [
      "This variable sets the threshold for the basins calculations. Recommended values:",
      "0.01 -> intramolecular volumes; 0.2 -> intermolecular volumes."
    ],
    "LineNumber": 783,
    "Manuals": [],
    "Name": "LDBaderThreshold",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_multipoles.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "ldend": {
    "CallLine": "call parse_variable(global_namespace, 'LDEnd', 0, l_end)",
    "Default": [
      "0"
    ],
    "Description": [
      "The last number of the filename or folder."
    ],
    "LineNumber": 287,
    "Manuals": [],
    "Name": "LDEnd",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_multipoles.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "ldfilename": {
    "CallLine": "call parse_variable(global_namespace, 'LDFilename', 'density', basename)",
    "Default": [
      "'density'"
    ],
    "Description": [
      "Input filename. The original filename for the density which is going to be",
      "fragmented into domains."
    ],
    "LineNumber": 166,
    "Manuals": [],
    "Name": "LDFilename",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_multipoles.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "ldfolder": {
    "CallLine": "call parse_variable(global_namespace, 'LDFolder', folder_default, folder)",
    "Default": null,
    "Description": [
      "The folder name where the density used as input file is."
    ],
    "LineNumber": 143,
    "Manuals": [],
    "Name": "LDFolder",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_multipoles.F90",
    "Testfiles": [
      "finite_systems_3d/30-local_multipoles.02-multipoles.inp",
      "finite_systems_3d/30-local_multipoles.03-multipoles_restart.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "ldionicdipole": {
    "CallLine": "call parse_variable(namespace, 'LDIonicDipole', .true., use_ionic_dipole)",
    "Default": [
      "yes"
    ],
    "Description": [
      "Describes if the ionic dipole has to be take into account",
      "when computing the multipoles."
    ],
    "LineNumber": 632,
    "Manuals": [],
    "Name": "LDIonicDipole",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_write.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "lditeratefolder": {
    "CallLine": "call parse_variable(global_namespace, 'LDIterateFolder', .false., iterate)",
    "Default": [
      "false"
    ],
    "Description": [
      "This variable decides if a folder is going to be iterated."
    ],
    "LineNumber": 269,
    "Manuals": [],
    "Name": "LDIterateFolder",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_multipoles.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "ldmultipolelmax": {
    "CallLine": "call parse_variable(namespace, 'LDMultipoleLmax', 1, writ%lmax)",
    "Default": [
      "1"
    ],
    "Description": [
      "Maximum electric multipole of the density output to the file <tt>local.multipoles/<>domain%<>.multipoles</tt>",
      "during a time-dependent simulation. Must be non-negative."
    ],
    "LineNumber": 170,
    "Manuals": [],
    "Name": "LDMultipoleLmax",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_write.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "ldoutput": {
    "CallLine": "call parse_variable(namespace, 'LDOutput', default, flags)",
    "Default": [
      "multipoles"
    ],
    "Description": [
      "Defines what should be output during the local domains",
      "simulation. Many of the options can increase the computational",
      "cost of the simulation, so only use the ones that you need. In",
      "most cases the default value is enough, as it is adapted to the",
      "details."
    ],
    "LineNumber": 136,
    "Manuals": [],
    "Name": "LDOutput",
    "Options": [
      {
        "Description": [
          "Outputs the (electric) multipole moments of the density to the file <tt>ld.general/multipoles</tt>.",
          "This is required to, <i>e.g.</i>, calculate optical absorption spectra of finite systems. The",
          "maximum value of <math>l</math> can be set with the variable <tt>LDMultipoleLmax</tt>."
        ],
        "Name": "multipoles",
        "Value": "1"
      },
      {
        "Description": [
          "If set, <tt>octopus</tt> outputs the densities corresponding to the local domains to",
          "the folder <tt>ld.general/densities</tt>.",
          "The output format is set by the <tt>LDOutputFormat</tt> input variable."
        ],
        "Name": "density",
        "Value": "2"
      },
      {
        "Description": [
          "If set, <tt>octopus</tt> outputs the different components of the potential",
          "to the folder <tt>ld.general/potential</tt>.",
          "The output format is set by the <tt>LDOutputFormat</tt> input variable."
        ],
        "Name": "local_v",
        "Value": "4"
      },
      {
        "Description": [
          "If set, <tt>octopus</tt> outputs the different components of the energy of the local domains",
          "to the folder <tt>ld.general/energy</tt>."
        ],
        "Name": "energy",
        "Value": "8"
      }
    ],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_write.F90",
    "Testfiles": [
      "finite_systems_3d/30-local_multipoles.02-multipoles.inp",
      "finite_systems_3d/30-local_multipoles.03-multipoles_restart.inp"
    ],
    "Tutorials": [],
    "Type": "flag"
  },
  "ldoutputformat": {
    "CallLine": "call parse_variable(namespace, 'LDOutputFormat', 0, writ%how)",
    "Default": [
      "none"
    ],
    "Description": [
      "Describes the format of the output files (see <tt>LDOutput</tt>).",
      "It can take the same values as <tt>OutputFormat</tt> flag."
    ],
    "LineNumber": 157,
    "Manuals": [],
    "Name": "LDOutputFormat",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_write.F90",
    "Testfiles": [
      "finite_systems_3d/30-local_multipoles.02-multipoles.inp",
      "finite_systems_3d/30-local_multipoles.03-multipoles_restart.inp"
    ],
    "Tutorials": [],
    "Type": "flag"
  },
  "ldoverwrite": {
    "CallLine": "call parse_variable(global_namespace, 'LDOverWrite', .true., ldoverwrite)",
    "Default": [
      "true"
    ],
    "Description": [
      "Controls whether to over-write existing files."
    ],
    "LineNumber": 192,
    "Manuals": [],
    "Name": "LDOverWrite",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_multipoles.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "ldradiifile": {
    "CallLine": "call parse_variable(global_namespace, 'LDRadiiFile', 'default', radiifile)",
    "Default": [
      "'default'"
    ],
    "Description": [
      "Full path for the radii file. If set, def_rsize will be reset to the new values.",
      "This file should have the same format as share/PP/default."
    ],
    "LineNumber": 202,
    "Manuals": [],
    "Name": "LDRadiiFile",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_multipoles.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "ldrestart": {
    "CallLine": "call parse_variable(global_namespace, 'LDRestart', .false., ldrestart)",
    "Default": [
      "false"
    ],
    "Description": [
      "Restart information will be read from <tt>LDRestartFolder</tt>."
    ],
    "LineNumber": 241,
    "Manuals": [],
    "Name": "LDRestart",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_multipoles.F90",
    "Testfiles": [
      "finite_systems_3d/30-local_multipoles.03-multipoles_restart.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "ldrestartfolder": {
    "CallLine": "call parse_variable(global_namespace, 'LDRestartFolder', folder_default, ldrestart_folder)",
    "Default": [
      "\"ld.general\""
    ],
    "Description": [
      "The folder name where the density used as input file is."
    ],
    "LineNumber": 253,
    "Manuals": [],
    "Name": "LDRestartFolder",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_multipoles.F90",
    "Testfiles": [
      "finite_systems_3d/30-local_multipoles.03-multipoles_restart.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "ldstart": {
    "CallLine": "call parse_variable(global_namespace, 'LDStart', 0, l_start)",
    "Default": [
      "0"
    ],
    "Description": [
      "The starting number of the filename or folder."
    ],
    "LineNumber": 278,
    "Manuals": [],
    "Name": "LDStart",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_multipoles.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "ldstep": {
    "CallLine": "call parse_variable(global_namespace, 'LDStep', 1, l_step)",
    "Default": [
      "1"
    ],
    "Description": [
      "The padding between the filenames or folder."
    ],
    "LineNumber": 296,
    "Manuals": [],
    "Name": "LDStep",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_multipoles.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "ldupdate": {
    "CallLine": "call parse_variable(global_namespace, 'LDUpdate', .false., ldupdate)",
    "Default": [
      "false"
    ],
    "Description": [
      "Controls if the calculation of the local domains is desired at each iteration."
    ],
    "LineNumber": 183,
    "Manuals": [],
    "Name": "LDUpdate",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_multipoles.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "lduseatomicradii": {
    "CallLine": "call parse_variable(global_namespace, 'LDUseAtomicRadii', .false., use_atomic_radii)",
    "Default": [
      "false"
    ],
    "Description": [
      "If set, atomic radii will be used to assign lone pairs to ion."
    ],
    "LineNumber": 823,
    "Manuals": [],
    "Name": "LDUseAtomicRadii",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_multipoles.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "lennardjonesepsilon": {
    "CallLine": "call parse_variable(namespace, 'LennardJonesEpsilon', M_ONE, this%lj_epsilon(1))",
    "Default": null,
    "Description": [
      "Epsilon parameter (dispersion energy) of Lennard-Jones interaction for this species.",
      "In case two particles have a different epsilon, the combination rule will be computed",
      "<math>\\epsilon_{12} = \\sqrt{\\epsilon_1 + \\epsilon_2}</math>."
    ],
    "LineNumber": 145,
    "Manuals": [],
    "Name": "LennardJonesEpsilon",
    "Options": [],
    "Section": "ClassicalParticles",
    "Sourcefile": "classical/classical_particle.F90",
    "Testfiles": [
      "multisystem/14-lennard-jones.01-classical-particles-N2.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "lennardjonessigma": {
    "CallLine": "call parse_variable(namespace, 'LennardJonesSigma', M_ONE, this%lj_sigma(1))",
    "Default": null,
    "Description": [
      "Sigma parameter (particle size) of Lennard-Jones interaction for this species.",
      "In case two particles have a different sigma, the combination rule will be computed",
      "<math>\\sigma_{12} = (\\sigma_1 + \\sigma_2) / 2."
    ],
    "LineNumber": 156,
    "Manuals": [],
    "Name": "LennardJonesSigma",
    "Options": [],
    "Section": "ClassicalParticles",
    "Sourcefile": "classical/classical_particle.F90",
    "Testfiles": [
      "multisystem/14-lennard-jones.01-classical-particles-N2.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "libvdwxcdebug": {
    "CallLine": "call parse_variable(namespace, 'libvdwxcDebug', .false., libvdwxc%debug)",
    "Default": null,
    "Description": [
      "Dump libvdwxc inputs and outputs to files."
    ],
    "LineNumber": 88,
    "Manuals": [],
    "Name": "libvdwxcDebug",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/libvdwxc.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "libvdwxcmode": {
    "CallLine": "call parse_variable(namespace, 'libvdwxcMode', LIBVDWXC_MODE_AUTO, libvdwxc_mode)",
    "Default": null,
    "Description": [
      "Whether libvdwxc should run with serial fftw3, fftw3-mpi, or pfft.",
      "to specify fftw3-mpi in serial for debugging.",
      "pfft is not implemented at the moment."
    ],
    "LineNumber": 171,
    "Manuals": [],
    "Name": "libvdwxcMode",
    "Options": [
      {
        "Description": [
          "Use serial fftw3 if actually running in serial, else fftw3-mpi."
        ],
        "Name": "libvdwxc_mode_auto",
        "Value": "1"
      },
      {
        "Description": [
          "Run with serial fftw3.  Works only when not parallelizing over domains."
        ],
        "Name": "libvdwxc_mode_serial",
        "Value": "2"
      },
      {
        "Description": [
          "Run with fftw3-mpi.  Works only if Octopus is compiled with MPI."
        ],
        "Name": "libvdwxc_mode_mpi",
        "Value": "3"
      }
    ],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/libvdwxc.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "libvdwxcvdwfactor": {
    "CallLine": "call parse_variable(namespace, 'libvdwxcVDWFactor', M_ONE, libvdwxc%vdw_factor)",
    "Default": null,
    "Description": [
      "Prefactor of non-local van der Waals functional.",
      "Setting a prefactor other than one is wrong, but useful",
      "for debugging."
    ],
    "LineNumber": 99,
    "Manuals": [],
    "Name": "libvdwxcVDWFactor",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/libvdwxc.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "linearmediumboxfile": {
    "CallLine": "call parse_variable(namespace, 'LinearMediumBoxFile', 'mediumboxfile', medium_box%filename)",
    "Default": null,
    "Description": [
      "File in OFF format with the shape of the linear medium."
    ],
    "LineNumber": 770,
    "Manuals": [],
    "Name": "LinearMediumBoxFile",
    "Options": [],
    "Section": "Maxwell::Medium",
    "Sourcefile": "maxwell/linear_medium.F90",
    "Testfiles": [
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "linearmediumboxshape": {
    "CallLine": "call parse_variable(namespace, 'LinearMediumBoxShape', MEDIUM_PARALLELEPIPED, medium_box%box_shape)",
    "Default": null,
    "Description": [
      "This variable defines the shape of the linear medium box.",
      "The default is <tt>medium_parallelepiped</tt>."
    ],
    "LineNumber": 711,
    "Manuals": [],
    "Name": "LinearMediumBoxShape",
    "Options": [
      {
        "Description": [
          "The medium box will be a parallelepiped whose center and dimensions are taken from",
          "the variable <tt>LinearMediumBoxSize</tt>."
        ],
        "Name": "medium_parallelepiped",
        "Value": "1"
      },
      {
        "Description": [
          "The simulation box will be read from an external file in OFF format, defined by the variable <tt>LinearMediumBoxFile</tt>."
        ],
        "Name": "medium_box_file",
        "Value": "2"
      }
    ],
    "Section": "Maxwell::Medium",
    "Sourcefile": "maxwell/linear_medium.F90",
    "Testfiles": [
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "linearmediumboxsize": {
    "CallLine": "if (parse_block(namespace, 'LinearMediumBoxSize', blk) == 0) then",
    "Default": null,
    "Description": [
      "Defines center and size of a parallelepiped linear medium box.",
      " ",
      "Example:",
      " ",
      "<tt>%LinearMediumBoxSize",
      "<br>&nbsp;&nbsp;   center_x | center_y | center_z | x_length | y_length | z_length",
      "<br>%</tt>"
    ],
    "LineNumber": 733,
    "Manuals": [],
    "Name": "LinearMediumBoxSize",
    "Options": [],
    "Section": "Maxwell::Medium",
    "Sourcefile": "maxwell/linear_medium.F90",
    "Testfiles": [
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "linearmediumedgeprofile": {
    "CallLine": "call parse_variable(namespace, 'LinearMediumEdgeProfile', OPTION__LINEARMEDIUMEDGEPROFILE__EDGED, this%edge_profile)",
    "Default": null,
    "Description": [
      "Defines the type of numerical approximation used for the derivatives at the edges of the medium box.",
      "Default is edged. When the box shape is read from file, only the edged profile is supported.",
      " "
    ],
    "LineNumber": 216,
    "Manuals": [],
    "Name": "LinearMediumEdgeProfile",
    "Options": [
      {
        "Description": [
          "Medium box edges are considered steep for derivatives."
        ],
        "Name": "edged",
        "Value": "1"
      },
      {
        "Description": [
          "Medium box edged and softened for derivatives."
        ],
        "Name": "smooth",
        "Value": "2"
      }
    ],
    "Section": "Maxwell::Medium",
    "Sourcefile": "maxwell/linear_medium.F90",
    "Testfiles": [
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "linearmediumoutput": {
    "Default": [
      "none"
    ],
    "Description": [
      "Specifies what to print. The output files are written at the beginning of the run into the output directory for the",
      "linear medium.",
      "Each option must be in a separate row. Optionally individual output formats can be defined",
      "for each row (VTK format is supported) or they can be read separately from <tt>OutputFormat</tt> in the input file.",
      " ",
      "Example:",
      "<br><br><tt>%LinearMediumOutput",
      "<br>&nbsp;&nbsp;permittivity",
      "<br>&nbsp;&nbsp;permeability",
      "<br>%<br></tt>",
      "This block supports all the formats of the <tt>Output</tt> block. See <tt>Output</tt>."
    ],
    "Manuals": [],
    "Name": "LinearMediumOutput",
    "Options": [
      {
        "Description": [
          "Outputs 1 if the a given point is inside the medium, and 0 otherwise. This can be used to check the grid points of the medium region."
        ],
        "Name": "points",
        "Value": "1"
      },
      {
        "Description": [
          "Output of the (static) space-dependent relative permittivity"
        ],
        "Name": "permittivity",
        "Value": "2"
      },
      {
        "Description": [
          "Output of the (static) space-dependent relative permeability"
        ],
        "Name": "permeability",
        "Value": "3"
      },
      {
        "Description": [
          "Output of the speed of light in atomic units"
        ],
        "Name": "speed_of_light",
        "Value": "3"
      }
    ],
    "Section": "Output",
    "Sourcefile": "output/output_linear_medium.F90",
    "Testfiles": [
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "linearmediumoutputdir": {
    "CallLine": "call parse_variable(namespace, 'LinearMediumOutputDir', \"static\", outp%iter_dir)",
    "Default": [
      "\"output_iter\""
    ],
    "Description": [
      "The name of the directory where <tt>Octopus</tt> stores the information",
      "about the linear medium system, as required by the <tt>LinearMediumOutput</tt> variable."
    ],
    "LineNumber": 95,
    "Manuals": [],
    "Name": "LinearMediumOutputDir",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "output/output_linear_medium.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "linearmediumproperties": {
    "CallLine": "if (parse_block(namespace, 'LinearMediumProperties', blk) == 0) then",
    "Default": null,
    "Description": [
      "Defines electromagnetic parameters for a linear medium box.",
      " ",
      "Example:",
      " ",
      "<tt>%LinearMediumProperties",
      "<br>&nbsp;&nbsp;   epsilon_factor | mu_factor | sigma_e | sigma_m",
      "<br>%</tt>",
      " ",
      "Permittivity factor, permeability factor, electric conductivity and magnetic conductivity of the medium box."
    ],
    "LineNumber": 176,
    "Manuals": [],
    "Name": "LinearMediumProperties",
    "Options": [],
    "Section": "Maxwell::Medium",
    "Sourcefile": "maxwell/linear_medium.F90",
    "Testfiles": [
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "linearsolver": {
    "CallLine": "call parse_variable(namespace, \"LinearSolver\", defsolver, fsolver)",
    "Default": [
      "qmr_symmetric"
    ],
    "Description": [
      "Method for solving linear equations, which occur for Sternheimer linear",
      "response and OEP. The solvers vary in speed, reliability (ability to",
      "converge), and domain of applicability. QMR solvers are most reliable."
    ],
    "LineNumber": 158,
    "Manuals": [],
    "Name": "LinearSolver",
    "Options": [
      {
        "Description": [
          "Biconjugate gradients stabilized. Slower than <tt>cg</tt>, but more reliable.",
          "General matrices."
        ],
        "Name": "bicgstab",
        "Value": "4"
      },
      {
        "Description": [
          "Conjugate gradients. Fast but unreliable. Hermitian matrices only",
          "(no eta in Sternheimer)."
        ],
        "Name": "cg",
        "Value": "5"
      },
      {
        "Description": [
          "Multigrid solver, currently only Gauss-Jacobi (experimental).",
          "Slow, but fairly reliable. General matrices."
        ],
        "Name": "multigrid",
        "Value": "7"
      },
      {
        "Description": [
          "Quasi-minimal residual solver, for (complex) symmetric matrices. [Real symmetric",
          "is equivalent to Hermitian.] Slightly slower than <tt>bicgstab</tt> but more reliable.",
          "For Sternheimer, must be real wavefunctions, but can have eta."
        ],
        "Name": "qmr_symmetric",
        "Value": "81"
      },
      {
        "Description": [
          "Quasi-minimal residual solver, using the symmetrized form <math>A^\\dagger A x = A^\\dagger y</math> instead of",
          "<math>A x = y</math>. Reliable but very slow. General matrices."
        ],
        "Name": "qmr_symmetrized",
        "Value": "82"
      },
      {
        "Description": [
          "Quasi-minimal residual solver, for Hermitian matrices, using the",
          "symmetric algorithm with conjugated dot product (experimental). Slightly slower than <tt>bicgstab</tt>",
          "but more reliable. Can always be used in Sternheimer."
        ],
        "Name": "qmr_dotp",
        "Value": "83"
      },
      {
        "Description": [
          "Quasi-minimal residual solver, for general matrices, using the",
          "most general form of the algorithm. Slow and unreliable."
        ],
        "Name": "qmr_general",
        "Value": "84"
      },
      {
        "Description": [
          "Sum over states: the Sternheimer equation is solved by using",
          "the explicit solution in terms of the ground-state",
          "wavefunctions. You need unoccupied states to use this method.",
          "Unlike the other methods, may not give the correct answer."
        ],
        "Name": "sos",
        "Value": "9"
      },
      {
        "Description": [
          "This is the \"Induced Dimension Reduction\", IDR(s) (for s=4). IDR(s) is a robust and efficient short recurrence",
          "Krylov subspace method for solving large nonsymmetric systems of linear equations. It is described in",
          "[Peter Sonneveld and Martin B. van Gijzen, SIAM J. Sci. Comput. 31, 1035 (2008)]. We have adapted the code",
          "released by M. B. van Gizjen [http://ta.twi.tudelft.nl/nw/users/gijzen/IDR.html]."
        ],
        "Name": "idrs",
        "Value": "11"
      }
    ],
    "Section": "Linear Response::Solver",
    "Sourcefile": "electrons/linear_solver.F90",
    "Testfiles": [
      "linear_response/03-vdw_sternheimer.02-vdw.inp",
      "linear_response/08-sternheimer-photons.02-em_resp.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "linearsolvermaxiter": {
    "CallLine": "call parse_variable(namespace, \"LinearSolverMaxIter\", 1000, this%max_iter)",
    "Default": [
      "1000"
    ],
    "Description": [
      "Maximum number of iterations the linear solver does, even if",
      "convergence is not achieved."
    ],
    "LineNumber": 176,
    "Manuals": [],
    "Name": "LinearSolverMaxIter",
    "Options": [],
    "Section": "Linear Response::Solver",
    "Sourcefile": "electrons/linear_solver.F90",
    "Testfiles": [
      "linear_response/02-h2o_pol_lr.04_h2o_susc.inp",
      "linear_response/04-vib_modes.03-vib_modes_restart.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "localdomains": {
    "CallLine": "if (parse_block(global_namespace, 'LocalDomains', blk) == 0) then",
    "Default": null,
    "Description": [
      "The LocalDomains are by definition part of the global grid. The domains are defined by",
      "selecting a type shape. The domain box will be constructed using the given parameters.",
      "A local domain could be construct by addition of several box centered on the ions.",
      "The grid points inside this box will belong to the local domain.",
      " ",
      "The format of this block is the following:<br>",
      "<tt> 'Label' | Shape | %< | Shape dependencies >% </tt>",
      "<br>The first field is the label of the domain.",
      "Label = string with the name of the new local domain.",
      "The second is the shape type of the box used to define the domain.",
      "Shape = SPHERE, CYLINDER, PARALLELEPIPED, MINIMUM, BADER.",
      "Some types may need some parameters given in the remaining fields of the row.",
      "(the valid options are detailed below).",
      " ",
      "<tt>%LocalDomains",
      "<br>case (SPHERE):         | rsize | %<dim origin coordinates>",
      "<br>case (CYLINDER):       | rsize | xsize | %<origin coordinates>",
      "<br>case (PARALLELEPIPED): | %<lsize> | %<origin coordinates>",
      "<br>case (MINIMUM):        | rsize | 'center_list'",
      "<br>case (BADER):          | 'center_list'",
      "<br>%</tt>",
      "<br>rsize: Radius in input length units",
      "<br>xsize: the length of the cylinder in the x-direction",
      "<br>origin coordinates: in input length units separated by |, where the box is centered.",
      "<br>lsize: half of the length of the parallelepiped in each direction.",
      "<br>center_list: string containing the list of atoms in xyz file for each domain in the form \"2,16-23\""
    ],
    "LineNumber": 450,
    "Manuals": [],
    "Name": "LocalDomains",
    "Options": [],
    "Section": "Utilities::oct-local_multipoles",
    "Sourcefile": "utils/local_multipoles.F90",
    "Testfiles": [
      "finite_systems_3d/30-local_multipoles.02-multipoles.inp",
      "finite_systems_3d/30-local_multipoles.03-multipoles_restart.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "localmagneticmomentssphereradius": {
    "CallLine": "call parse_variable(namespace, 'LocalMagneticMomentsSphereRadius', min(M_HALF*rmin, 100.0_real64), scf%lmm_r, unit=units_inp%length)",
    "Default": null,
    "Description": [
      "The local magnetic moments are calculated by integrating the",
      "magnetization density in spheres centered around each atom.",
      "This variable controls the radius of the spheres.",
      "The default is half the minimum distance between two atoms",
      "in the input coordinates, or 100 a.u. if there is only one atom (for isolated systems)."
    ],
    "LineNumber": 428,
    "Manuals": [],
    "Name": "LocalMagneticMomentsSphereRadius",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "scf/scf.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "lrconvabsdens": {
    "CallLine": "call parse_variable(namespace, 'LRConvAbsDens', 1e-5_real64, this%conv_abs_dens)",
    "Default": [
      "1e-5"
    ],
    "Description": [
      "The tolerance in the absolute variation of the density response, to determine if",
      "the SCF for linear response is converged.",
      "<math>\\varepsilon = \\int {\\rm d}^3r \\left| \\rho^{out}(\\bf r) -\\rho^{inp}(\\bf r) \\right|</math>.",
      "A zero value means do not use this criterion."
    ],
    "LineNumber": 100,
    "Manuals": [],
    "Name": "LRConvAbsDens",
    "Options": [],
    "Section": "Linear Response::SCF in LR calculations",
    "Sourcefile": "hamiltonian/scf_tol.F90",
    "Testfiles": [
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/03-vdw_sternheimer.02-vdw.inp",
      "linear_response/04-vib_modes.02-vib_modes.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "lrconvreldens": {
    "CallLine": "call parse_variable(namespace, 'LRConvRelDens', M_ZERO, this%conv_rel_dens)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "The tolerance in the relative variation of the density response, to determine if",
      "the SCF for linear response is converged.",
      "<math>\\varepsilon = \\frac{1}{N_{\\rm elec}}</math> <tt>LRConvAbsDens</tt>.",
      "A zero value means do not use this criterion."
    ],
    "LineNumber": 113,
    "Manuals": [],
    "Name": "LRConvRelDens",
    "Options": [],
    "Section": "Linear Response::SCF in LR calculations",
    "Sourcefile": "hamiltonian/scf_tol.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "lrmaximumiter": {
    "CallLine": "call parse_variable(namespace, 'LRMaximumIter', def_maximumiter_, this%max_iter)",
    "Default": [
      "200"
    ],
    "Description": [
      "The maximum number of SCF iterations to calculate response."
    ],
    "LineNumber": 87,
    "Manuals": [],
    "Name": "LRMaximumIter",
    "Options": [],
    "Section": "Linear Response::SCF in LR calculations",
    "Sourcefile": "hamiltonian/scf_tol.F90",
    "Testfiles": [
      "functionals/15-oep-CG.02-oep-dens.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "lrtoladaptivefactor": {
    "CallLine": "call parse_variable(namespace, 'LRTolAdaptiveFactor', 0.1_real64, this%dynamic_tol_factor)",
    "Default": [
      "0.1"
    ],
    "Description": [
      "This factor controls how much the tolerance is decreased",
      "during the self-consistency process. Smaller values mean that",
      "tolerance is decreased faster."
    ],
    "LineNumber": 193,
    "Manuals": [],
    "Name": "LRTolAdaptiveFactor",
    "Options": [],
    "Section": "Linear Response::SCF in LR calculations",
    "Sourcefile": "hamiltonian/scf_tol.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "lrtolfinaltol": {
    "CallLine": "call parse_variable(namespace, 'LRTolFinalTol', 1e-6_real64, this%final_tol)",
    "Default": [
      "1e-6"
    ],
    "Description": [
      "This is the tolerance to determine that the linear solver has converged."
    ],
    "LineNumber": 180,
    "Manuals": [],
    "Name": "LRTolFinalTol",
    "Options": [],
    "Section": "Linear Response::Solver",
    "Sourcefile": "hamiltonian/scf_tol.F90",
    "Testfiles": [
      "linear_response/04-vib_modes.02-vib_modes.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "lrtolinittol": {
    "CallLine": "call parse_variable(namespace, 'LRTolInitTol', 1e-2_real64, this%initial_tol)",
    "Default": [
      "1e-2"
    ],
    "Description": [
      "This is the tolerance to determine that the linear solver has converged,",
      "for the first SCF iteration. Ignored if <tt>LRTolScheme = fixed</tt>."
    ],
    "LineNumber": 169,
    "Manuals": [],
    "Name": "LRTolInitTol",
    "Options": [],
    "Section": "Linear Response::Solver",
    "Sourcefile": "hamiltonian/scf_tol.F90",
    "Testfiles": [
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "lrtoliterwindow": {
    "CallLine": "call parse_variable(namespace, 'LRTolIterWindow', 10, this%iter_window)",
    "Default": [
      "10"
    ],
    "Description": [
      "Number of iterations necessary to reach the final tolerance."
    ],
    "LineNumber": 205,
    "Manuals": [],
    "Name": "LRTolIterWindow",
    "Options": [],
    "Section": "Linear Response::SCF in LR calculations",
    "Sourcefile": "hamiltonian/scf_tol.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "lrtolscheme": {
    "CallLine": "call parse_variable(namespace, 'LRTolScheme', SCF_TOL_ADAPTIVE, this%scheme)",
    "Default": [
      "tol_adaptive"
    ],
    "Description": [
      "The scheme used to adjust the tolerance of the solver during",
      "the SCF iteration. For <tt>kdotp</tt> and magnetic <tt>em_resp</tt> modes, or",
      "whenever <tt>HamiltonianVariation = V_ext_only</tt>, the",
      "scheme is set to <tt>tol_fixed</tt>, and this variable is ignored."
    ],
    "LineNumber": 154,
    "Manuals": [],
    "Name": "LRTolScheme",
    "Options": [
      {
        "Description": [
          "The solver tolerance is fixed for all the iterations; this",
          "improves convergence but increases the computational cost"
        ],
        "Name": "tol_fixed",
        "Value": "0"
      },
      {
        "Description": [
          "The tolerance is increased according to the level of",
          "convergence of the SCF."
        ],
        "Name": "tol_adaptive",
        "Value": "1"
      },
      {
        "Description": [
          "The tolerance decreases linearly for the first <tt>LRTolIterWindow</tt> iterations."
        ],
        "Name": "tol_linear",
        "Value": "2"
      },
      {
        "Description": [
          "The tolerance decreases exponentially for the first <tt>LRTolIterWindow</tt> iterations."
        ],
        "Name": "tol_exp",
        "Value": "3"
      }
    ],
    "Section": "Linear Response::SCF in LR calculations",
    "Sourcefile": "hamiltonian/scf_tol.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "lsize": {
    "CallLine": "call parse_variable(namespace, 'Lsize', -M_ONE, lsize(1), units_inp%length)",
    "Default": null,
    "Description": [
      "If <tt>BoxShape</tt> is <tt>parallelepiped</tt>, <tt>box_image</tt>,",
      "or <tt>user_defined</tt>, this is a block of the form:",
      " ",
      "<tt>%Lsize",
      "<br>&nbsp;&nbsp;sizex | sizey | sizez | ...",
      "<br>%</tt>",
      " ",
      "where the <tt>size*</tt> are half the lengths of the box in each direction.",
      " ",
      "The number of columns must match the dimensionality of the",
      "calculation. If you want a cube you can also set <tt>Lsize</tt> as a",
      "single variable."
    ],
    "LineNumber": 267,
    "Manuals": [],
    "Name": "Lsize",
    "Options": [],
    "Section": "Mesh::Simulation Box",
    "Sourcefile": "boxes/box_factory.F90",
    "Testfiles": [
      "finite_systems_2d/01-quadratic_box.03-hartree+xc.inp",
      "finite_systems_2d/01-quadratic_box.04-spin_polarized.inp",
      "finite_systems_2d/01-quadratic_box.01-ground_state.inp",
      "finite_systems_2d/07-user_def_box.01-gs.inp",
      "finite_systems_2d/01-quadratic_box.02-hartree.inp",
      "finite_systems_2d/06-gdlib.01-gs.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/07-casida-photons.06-spectrum.inp",
      "linear_response/07-casida-photons.01-gs.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/07-casida-photons.02-photons.inp",
      "linear_response/07-casida-photons.04-elpa.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/09-flux_3d.03-Na_gs_cub.inp",
      "functionals/16-dressed-rdmft.03-rdmft.inp",
      "functionals/05-ks_inversion.03-inversion.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/05-ks_inversion.02-two_particle.inp",
      "functionals/16-dressed-rdmft.02-hf.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/05-ks_inversion.01-target_density.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/16-dressed-rdmft.01-ip.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp",
      "components/35-helmholtz_decom.01-large_box_no_surf_corr.inp",
      "components/25-subspace.01-jellium.inp",
      "components/35-helmholtz_decom.03-parallelepiped_small_box_with_surf_corr.inp",
      "components/36-maxwell_vector_potential.inp",
      "components/35-helmholtz_decom.02-small_box_no_surf_corr.inp",
      "components/31-grid_interpolation.01.inp",
      "components/05-hartree_3d_fft.03-3d_1d_periodic.inp",
      "components/23-exponential_apply.01-jellium.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "magneticconstrain": {
    "CallLine": "call parse_variable(namespace, 'MagneticConstrain', CONSTRAIN_NONE, this%level)",
    "Default": [
      "no"
    ],
    "Description": [
      "This variable selects which magnetic constrain expression is added to the Hamiltonian."
    ],
    "LineNumber": 97,
    "Manuals": [],
    "Name": "MagneticConstrain",
    "Options": [
      {
        "Description": [
          "No constrain is added to the Hamiltonian."
        ],
        "Name": "constrain_none",
        "Value": "0"
      },
      {
        "Description": [
          "We are adding a constrain for the direction of the magnetic moments only,",
          "see PRB 91, 054420 (2015)."
        ],
        "Name": "constrain_dir",
        "Value": "1"
      },
      {
        "Description": [
          "We are adding a constrain for the direction and norm of the magnetic moments only,",
          "see PRB 91, 054420 (2015)."
        ],
        "Name": "constrain_full",
        "Value": "2"
      }
    ],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/magnetic_constrain.F90",
    "Testfiles": [
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "magneticconstrainstrength": {
    "CallLine": "call parse_variable(namespace, 'MagneticConstrainStrength', 0.01_real64, this%lambda)",
    "Default": [
      "0.01"
    ],
    "Description": [
      "This variable determines the value of the Lagrange multiplier used for the constrain term."
    ],
    "LineNumber": 113,
    "Manuals": [],
    "Name": "MagneticConstrainStrength",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/magnetic_constrain.F90",
    "Testfiles": [
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "magneticgaugecorrection": {
    "CallLine": "call parse_variable(namespace, 'MagneticGaugeCorrection', GAUGE_GIPAW, this%gauge)",
    "Default": [
      "gipaw"
    ],
    "Description": [
      "For magnetic linear response: how to handle gauge-invariance in the description",
      "of the coupling of electrons to the magnetic field."
    ],
    "LineNumber": 133,
    "Manuals": [],
    "Name": "MagneticGaugeCorrection",
    "Options": [
      {
        "Description": [
          "No correction."
        ],
        "Name": "none",
        "Value": "0"
      },
      {
        "Description": [
          "GIPAW correction: C Pickard and F Mauri, <i>Phys. Rev. Lett.</i> <b>91</b>, 196401 (2003)."
        ],
        "Name": "gipaw",
        "Value": "1"
      },
      {
        "Description": [
          "ICL correction: S Ismail-Beigi, EK Chang, and SG Louie, <i>Phys. Rev. Lett.</i> <b>87</b>, 087402 (2001)."
        ],
        "Name": "icl",
        "Value": "2"
      }
    ],
    "Section": "Linear Response",
    "Sourcefile": "electrons/perturbation_magnetic.F90",
    "Testfiles": [
      "linear_response/02-h2o_pol_lr.05_h2o_magn_opt.inp",
      "real_time/09-angular_momentum.03-td_icl.inp",
      "real_time/09-angular_momentum.02-td_gipaw.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "mainaxis": {
    "CallLine": "if (parse_block(ions%namespace, 'MainAxis', blk) == 0) then",
    "Default": null,
    "Description": [
      "A vector of reals defining the axis to which the molecule",
      "should be aligned. If not present, the default value will",
      "be the x-axis. For example in 3D:",
      "<tt>",
      "<br>%MainAxis",
      "<br> 1 | 0 | 0",
      "<br>%</tt>"
    ],
    "LineNumber": 108,
    "Manuals": [],
    "Name": "MainAxis",
    "Options": [],
    "Section": "Utilities::oct-center-geom",
    "Sourcefile": "utils/centergeom.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "maxangularmomentum": {
    "CallLine": "if (parse_block(namespace, 'MaxAngularMomentum', blk) == 0) then",
    "Default": null,
    "Description": [
      "Specifies the highest angular momentum for each atom type. All orbitals up",
      "to that angular momentum will be included in the calculation.",
      "Possible values for the angular momenta are s, p, d, f.",
      "These are examples:",
      " ",
      "<tt>%MaxAngularMomentum",
      "<br>&nbsp;&nbsp;'O'   | 'p'",
      "<br>&nbsp;&nbsp;'H'   | 's'",
      "<br>%</tt>"
    ],
    "LineNumber": 217,
    "Manuals": [],
    "Name": "MaxAngularMomentum",
    "Options": [],
    "Section": "DFTBPlusInterface",
    "Sourcefile": "dftbplus/dftb.F90",
    "Testfiles": [
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "multisystem/10-dftbplus_verlet.01-water.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "maximumiter": {
    "CallLine": "call parse_variable(namespace, 'MaximumIter', 200, scf%max_iter)",
    "Default": [
      "200"
    ],
    "Description": [
      "Maximum number of SCF iterations. The code will stop even if convergence",
      "has not been achieved. -1 means unlimited.",
      "0 means just do LCAO (or read from restart), compute the eigenvalues and energy,",
      "and stop, without updating the wavefunctions or density.",
      " ",
      "If convergence criteria are set, the SCF loop will only stop once the criteria",
      "are fulfilled for two consecutive iterations.",
      " ",
      "Note that this variable is also used in the section Calculation Modes::Unoccupied States,",
      "where it denotes the maximum number of calls of the eigensolver. In this context, the",
      "default value is 50."
    ],
    "LineNumber": 178,
    "Manuals": [],
    "Name": "MaximumIter",
    "Options": [],
    "Section": "SCF::Convergence",
    "Sourcefile": "scf/scf.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.01-ground_state.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "finite_systems_3d/34-walltime.02-restart_gs.inp",
      "finite_systems_3d/06-restart.01-gs_mixrho.inp",
      "finite_systems_3d/06-restart.04-restart_gs_mixvhxc.inp",
      "finite_systems_3d/06-restart.02-restart_gs_mixrho.inp",
      "finite_systems_3d/34-walltime.01-gs_walltime.inp",
      "finite_systems_3d/06-restart.03-gs_mixvhxc.inp",
      "real_time/18-hhg.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "pseudopotentials/17-hgh_occupations.01-W.inp",
      "pseudopotentials/17-hgh_occupations.02-Au.inp",
      "pseudopotentials/17-hgh_occupations.04-Au_sc.inp",
      "pseudopotentials/17-hgh_occupations.03-W_sc.inp",
      "pseudopotentials/02-cu2_hgh.02_gs_current.inp",
      "symmetries/05-hexagonal.23-spg165.inp",
      "symmetries/02-monoclinic.05-spg7.inp",
      "symmetries/05-hexagonal.41-spg183.inp",
      "symmetries/02-monoclinic.04-spg6.inp",
      "symmetries/03-orthorombic.14-spg29.inp",
      "symmetries/04-tetragonal.27-spg101.inp",
      "symmetries/06-cubic.29-spg223.inp",
      "symmetries/03-orthorombic.53-spg68.inp",
      "symmetries/04-tetragonal.33-spg107.inp",
      "symmetries/02-monoclinic.07-spg9.inp",
      "symmetries/06-cubic.04-spg198.inp",
      "symmetries/04-tetragonal.51-spg125.inp",
      "symmetries/04-tetragonal.03-spg77.inp",
      "symmetries/03-orthorombic.31-spg46.inp",
      "symmetries/04-tetragonal.08-spg82.inp",
      "symmetries/03-orthorombic.05-spg20.inp",
      "symmetries/04-tetragonal.36-spg110.inp",
      "symmetries/05-hexagonal.15-spg157.inp",
      "symmetries/02-monoclinic.12-spg14.inp",
      "symmetries/03-orthorombic.19-spg34.inp",
      "symmetries/05-hexagonal.28-spg170.inp",
      "symmetries/04-tetragonal.23-spg97.inp",
      "symmetries/04-tetragonal.48-spg122.inp",
      "symmetries/04-tetragonal.21-spg95.inp",
      "symmetries/06-cubic.21-spg215.inp",
      "symmetries/02-monoclinic.09-spg11.inp",
      "symmetries/04-tetragonal.18-spg92.inp",
      "symmetries/04-tetragonal.52-spg126.inp",
      "symmetries/03-orthorombic.55-spg70.inp",
      "symmetries/03-orthorombic.09-spg24.inp",
      "symmetries/04-tetragonal.62-spg136.inp",
      "symmetries/02-monoclinic.08-spg10.inp",
      "symmetries/04-tetragonal.38-spg112.inp",
      "symmetries/04-tetragonal.49-spg123.inp",
      "symmetries/03-orthorombic.20-spg35.inp",
      "symmetries/06-cubic.05-spg199.inp",
      "symmetries/06-cubic.35-spg229.inp",
      "symmetries/02-monoclinic.03-spg5.inp",
      "symmetries/02-monoclinic.06-spg8.inp",
      "symmetries/06-cubic.06-spg200.inp",
      "symmetries/04-tetragonal.57-spg131.inp",
      "symmetries/04-tetragonal.45-spg119.inp",
      "symmetries/05-hexagonal.49-spg191.inp",
      "symmetries/03-orthorombic.26-spg41.inp",
      "symmetries/06-cubic.15-spg209.inp",
      "symmetries/06-cubic.08-spg202.inp",
      "symmetries/04-tetragonal.35-spg109.inp",
      "symmetries/03-orthorombic.07-spg22.inp",
      "symmetries/04-tetragonal.32-spg106.inp",
      "symmetries/04-tetragonal.12-spg86.inp",
      "symmetries/06-cubic.01-spg195.inp",
      "symmetries/05-hexagonal.38-spg180.inp",
      "symmetries/04-tetragonal.01-spg75.inp",
      "symmetries/03-orthorombic.25-spg40.inp",
      "symmetries/04-tetragonal.39-spg113.inp",
      "symmetries/05-hexagonal.02-spg144.inp",
      "symmetries/05-hexagonal.06-spg148.inp",
      "symmetries/06-cubic.32-spg226.inp",
      "symmetries/03-orthorombic.47-spg62.inp",
      "symmetries/05-hexagonal.20-spg162.inp",
      "symmetries/06-cubic.24-spg218.inp",
      "symmetries/06-cubic.30-spg224.inp",
      "symmetries/05-hexagonal.12-spg154.inp",
      "symmetries/05-hexagonal.07-spg149.inp",
      "symmetries/05-hexagonal.27-spg169.inp",
      "symmetries/03-orthorombic.45-spg60.inp",
      "symmetries/05-hexagonal.19-spg161.inp",
      "symmetries/05-hexagonal.16-spg158.inp",
      "symmetries/05-hexagonal.48-spg190.inp",
      "symmetries/06-cubic.09-spg203.inp",
      "symmetries/03-orthorombic.24-spg39.inp",
      "symmetries/03-orthorombic.50-spg65.inp",
      "symmetries/06-cubic.34-spg228.inp",
      "symmetries/05-hexagonal.42-spg184.inp",
      "symmetries/03-orthorombic.23-spg38.inp",
      "symmetries/04-tetragonal.13-spg87.inp",
      "symmetries/06-cubic.02-spg196.inp",
      "symmetries/02-monoclinic.13-spg15.inp",
      "symmetries/05-hexagonal.45-spg187.inp",
      "symmetries/05-hexagonal.22-spg164.inp",
      "symmetries/03-orthorombic.43-spg58.inp",
      "symmetries/03-orthorombic.34-spg49.inp",
      "symmetries/04-tetragonal.47-spg121.inp",
      "symmetries/02-monoclinic.02-spg4.inp",
      "symmetries/03-orthorombic.39-spg54.inp",
      "symmetries/04-tetragonal.17-spg91.inp",
      "symmetries/04-tetragonal.22-spg96.inp",
      "symmetries/05-hexagonal.35-spg177.inp",
      "symmetries/03-orthorombic.13-spg28.inp",
      "symmetries/05-hexagonal.13-spg155.inp",
      "symmetries/03-orthorombic.42-spg57.inp",
      "symmetries/06-cubic.12-spg206.inp",
      "symmetries/02-monoclinic.10-spg12.inp",
      "symmetries/06-cubic.07-spg201.inp",
      "symmetries/03-orthorombic.36-spg51.inp",
      "symmetries/05-hexagonal.44-spg186.inp",
      "symmetries/04-tetragonal.04-spg78.inp",
      "symmetries/05-hexagonal.21-spg163.inp",
      "symmetries/04-tetragonal.02-spg76.inp",
      "symmetries/03-orthorombic.22-spg37.inp",
      "symmetries/05-hexagonal.32-spg174.inp",
      "symmetries/03-orthorombic.35-spg50.inp",
      "symmetries/03-orthorombic.17-spg32.inp",
      "symmetries/05-hexagonal.17-spg159.inp",
      "symmetries/03-orthorombic.04-spg19.inp",
      "symmetries/04-tetragonal.20-spg94.inp",
      "symmetries/06-cubic.20-spg214.inp",
      "symmetries/04-tetragonal.65-spg139.inp",
      "symmetries/03-orthorombic.32-spg47.inp",
      "symmetries/03-orthorombic.02-spg17.inp",
      "symmetries/04-tetragonal.15-spg89.inp",
      "symmetries/03-orthorombic.57-spg72.inp",
      "symmetries/03-orthorombic.15-spg30.inp",
      "symmetries/03-orthorombic.49-spg64.inp",
      "symmetries/06-cubic.11-spg205.inp",
      "symmetries/04-tetragonal.30-spg104.inp",
      "symmetries/04-tetragonal.59-spg133.inp",
      "symmetries/03-orthorombic.54-spg69.inp",
      "symmetries/03-orthorombic.41-spg56.inp",
      "symmetries/06-cubic.19-spg213.inp",
      "symmetries/05-hexagonal.05-spg147.inp",
      "symmetries/04-tetragonal.25-spg99.inp",
      "symmetries/03-orthorombic.58-spg73.inp",
      "symmetries/04-tetragonal.43-spg117.inp",
      "symmetries/01-triclinic.02-spg2.inp",
      "symmetries/04-tetragonal.42-spg116.inp",
      "symmetries/05-hexagonal.50-spg192.inp",
      "symmetries/04-tetragonal.68-spg142.inp",
      "symmetries/04-tetragonal.40-spg114.inp",
      "symmetries/05-hexagonal.34-spg176.inp",
      "symmetries/04-tetragonal.63-spg137.inp",
      "symmetries/06-cubic.31-spg225.inp",
      "symmetries/05-hexagonal.36-spg178.inp",
      "symmetries/05-hexagonal.30-spg172.inp",
      "symmetries/03-orthorombic.48-spg63.inp",
      "symmetries/04-tetragonal.11-spg85.inp",
      "symmetries/05-hexagonal.40-spg182.inp",
      "symmetries/05-hexagonal.11-spg153.inp",
      "symmetries/04-tetragonal.41-spg115.inp",
      "symmetries/01-triclinic.16-spg16.inp",
      "symmetries/04-tetragonal.26-spg100.inp",
      "symmetries/05-hexagonal.24-spg166.inp",
      "symmetries/03-orthorombic.56-spg71.inp",
      "symmetries/06-cubic.16-spg210.inp",
      "symmetries/06-cubic.25-spg219.inp",
      "symmetries/03-orthorombic.51-spg66.inp",
      "symmetries/05-hexagonal.47-spg189.inp",
      "symmetries/04-tetragonal.24-spg98.inp",
      "symmetries/05-hexagonal.51-spg193.inp",
      "symmetries/03-orthorombic.37-spg52.inp",
      "symmetries/05-hexagonal.39-spg181.inp",
      "symmetries/03-orthorombic.27-spg42.inp",
      "symmetries/04-tetragonal.58-spg132.inp",
      "symmetries/04-tetragonal.31-spg105.inp",
      "symmetries/04-tetragonal.06-spg80.inp",
      "symmetries/05-hexagonal.10-spg152.inp",
      "symmetries/05-hexagonal.01-spg143.inp",
      "symmetries/05-hexagonal.04-spg146.inp",
      "symmetries/04-tetragonal.19-spg93.inp",
      "symmetries/03-orthorombic.08-spg23.inp",
      "symmetries/04-tetragonal.29-spg103.inp",
      "symmetries/06-cubic.27-spg221.inp",
      "symmetries/04-tetragonal.56-spg130.inp",
      "symmetries/06-cubic.36-spg230.inp",
      "symmetries/04-tetragonal.55-spg129.inp",
      "symmetries/04-tetragonal.44-spg118.inp",
      "symmetries/04-tetragonal.53-spg127.inp",
      "symmetries/03-orthorombic.11-spg26.inp",
      "symmetries/05-hexagonal.14-spg156.inp",
      "symmetries/06-cubic.33-spg227.inp",
      "symmetries/05-hexagonal.43-spg185.inp",
      "symmetries/03-orthorombic.40-spg55.inp",
      "symmetries/06-cubic.13-spg207.inp",
      "symmetries/06-cubic.03-spg197.inp",
      "symmetries/06-cubic.14-spg208.inp",
      "symmetries/02-monoclinic.11-spg13.inp",
      "symmetries/06-cubic.17-spg211.inp",
      "symmetries/03-orthorombic.30-spg45.inp",
      "symmetries/06-cubic.28-spg222.inp",
      "symmetries/05-hexagonal.46-spg188.inp",
      "symmetries/03-orthorombic.16-spg31.inp",
      "symmetries/06-cubic.23-spg217.inp",
      "symmetries/04-tetragonal.10-spg84.inp",
      "symmetries/06-cubic.18-spg212.inp",
      "symmetries/04-tetragonal.66-spg140.inp",
      "symmetries/04-tetragonal.16-spg90.inp",
      "symmetries/04-tetragonal.61-spg135.inp",
      "symmetries/03-orthorombic.46-spg61.inp",
      "symmetries/01-triclinic.01-spg1.inp",
      "symmetries/03-orthorombic.29-spg44.inp",
      "symmetries/04-tetragonal.67-spg141.inp",
      "symmetries/03-orthorombic.18-spg33.inp",
      "symmetries/05-hexagonal.33-spg175.inp",
      "symmetries/05-hexagonal.25-spg167.inp",
      "symmetries/04-tetragonal.64-spg138.inp",
      "symmetries/03-orthorombic.01-spg16.inp",
      "symmetries/03-orthorombic.21-spg36.inp",
      "symmetries/05-hexagonal.52-spg194.inp",
      "symmetries/06-cubic.26-spg220.inp",
      "symmetries/03-orthorombic.52-spg67.inp",
      "symmetries/04-tetragonal.37-spg111.inp",
      "symmetries/04-tetragonal.28-spg102.inp",
      "symmetries/05-hexagonal.26-spg168.inp",
      "symmetries/05-hexagonal.31-spg173.inp",
      "symmetries/03-orthorombic.59-spg74.inp",
      "symmetries/03-orthorombic.33-spg48.inp",
      "symmetries/04-tetragonal.50-spg124.inp",
      "symmetries/05-hexagonal.37-spg179.inp",
      "symmetries/04-tetragonal.60-spg134.inp",
      "symmetries/03-orthorombic.10-spg25.inp",
      "symmetries/05-hexagonal.08-spg150.inp",
      "symmetries/03-orthorombic.03-spg18.inp",
      "symmetries/05-hexagonal.29-spg171.inp",
      "symmetries/04-tetragonal.54-spg128.inp",
      "symmetries/03-orthorombic.44-spg59.inp",
      "symmetries/05-hexagonal.03-spg145.inp",
      "symmetries/05-hexagonal.18-spg160.inp",
      "symmetries/03-orthorombic.06-spg21.inp",
      "symmetries/04-tetragonal.14-spg88.inp",
      "symmetries/04-tetragonal.34-spg108.inp",
      "symmetries/05-hexagonal.09-spg151.inp",
      "symmetries/03-orthorombic.12-spg27.inp",
      "symmetries/03-orthorombic.28-spg43.inp",
      "symmetries/04-tetragonal.46-spg120.inp",
      "symmetries/03-orthorombic.38-spg53.inp",
      "symmetries/02-monoclinic.01-spg3.inp",
      "symmetries/06-cubic.22-spg216.inp",
      "symmetries/06-cubic.10-spg204.inp",
      "symmetries/04-tetragonal.07-spg81.inp",
      "symmetries/04-tetragonal.09-spg83.inp",
      "symmetries/04-tetragonal.05-spg79.inp",
      "functionals/03-xc.gga_x_lg93.inp",
      "functionals/03-xc.gga_xc_mpwlyp1w.inp",
      "functionals/03-xc.lda_c_pw.inp",
      "functionals/03-xc.exx.inp",
      "functionals/03-xc.gga_x_rpbe.inp",
      "functionals/03-xc.gga_xc_edf1.inp",
      "functionals/03-xc.lda_c_hl.inp",
      "functionals/03-xc.gga_xc_hcth_120.inp",
      "functionals/01-xc_1d.oep_kli.inp",
      "functionals/03-xc.gga_c_pbe_jrgx.inp",
      "functionals/03-xc.gga_xc_hcth_93.inp",
      "functionals/03-xc.gga_c_pbe_sol.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/03-xc.mvorb_hse06_fock.inp",
      "functionals/02-xc_2d.gga_b86_mgc.inp",
      "functionals/03-xc.lda_c_wigner.inp",
      "functionals/03-xc.gga_x_mpbe.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/03-xc.gga_xc_xlyp.inp",
      "functionals/03-xc.gga_x_am05.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/03-xc.gga_x_g96.inp",
      "functionals/03-xc.gga_x_b86.inp",
      "functionals/03-xc.gga_x_pbek1_vdw.inp",
      "functionals/03-xc.gga_xc_pbelyp1w.inp",
      "functionals/03-xc.gga_x_b86_mgc.inp",
      "functionals/03-xc.gga_c_xpbe.inp",
      "functionals/03-xc.pbe0_fock.inp",
      "functionals/03-xc.gga_x_b88.inp",
      "functionals/03-xc.lda_c_ob_pz.inp",
      "functionals/02-xc_2d.gga_b86.inp",
      "functionals/03-xc.gga_x_ft97_b.inp",
      "functionals/03-xc.lda_c_ob_pw.inp",
      "functionals/03-xc.lda_c_pz_mod.inp",
      "functionals/03-xc.gga_x_optb88_vdw.inp",
      "functionals/03-xc.gga_c_pw91.inp",
      "functionals/03-xc.slater.inp",
      "functionals/03-xc.lda_xc_teter93.inp",
      "functionals/03-xc.sic_pz.inp",
      "functionals/03-xc.gga_x_xpbe.inp",
      "functionals/01-xc_1d.lda_csc.inp",
      "functionals/03-xc.pbe0_oep.inp",
      "functionals/03-xc.gga_xc_hcth_147.inp",
      "functionals/03-xc.gga_x_pbe_jsjr.inp",
      "functionals/03-xc.gga_c_lm.inp",
      "functionals/03-xc.gga_x_pbe_r.inp",
      "functionals/03-xc.lda_c_vbh.inp",
      "functionals/03-xc.gga_x_pbea.inp",
      "functionals/03-xc.lda_x.inp",
      "functionals/03-xc.gga_x_pw91.inp",
      "functionals/03-xc.b3lyp_fock.inp",
      "functionals/03-xc.gga_x_ft97_a.inp",
      "functionals/03-xc.gga_x_pw86.inp",
      "functionals/01-xc_1d.oep_exx.inp",
      "functionals/03-xc.lda_c_rpa.inp",
      "functionals/03-xc.b3lyp_oep.inp",
      "functionals/03-xc.gga_x_dk87_r2.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/03-xc.gga_c_p86.inp",
      "functionals/03-xc.lda_c_vwn_rpa.inp",
      "functionals/03-xc.lda_c_pw_mod.inp",
      "functionals/03-xc.lda_c_vwn.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/03-xc.kli.inp",
      "functionals/03-xc.lda_c_pz.inp",
      "functionals/03-xc.lda_c_xalpha.inp",
      "functionals/02-xc_2d.lda_amgb.inp",
      "functionals/03-xc.lda_c_gl.inp",
      "functionals/03-xc.gga_x_bayesian.inp",
      "functionals/03-xc.gga_xc_b97_d.inp",
      "functionals/03-xc.gga_c_pbe.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "functionals/03-xc.gga_x_lb.inp",
      "functionals/03-xc.gga_x_pbe_sol.inp",
      "functionals/03-xc.gga_c_lyp.inp",
      "functionals/03-xc.gga_c_am05.inp",
      "functionals/03-xc.gga_x_mpw91.inp",
      "functionals/03-xc.gga_x_pbe.inp",
      "functionals/03-xc.gga_xc_pbe1w.inp",
      "functionals/02-xc_2d.gga_b88.inp",
      "functionals/03-xc.gga_x_optpbe_vdw.inp",
      "functionals/03-xc.gga_xc_hcth_407.inp",
      "functionals/02-xc_2d.gga_pbe.inp",
      "functionals/07-sic.02-scdm.inp",
      "functionals/03-xc.gga_x_dk87_r1.inp",
      "functionals/03-xc.gga_x_optx.inp",
      "functionals/03-xc.fbex.inp",
      "functionals/03-xc.gga_x_wc.inp",
      "periodic_systems/22-berry.02-cubic_Si.inp",
      "periodic_systems/19-unfolding.03-unocc.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/08-loewdin.02-intersite.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "maximumiterberry": {
    "CallLine": "call parse_variable(namespace, 'MaximumIterBerry', 10, this%max_iter_berry)",
    "Default": [
      "10"
    ],
    "Description": [
      "Maximum number of iterations for the Berry potential, within each SCF iteration.",
      "Only applies if a <tt>StaticElectricField</tt> is applied in a periodic direction.",
      "The code will move on to the next SCF iteration even if convergence",
      "has not been achieved. -1 means unlimited."
    ],
    "LineNumber": 81,
    "Manuals": [],
    "Name": "MaximumIterBerry",
    "Options": [],
    "Section": "SCF::Convergence",
    "Sourcefile": "hamiltonian/berry.F90",
    "Testfiles": [
      "periodic_systems/22-berry.02-cubic_Si.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "maxwellabpmlpower": {
    "CallLine": "call parse_variable(namespace, 'MaxwellABPMLPower', 3.5_real64, bc%pml%power, unit_one)",
    "Default": [
      "3.5"
    ],
    "Description": [
      "Exponential of the polynomial profile for the non-physical conductivity of the PML.",
      "Should be between 2 and 4"
    ],
    "LineNumber": 622,
    "Manuals": [],
    "Name": "MaxwellABPMLPower",
    "Options": [],
    "Section": "Maxwell::Boundaries",
    "Sourcefile": "maxwell/maxwell_boundary_op.F90",
    "Testfiles": [
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "maxwellabpmlreflectionerror": {
    "CallLine": "call parse_variable(namespace, 'MaxwellABPMLReflectionError', 1.0e-16_real64, bc%pml%refl_error, unit_one)",
    "Default": [
      "1.0e-16"
    ],
    "Description": [
      "Tolerated reflection error for the PML"
    ],
    "LineNumber": 631,
    "Manuals": [],
    "Name": "MaxwellABPMLReflectionError",
    "Options": [],
    "Section": "Maxwell::Boundaries",
    "Sourcefile": "maxwell/maxwell_boundary_op.F90",
    "Testfiles": [
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "maxwellabsorbingboundaries": {
    "CallLine": "if (parse_block(namespace, 'MaxwellAbsorbingBoundaries', blk) == 0) then",
    "Default": null,
    "Description": [
      "Type of absorbing boundaries used for Maxwell propagation in each direction.",
      " ",
      "Example:",
      " ",
      "<tt>%MaxwellAbsorbingBoundaries",
      "<br>&nbsp;&nbsp;   cpml | cpml | cpml",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 203,
    "Manuals": [],
    "Name": "MaxwellAbsorbingBoundaries",
    "Options": [
      {
        "Description": [
          "No absorbing boundaries."
        ],
        "Name": "not_absorbing",
        "Value": "0"
      },
      {
        "Description": [
          "A mask equal to the wavefunctions mask is applied to the Maxwell states at the boundaries"
        ],
        "Name": "mask",
        "Value": "1"
      },
      {
        "Description": [
          "Perfectly matched layer absorbing boundary"
        ],
        "Name": "cpml",
        "Value": "2"
      },
      {
        "Description": [
          "Absorbing boundary region is set to zero"
        ],
        "Name": "mask_zero",
        "Value": "7"
      }
    ],
    "Section": "Maxwell",
    "Sourcefile": "maxwell/maxwell_boundary_op.F90",
    "Testfiles": [
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_restarted.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/01-free-propagation.02-2_pulses_td.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "maxwellabwidth": {
    "CallLine": "call parse_variable(namespace, 'MaxwellABWidth', default_width, bc%ab_width, units_inp%length)",
    "Default": null,
    "Description": [
      "Width of the region used to apply the absorbing boundaries. The default value is twice",
      "the derivative order."
    ],
    "LineNumber": 587,
    "Manuals": [],
    "Name": "MaxwellABWidth",
    "Options": [],
    "Section": "Maxwell::Boundaries",
    "Sourcefile": "maxwell/maxwell_boundary_op.F90",
    "Testfiles": [
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "maxwellboundaryconditions": {
    "CallLine": "if (parse_block(namespace, 'MaxwellBoundaryConditions', blk) == 0) then",
    "Default": null,
    "Description": [
      "Defines boundary conditions for the electromagnetic field propagation.",
      " ",
      "Example:",
      " ",
      "<tt>%MaxwellBoundaryConditions",
      "<br>&nbsp;&nbsp;   zero | mirror_pec | constant",
      "<br>%</tt>",
      " ",
      " "
    ],
    "LineNumber": 170,
    "Manuals": [],
    "Name": "MaxwellBoundaryConditions",
    "Options": [
      {
        "Description": [
          "Boundaries are set to zero."
        ],
        "Name": "zero",
        "Value": "0"
      },
      {
        "Description": [
          "Boundaries are set to a constant."
        ],
        "Name": "constant",
        "Value": "1"
      },
      {
        "Description": [
          "Perfect electric conductor."
        ],
        "Name": "mirror_pec",
        "Value": "2"
      },
      {
        "Description": [
          "Perfect magnetic conductor."
        ],
        "Name": "mirror_pmc",
        "Value": "3"
      },
      {
        "Description": [
          "Boundaries feed in plane waves."
        ],
        "Name": "plane_waves",
        "Value": "4"
      },
      {
        "Description": [
          "Periodic boundary conditions (not yet implemented)."
        ],
        "Name": "periodic",
        "Value": "5"
      },
      {
        "Description": [
          "Boundaries as linear medium (not yet implemented)."
        ],
        "Name": "medium",
        "Value": "6"
      }
    ],
    "Section": "Maxwell",
    "Sourcefile": "maxwell/propagator_mxll.F90",
    "Testfiles": [
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_restarted.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/01-free-propagation.02-2_pulses_td.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "maxwellcouplingmode": {
    "CallLine": "call parse_variable(namespace, 'MaxwellCouplingMode', NO_MAXWELL_COUPLING, this%coupling_mode)",
    "Default": [
      "none"
    ],
    "Description": [
      "This variable selects the level of light-matter coupling with electromagnetic fields from the Maxwell solver.",
      "Each option defines a coupling Hamiltonian <math> H_{int}</math>."
    ],
    "LineNumber": 131,
    "Manuals": [],
    "Name": "MaxwellCouplingMode",
    "Options": [
      {
        "Description": [
          "No coupling."
        ],
        "Name": "none",
        "Value": "0"
      },
      {
        "Description": [
          "Dipole level in length gauge with transverse electric field E(t):",
          "<math> H_{int} = -r.E </math>",
          "The option MaxwellDipoleField should be set to define if <math>E</math> is calculated as an average at evaluated",
          "at the center of mass (by default, dipole coupling with the average electric field will be used)."
        ],
        "Name": "length_gauge_dipole",
        "Value": "1"
      },
      {
        "Description": [
          "The option MultipoleExpansionTerms selects the terms to be included (electric dipole, electric quadrupole",
          "and/or magnetic dipole)."
        ],
        "Name": "multipolar_expansion",
        "Value": "2"
      },
      {
        "Description": [
          "Coupling at dipole level in velocity gauge with transverse vector potential A(t).",
          "<math> H_{int} = 1/2m (2 A(t).p + A^2(t)) </math>",
          "The option MaxwellDipoleField should be set."
        ],
        "Name": "velocity_gauge_dipole",
        "Value": "3"
      },
      {
        "Description": [
          "Full vector potential A(r,t) coupled to the momentum.",
          "<math> H_{int} = 1/2m (2 A(r,t).p + A^2(r,t)) </math>"
        ],
        "Name": "full_minimal_coupling",
        "Value": "4"
      }
    ],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/mxll_elec_coupling.F90",
    "Testfiles": [
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "maxwelldipolefield": {
    "CallLine": "call parse_variable(namespace, 'MaxwellDipoleField', DIPOLE_AVERAGE, this%dipole_field)",
    "Default": [
      "average"
    ],
    "Description": [
      "This variable selects the method to get the E field vector at the position of the system",
      "if Maxwell-matter coupling at dipole level within length gauge is done."
    ],
    "LineNumber": 217,
    "Manuals": [],
    "Name": "MaxwellDipoleField",
    "Options": [
      {
        "Description": [
          "Transverse E field is averaged in the volume occupied by the matter system."
        ],
        "Name": "average",
        "Value": "0"
      },
      {
        "Description": [
          "Tranverse E field is evaluated at the center of mass of the matter system (at a single point)."
        ],
        "Name": "center_of_mass",
        "Value": "1"
      }
    ],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/mxll_elec_coupling.F90",
    "Testfiles": [
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "maxwellfieldscoordinate": {
    "CallLine": "if (parse_block(namespace, 'MaxwellFieldsCoordinate', blk) == 0) then",
    "Default": null,
    "Description": [
      "The Maxwell MaxwellFieldsCoordinate block allows to output Maxwell fields at particular",
      "points in space. For each point a new line with three columns has to be added to the block,",
      "where the columns denote the x, y, and z coordinate of the point.",
      " ",
      "<tt>%MaxwellFieldsCoordinate",
      "<br>&nbsp;&nbsp;    -1.0 | 2.0 |  4.0",
      "<br>&nbsp;&nbsp;     0.0 | 1.0 | -2.0",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 283,
    "Manuals": [],
    "Name": "MaxwellFieldsCoordinate",
    "Options": [],
    "Section": "Maxwell::Output",
    "Sourcefile": "states/states_mxll.F90",
    "Testfiles": [
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "maxwellfunctions": {
    "CallLine": "if (parse_block(namespace, 'MaxwellFunctions', blk) /= 0) then",
    "Default": null,
    "Description": [
      "This block specifies the shape of a \"spatial-dependent function\", such as the",
      "envelope needed when using the <tt>MaxwellFunctions</tt> block. Each line in the block",
      "specifies one function. The first element of each line will be a string",
      "that defines the name of the function. The second element specifies which type",
      "of function we are using; in the following we provide an example for each of the",
      "possible types:",
      " "
    ],
    "LineNumber": 184,
    "Manuals": [],
    "Name": "MaxwellFunctions",
    "Options": [
      {
        "Description": [
          " ",
          "<tt>%MaxwellFunctions",
          "<br>&nbsp;&nbsp; \"function-name\" | mxf_const_wave | kx | ky | kz | x0 | y0 | z0",
          "<br>%</tt>",
          " ",
          "The function is constant plane wave <math> f(x,y,z) = a0 * \\cos( kx*(x-x0) + ky*(y-y0) + kz*(z-z0) ) </math>",
          " "
        ],
        "Name": "mxf_const_wave",
        "Value": "10002"
      },
      {
        "Description": [
          " ",
          "<tt>%MaxwellFunctions",
          "<br>&nbsp;&nbsp; \"function-name\" | mxf_const_phase | kx | ky | kz | x0 | y0 | z0",
          "<br>%</tt>",
          " ",
          "The function is a constant phase of <math> f(x,y,z) = a0 * (kx * x0 + ky * y0 + kz * z0) </math>",
          " "
        ],
        "Name": "mxf_const_phase",
        "Value": "10004"
      },
      {
        "Description": [
          " ",
          "<tt>%MaxwellFunctions",
          "<br>&nbsp;&nbsp; \"function-name\" | mxf_gaussian_wave | kx | ky | kz | x0 | y0 | z0 | width",
          "<br>%</tt>",
          " ",
          "The function is a Gaussian, <math> f(x,y,z) = a0 * \\exp( -( kx*(x-x0) + ky*(y-y0) + kz*(z-z0) )^2 / (2 width^2) ) </math>",
          " "
        ],
        "Name": "mxf_gaussian_wave",
        "Value": "10005"
      },
      {
        "Description": [
          " ",
          "<tt>%MaxwellFunctions",
          "<br>&nbsp;&nbsp; \"function-name\" | mxf_cosinoidal_wave | kx | ky | kz | x0 | y0 | z0 | width",
          "<br>%</tt>",
          " ",
          "<math> f(x,y,z) =  \\cos( \\frac{\\pi}{2} \\frac{kx*(x-x0)+ky*(y-y0)+kz*(z-z0)-2 width}{width} + \\pi )  </math>",
          " ",
          "If <math> | kx*x + ky*y + kz*z - x0 | > \\xi\\_0 </math>, then <math> f(x,y,z) = 0 </math>.",
          " "
        ],
        "Name": "mxf_cosinoidal_wave",
        "Value": "10006"
      },
      {
        "Description": [
          " ",
          "<tt>%MaxwellFunctions",
          "<br>&nbsp;&nbsp; \"function-name\" | mxf_logistic_wave | kx | ky | kz | x0 | y0 | z0 | growth | width",
          "<br>%</tt>",
          " ",
          "The function is a logistic function, <math> f(x,y,z) = a0 * 1/(1+\\exp(growth*(kx*(x-x0)+ky*(y-y0)+kz*(kz*(z-z0))+width/2))) * 1/(1+\\exp(-growth*(kx*(x-x0)+ky*(y-y0)+kz*(kz*(z-z0))-width/2)))  </math>",
          " "
        ],
        "Name": "mxf_logistic_wave",
        "Value": "10007"
      },
      {
        "Description": [
          " ",
          "<tt>%MaxwellFunctions",
          "<br>&nbsp;&nbsp; \"function-name\" | mxf_trapezoidal_wave | kx | ky | kz | x0 | y0 | z0 | growth | width",
          "<br>%</tt>",
          " ",
          "The function is a logistic function,",
          "<br> <math> f(x,y,z)      = a0 * ( ( 1-growth*(k*(r-r0)-width/2)*\\Theta(k*(r-r0)-width/2))*\\Theta(-(k*(r-r0)+width/2+1/growth)) </math>",
          "<br> <math> \\qquad \\qquad \\qquad + (-1+growth*(k*(r-r0)+width/2)*\\Theta(k*(r-r0)+width/2))*\\Theta(-(k*(r-r0)-width/2+1/growth)) ) </math>",
          " "
        ],
        "Name": "mxf_trapezoidal_wave",
        "Value": "10008"
      },
      {
        "Description": [
          " ",
          "<tt>%MaxwellFunctions",
          "<br>&nbsp;&nbsp; \"function-name\" | mxf_from_expr | kx | ky | kz | \"expression\"",
          "<br>%</tt>",
          " ",
          "The temporal shape of the field is given as an expression (e.g., <tt>cos(2.0*x-3*y+4*z)</tt>. The",
          "letter <i>x</i>, <i>y</i>, <i>z</i> means spatial coordinates, obviously.",
          "The expression is used to construct the function <i>f</i>",
          "that defines the field."
        ],
        "Name": "mxf_from_expr",
        "Value": "10011"
      }
    ],
    "Section": "Maxwell",
    "Sourcefile": "math/maxwell_function.F90",
    "Testfiles": [
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_restarted.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/01-free-propagation.02-2_pulses_td.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "maxwellhamiltonianoperator": {
    "CallLine": "call parse_variable(namespace, 'MaxwellHamiltonianOperator', FARADAY_AMPERE, hm%operator)",
    "Default": [
      "faraday_ampere"
    ],
    "Description": [
      "With this variable the the Maxwell Hamiltonian operator can be selected"
    ],
    "LineNumber": 195,
    "Manuals": [],
    "Name": "MaxwellHamiltonianOperator",
    "Options": [
      {
        "Description": [
          "The propagation operation in vacuum with Spin 1 matrices without Gauss law condition."
        ],
        "Name": "faraday_ampere",
        "Value": "1"
      },
      {
        "Description": [
          "The propagation operation in medium with Spin 1 matrices without Gauss law condition"
        ],
        "Name": "faraday_ampere_medium",
        "Value": "2"
      }
    ],
    "Section": "Maxwell",
    "Sourcefile": "maxwell/hamiltonian_mxll.F90",
    "Testfiles": [
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "maxwellincidentwaves": {
    "CallLine": "if (parse_block(namespace, 'MaxwellIncidentWaves', blk) == 0) then",
    "Default": null,
    "Description": [
      "The initial electromagnetic fields can be set by the user",
      "with the <tt>MaxwellIncidentWaves</tt> block variable.",
      "The electromagnetic fields have to fulfill the",
      "Maxwells equations in vacuum.",
      "For a Maxwell propagation, setting the electric field is sufficient,",
      "the magnetic field (for plane waves) will be calculated from it as 1/(c.|k|) . (k x E).",
      " ",
      "Example:",
      " ",
      "<tt>%MaxwellIncidentWaves",
      "<br>&nbsp;&nbsp;   plane_wave_parser      | \"field_type\"| \"k1x\" | \"k1y\" | \"k1z\" | \"E1x\" | \"E1z\" | \"E1x\"",
      "<br>&nbsp;&nbsp;   plane_wave_mx_function | \"field_type\"| \"E4x\" | \"E4y\" | \"E4z\" | mx_envelope_name | phase",
      "<br>&nbsp;&nbsp;   bessel_function | \"field_type\"| A_0 | m | omega | helicity | <math>\\theta_{k}</math> | mx_envelope_name | phase",
      "<br>%</tt>",
      " ",
      "Field type can be \"electric_field\" or \"vector_potential\". Note that in order to couple to an",
      "electronic system, the <tt>MaxwellCouplingMode</tt> variable needs to be set to a coupling type",
      "compatible with the requested field type (\"electric_field\" is compatible with length gauge,",
      "while \"vector_potential\" is compatible with velocity gauge and full minimal coupling).",
      "Otherwise, the field will not be calculated or applied to the electronic Hamiltonian.",
      " "
    ],
    "LineNumber": 360,
    "Manuals": [],
    "Name": "MaxwellIncidentWaves",
    "Options": [
      {
        "Description": [
          "Parser input modus"
        ],
        "Name": "plane_wave_parser",
        "Value": "0"
      },
      {
        "Description": [
          "The incident wave envelope is defined by an mx_function"
        ],
        "Name": "plane_wave_mx_function",
        "Value": "1"
      },
      {
        "Description": [
          "The incident source is a Bessel beam, parametrized by its amplitude, opening angle, helicity, order and frequency."
        ],
        "Name": "bessel_function",
        "Value": "2"
      }
    ],
    "Section": "Maxwell",
    "Sourcefile": "maxwell/external_waves.F90",
    "Testfiles": [
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_restarted.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/01-free-propagation.02-2_pulses_td.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "maxwelloutput": {
    "Default": [
      "none"
    ],
    "Description": [
      "Specifies what to print. The output files are written at the end of the run into the output directory for the",
      "Maxwell run.",
      "Time-dependent simulations print only per iteration, including always the last. The frequency of output per iteration",
      "is set by <tt>OutputInterval</tt> and the directory is set by <tt>OutputIterDir</tt>.",
      "Each option must be in a separate row. Optionally individual output formats and output intervals can be defined",
      "for each row or they can be read separately from <tt>OutputFormat</tt> and <tt>MaxwellOutputInterval</tt> variables",
      "in the input file.",
      " ",
      "Example:",
      "<br><br><tt>%MaxwellOutput",
      "<br>&nbsp;&nbsp;electric_field",
      "<br>&nbsp;&nbsp;magnetic_field",
      "<br>%<br></tt>",
      "This block supports all the formats of the <tt>Output</tt> block.",
      "See <tt>Output</tt>."
    ],
    "Manuals": [],
    "Name": "MaxwellOutput",
    "Options": [
      {
        "Description": [
          "Output of the electric field"
        ],
        "Name": "electric_field",
        "Value": "1"
      },
      {
        "Description": [
          "Output of the magnetic field"
        ],
        "Name": "magnetic_field",
        "Value": "2"
      },
      {
        "Description": [
          "Output of the transversal electric field"
        ],
        "Name": "trans_electric_field",
        "Value": "3"
      },
      {
        "Description": [
          "Output of the transversal magnetic field"
        ],
        "Name": "trans_magnetic_field",
        "Value": "4"
      },
      {
        "Description": [
          "Output of the longitudinal electric field"
        ],
        "Name": "long_electric_field",
        "Value": "5"
      },
      {
        "Description": [
          "Output of the longitudinal magnetic field"
        ],
        "Name": "long_magnetic_field",
        "Value": "6"
      },
      {
        "Description": [
          "Output of the divergence of the electric field"
        ],
        "Name": "div_electric_field",
        "Value": "7"
      },
      {
        "Description": [
          "Output of the divergence of the magnetic field"
        ],
        "Name": "div_magnetic_field",
        "Value": "8"
      },
      {
        "Description": [
          "Output of the Maxwell Poynting vector"
        ],
        "Name": "poynting_vector",
        "Value": "9"
      },
      {
        "Description": [
          "Output of the electromagnetic density"
        ],
        "Name": "maxwell_energy_density",
        "Value": "10"
      },
      {
        "Description": [
          "Output of the external Maxwell current"
        ],
        "Name": "external_current",
        "Value": "11"
      },
      {
        "Description": [
          "Output of the charge density calculated by the divergence of the electric field."
        ],
        "Name": "charge_density",
        "Value": "12"
      },
      {
        "Description": [
          "Output of the orbital angular momentum"
        ],
        "Name": "orbital_angular_momentum",
        "Value": "13"
      },
      {
        "Description": [
          "Output of the vector potential from magnetic field"
        ],
        "Name": "vector_potential_mag",
        "Value": "14"
      },
      {
        "Description": [
          "Output of the magnetic field difference"
        ],
        "Name": "magnetic_field_diff",
        "Value": "15"
      },
      {
        "Description": [
          "Output of the total current density"
        ],
        "Name": "total_current_mxll",
        "Value": "16"
      }
    ],
    "Section": "Output",
    "Sourcefile": "output/output_mxll.F90",
    "Testfiles": [
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_restarted.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/01-free-propagation.02-2_pulses_td.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "maxwelloutputinterval": {
    "Default": [
      "50"
    ],
    "Description": [
      "The output requested by variable <tt>MaxwellOutput</tt> is written",
      "to the directory <tt>MaxwellOutputIterDir</tt>",
      "when the iteration number is a multiple of the <tt>MaxwellOutputInterval</tt> variable.",
      "Subdirectories are named Y.X, where Y is <tt>td</tt>, <tt>scf</tt>, or <tt>unocc</tt>, and",
      "X is the iteration number. To use the working directory, specify <tt>\".\"</tt>",
      "(Output of restart files is instead controlled by <tt>MaxwellRestartWriteInterval</tt>.)",
      "Must be >= 0. If it is 0, then no output is written.",
      "This variable can also be defined inside the <tt>MaxwellOutput</tt> block.",
      "See <tt>MaxwellOutput</tt>."
    ],
    "Manuals": [],
    "Name": "MaxwellOutputInterval",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "output/output_mxll.F90",
    "Testfiles": [
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_restarted.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/01-free-propagation.02-2_pulses_td.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "maxwelloutputiterdir": {
    "CallLine": "call parse_variable(namespace, 'MaxwellOutputIterDir', \"output_iter\", outp%iter_dir)",
    "Default": [
      "\"output_iter\""
    ],
    "Description": [
      "The name of the directory where <tt>Octopus</tt> stores information",
      "such as the density, forces, etc. requested by variable <tt>MaxwellOutput</tt>",
      "in the format specified by <tt>OutputHow</tt>.",
      "This information is written while iterating <tt>CalculationMode = maxwell</tt>",
      "according to <tt>OutputInterval</tt>, and has nothing to do with the restart information."
    ],
    "LineNumber": 160,
    "Manuals": [],
    "Name": "MaxwellOutputIterDir",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "output/output_mxll.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "maxwellplanewavesinbox": {
    "CallLine": "call parse_variable(namespace, 'MaxwellPlaneWavesInBox', .false., tr%plane_waves_in_box)",
    "Default": [
      "no"
    ],
    "Description": [
      "Analytic evaluation of the incoming waves inside the box,",
      "not doing any numerical propagation of Maxwells equations."
    ],
    "LineNumber": 262,
    "Manuals": [],
    "Name": "MaxwellPlaneWavesInBox",
    "Options": [],
    "Section": "Maxwell",
    "Sourcefile": "maxwell/propagator_mxll.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "maxwellrestartwriteinterval": {
    "CallLine": "call parse_variable(namespace, 'MaxwellRestartWriteInterval', 50, outp%restart_write_interval)",
    "Default": [
      "50"
    ],
    "Description": [
      "Restart data is written when the iteration number is a multiple of the",
      "<tt>MaxwellRestartWriteInterval</tt> variable. (Other output is controlled by <tt>MaxwellOutputInterval</tt>.)"
    ],
    "LineNumber": 174,
    "Manuals": [],
    "Name": "MaxwellRestartWriteInterval",
    "Options": [],
    "Section": "Execution::IO",
    "Sourcefile": "output/output_mxll.F90",
    "Testfiles": [
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_restarted.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "maxwelltdetrsapprox": {
    "CallLine": "call parse_variable(namespace, 'MaxwellTDETRSApprox', MXWLL_ETRS_FULL, tr%tr_etrs_approx)",
    "Default": [
      "no"
    ],
    "Description": [
      "Whether to perform  approximations to the ETRS propagator."
    ],
    "LineNumber": 252,
    "Manuals": [],
    "Name": "MaxwellTDETRSApprox",
    "Options": [
      {
        "Description": [
          "No approximations."
        ],
        "Name": "no",
        "Value": "0"
      },
      {
        "Description": [
          "Use constant current density."
        ],
        "Name": "const_steps",
        "Value": "1"
      }
    ],
    "Section": "Maxwell::TD Propagation",
    "Sourcefile": "maxwell/propagator_mxll.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "maxwelltdoutput": {
    "CallLine": "call parse_variable(namespace, 'MaxwellTDOutput', default, flags)",
    "Default": [
      "maxwell_energy"
    ],
    "Description": [
      "Defines what should be output during the time-dependent",
      "Maxwell simulation. Many of the options can increase the computational",
      "cost of the simulation, so only use the ones that you need. In",
      "most cases the default value is enough, as it is adapted to the",
      "details of the TD run.",
      "WARNING: the calculation of the longitudinal or transverse E and B fields",
      "can be very expensive, so please consider using the MaxwellOutput block",
      "to calculate and output these quantities at certain timesteps."
    ],
    "LineNumber": 3480,
    "Manuals": [],
    "Name": "MaxwellTDOutput",
    "Options": [
      {
        "Description": [
          "Output of the total (longitudinal plus transverse) electric field at",
          "the points specified in the MaxwellFieldsCoordinate block"
        ],
        "Name": "maxwell_total_e_field",
        "Value": "1"
      },
      {
        "Description": [
          "Output of the total (longitudinal plus transverse) magnetic field at",
          "the points specified in the MaxwellFieldsCoordinate block"
        ],
        "Name": "maxwell_total_b_field",
        "Value": "8"
      },
      {
        "Description": [
          "Output of the longitudinal electric field at the points",
          "specified in the MaxwellFieldsCoordinate block  (can slow down the run)"
        ],
        "Name": "maxwell_longitudinal_e_field",
        "Value": "64"
      },
      {
        "Description": [
          "Output of the longitudinal magnetic field at the points",
          "specified in the MaxwellFieldsCoordinate block  (can slow down the run)"
        ],
        "Name": "maxwell_longitudinal_b_field",
        "Value": "512"
      },
      {
        "Description": [
          "Output of the transverse electric field at the points",
          "specified in the MaxwellFieldsCoordinate block  (can slow down the run)"
        ],
        "Name": "maxwell_transverse_e_field",
        "Value": "4096"
      },
      {
        "Description": [
          "Output of the transverse magnetic field at the points",
          "specified in the MaxwellFieldsCoordinate block  (can slow down the run)"
        ],
        "Name": "maxwell_transverse_b_field",
        "Value": "32768"
      },
      {
        "Description": [
          "Output of the electromagnetic field energy into the folder <tt>td.general/maxwell</tt>.",
          "WARNING: the transverse and longitudinal energies will be correct only if you request",
          "the longitudinal and transverse E or B fields as output. Otherwise they will be set to",
          "zero."
        ],
        "Name": "maxwell_energy",
        "Value": "262144"
      },
      {
        "Description": [
          "Output of the E field sliced along the plane x=0 for each field component"
        ],
        "Name": "e_field_surface_x",
        "Value": "524288"
      },
      {
        "Description": [
          "Output of the E field sliced along the plane y=0 for each field component"
        ],
        "Name": "e_field_surface_y",
        "Value": "1048576"
      },
      {
        "Description": [
          "Output of the E field sliced along the plane z=0 for each field component"
        ],
        "Name": "e_field_surface_z",
        "Value": "2097152"
      },
      {
        "Description": [
          "Output of the B field sliced along the plane x=0 for each field component"
        ],
        "Name": "b_field_surface_x",
        "Value": "4194304"
      },
      {
        "Description": [
          "Output of the B field sliced along the plane y=0 for each field component"
        ],
        "Name": "b_field_surface_y",
        "Value": "8388608"
      },
      {
        "Description": [
          "Output of the B field sliced along the plane z=0 for each field component"
        ],
        "Name": "b_field_surface_z",
        "Value": "16777216"
      }
    ],
    "Section": "Maxwell::Output",
    "Sourcefile": "td/td_write.F90",
    "Testfiles": [
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_restarted.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/01-free-propagation.02-2_pulses_td.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "flag"
  },
  "maxwelltestquadrupole": {
    "CallLine": "call parse_variable(namespace, 'MaxwellTestQuadrupole', .false., this%test_equad)",
    "Default": [
      "no"
    ],
    "Description": [
      "Override Maxwell field with linear E field for testing."
    ],
    "LineNumber": 265,
    "Manuals": [],
    "Name": "MaxwellTestQuadrupole",
    "Options": [],
    "Section": "Maxwell",
    "Sourcefile": "hamiltonian/mxll_elec_coupling.F90",
    "Testfiles": [
      "maxwell/14-quadrupole-pot.01-hydrogen-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "mediumcurrentcoordinates": {
    "CallLine": "if (parse_block(namespace, 'MediumCurrentCoordinates', blk) == 0) then",
    "Default": null,
    "Description": [
      "This allows to output phasor current vectors at particular points in space.",
      " ",
      "<tt>%MediumCurrentCoordinates",
      "<br>&nbsp;&nbsp;    -1.0 | 2.0 |  4.0",
      "<br>&nbsp;&nbsp;     0.0 | 1.0 | -2.0",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 225,
    "Manuals": [],
    "Name": "MediumCurrentCoordinates",
    "Options": [],
    "Section": "Maxwell::Output",
    "Sourcefile": "maxwell/dispersive_medium.F90",
    "Testfiles": [
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "mediumdispersiontype": {
    "CallLine": "call parse_variable(namespace, 'MediumDispersionType', DRUDE_MEDIUM, this%medium_type)",
    "Default": [
      "drude_medium"
    ],
    "Description": [
      "Dispersion model used for the medium (only Drude model available for the moment)."
    ],
    "LineNumber": 179,
    "Manuals": [],
    "Name": "MediumDispersionType",
    "Options": [
      {
        "Description": [
          "Drude type of dispersion."
        ],
        "Name": "drude_medium",
        "Value": "0"
      }
    ],
    "Section": "Maxwell::Medium",
    "Sourcefile": "maxwell/dispersive_medium.F90",
    "Testfiles": [
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "mediumelectricsigma": {
    "CallLine": "call parse_variable(namespace, 'MediumElectricSigma', M_ZERO, sigma_e_factor, unit_one)",
    "Default": [
      "0."
    ],
    "Description": [
      "Electric conductivity of the linear medium."
    ],
    "LineNumber": 551,
    "Manuals": [],
    "Name": "MediumElectricSigma",
    "Options": [],
    "Section": "Maxwell::Boundaries",
    "Sourcefile": "maxwell/maxwell_boundary_op.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "mediumepsilonfactor": {
    "Default": [
      "1.0."
    ],
    "Description": [
      "Linear medium electric susceptibility."
    ],
    "Manuals": [],
    "Name": "MediumEpsilonFactor",
    "Options": [],
    "Section": "Maxwell::Boundaries",
    "Sourcefile": "maxwell/maxwell_boundary_op.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "mediummagneticsigma": {
    "CallLine": "call parse_variable(namespace, 'MediumMagneticSigma', M_ZERO, sigma_m_factor, unit_one)",
    "Default": [
      "0."
    ],
    "Description": [
      "Magnetic conductivity of the linear medium."
    ],
    "LineNumber": 559,
    "Manuals": [],
    "Name": "MediumMagneticSigma",
    "Options": [],
    "Section": "Maxwell::Boundaries",
    "Sourcefile": "maxwell/maxwell_boundary_op.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "mediummufactor": {
    "CallLine": "call parse_variable(namespace, 'MediumMuFactor', M_ONE, mu_factor, unit_one)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "Linear medium magnetic susceptibility."
    ],
    "LineNumber": 541,
    "Manuals": [],
    "Name": "MediumMuFactor",
    "Options": [],
    "Section": "Maxwell::Boundaries",
    "Sourcefile": "maxwell/maxwell_boundary_op.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "mediumpoledamping": {
    "CallLine": "call parse_variable(namespace, 'MediumPoleDamping', M_ZERO, this%gamma_p, unit_one/units_inp%time)",
    "Default": [
      "0"
    ],
    "Description": [
      "Damping factor (inverse relaxation time) of the medium."
    ],
    "LineNumber": 201,
    "Manuals": [],
    "Name": "MediumPoleDamping",
    "Options": [],
    "Section": "Maxwell::Medium",
    "Sourcefile": "maxwell/dispersive_medium.F90",
    "Testfiles": [
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "mediumpoleenergy": {
    "CallLine": "call parse_variable(namespace, 'MediumPoleEnergy', M_ZERO, this%omega_p, unit_one/units_inp%time)",
    "Default": [
      "0"
    ],
    "Description": [
      "Energy of the pole."
    ],
    "LineNumber": 192,
    "Manuals": [],
    "Name": "MediumPoleEnergy",
    "Options": [],
    "Section": "Maxwell::Medium",
    "Sourcefile": "maxwell/dispersive_medium.F90",
    "Testfiles": [
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "mediumpolestrength": {
    "CallLine": "call parse_variable(namespace, 'MediumPoleStrength', M_ONE, this%strength_p, unit_one)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "Strength of the pole (unitless)."
    ],
    "LineNumber": 210,
    "Manuals": [],
    "Name": "MediumPoleStrength",
    "Options": [],
    "Section": "Maxwell::Medium",
    "Sourcefile": "maxwell/dispersive_medium.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "mediumwidth": {
    "CallLine": "call parse_variable(namespace, 'MediumWidth', M_ZERO, width, units_inp%length)",
    "Default": [
      "0.0",
      "a.u."
    ],
    "Description": [
      "Width of the boundary region with medium"
    ],
    "LineNumber": 520,
    "Manuals": [],
    "Name": "MediumWidth",
    "Options": [],
    "Section": "Maxwell::Boundaries",
    "Sourcefile": "maxwell/maxwell_boundary_op.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "memorylimit": {
    "CallLine": "call parse_variable(namespace, 'MemoryLimit', -1, ii)",
    "Default": [
      "-1"
    ],
    "Description": [
      "If positive, <tt>Octopus</tt> will stop if more memory than <tt>MemoryLimit</tt>",
      "is requested (in kb). Note that this variable only works when",
      "<tt>ProfilingMode = prof_memory(_full)</tt>."
    ],
    "LineNumber": 288,
    "Manuals": [],
    "Name": "MemoryLimit",
    "Options": [],
    "Section": "Execution::Optimization",
    "Sourcefile": "basic/profiling.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "meshblockdirection": {
    "CallLine": "call parse_variable(namespace, 'MeshBlockDirection', 1, direction)",
    "Default": null,
    "Description": [
      "Determines the direction in which the dimensions are chosen to compute",
      "the blocked index for sorting the mesh points (see MeshBlockSize).",
      "The default is increase_with_dimensions, corresponding to xyz ordering",
      "in 3D."
    ],
    "LineNumber": 876,
    "Manuals": [],
    "Name": "MeshBlockDirection",
    "Options": [
      {
        "Description": [
          "The fastest changing index is in the first dimension, i.e., in 3D this",
          "corresponds to ordering in xyz directions."
        ],
        "Name": "increase_with_dimension",
        "Value": "1"
      },
      {
        "Description": [
          "The fastest changing index is in the last dimension, i.e., in 3D this",
          "corresponds to ordering in zyx directions."
        ],
        "Name": "decrease_with_dimension",
        "Value": "2"
      }
    ],
    "Section": "Execution::Optimization",
    "Sourcefile": "grid/mesh_init.F90",
    "Testfiles": [
      "finite_systems_3d/20-eigensolver.01-cg.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "meshblocksize": {
    "CallLine": "if (parse_block(namespace, 'MeshBlockSize', blk) == 0) then",
    "Default": null,
    "Description": [
      "To improve memory-access locality when calculating derivatives,",
      "<tt>Octopus</tt> arranges mesh points in blocks. This variable",
      "controls the size of this blocks in the different",
      "directions. The default is selected according to the value of",
      "the <tt>StatesBlockSize</tt> variable. (This variable only affects the",
      "performance of <tt>Octopus</tt> and not the results.)"
    ],
    "LineNumber": 912,
    "Manuals": [],
    "Name": "MeshBlockSize",
    "Options": [],
    "Section": "Execution::Optimization",
    "Sourcefile": "grid/mesh_init.F90",
    "Testfiles": [
      "lda_u/09-basis_from_states.01-lda.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "meshindextype": {
    "CallLine": "call parse_variable(namespace, 'MeshIndexType', IDX_CUBIC, mesh%idx%type)",
    "Default": [
      "idx_cubic"
    ],
    "Description": [
      "Determine index type. Must be the same for restarting a calculation."
    ],
    "LineNumber": 245,
    "Manuals": [],
    "Name": "MeshIndexType",
    "Options": [
      {
        "Description": [
          "Cubic indices are used to map the spatial information to the grid points."
        ],
        "Name": "idx_cubic",
        "Value": "1"
      },
      {
        "Description": [
          "A Hilbert space-filling curve is used to map the spatial information to",
          "the grid points."
        ],
        "Name": "idx_hilbert",
        "Value": "2"
      }
    ],
    "Section": "Mesh",
    "Sourcefile": "grid/mesh_init.F90",
    "Testfiles": [
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/17-aluminium.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "meshlocalblockdirection": {
    "CallLine": "call parse_variable(namespace, 'MeshLocalBlockDirection', 1, direction)",
    "Default": null,
    "Description": [
      "Determines the direction in which the dimensions are chosen to compute",
      "the blocked index for sorting the mesh points (see MeshLocalBlockSize).",
      "The default is increase_with_dimensions, corresponding to xyz ordering",
      "in 3D."
    ],
    "LineNumber": 495,
    "Manuals": [],
    "Name": "MeshLocalBlockDirection",
    "Options": [
      {
        "Description": [
          "The fastest changing index is in the first dimension, i.e., in 3D this",
          "corresponds to ordering in xyz directions."
        ],
        "Name": "increase_with_dimension",
        "Value": "1"
      },
      {
        "Description": [
          "The fastest changing index is in the last dimension, i.e., in 3D this",
          "corresponds to ordering in zyx directions."
        ],
        "Name": "decrease_with_dimension",
        "Value": "2"
      }
    ],
    "Section": "Execution::Optimization",
    "Sourcefile": "grid/par_vec.F90",
    "Testfiles": [
      "finite_systems_3d/20-eigensolver.01-cg.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "meshlocalblocksize": {
    "CallLine": "if (parse_block(namespace, 'MeshLocalBlockSize', blk) == 0) then",
    "Default": null,
    "Description": [
      "To improve memory-access locality when calculating derivatives,",
      "<tt>Octopus</tt> arranges mesh points in blocks. This variable",
      "controls the size of this blocks in the different",
      "directions. The default is selected according to the value of",
      "the <tt>StatesBlockSize</tt> variable. (This variable only affects the",
      "performance of <tt>Octopus</tt> and not the results.)"
    ],
    "LineNumber": 529,
    "Manuals": [],
    "Name": "MeshLocalBlockSize",
    "Options": [],
    "Section": "Execution::Optimization",
    "Sourcefile": "grid/par_vec.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "meshlocalorder": {
    "CallLine": "call parse_variable(namespace, 'MeshLocalOrder', ORDER_BLOCKS, order)",
    "Default": [
      "blocks"
    ],
    "Description": [
      "This variable controls how the grid points are mapped to a",
      "linear array. This influences the performance of the code."
    ],
    "LineNumber": 474,
    "Manuals": [],
    "Name": "MeshLocalOrder",
    "Options": [
      {
        "Description": [
          "The grid is mapped using small parallelepipedic grids. The size",
          "of the blocks is controlled by <tt>MeshBlockSize</tt>."
        ],
        "Name": "order_blocks",
        "Value": "1"
      },
      {
        "Description": [
          "The grid is mapped using a full cube, i.e. without blocking."
        ],
        "Name": "order_cube",
        "Value": "3"
      },
      {
        "Description": [
          "Use the ordering from the global mesh"
        ],
        "Name": "order_global",
        "Value": "4"
      }
    ],
    "Section": "Execution::Optimization",
    "Sourcefile": "grid/par_vec.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "meshorder": {
    "CallLine": "call parse_variable(namespace, 'MeshOrder', default, order)",
    "Default": null,
    "Description": [
      "This variable controls how the grid points are mapped to a",
      "linear array for global arrays. For runs that are parallel",
      "in domains, the local mesh order may be different (see",
      "<tt>MeshLocalOrder</tt>).",
      "The default is blocks when serial in domains and cube when",
      "parallel in domains with the local mesh order set to blocks."
    ],
    "LineNumber": 855,
    "Manuals": [],
    "Name": "MeshOrder",
    "Options": [
      {
        "Description": [
          "The grid is mapped using small parallelepipedic grids. The size",
          "of the blocks is controlled by <tt>MeshBlockSize</tt>."
        ],
        "Name": "order_blocks",
        "Value": "1"
      },
      {
        "Description": [
          "The original order of the indices is used to map the grid."
        ],
        "Name": "order_original",
        "Value": "2"
      },
      {
        "Description": [
          "The grid is mapped using a full cube, i.e. without blocking."
        ],
        "Name": "order_cube",
        "Value": "3"
      }
    ],
    "Section": "Execution::Optimization",
    "Sourcefile": "grid/mesh_init.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "meshpartition": {
    "CallLine": "call parse_variable(namespace, 'MeshPartition', default_method, method)",
    "Default": null,
    "Description": [
      "When using METIS to perform the mesh partitioning, decides which",
      "algorithm is used. By default, <tt>graph</tt> partitioning",
      "is used for 8 or more partitions, and <tt>rcb</tt> for fewer."
    ],
    "LineNumber": 359,
    "Manuals": [],
    "Name": "MeshPartition",
    "Options": [
      {
        "Description": [
          "Recursive coordinate bisection partitioning."
        ],
        "Name": "rcb",
        "Value": "1"
      },
      {
        "Description": [
          "Graph partitioning (called 'k-way' by METIS)."
        ],
        "Name": "graph",
        "Value": "2"
      }
    ],
    "Section": "Execution::Parallelization",
    "Sourcefile": "grid/mesh_partition.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "meshpartitionpackage": {
    "CallLine": "call parse_variable(namespace, 'MeshPartitionPackage', default, library)",
    "Default": null,
    "Description": [
      "Decides which library to use to perform the mesh partition.",
      "By default ParMETIS is used when available, otherwise METIS is used."
    ],
    "LineNumber": 156,
    "Manuals": [],
    "Name": "MeshPartitionPackage",
    "Options": [
      {
        "Description": [
          "METIS library."
        ],
        "Name": "metis",
        "Value": "1"
      },
      {
        "Description": [
          "(Experimental) Use ParMETIS library to perform the mesh partition.",
          "Only available if the code was compiled with ParMETIS support."
        ],
        "Name": "parmetis",
        "Value": "2"
      },
      {
        "Description": [
          "Use the ordering along the Hilbert curve for partitioning."
        ],
        "Name": "part_hilbert",
        "Value": "3"
      }
    ],
    "Section": "Execution::Parallelization",
    "Sourcefile": "grid/mesh_partition.F90",
    "Testfiles": [
      "functionals/07-sic.01-gs.inp",
      "functionals/07-sic.02-scdm.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "meshpartitionstencil": {
    "CallLine": "call parse_variable(namespace, 'MeshPartitionStencil', STAR, stencil_to_use)",
    "Default": [
      "stencil_star"
    ],
    "Description": [
      "To partition the mesh, it is necessary to calculate the connection",
      "graph connecting the points. This variable selects which stencil",
      "is used to do this."
    ],
    "LineNumber": 186,
    "Manuals": [],
    "Name": "MeshPartitionStencil",
    "Options": [
      {
        "Description": [
          "An order-one star stencil."
        ],
        "Name": "stencil_star",
        "Value": "1"
      },
      {
        "Description": [
          "The stencil used for the Laplacian is used to calculate the",
          "partition. This in principle should give a better partition, but",
          "it is slower and requires more memory."
        ],
        "Name": "laplacian",
        "Value": "2"
      }
    ],
    "Section": "Execution::Parallelization",
    "Sourcefile": "grid/mesh_partition.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "meshpartitionvirtualsize": {
    "CallLine": "call parse_variable(namespace, 'MeshPartitionVirtualSize', mesh%mpi_grp%size, vsize)",
    "Default": [
      "mesh",
      "mpi_grp",
      "size"
    ],
    "Description": [
      "Gives the possibility to change the partition nodes.",
      "Afterward, it crashes."
    ],
    "LineNumber": 530,
    "Manuals": [],
    "Name": "MeshPartitionVirtualSize",
    "Options": [],
    "Section": "Execution::Parallelization",
    "Sourcefile": "grid/mesh_init.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "meshusetopology": {
    "CallLine": "call parse_variable(namespace, 'MeshUseTopology', .false., use_topo)",
    "Default": [
      "false"
    ],
    "Description": [
      "(experimental) If enabled, <tt>Octopus</tt> will use an MPI virtual",
      "topology to map the processors. This can improve performance",
      "for certain interconnection systems."
    ],
    "LineNumber": 574,
    "Manuals": [],
    "Name": "MeshUseTopology",
    "Options": [],
    "Section": "Execution::Parallelization",
    "Sourcefile": "grid/mesh_init.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "millerindicesbasis": {
    "CallLine": "if (parse_block(this%namespace, 'MillerIndicesBasis', blk2) == 0) then",
    "Default": null,
    "Description": [
      "When this block is given, the polarisation of the TDExternalFields is",
      "understood to be defined in terms of Miller indices.",
      "This block define the corresponding basis, by defining the reduced coordinates",
      "of the X, Y, and Z high symmetry points, such that the code can do the corresponding",
      "transformation.",
      " ",
      "For example, in an FCC crystal with the conventional primitive cell,",
      "the following input allows to define the polarization in terms of Miller indices",
      " ",
      "<tt>%MillerIndicesBasis",
      "<br> 0.0 | 0.5 | 0.5",
      "<br> 0.5 | 0.0 | 0.5",
      "<br> 0.5 | 0.5 | 0.0",
      "<br>%</tt>",
      " ",
      "Indeed, in this case, the reciprocal lattice vectors are (-1, 1, 1), (1, -1, 1),",
      "and (1, 1, -1) in units of 2*pi/a.",
      "This directly gives that the [100] direction correspond to the x direction, [111]",
      "gives the vector (1,1,1), etc.",
      " "
    ],
    "LineNumber": 347,
    "Manuals": [],
    "Name": "MillerIndicesBasis",
    "Options": [],
    "Section": "Time-Dependent",
    "Sourcefile": "hamiltonian/lasers.F90",
    "Testfiles": [
      "periodic_systems/14-silicon_shifts.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "mixfield": {
    "CallLine": "call parse_variable(namespace, 'MixField', mixdefault, scf%mix_field)",
    "Default": null,
    "Description": [
      "Selects what should be mixed during the SCF cycle.  Note that",
      "currently the exact-exchange part of hybrid functionals is not",
      "mixed at all, which would require wavefunction-mixing, not yet",
      "implemented. This may lead to instabilities in the SCF cycle,",
      "so starting from a converged LDA/GGA calculation is recommended",
      "for hybrid functionals. The default depends on the <tt>TheoryLevel</tt>",
      "and the exchange-correlation potential used."
    ],
    "LineNumber": 261,
    "Manuals": [],
    "Name": "MixField",
    "Options": [
      {
        "Description": [
          "No mixing is done. This is the default for independent",
          "particles."
        ],
        "Name": "none",
        "Value": "0"
      },
      {
        "Description": [
          "The Kohn-Sham potential is mixed. This is the default for other cases."
        ],
        "Name": "potential",
        "Value": "1"
      },
      {
        "Description": [
          "Mix the density."
        ],
        "Name": "density",
        "Value": "2"
      },
      {
        "Description": [
          "(Experimental) Mix the states. In this case, the mixing is always linear."
        ],
        "Name": "states",
        "Value": "3"
      }
    ],
    "Section": "SCF::Mixing",
    "Sourcefile": "scf/scf.F90",
    "Testfiles": [
      "finite_systems_2d/01-quadratic_box.03-hartree+xc.inp",
      "finite_systems_2d/01-quadratic_box.04-spin_polarized.inp",
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/09-magnetic_2d.01-no_field.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "finite_systems_2d/01-quadratic_box.02-hartree.inp",
      "multisystem/12-electronic_subsystem_propagators.01-gs.inp",
      "multisystem/16-bomd.01-gs.inp",
      "multisystem/16-bomd.02-td.inp",
      "multisystem/15-electronic_system_restart.01-gs.inp",
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/03-vdw_sternheimer.02-vdw.inp",
      "linear_response/06-vib_modes_fd.01-vib_modes_fd.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "linear_response/02-h2o_pol_lr.01_h2o_gs.inp",
      "linear_response/01-casida.09-spectrum.inp",
      "linear_response/06-vib_modes_fd.01-ground_state.inp",
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "linear_response/01-casida.01-gs.inp",
      "linear_response/03-vdw_sternheimer.01-ground_state.inp",
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/34-walltime.02-restart_gs.inp",
      "finite_systems_3d/05-output.02-gs.inp",
      "finite_systems_3d/03-magnetic.01-gs-unpolarized.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/33-cg.02-additional_terms.inp",
      "finite_systems_3d/20-eigensolver.01-cg.inp",
      "finite_systems_3d/10-fullerene.01-gs.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/24-o2-spin.01-gs.inp",
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "finite_systems_3d/12-forces.03-N2_gs.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/06-restart.05-restart_gs.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/06-restart.01-gs_mixrho.inp",
      "finite_systems_3d/33-cg.03-cg_direction.inp",
      "finite_systems_3d/23-go-na2.02-simplex.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/23-go-na2.04-fire_restart.inp",
      "finite_systems_3d/20-eigensolver.03-plan.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/23-go-na2.03-fire.inp",
      "finite_systems_3d/23-go-na2.01-steep.inp",
      "finite_systems_3d/09-spinors.03-rmmdiis_extra_states.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/23-go-na2.05-constrains.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "finite_systems_3d/20-eigensolver.05-rmmdiis.inp",
      "finite_systems_3d/06-restart.04-restart_gs_mixvhxc.inp",
      "finite_systems_3d/04-jellium.01-ground_state.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/06-restart.02-restart_gs_mixrho.inp",
      "finite_systems_3d/12-forces.02-N2_gs.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.03-unocc.inp",
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "finite_systems_3d/33-cg.01-orthogonalize_all.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "finite_systems_3d/06-restart.03-gs_mixvhxc.inp",
      "finite_systems_3d/12-forces.01-N2_gs.inp",
      "real_time/17-absorption-spin_symmetry.01-gs.inp",
      "real_time/10-bomd.02-td.inp",
      "real_time/02-propagators.01-gs.inp",
      "real_time/20-pcm-local-field-absorption.01-gs.inp",
      "real_time/05-time_propagation.01-gs.inp",
      "real_time/16-sparskit.01-gs.inp",
      "real_time/10-bomd.03-td_restart.inp",
      "real_time/12-absorption.01-gs.inp",
      "real_time/06-caetrs.01-gs.inp",
      "real_time/09-angular_momentum.01-gs.inp",
      "real_time/10-bomd.01-gs.inp",
      "real_time/15-crank_nicolson.01-gs.inp",
      "real_time/03-td_self_consistent.01-gs.inp",
      "real_time/01-propagators.01-gs.inp",
      "real_time/13-absorption-spin.01-gs.inp",
      "real_time/09-angular_momentum.04-rotatory_strength.inp",
      "pseudopotentials/01-sg15-h.01-gs.inp",
      "pseudopotentials/08-carbon_fhi.01-gs.inp",
      "pseudopotentials/03-nlcc.01-Fatom.inp",
      "pseudopotentials/09-carbon_cpi.01-gs.inp",
      "functionals/09-vdw_ts_sc.01-gs.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/08-vdw_ts.01-gs.inp",
      "functionals/06-rdmft.03-gs_grid.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/01-xc_1d.01-wfs-lda.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/02-xc_2d.lda_prm.inp",
      "functionals/06-rdmft.02-gs_basis.inp",
      "periodic_systems/04-silicon.02-kdotp.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/06-h2o_pol_lr.02_kdotp.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/06-h2o_pol_lr.01_gs.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/05-lithium.01-gs.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/09-etsf_io.01-gs.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp",
      "periodic_systems/03-sodium_chain.03-ground_state_disp.inp",
      "periodic_systems/04-silicon.03-emresp.inp",
      "periodic_systems/10-berkeleygw.02-unocc.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/06-laser.03-velocity_gauge.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.01-Na2.inp",
      "lda_u/05-forces.02-Na2_go.inp",
      "lda_u/06-laser.01-gs.inp",
      "lda_u/10-intersite.01-Na2.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "mixing": {
    "CallLine": "call parse_variable(namespace, trim(prefix)+'Mixing', 0.3_real64, smix%coeff)",
    "Default": [
      "0.3"
    ],
    "Description": [
      "The linear, Broyden and DIIS scheme depend on a \"mixing parameter\", set by this variable.",
      "Must be 0 < <tt>Mixing</tt> <= 1."
    ],
    "LineNumber": 234,
    "Manuals": [],
    "Name": "Mixing",
    "Options": [],
    "Section": "SCF::Mixing",
    "Sourcefile": "scf/mix.F90",
    "Testfiles": [
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/01-xc_1d.02-wfs-hf.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "functionals/07-sic.02-scdm.inp",
      "optimal_control/10-current.01-ground_state.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/09-density+current.01-ground_state.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "mixingpreconditioner": {
    "CallLine": "call parse_variable(namespace, trim(prefix)+'MixingPreconditioner', .false., smix%precondition)",
    "Default": [
      "false"
    ],
    "Description": [
      "(Experimental) If set to yes, Octopus will use a preconditioner",
      "for the mixing operator.",
      "This preconditioner is disabled for systems with dimension other than 3."
    ],
    "LineNumber": 222,
    "Manuals": [],
    "Name": "MixingPreconditioner",
    "Options": [],
    "Section": "SCF::Mixing",
    "Sourcefile": "scf/mix.F90",
    "Testfiles": [
      "lda_u/07-noncollinear.02-acbn0.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "mixingresidual": {
    "CallLine": "call parse_variable(namespace, trim(prefix)+'MixingResidual', 0.05_real64, smix%residual_coeff)",
    "Default": [
      "0.05"
    ],
    "Description": [
      "In the DIIS mixing it is benefitial to include a bit of",
      "residual into the mixing. This parameter controls this amount."
    ],
    "LineNumber": 247,
    "Manuals": [],
    "Name": "MixingResidual",
    "Options": [],
    "Section": "SCF::Mixing",
    "Sourcefile": "scf/mix.F90",
    "Testfiles": [
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "mixingrestart": {
    "CallLine": "call parse_variable(namespace, trim(prefix)//'MixingRestart', 20, smix%ns_restart)",
    "Default": [
      "20"
    ],
    "Description": [
      "In the Broyden and Bowler_Gillan schemes, the mixing is restarted after",
      "the number of iterations given by this variable.",
      "Set this to zero to disable restarting the mixing."
    ],
    "LineNumber": 278,
    "Manuals": [],
    "Name": "MixingRestart",
    "Options": [],
    "Section": "SCF::Mixing",
    "Sourcefile": "scf/mix.F90",
    "Testfiles": [
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "periodic_systems/22-berry.02-cubic_Si.inp",
      "periodic_systems/22-berry.01-cubic_Si_gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "mixingscheme": {
    "CallLine": "call parse_variable(namespace, trim(prefix)//'MixingScheme', def, smix%scheme)",
    "Default": [
      "broyden"
    ],
    "Description": [
      "The scheme used to produce, at each iteration in the self-consistent cycle",
      "that attempts to solve the Kohn-Sham equations, the input density from the value",
      "of the input and output densities of previous iterations."
    ],
    "LineNumber": 205,
    "Manuals": [],
    "Name": "MixingScheme",
    "Options": [
      {
        "Description": [
          "Simple linear mixing."
        ],
        "Name": "linear",
        "Value": "0"
      },
      {
        "Description": [
          "Broyden scheme [C. G Broyden, <i>Math. Comp.</i> <b>19</b>, 577 (1965);",
          "D. D. Johnson, <i>Phys. Rev. B</i> <b>38</b>, 12807 (1988)].",
          "The scheme is slightly adapted, see the comments in the code.",
          "For complex functions (e.g. Sternheimer with <tt>EMEta</tt> > 0), we use the generalization",
          "with a complex dot product."
        ],
        "Name": "broyden",
        "Value": "2"
      },
      {
        "Description": [
          "Direct inversion in the iterative subspace (diis)",
          "scheme [P. Pulay, <i>Chem. Phys. Lett.</i>, <b>73</b>, 393",
          "(1980)] as described in [G. Kresse, and J. Hurthmueller,",
          "<i>Phys. Rev. B</i> <b>54</b>, 11169 (1996)]."
        ],
        "Name": "diis",
        "Value": "9"
      },
      {
        "Description": [
          "The Guaranteed-reduction modification of the Pulay scheme by",
          "Bowler and Gillan [D. R. Bowler and M. J. Gillan,",
          "<i>Chem. Phys.  Lett.</i> <b>325</b>, 473 (2000)]."
        ],
        "Name": "bowler_gillan",
        "Value": "1"
      }
    ],
    "Section": "SCF::Mixing",
    "Sourcefile": "scf/mix.F90",
    "Testfiles": [
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "functionals/01-xc_1d.02-wfs-hf.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/05-ks_inversion.01-target_density.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "optimal_control/10-current.01-ground_state.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/09-density+current.01-ground_state.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "mixinterval": {
    "CallLine": "call parse_variable(namespace, trim(prefix)//'MixInterval', 1, smix%interval)",
    "Default": [
      "1"
    ],
    "Description": [
      "When this variable is set to a value different than 1 (the",
      "default) a combined mixing scheme will be used, with MixInterval",
      "- 1 steps of linear mixing followed by 1 step of the selected",
      "mixing. For the moment this variable only works with DIIS mixing."
    ],
    "LineNumber": 298,
    "Manuals": [],
    "Name": "MixInterval",
    "Options": [],
    "Section": "SCF::Mixing",
    "Sourcefile": "scf/mix.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "mixnumbersteps": {
    "CallLine": "call parse_variable(namespace, trim(prefix)//'MixNumberSteps', 4, smix%ns)",
    "Default": [
      "4"
    ],
    "Description": [
      "In the Broyden and Bowler_Gillan schemes, the new input density or potential is constructed",
      "from the values of the densities/potentials of a given number of previous iterations.",
      "This number is set by this variable. Must be greater than 1."
    ],
    "LineNumber": 262,
    "Manuals": [],
    "Name": "MixNumberSteps",
    "Options": [],
    "Section": "SCF::Mixing",
    "Sourcefile": "scf/mix.F90",
    "Testfiles": [
      "periodic_systems/22-berry.02-cubic_Si.inp",
      "periodic_systems/22-berry.01-cubic_Si_gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "momentumtransfer": {
    "CallLine": "if (parse_block(namespace, 'MomentumTransfer', blk) == 0) then",
    "Default": null,
    "Description": [
      "Momentum-transfer vector <math>\\vec{q}</math> to be used when calculating matrix elements",
      "<math>\\left< f \\left| e^{i \\vec{q} \\cdot \\vec{r}} \\right| i \\right></math>.",
      "This enables the calculation of the dynamical structure factor,",
      "which is closely related to generalized oscillator strengths.",
      "If the vector is not given, but TPA output is requested (<tt>Output = TPA</tt>),",
      "only the oscillator strengths are written in the output file.",
      "For example, to use <math>\\vec{q}</math> = (0.1, 0.2, 0.3), set",
      " ",
      "<tt>%MomentumTransfer",
      "<br>&nbsp;&nbsp; 0.1 | 0.2 | 0.3",
      "<br>%</tt>"
    ],
    "LineNumber": 508,
    "Manuals": [],
    "Name": "MomentumTransfer",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "states/states_elec_io.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "moveions": {
    "CallLine": "call parse_variable(namespace, 'MoveIons', have_velocities, this%move_ions)",
    "Default": null,
    "Description": [
      "This variable controls whether atoms are moved during a time",
      "propagation run. The default is yes when the ion velocity is",
      "set explicitly or implicitly, otherwise is no."
    ],
    "LineNumber": 488,
    "Manuals": [],
    "Name": "MoveIons",
    "Options": [],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "ions/ion_dynamics.F90",
    "Testfiles": [
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/15-electronic_system_restart.04-td_restart_part2.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/01-propagators.09-magnus.inp",
      "real_time/02-propagators.02-cnsparskit.inp",
      "real_time/01-propagators.07-caetrs.inp",
      "real_time/19-td_move_ions.03-td_restart.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/01-propagators.11-cfmagnus4.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/01-propagators.08-cn.inp",
      "real_time/01-propagators.05-etrs_chebyshev.inp",
      "real_time/01-propagators.06-aetrs.inp",
      "real_time/19-td_move_ions.02-td.inp",
      "real_time/01-propagators.03-etrs_taylor.inp",
      "real_time/03-td_self_consistent.02-etrs.inp",
      "real_time/01-propagators.02-expmid.inp",
      "real_time/01-propagators.10-exprk4.inp",
      "real_time/22-td_move_ions_periodic.02-td.inp",
      "real_time/02-propagators.04-rungekutta4.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/11-classical.02-oct.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "mpidebughook": {
    "CallLine": "call parse_variable(global_namespace, 'MPIDebugHook', .false., mpi_debug_hook)",
    "Default": [
      "no"
    ],
    "Description": [
      "When debugging the code in parallel it is usually difficult to find the origin",
      "of race conditions that appear in MPI communications. This variable introduces",
      "a facility to control separate MPI processes. If set to yes, all nodes will",
      "start up, but will get trapped in an endless loop. In every cycle of the loop",
      "each node is sleeping for one second and is then checking if a file with the",
      "name <tt>node_hook.xxx</tt> (where <tt>xxx</tt> denotes the node number) exists. A given node can",
      "only be released from the loop if the corresponding file is created. This allows",
      "to selectively run, <i>e.g.</i>, a compute node first followed by the master node. Or, by",
      "reversing the file creation of the node hooks, to run the master first followed",
      "by a compute node."
    ],
    "LineNumber": 129,
    "Manuals": [],
    "Name": "MPIDebugHook",
    "Options": [],
    "Section": "Execution::Debug",
    "Sourcefile": "basic/debug.F90",
    "Testfiles": [
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "multigridderivativesorder": {
    "CallLine": "call parse_variable(namespace, 'MultigridDerivativesOrder', 1, order)",
    "Default": [
      "1"
    ],
    "Description": [
      "This variable gives the discretization order for the approximation of",
      "the differential operators on the different levels of the multigrid.",
      "For more details, see the variable DerivativesOrder."
    ],
    "LineNumber": 136,
    "Manuals": [],
    "Name": "MultigridDerivativesOrder",
    "Options": [],
    "Section": "Mesh::Derivatives",
    "Sourcefile": "grid/multigrid.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "multigridlevels": {
    "CallLine": "call parse_variable(namespace, 'MultigridLevels', 0, n_levels)",
    "Default": [
      "max_levels"
    ],
    "Description": [
      "Number of levels in the grid hierarchy used for multigrid. Positive",
      "numbers indicate an absolute number of levels, negative",
      "numbers are subtracted from the maximum number of levels possible."
    ],
    "LineNumber": 118,
    "Manuals": [],
    "Name": "MultigridLevels",
    "Options": [
      {
        "Description": [
          "Calculate the optimal number of levels for the grid."
        ],
        "Name": "max_levels",
        "Value": "0"
      }
    ],
    "Section": "Mesh",
    "Sourcefile": "grid/multigrid.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "multipolarexpansionterms": {
    "CallLine": "call parse_variable(namespace, 'MultipolarExpansionTerms', terms_default, multipolar_terms)",
    "Default": [
      "electric_dipole",
      "+",
      "electric_quadrupole",
      "+",
      "magnetic_dipole"
    ],
    "Description": [
      "Terms to be included in the multipolar expansion.",
      "For this type of coupling to make sense, the E field has to be calculated at the center of mass (not averaged)."
    ],
    "LineNumber": 159,
    "Manuals": [],
    "Name": "MultipolarExpansionTerms",
    "Options": [
      {
        "Description": [
          "Adds electric dipole term in length gauge, uses transverse electric field E(t):",
          "<math> H_{int} = -e (r.E) </math>"
        ],
        "Name": "electric_dipole",
        "Value": "bit(1)"
      },
      {
        "Description": [
          "Adds electric quadrupole term:",
          "<math> H_{int}  = \\frac{1}{2} e (r . Q . r )] <\\math>",
          "where Q is the outer product of gradient and electric field:  <math> Q_{ij} = \\partial_i E_j |_{r=r_0} </math>"
        ],
        "Name": "electric_quadrupole",
        "Value": "bit(2)"
      },
      {
        "Description": [
          "Adds magnetic dipole term:",
          "<math> H_{int}  = - i (e \\hbar /2m) \\sum_i (\\vec{B}(r_0).(\\vec{r} x \\nabla)) </math>"
        ],
        "Name": "magnetic_dipole",
        "Value": "bit(3)"
      }
    ],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/mxll_elec_coupling.F90",
    "Testfiles": [
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp"
    ],
    "Tutorials": [],
    "Type": "flag"
  },
  "ndimmodelmb": {
    "CallLine": "call parse_variable(namespace, 'NDimModelmb', 1, this%ndim)",
    "Default": [
      "1"
    ],
    "Description": [
      "Number of dimensions for modelmb space.",
      "Full Ndim = <tt>NDimModelmb</tt>*<tt>NParticleModelmb</tt>",
      " "
    ],
    "LineNumber": 137,
    "Manuals": [],
    "Name": "NDimModelmb",
    "Options": [],
    "Section": "States::ModelMB",
    "Sourcefile": "states/modelmb_particles.F90",
    "Testfiles": [
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "nfftcutoff": {
    "CallLine": "call parse_variable(namespace, 'NFFTCutoff', 6, nfft%mm)",
    "Default": [
      "6"
    ],
    "Description": [
      "Cut-off parameter of the window function.",
      "See NFFT manual for details."
    ],
    "LineNumber": 120,
    "Manuals": [],
    "Name": "NFFTCutoff",
    "Options": [],
    "Section": "Mesh::FFTs",
    "Sourcefile": "math/nfft.F90",
    "Testfiles": [
      "photo_electron/04-nfft.02-ati.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "nfftguruinterface": {
    "CallLine": "call parse_variable(namespace, 'NFFTGuruInterface',  .false., nfft%guru)",
    "Default": [
      "false"
    ],
    "Description": [
      "Perform NFFT with guru interface. This permits the fine tuning of several critical parameters."
    ],
    "LineNumber": 109,
    "Manuals": [],
    "Name": "NFFTGuruInterface",
    "Options": [],
    "Section": "Mesh::FFTs",
    "Sourcefile": "math/nfft.F90",
    "Testfiles": [
      "photo_electron/04-nfft.02-ati.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "nfftoversampling": {
    "CallLine": "call parse_variable(namespace, 'NFFTOversampling', M_TWO, nfft%sigma)",
    "Default": [
      "2"
    ],
    "Description": [
      "NFFT oversampling factor (sigma). This will rule the size of the FFT under the hood."
    ],
    "LineNumber": 130,
    "Manuals": [],
    "Name": "NFFTOversampling",
    "Options": [],
    "Section": "Mesh::FFTs",
    "Sourcefile": "math/nfft.F90",
    "Testfiles": [
      "photo_electron/04-nfft.02-ati.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "nfftprecompute": {
    "CallLine": "call parse_variable(namespace, 'NFFTPrecompute', NFFT_PRE_PSI, nfft%precompute)",
    "Default": [
      "NFFT_PRE_PSI"
    ],
    "Description": [
      "NFFT precomputation strategy."
    ],
    "LineNumber": 148,
    "Manuals": [],
    "Name": "NFFTPrecompute",
    "Options": [
      {
        "Description": [
          "This method implements a linear interpolation from a lookup table."
        ],
        "Name": "NFFT_PRE_LIN_PSI",
        "Value": "4"
      },
      {
        "Description": [
          "This method uses a medium amount of memory to store d*(2*m+1)*M real numbers and requires at most",
          "2(2m + 1)d extra multiplications for each node.",
          "This is the default option."
        ],
        "Name": "NFFT_PRE_PSI",
        "Value": "16"
      },
      {
        "Description": [
          "Is the fastest method but requires a large amount of memory as it requires to store (2*m+1)^d*M",
          "real numbers. No extra operations are needed during matrix vector multiplication."
        ],
        "Name": "NFFT_PRE_FULL_PSI",
        "Value": "32"
      }
    ],
    "Section": "Mesh::FFTs",
    "Sourcefile": "math/nfft.F90",
    "Testfiles": [
      "photo_electron/04-nfft.02-ati.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "nloperatorcompactboundaries": {
    "CallLine": "call parse_variable(namespace, 'NLOperatorCompactBoundaries', .false., compact_boundaries)",
    "Default": [
      "no"
    ],
    "Description": [
      "(Experimental) When set to yes, for finite systems Octopus will",
      "map boundary points for finite-differences operators to a few",
      "memory locations. This increases performance, however it is",
      "experimental and has not been thoroughly tested."
    ],
    "LineNumber": 231,
    "Manuals": [],
    "Name": "NLOperatorCompactBoundaries",
    "Options": [],
    "Section": "Execution::Optimization",
    "Sourcefile": "grid/nl_operator.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "nparticlemodelmb": {
    "CallLine": "call parse_variable(namespace, 'NParticleModelmb', 0, this%nparticle)",
    "Default": [
      "0"
    ],
    "Description": [
      "Number of particles in modelmb space.",
      "Full Ndim = <tt>NDimModelmb</tt>*<tt>NParticleModelmb</tt>"
    ],
    "LineNumber": 119,
    "Manuals": [],
    "Name": "NParticleModelmb",
    "Options": [],
    "Section": "States::ModelMB",
    "Sourcefile": "states/modelmb_particles.F90",
    "Testfiles": [
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "ntypeparticlemodelmb": {
    "CallLine": "call parse_variable(namespace, 'NTypeParticleModelmb', 1, this%ntype_of_particle)",
    "Default": [
      "1"
    ],
    "Description": [
      "Number of different types of particles in modelmb space."
    ],
    "LineNumber": 147,
    "Manuals": [],
    "Name": "NTypeParticleModelmb",
    "Options": [],
    "Section": "States::ModelMB",
    "Sourcefile": "states/modelmb_particles.F90",
    "Testfiles": [
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "occupations": {
    "CallLine": "occ_fix: if (parse_block(namespace, 'Occupations', blk) == 0) then",
    "Default": null,
    "Description": [
      "The occupation numbers of the orbitals can be fixed through the use of this",
      "variable. For example:",
      " ",
      "<tt>%Occupations",
      "<br>&nbsp;&nbsp;2 | 2 | 2 | 2 | 2",
      "<br>%</tt>",
      " ",
      "would fix the occupations of the five states to 2. There can be",
      "at most as many columns as states in the calculation. If there are fewer columns",
      "than states, then the code will assume that the user is indicating the occupations",
      "of the uppermost states where all lower states have full occupation (i.e. 2 for spin-unpolarized",
      "calculations, 1 otherwise) and all higher states have zero occupation. The first column",
      "will be taken to refer to the lowest state such that the occupations would be consistent",
      "with the correct total charge. For example, if there are 8 electrons and 10 states (from",
      "<tt>ExtraStates = 6</tt>), then an abbreviated specification",
      " ",
      "<tt>%Occupations",
      "<br>&nbsp;&nbsp;1 | 0 | 1",
      "<br>%</tt>",
      " ",
      "would be equivalent to a full specification",
      " ",
      "<tt>%Occupations",
      "<br>&nbsp;&nbsp;2 | 2 | 2 | 1 | 0 | 1 | 0 | 0 | 0 | 0",
      "<br>%</tt>",
      " ",
      "This is an example of use for constrained density-functional theory,",
      "crudely emulating a HOMO->LUMO+1 optical excitation.",
      "The number of rows should be equal",
      "to the number of k-points times the number of spins. For example, for a finite system",
      "with <tt>SpinComponents == spin_polarized</tt>,",
      "this block should contain two lines, one for each spin channel.",
      "All rows must have the same number of columns.",
      " ",
      "The <tt>Occupations</tt> block is useful for the ground state of highly symmetric",
      "small systems (like an open-shell atom), to fix the occupation numbers",
      "of degenerate states in order to help <tt>octopus</tt> to converge. This is to",
      "be used in conjuction with <tt>ExtraStates</tt>. For example, to calculate the",
      "carbon atom, one would do:",
      " ",
      "<tt>ExtraStates = 2",
      "<br>%Occupations",
      "<br>&nbsp;&nbsp;2 | 2/3 | 2/3 | 2/3",
      "<br>%</tt>",
      " ",
      "If you want the calculation to be spin-polarized (which makes more sense), you could do:",
      " ",
      "<tt>ExtraStates = 2",
      "<br>%Occupations",
      "<br>&nbsp;&nbsp; 2/3 | 2/3 | 2/3",
      "<br>&nbsp;&nbsp; 0   |   0 |   0",
      "<br>%</tt>",
      " ",
      "Note that in this case the first state is absent, the code will calculate four states",
      "(two because there are four electrons, plus two because <tt>ExtraStates</tt> = 2), and since",
      "it finds only three columns, it will occupy the first state with one electron for each",
      "of the spin options.",
      " ",
      "If the sum of occupations is not equal to the total charge set by <tt>ExcessCharge</tt>,",
      "an error message is printed.",
      "If <tt>FromScratch = no</tt> and <tt>RestartFixedOccupations = yes</tt>,",
      "this block will be ignored."
    ],
    "LineNumber": 753,
    "Manuals": [],
    "Name": "Occupations",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "finite_systems_2d/01-quadratic_box.04-spin_polarized.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/35-slater_x.01-gs.inp",
      "finite_systems_3d/06-restart.01-gs_mixrho.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/36-kli_x.01-gs.inp",
      "finite_systems_3d/41-gpu-bug.01-C.inp",
      "finite_systems_3d/28-carbon_big_box.01-ground_state.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/06-restart.04-restart_gs_mixvhxc.inp",
      "finite_systems_3d/06-restart.02-restart_gs_mixrho.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/06-restart.03-gs_mixvhxc.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "pseudopotentials/06-carbon_dojo_pbe.01-gs.inp",
      "pseudopotentials/18-Bi_pseudodojo_fr.01-gs.inp",
      "pseudopotentials/08-carbon_fhi.01-gs.inp",
      "pseudopotentials/07-carbon_dojo_lda.01-gs.inp",
      "pseudopotentials/03-nlcc.01-Fatom.inp",
      "pseudopotentials/05-carbon_dojo_pbesol.01-gs.inp",
      "pseudopotentials/04-carbon_dojo_psml.01-gs.inp",
      "pseudopotentials/09-carbon_cpi.01-gs.inp",
      "pseudopotentials/14-carbon_dojo_psp8.01-gs.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.01-N_atom.inp",
      "tutorials/02-octopus_basics-basic_input_options.01-N_atom.inp",
      "functionals/03-xc.gga_x_lg93.inp",
      "functionals/03-xc.gga_xc_mpwlyp1w.inp",
      "functionals/03-xc.lda_c_pw.inp",
      "functionals/03-xc.exx.inp",
      "functionals/03-xc.gga_x_rpbe.inp",
      "functionals/03-xc.gga_xc_edf1.inp",
      "functionals/03-xc.lda_c_hl.inp",
      "functionals/03-xc.gga_xc_hcth_120.inp",
      "functionals/03-xc.gga_c_pbe_jrgx.inp",
      "functionals/03-xc.gga_xc_hcth_93.inp",
      "functionals/03-xc.gga_c_pbe_sol.inp",
      "functionals/03-xc.mvorb_hse06_fock.inp",
      "functionals/02-xc_2d.gga_b86_mgc.inp",
      "functionals/03-xc.lda_c_wigner.inp",
      "functionals/03-xc.gga_x_mpbe.inp",
      "functionals/03-xc.gga_xc_xlyp.inp",
      "functionals/03-xc.gga_x_am05.inp",
      "functionals/03-xc.01-gs.inp",
      "functionals/03-xc.gga_x_g96.inp",
      "functionals/03-xc.gga_x_b86.inp",
      "functionals/03-xc.gga_x_pbek1_vdw.inp",
      "functionals/03-xc.gga_xc_pbelyp1w.inp",
      "functionals/03-xc.gga_x_b86_mgc.inp",
      "functionals/03-xc.gga_c_xpbe.inp",
      "functionals/03-xc.pbe0_fock.inp",
      "functionals/03-xc.gga_x_b88.inp",
      "functionals/03-xc.lda_c_ob_pz.inp",
      "functionals/02-xc_2d.gga_b86.inp",
      "functionals/03-xc.gga_x_ft97_b.inp",
      "functionals/03-xc.lda_c_ob_pw.inp",
      "functionals/03-xc.lda_c_pz_mod.inp",
      "functionals/03-xc.gga_x_optb88_vdw.inp",
      "functionals/03-xc.gga_c_pw91.inp",
      "functionals/03-xc.slater.inp",
      "functionals/03-xc.lda_xc_teter93.inp",
      "functionals/03-xc.sic_pz.inp",
      "functionals/03-xc.gga_x_xpbe.inp",
      "functionals/03-xc.pbe0_oep.inp",
      "functionals/03-xc.gga_xc_hcth_147.inp",
      "functionals/03-xc.gga_x_pbe_jsjr.inp",
      "functionals/03-xc.gga_c_lm.inp",
      "functionals/03-xc.gga_x_pbe_r.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/03-xc.lda_c_vbh.inp",
      "functionals/03-xc.gga_x_pbea.inp",
      "functionals/03-xc.lda_x.inp",
      "functionals/03-xc.gga_x_pw91.inp",
      "functionals/03-xc.b3lyp_fock.inp",
      "functionals/03-xc.gga_x_ft97_a.inp",
      "functionals/03-xc.gga_x_pw86.inp",
      "functionals/03-xc.lda_c_rpa.inp",
      "functionals/03-xc.b3lyp_oep.inp",
      "functionals/03-xc.gga_x_dk87_r2.inp",
      "functionals/03-xc.gga_c_p86.inp",
      "functionals/03-xc.lda_c_vwn_rpa.inp",
      "functionals/03-xc.lda_c_pw_mod.inp",
      "functionals/03-xc.lda_c_vwn.inp",
      "functionals/03-xc.kli.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "functionals/03-xc.lda_c_pz.inp",
      "functionals/03-xc.lda_c_xalpha.inp",
      "functionals/02-xc_2d.lda_amgb.inp",
      "functionals/03-xc.lda_c_gl.inp",
      "functionals/03-xc.gga_x_bayesian.inp",
      "functionals/03-xc.gga_xc_b97_d.inp",
      "functionals/03-xc.gga_c_pbe.inp",
      "functionals/03-xc.gga_x_lb.inp",
      "functionals/02-xc_2d.lda_prm.inp",
      "functionals/03-xc.gga_x_pbe_sol.inp",
      "functionals/03-xc.gga_c_lyp.inp",
      "functionals/03-xc.gga_c_am05.inp",
      "functionals/03-xc.gga_x_mpw91.inp",
      "functionals/03-xc.gga_x_pbe.inp",
      "functionals/03-xc.gga_xc_pbe1w.inp",
      "functionals/02-xc_2d.gga_b88.inp",
      "functionals/03-xc.gga_x_optpbe_vdw.inp",
      "functionals/03-xc.gga_xc_hcth_407.inp",
      "functionals/02-xc_2d.gga_pbe.inp",
      "functionals/03-xc.gga_x_dk87_r1.inp",
      "functionals/03-xc.gga_x_optx.inp",
      "functionals/03-xc.fbex.inp",
      "functionals/03-xc.gga_x_wc.inp",
      "finite_systems_1d/04-lithium.01-ground_state.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "octcheckgradient": {
    "CallLine": "call parse_variable(namespace, 'OCTCheckGradient', 0.0_real64, oct%check_gradient)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "When doing QOCT with the conjugate-gradient optimization scheme, the gradient is",
      "computed thanks to a forward-backwards propagation. For debugging purposes, this",
      "gradient can be compared with the value obtained \"numerically\" (<i>i.e.</i> by doing",
      "successive forward propagations with control fields separated by small finite",
      "differences).",
      " ",
      "In order to activate this feature, set <tt>OCTCheckGradient</tt> to some non-zero value,",
      "which will be the finite difference used to numerically compute the gradient."
    ],
    "LineNumber": 254,
    "Manuals": [],
    "Name": "OCTCheckGradient",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/opt_control_global.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "octclassicaltarget": {
    "CallLine": "if (parse_block(namespace, 'OCTClassicalTarget', blk) == 0) then",
    "Default": null,
    "Description": [
      "If <tt>OCTTargetOperator = oct_tg_classical</tt>, the you must supply this block.",
      "It should contain a string (e.g. \"(q[1,1]-q[1,2])*p[2,1]\") with a mathematical",
      "expression in terms of two arrays, q and p, that represent the position and momenta",
      "of the classical variables. The first index runs through the various classical particles,",
      "and the second index runs through the spatial dimensions.",
      " ",
      "In principle, the block only contains one entry (string). However, if the expression is very",
      "long, you can split it into various lines (one column each) that will be concatenated.",
      " ",
      "The QOCT algorithm will attempt to maximize this expression, at the end of the propagation."
    ],
    "LineNumber": 53,
    "Manuals": [],
    "Name": "OCTClassicalTarget",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_classical_inc.F90",
    "Testfiles": [
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/11-classical.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "octcontrolfunctionomegamax": {
    "CallLine": "call parse_variable(namespace, 'OCTControlFunctionOmegaMax', -M_ONE, cf_common%omegamax)",
    "Default": [
      "-1.0"
    ],
    "Description": [
      "The Fourier series that can be used to represent the control functions must be truncated;",
      "the truncation is given by a cut-off frequency which is determined by this variable."
    ],
    "LineNumber": 275,
    "Manuals": [],
    "Name": "OCTControlFunctionOmegaMax",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/controlfunction.F90",
    "Testfiles": [
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/12-spintarget.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "octcontrolfunctionrepresentation": {
    "CallLine": "call parse_variable(namespace, 'OCTControlFunctionRepresentation', ctr_rt, cf_common%representation)",
    "Default": [
      "control_fourier_series_h"
    ],
    "Description": [
      "If <tt>OCTControlRepresentation = control_function_parametrized</tt>, one must",
      "specify the kind of parameters that determine the control function.",
      "If <tt>OCTControlRepresentation = control_function_real_time</tt>, then this variable",
      "is ignored, and the control function is handled directly in real time."
    ],
    "LineNumber": 232,
    "Manuals": [],
    "Name": "OCTControlFunctionRepresentation",
    "Options": [
      {
        "Description": [
          "The control function is expanded as a full Fourier series (although it must, of",
          "course, be a real function). Then, the total fluence is fixed, and a transformation",
          "to hyperspherical coordinates is done; the parameters to optimize are the hyperspherical",
          "angles."
        ],
        "Name": "control_fourier_series_h",
        "Value": "3"
      },
      {
        "Description": [
          "The control function is expanded as a Fourier series, but assuming (1) that the zero",
          "frequency component is zero, and (2) the control function, integrated in time, adds",
          "up to zero (this essentially means that the sum of all the cosine coefficients is zero).",
          "Then, the total fluence is fixed, and a transformation to hyperspherical coordinates is",
          "done; the parameters to optimize are the hyperspherical angles."
        ],
        "Name": "control_zero_fourier_series_h",
        "Value": "4"
      },
      {
        "Description": [
          "The control function is expanded as a full Fourier series (although it must, of",
          "course, be a real function). The control parameters are the coefficients of this",
          "basis-set expansion."
        ],
        "Name": "control_fourier_series",
        "Value": "5"
      },
      {
        "Description": [
          "The control function is expanded as a full Fourier series (although it must, of",
          "course, be a real function). The control parameters are the coefficients of this",
          "basis-set expansion. The difference with the option <tt>control_fourier_series</tt> is that",
          "(1) that the zero-frequency component is zero, and (2) the control function, integrated",
          "in time, adds up to zero (this essentially means that the sum of all the cosine",
          "coefficients is zero)."
        ],
        "Name": "control_zero_fourier_series",
        "Value": "6"
      },
      {
        "Description": [
          "(experimental)"
        ],
        "Name": "control_rt",
        "Value": "7"
      }
    ],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/controlfunction.F90",
    "Testfiles": [
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/12-spintarget.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "octcontrolfunctiontype": {
    "CallLine": "call parse_variable(namespace, 'OCTControlFunctionType', controlfunction_mode_epsilon, cf_common%mode)",
    "Default": [
      "controlfunction_mode_epsilon"
    ],
    "Description": [
      "The control function may fully determine the time-dependent form of the",
      "external field, or only the envelope function of this external field, or its phase.",
      "Or, we may have two different control functions, one of them providing the phase",
      "and the other one, the envelope.",
      " ",
      "Note that, if <tt>OCTControlRepresentation = control_function_real_time</tt>, then the control",
      "function must <b>always</b> determine the full external field (THIS NEEDS TO BE FIXED)."
    ],
    "LineNumber": 336,
    "Manuals": [],
    "Name": "OCTControlFunctionType",
    "Options": [
      {
        "Description": [
          "In this case, the control function determines the full control function: namely,",
          "if we are considering the electric field of a laser, the time-dependent electric field."
        ],
        "Name": "controlfunction_mode_epsilon",
        "Value": "1"
      },
      {
        "Description": [
          "The optimization process attempts to find the best possible envelope. The full",
          "control field is this envelope times a cosine function with a \"carrier\" frequency.",
          "This carrier frequency is given by the carrier frequency of the <tt>TDExternalFields</tt>",
          "in the <tt>inp</tt> file."
        ],
        "Name": "controlfunction_mode_f",
        "Value": "2"
      }
    ],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/controlfunction.F90",
    "Testfiles": [
      "optimal_control/04-box.07-oct_long.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "octcurrentfunctional": {
    "CallLine": "call parse_variable(namespace, 'OCTCurrentFunctional', oct_no_curr, tg%curr_functional)",
    "Default": [
      "oct_no_curr"
    ],
    "Description": [
      "(Experimental) The variable <tt>OCTCurrentFunctional</tt> describes which kind of",
      "current target functional <math>J1_c[j]</math> is to be used."
    ],
    "LineNumber": 225,
    "Manuals": [],
    "Name": "OCTCurrentFunctional",
    "Options": [
      {
        "Description": [
          "No current functional is used, no current calculated."
        ],
        "Name": "oct_no_curr",
        "Value": "0"
      },
      {
        "Description": [
          "Calculates the square of current <math>j</math>:",
          "<math>J1_c[j] = {\\tt OCTCurrentWeight} \\int{\\left| j(r) \\right|^2 dr}</math>.",
          "For <tt>OCTCurrentWeight</tt> < 0, the current will be minimized (useful in combination with",
          "target density in order to obtain stable final target density), while for",
          "<tt>OCTCurrentWeight</tt> > 0, it will be maximized (useful in combination with a target density",
          "in order to obtain a high-velocity impact, for instance). It is a static target, to be reached at",
          "total time."
        ],
        "Name": "oct_curr_square",
        "Value": "1"
      },
      {
        "Description": [
          "Maximizes the current of a quantum ring in one direction. The functional maximizes the <math>z</math> projection of the",
          "outer product between the position <math>\\vec{r}</math> and the current <math>\\vec{j}</math>:",
          "<math>J1[j] = {\\tt OCTCurrentWeight} \\int{(\\vec{r} \\times \\vec{j}) \\cdot \\hat{z} dr}</math>.",
          "For <tt>OCTCurrentWeight</tt> > 0, the",
          "current flows in counter-clockwise direction, while for <tt>OCTCurrentWeight</tt> < 0, the current is clockwise."
        ],
        "Name": "oct_max_curr_ring",
        "Value": "2"
      },
      {
        "Description": [
          "The time-dependent version of <tt>oct_curr_square</tt>. In fact, calculates the",
          "square of current in time interval [<tt>OCTStartTimeCurrTg</tt>,",
          "total time = <tt>TDMaximumIter</tt> * <tt>TDTimeStep</tt>].",
          "Set <tt>TDPropagator</tt> = <tt>crank_nicolson</tt>."
        ],
        "Name": "oct_curr_square_td",
        "Value": "3"
      }
    ],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_density_inc.F90",
    "Testfiles": [
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/09-density+current.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "octcurrentweight": {
    "CallLine": "call parse_variable(namespace, 'OCTCurrentWeight', M_ZERO, tg%curr_weight)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "In the case of simultaneous optimization of density <math>n</math> and current <math>j</math>, one can tune the importance",
      "of the current functional <math>J1_c[j]</math>, as the respective functionals might not provide results on the",
      "same scale of magnitude. <math>J1[n,j]= J1_d[n]+ {\\tt OCTCurrentWeight}\\ J1_c[j]</math>. Be aware that its",
      "sign is crucial for the chosen <tt>OCTCurrentFunctional</tt> as explained there."
    ],
    "LineNumber": 235,
    "Manuals": [],
    "Name": "OCTCurrentWeight",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_density_inc.F90",
    "Testfiles": [
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/09-density+current.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "octdelta": {
    "CallLine": "call parse_variable(namespace, 'OCTDelta', M_ZERO, oct%delta)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "If <tt>OCTScheme = oct_mt03</tt>, then you can supply the \"eta\" and \"delta\" parameters",
      "described in [Y. Maday and G. Turinici, <i>J. Chem. Phys.</i> <b>118</b>, 8191 (2003)], using the",
      "<tt>OCTEta</tt> and <tt>OCTDelta</tt> variables."
    ],
    "LineNumber": 217,
    "Manuals": [],
    "Name": "OCTDelta",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/opt_control_global.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "octdirectstep": {
    "CallLine": "call parse_variable(namespace, 'OCTDirectStep', 0.25_real64, oct%direct_step)",
    "Default": [
      "0.25"
    ],
    "Description": [
      "If you choose <tt>OCTScheme = oct_direct</tt> or <tt>OCTScheme = oct_nlopt_bobyqa</tt>,",
      "the algorithms necessitate an initial \"step\" to perform the direct search for the",
      "optimal value. The precise meaning of this \"step\" differs."
    ],
    "LineNumber": 267,
    "Manuals": [],
    "Name": "OCTDirectStep",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/opt_control_global.F90",
    "Testfiles": [
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/03-localtarget.03-tdoct.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "octdoublecheck": {
    "CallLine": "call parse_variable(namespace, 'OCTDoubleCheck', .true., oct%oct_double_check)",
    "Default": [
      "true"
    ],
    "Description": [
      "In order to make sure that the optimized field indeed does its job, the code",
      "may run a normal propagation after the optimization using the optimized field."
    ],
    "LineNumber": 236,
    "Manuals": [],
    "Name": "OCTDoubleCheck",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/opt_control_global.F90",
    "Testfiles": [
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "octdumpintermediate": {
    "CallLine": "call parse_variable(namespace, 'OCTDumpIntermediate', .false., iterator%dump_intermediate)",
    "Default": [
      "true"
    ],
    "Description": [
      "Writes to disk the laser pulse data during the OCT algorithm at intermediate steps.",
      "These are files called <tt>opt_control/laser.xxxx</tt>, where <tt>xxxx</tt> is the iteration number."
    ],
    "LineNumber": 125,
    "Manuals": [],
    "Name": "OCTDumpIntermediate",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/opt_control_iter.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "octeps": {
    "CallLine": "call parse_variable(namespace, 'OCTEps', 1.0e-6_real64, iterator%eps)",
    "Default": [
      "1.0e-6"
    ],
    "Description": [
      "Define the convergence threshold. It computes the difference between the \"input\"",
      "field in the iterative procedure, and the \"output\" field. If this difference is",
      "less than <tt>OCTEps</tt> the iteration is stopped. This difference is defined as:",
      " ",
      "<math>",
      "D[\\varepsilon^{in},\\varepsilon^{out}] = \\int_0^T dt \\left| \\varepsilon^{in}(t)-\\varepsilon^{out}(t)\\right|^2",
      "</math>",
      " ",
      "(If there are several control fields, this difference is defined as the sum over",
      "all the individual differences.)",
      " ",
      "Whenever this condition is satisfied, it means that we have reached a solution point",
      "of the QOCT equations, <i>i.e.</i> a critical point of the QOCT functional (not",
      "necessarily a maximum, and not necessarily the global maximum)."
    ],
    "LineNumber": 98,
    "Manuals": [],
    "Name": "OCTEps",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/opt_control_iter.F90",
    "Testfiles": [
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "octeta": {
    "CallLine": "call parse_variable(namespace, 'OCTEta', M_ONE, oct%eta)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "If <tt>OCTScheme = oct_mt03</tt>, then you can supply the \"eta\" and \"delta\" parameters",
      "described in [Y. Maday and G. Turinici, <i>J. Chem. Phys.</i> <b>118</b>, 8191 (2003)], using the",
      "<tt>OCTEta</tt> and <tt>OCTDelta</tt> variables."
    ],
    "LineNumber": 216,
    "Manuals": [],
    "Name": "OCTEta",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/opt_control_global.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "octexcludedstates": {
    "CallLine": "call parse_variable(namespace, 'OCTExcludedStates', '1', tg%excluded_states_list)",
    "Default": null,
    "Description": [
      "If the target is the exclusion of several targets, (\"OCTTargetOperator = oct_exclude_states\")",
      "then you must declare which states are to be excluded, by setting the OCTExcludedStates variable.",
      "It must be a string in \"list\" format: \"1-8\", or \"2,3,4-9\", for example. Be careful to include",
      "in this list only states that have been calculated in a previous \"gs\" or \"unocc\" calculation,",
      "or otherwise the error will be silently ignored."
    ],
    "LineNumber": 49,
    "Manuals": [],
    "Name": "OCTExcludedStates",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_exclude_inc.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "octfilter": {
    "CallLine": "if (parse_block(namespace, 'OCTFilter', blk) == 0) then",
    "Default": null,
    "Description": [
      "The block <tt>OCTFilter</tt> describes the type and shape of the filter function",
      "that are applied to the optimized laser field in each iteration.",
      "The filter forces the laser field to obtain the given form in frequency space.",
      "Each line of the block describes a filter; this way you can actually have more",
      "than one filter function (<i>e.g.</i> a filter in time and two in frequency space).",
      "The filters are applied in the given order, <i>i.e.</i>, first the filter specified",
      "by the first line is applied, then second line.",
      "The syntax of each line is, then:",
      " ",
      "<tt>%OCTFilter",
      "<br>&nbsp;&nbsp;domain | function",
      "<br>%</tt>",
      " ",
      " ",
      "Possible arguments for domain are:",
      " ",
      "(i) <tt>frequency_filter</tt>: Specifies a spectral filter.",
      " ",
      "(ii) <tt>time_filter</tt>: DISABLED IN THIS VERSION.",
      " ",
      "Example:",
      " ",
      "<tt>%OCTFilter",
      "<br>&nbsp;&nbsp;time | \"exp(-80*( w + 0.1567 )^2  ) + exp(-80*( w - 0.1567 )^2  )\"",
      "<br>%</tt>",
      " ",
      "Be careful that also the negative-frequency component is filtered since the resulting",
      "field has to be real-valued.",
      " "
    ],
    "LineNumber": 109,
    "Manuals": [],
    "Name": "OCTFilter",
    "Options": [
      {
        "Description": [
          "The filter is applied in the frequency domain."
        ],
        "Name": "frequency_filter",
        "Value": "1"
      }
    ],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/filter.F90",
    "Testfiles": [
      "optimal_control/05-adw.04-filter_indirect.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "octfixfluenceto": {
    "CallLine": "call parse_variable(namespace, 'OCTFixFluenceTo', M_ZERO, cf_common%targetfluence)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "The algorithm tries to obtain the specified fluence for the laser field.",
      "This works only in conjunction with either the WG05 or the straight iteration scheme.",
      " ",
      "If this variable is not present in the input file, by default the code will not",
      "attempt a fixed-fluence QOCT run. The same holds if the value given to this",
      "variable is exactly zero.",
      " ",
      "If this variable is given a negative value, then the target fluence will be that of",
      "the initial laser pulse given as guess in the input file. Note, however, that",
      "first the code applies the envelope provided by the <tt>OCTLaserEnvelope</tt> input",
      "option, and afterwards it calculates the fluence."
    ],
    "LineNumber": 300,
    "Manuals": [],
    "Name": "OCTFixFluenceTo",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/controlfunction.F90",
    "Testfiles": [
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/12-spintarget.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "octfixinitialfluence": {
    "CallLine": "call parse_variable(namespace, 'OCTFixInitialFluence', .true., cf_common%fix_initial_fluence)",
    "Default": [
      "yes"
    ],
    "Description": [
      "By default, when asking for a fixed-fluence optimization (<tt>OCTFixFluenceTo = whatever</tt>),",
      "the initial laser guess provided in the input file is scaled to match this",
      "fluence. However, you can force the program to use that initial laser as the initial",
      "guess, no matter the fluence, by setting <tt>OCTFixInitialFluence = no</tt>."
    ],
    "LineNumber": 312,
    "Manuals": [],
    "Name": "OCTFixInitialFluence",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/controlfunction.F90",
    "Testfiles": [
      "optimal_control/05-adw.03-filter_fixed.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "octharmonicweight": {
    "CallLine": "call parse_variable(namespace, 'OCTHarmonicWeight', '1', tg%plateau_string)",
    "Default": [
      "\"1\""
    ],
    "Description": [
      "(Experimental) If <tt>OCTTargetOperator = oct_tg_plateau</tt>, then the function to optimize is the integral of the",
      "harmonic spectrum <math>H(\\omega)</math>, weighted with a function <math>f(\\omega)</math>",
      "that is defined as a string here. For example, if",
      "you set <tt>OCTHarmonicWeight  = \"step(w-1)\"</tt>, the function to optimize is",
      "the integral of <math>step(\\omega-1)*H(\\omega)</math>, <i>i.e.</i>",
      "<math>\\int_1^{\\infty} H \\left( \\omega \\right) d\\omega</math>.",
      "In practice, it is better if you also set an upper limit, <i>e.g.</i>",
      "<math>f(\\omega) = step(\\omega-1) step(2-\\omega)</math>."
    ],
    "LineNumber": 171,
    "Manuals": [],
    "Name": "OCTHarmonicWeight",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_hhg_inc.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "octinitialstate": {
    "CallLine": "call parse_variable(sys%namespace, 'OCTInitialState', oct_is_groundstate, istype)",
    "Default": [
      "oct_is_groundstate"
    ],
    "Description": [
      "Describes the initial state of the quantum system.",
      "Possible arguments are:"
    ],
    "LineNumber": 97,
    "Manuals": [],
    "Name": "OCTInitialState",
    "Options": [
      {
        "Description": [
          "Start in the ground state."
        ],
        "Name": "oct_is_groundstate",
        "Value": "1"
      },
      {
        "Description": [
          "Currently not in use."
        ],
        "Name": "oct_is_excited",
        "Value": "2"
      },
      {
        "Description": [
          "Start in a transformation of the ground-state orbitals, as defined in the",
          "block <tt>OCTInitialTransformStates</tt>."
        ],
        "Name": "oct_is_gstransformation",
        "Value": "3"
      },
      {
        "Description": [
          "Start in a user-defined state."
        ],
        "Name": "oct_is_userdefined",
        "Value": "4"
      }
    ],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/initst.F90",
    "Testfiles": [
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "octinitialtransformstates": {
    "Default": null,
    "Description": [
      "If <tt>OCTInitialState = oct_is_gstransformation</tt>, you must specify an",
      "<tt>OCTInitialTransformStates</tt> block, in order to specify which linear",
      "combination of the states present in <tt>restart/gs</tt> is used to",
      "create the initial state.",
      " ",
      "The syntax is the same as the <tt>TransformStates</tt> block."
    ],
    "Manuals": [],
    "Name": "OCTInitialTransformStates",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/initst.F90",
    "Testfiles": [
      "optimal_control/02-sym_doublewell.03-oct.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "octinitialuserdefined": {
    "CallLine": "if (parse_block(sys%namespace, 'OCTInitialUserdefined', blk) == 0) then",
    "Default": null,
    "Description": [
      "Define an initial state. Syntax follows the one of the <tt>UserDefinedStates</tt> block.",
      "Example:",
      " ",
      "<tt>%OCTInitialUserdefined",
      "<br>&nbsp;&nbsp; 1 | 1 | 1 |  \"exp(-r^2)*exp(-i*0.2*x)\"",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 168,
    "Manuals": [],
    "Name": "OCTInitialUserdefined",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/initst.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "octlaserenvelope": {
    "CallLine": "ierr = parse_block(namespace, 'OCTLaserEnvelope', blk)",
    "Default": null,
    "Description": [
      "Often a pre-defined time-dependent envelope on the control function is desired.",
      "This can be achieved by making the penalty factor time-dependent.",
      "Here, you may specify the required time-dependent envelope.",
      " ",
      "It is possible to choose different envelopes for different control functions.",
      "There should be one line for each control function. Each line should",
      "have only one element: a string with the name of a time-dependent function,",
      "that should be correspondingly defined in a <tt>TDFunctions</tt> block."
    ],
    "LineNumber": 497,
    "Manuals": [],
    "Name": "OCTLaserEnvelope",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/controlfunction.F90",
    "Testfiles": [
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/09-density+current.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "octlocaltarget": {
    "CallLine": "call parse_variable(namespace, 'OCTLocalTarget', \"0\", expression)",
    "Default": null,
    "Description": [
      "If <tt>OCTTargetOperator = oct_tg_local</tt>, then one must supply a function",
      "that defines the target. This should be done by defining it through a string, using",
      "the variable <tt>OCTLocalTarget</tt>."
    ],
    "LineNumber": 47,
    "Manuals": [],
    "Name": "OCTLocalTarget",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_local_inc.F90",
    "Testfiles": [
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "octmaxiter": {
    "CallLine": "call parse_variable(namespace, 'OCTMaxIter', 10, iterator%ctr_iter_max)",
    "Default": [
      "10"
    ],
    "Description": [
      "The maximum number of iterations.",
      "Typical values range from 10-100."
    ],
    "LineNumber": 109,
    "Manuals": [],
    "Name": "OCTMaxIter",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/opt_control_iter.F90",
    "Testfiles": [
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "octmomentumderivatives": {
    "CallLine": "if (parse_block(namespace, 'OCTMomentumDerivatives', blk) == 0) then",
    "Default": null,
    "Description": [
      "This block should contain the derivatives of the expression given in",
      "<tt>OCTClassicalTarget</tt> with respect to the p array components.",
      "Each line corresponds to a different classical particle, whereas the",
      "columns correspond to each spatial dimension: the (i,j) block component",
      "corresponds with the derivative wrt p[i,j]."
    ],
    "LineNumber": 76,
    "Manuals": [],
    "Name": "OCTMomentumDerivatives",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_classical_inc.F90",
    "Testfiles": [
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/11-classical.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "octnumbercheckpoints": {
    "CallLine": "call parse_variable(namespace, 'OCTNumberCheckPoints', 0, oct%number_checkpoints)",
    "Default": [
      "0"
    ],
    "Description": [
      "During an OCT propagation, the code may write the wavefunctions at some time steps (the",
      "\"check points\"). When the inverse backward or forward propagation",
      "is performed in a following step, the wavefunction should reverse its path",
      "(almost) exactly. This can be checked to make sure that it is the case -- otherwise",
      "one should try reducing the time-step, or altering in some other way the",
      "variables that control the propagation.",
      " ",
      "If the backward (or forward) propagation is not retracing the steps of the previous",
      "forward (or backward) propagation, the code will write a warning."
    ],
    "LineNumber": 285,
    "Manuals": [],
    "Name": "OCTNumberCheckPoints",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/opt_control_global.F90",
    "Testfiles": [
      "optimal_control/09-density+current.03-tdoct.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "octoptimizeharmonicspectrum": {
    "CallLine": "if (parse_block(namespace, 'OCTOptimizeHarmonicSpectrum', blk) == 0) then",
    "Default": [
      "no"
    ],
    "Description": [
      "(Experimental)",
      "If <tt>OCTTargetOperator = oct_tg_hhg</tt>, the target is the harmonic emission spectrum.",
      "In that case, you must supply an <tt>OCTOptimizeHarmonicSpectrum</tt> block in the <tt>inp</tt>",
      "file. The target is given, in general, by:",
      " ",
      "<math>J_1 = \\int_0^\\infty d\\omega \\alpha(\\omega) H(\\omega)</math>,",
      " ",
      "where <math>H(\\omega)</math> is the harmonic spectrum generated by the system, and",
      "<math>\\alpha(\\omega)</math> is some function that determines what exactly we want",
      "to optimize. The role of the <tt>OCTOptimizeHarmonicSpectrum</tt> block is to determine",
      "this <math>\\alpha(\\omega)</math> function. Currently, this function is defined as:",
      " ",
      "<math>\\alpha(\\omega) = \\sum_{L=1}^{M} \\frac{\\alpha_L}{a_L} \\sqcap( (\\omega - L\\omega_0)/a_L )</math>,",
      " ",
      "where <math>\\omega_0</math> is the carrier frequency. <math>M</math> is",
      "the number of columns in the <tt>OCTOptimizeHarmonicSpectrum</tt> block. The values of <i>L</i> will be listed",
      "in the first row of this block; <math>\\alpha_L</math> in the second row, and <math>a_L</math> in",
      "the third.",
      " ",
      "Example:",
      " ",
      "<tt>%OCTOptimizeHarmonicSpectrum",
      "<br>&nbsp;&nbsp;  7    |  9    | 11",
      "<br>&nbsp;&nbsp; -1    |  1    | -1",
      "<br>&nbsp;&nbsp;  0.01 |  0.01 |  0.01",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 68,
    "Manuals": [],
    "Name": "OCTOptimizeHarmonicSpectrum",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_hhg_inc.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "octpenalty": {
    "CallLine": "call parse_variable(namespace, 'OCTPenalty', M_ONE, octpenalty)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "The variable specifies the value of the penalty factor for the",
      "integrated field strength (fluence). Large value = small fluence.",
      "A transient shape can be specified using the block <tt>OCTLaserEnvelope</tt>.",
      "In this case <tt>OCTPenalty</tt> is multiplied with time-dependent function.",
      "The value depends on the coupling between the states. A good start might be a",
      "value from 0.1 (strong fields) to 10 (weak fields).",
      " ",
      "Note that if there are several control functions, one can specify this",
      "variable as a one-line code, each column being the penalty factor for each",
      "of the control functions. Make sure that the number of columns is equal to the",
      "number of control functions. If it is not a block, all control functions will",
      "have the same penalty factor.",
      " ",
      "All penalty factors must be positive."
    ],
    "LineNumber": 455,
    "Manuals": [],
    "Name": "OCTPenalty",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/controlfunction.F90",
    "Testfiles": [
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "octpositionderivatives": {
    "CallLine": "if (parse_block(namespace, 'OCTPositionDerivatives', blk) == 0) then",
    "Default": null,
    "Description": [
      "This block should contain the derivatives of the expression given in",
      "<tt>OCTClassicalTarget</tt> with respect to the q array components.",
      "Each line corresponds to a different classical particle, whereas the",
      "columns correspond to each spatial dimension: the (i,j) block component",
      "corresponds with the derivative wrt q[i,j]."
    ],
    "LineNumber": 101,
    "Manuals": [],
    "Name": "OCTPositionDerivatives",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_classical_inc.F90",
    "Testfiles": [
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/11-classical.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "octrandominitialguess": {
    "CallLine": "call parse_variable(namespace, 'OCTRandomInitialGuess', .false., oct%random_initial_guess)",
    "Default": [
      "false"
    ],
    "Description": [
      "The initial field to start the optimization search is usually given in the <tt>inp</tt> file,",
      "through a <tt>TDExternalFields</tt> block. However, you can start from a random guess if you",
      "set this variable to true.",
      " ",
      "Note, however, that this is only valid for the \"direct\" optimization schemes; moreover",
      "you still need to provide a <tt>TDExternalFields</tt> block."
    ],
    "LineNumber": 300,
    "Manuals": [],
    "Name": "OCTRandomInitialGuess",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/opt_control_global.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "octscheme": {
    "CallLine": "call parse_variable(namespace, 'OCTScheme', OPTION__OCTSCHEME__OCT_ZR98, oct%algorithm)",
    "Default": [
      "oct_zbr98"
    ],
    "Description": [
      "Optimal Control Theory can be performed with <tt>Octopus</tt> with a variety of different",
      "algorithms. Not all of them can be used with any choice of target or control function",
      "representation. For example, some algorithms cannot be used if",
      "<tt>OCTControlRepresentation = control_function_real_time</tt>",
      "(<tt>OCTScheme</tt> > <tt>oct_straight_iteration</tt>), and others cannot be used",
      "if <tt>OCTControlRepresentation = control_function_parametrized</tt>",
      "(<tt>OCTScheme</tt>  <  <tt>oct_straight_iteration</tt>)."
    ],
    "LineNumber": 162,
    "Manuals": [],
    "Name": "OCTScheme",
    "Options": [
      {
        "Description": [
          "Backward-Forward-Backward scheme described in <i>JCP</i> <b>108</b>, 1953 (1998).",
          "Only possible if target operator is a projection operator.",
          "Provides fast, stable and monotonic convergence."
        ],
        "Name": "oct_zbr98",
        "Value": "1"
      },
      {
        "Description": [
          "Forward-Backward-Forward scheme described in <i>JCP</i> <b>109</b>, 385 (1998).",
          "Works for projection and more general target operators also. The convergence is",
          "stable but slower than ZBR98.",
          "Note that local operators show an extremely slow convergence. It ensures monotonic",
          "convergence."
        ],
        "Name": "oct_zr98",
        "Value": "2"
      },
      {
        "Description": [
          "Forward-Backward scheme described in <i>J. Opt. B.</i> <b>7</b>, 300 (2005).",
          "Works for all kinds of target operators, can be used with all kinds of filters, and",
          "allows a fixed fluence.",
          "The price is a rather unstable convergence.",
          "If the restrictions set by the filter and fluence are reasonable, a good overlap can be",
          "expected within 20 iterations.",
          "No monotonic convergence."
        ],
        "Name": "oct_wg05",
        "Value": "3"
      },
      {
        "Description": [
          "Basically an improved and generalized scheme.",
          "Comparable to ZBR98/ZR98. See [Y. Maday and G. Turinici, <i>J. Chem. Phys.</i> <b>118</b>, 8191 (2003)]."
        ],
        "Name": "oct_mt03",
        "Value": "4"
      },
      {
        "Description": [
          "The procedure reported in [D. Tannor, V. Kazakov and V.",
          "Orlov, in <i>Time-Dependent Quantum Molecular Dynamics</i>, edited by J. Broeckhove",
          "and L. Lathouweres (Plenum, New York, 1992), pp. 347-360]."
        ],
        "Name": "oct_krotov",
        "Value": "5"
      },
      {
        "Description": [
          "Straight iteration: one forward and one backward propagation is performed at each",
          "iteration, both with the same control field. An output field is calculated with the",
          "resulting wavefunctions."
        ],
        "Name": "oct_straight_iteration",
        "Value": "6"
      },
      {
        "Description": [
          "Conjugate-gradients, as implemented in the GNU GSL library. In particular, the",
          "Fletcher-Reeves version.",
          "The seed for the random number generator can be modified by setting",
          "<tt>GSL_RNG_SEED</tt> environment variable."
        ],
        "Name": "oct_cg",
        "Value": "7"
      },
      {
        "Description": [
          "The methods use the vector Broyden-Fletcher-Goldfarb-Shanno (BFGS) algorithm.",
          "Also, it calls the GNU GSL library version of the algorithm. It is a quasi-Newton",
          "method which builds up an approximation to the second derivatives of the function using",
          "the difference between successive gradient vectors.  By combining the first and second",
          "derivatives the algorithm is able to take Newton-type steps towards the function minimum,",
          "assuming quadratic behavior in that region. We have chosen to implement the \"bfgs2\" version,",
          "as GSL calls it, which is supposed to be the most efficient version available, and a faithful",
          "implementation of the line minimization scheme described in \"Practical Methods of Optimization\",",
          "(Fletcher), Algorithms 2.6.2 and 2.6.4."
        ],
        "Name": "oct_bfgs",
        "Value": "8"
      },
      {
        "Description": [
          "This is a \"direct\" optimization scheme. This means that we do not make use of the",
          "\"usual\" QOCT equations (backward-forward propagations, etc), but we use some gradient-free",
          "maximization algorithm for the function that we want to optimize. In this case, the",
          "maximization algorithm is the Nelder-Mead algorithm as implemented in the GSL. The function",
          "values are obtained by successive forward propagations.",
          "The seed for the random number generator can be modified by setting",
          "<tt>GSL_RNG_SEED</tt> environment variable."
        ],
        "Name": "oct_direct",
        "Value": "9"
      },
      {
        "Description": [
          "The BOBYQA algorithm, as implemented in the NLOPT library -- therefore, octopus has to",
          "be compiled with it in order to be able to use this option.",
          "The seed for the random number generator can be modified by setting",
          "<tt>GSL_RNG_SEED</tt> environment variable."
        ],
        "Name": "oct_nlopt_bobyqa",
        "Value": "11"
      },
      {
        "Description": [
          "The local BFGS, as implemented in the NLOPT library -- therefore, octopus has to",
          "be compiled with it in order to be able to use this option.",
          "The seed for the random number generator can be modified by setting",
          "<tt>GSL_RNG_SEED</tt> environment variable."
        ],
        "Name": "oct_nlopt_lbfgs",
        "Value": "12"
      }
    ],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/opt_control_global.F90",
    "Testfiles": [
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "octspatialcurrweight": {
    "CallLine": "if (parse_block(namespace, 'OCTSpatialCurrWeight', blk) == 0) then",
    "Default": null,
    "Description": [
      "Can be seen as a position-dependent <tt>OCTCurrentWeight</tt>. Consequently, it",
      "weights contribution of current <math>j</math> to its functional <math>J1_c[j]</math> according to the position in space.",
      "For example, <tt>oct_curr_square</tt> thus becomes",
      "<math>J1_c[j] = {\\tt OCTCurrentWeight} \\int{\\left| j(r) \\right|^2 {\\tt OCTSpatialCurrWeight}(r) dr}</math>.",
      " ",
      "It is defined as <tt>OCTSpatialCurrWeight</tt><math>(r) = g(x) g(y) g(z)</math>, where",
      "<math>g(x) = \\sum_{i} 1/(1+e^{-{\\tt fact} (x-{\\tt startpoint}_i)}) - 1/(1+e^{-{\\tt fact} (x-{\\tt endpoint}_i)})</math>.",
      "If not specified, <math>g(x) = 1</math>.",
      " ",
      "Each <math>g(x)</math> is represented by one line of the block that has the following form",
      " ",
      "<tt>%OCTSpatialCurrWeight",
      "<br>&nbsp;&nbsp;  dimension  |  fact |  startpoint_1  | endpoint_1  | startpoint_2 | endpoint_2 |...",
      "<br>%</tt>",
      " ",
      "There are no restrictions on the number of lines, nor on the number of pairs of start- and endpoints.",
      "Attention: <tt>startpoint</tt> and <tt>endpoint</tt> have to be supplied pairwise",
      "with <tt>startpoint  <  endpoint</tt>. <tt>dimension > 0</tt> is integer, <tt>fact</tt> is float."
    ],
    "LineNumber": 258,
    "Manuals": [],
    "Name": "OCTSpatialCurrWeight",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_density_inc.F90",
    "Testfiles": [
      "optimal_control/10-current.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "octstartitercurrtg": {
    "CallLine": "call parse_variable(namespace, 'OCTStartIterCurrTg', 0, tg%strt_iter_curr_tg)",
    "Default": [
      "0"
    ],
    "Description": [
      "Allows for a time-dependent target for the current without defining it for the total",
      "time-interval of the simulation.",
      "Thus it can be switched on at the iteration desired, <tt>OCTStartIterCurrTg</tt> >= 0",
      "and  <tt>OCTStartIterCurrTg</tt>  <  <tt>TDMaximumIter</tt>.",
      "Tip: If you would like to specify a real time for switching",
      "the functional on rather than the number of steps, just use something",
      "like:",
      "<tt>OCTStartIterCurrTg</tt> = 100.0 / <tt>TDTimeStep</tt>."
    ],
    "LineNumber": 241,
    "Manuals": [],
    "Name": "OCTStartIterCurrTg",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_density_inc.F90",
    "Testfiles": [
      "optimal_control/09-density+current.03-tdoct.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "octtargetdensity": {
    "CallLine": "call parse_variable(namespace, 'OCTTargetDensity', \"0\", expression)",
    "Default": null,
    "Description": [
      "If <tt>OCTTargetOperator = oct_tg_density</tt>, then one must supply the target density",
      "that should be searched for. This one can do by supplying a string through",
      "the variable <tt>OCTTargetDensity</tt>. Alternately, give the special string <tt>\"OCTTargetDensityFromState\"</tt>",
      "to specify the expression via the block <tt>OCTTargetDensityFromState</tt>."
    ],
    "LineNumber": 78,
    "Manuals": [],
    "Name": "OCTTargetDensity",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_density_inc.F90",
    "Testfiles": [
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "octtargetdensityfromstate": {
    "CallLine": "if (parse_block(namespace, 'OCTTargetDensityFromState', blk) == 0) then",
    "Default": [
      "no"
    ],
    "Description": [
      "If <tt>OCTTargetOperator = oct_tg_density</tt>, and <tt>OCTTargetDensity = \"OCTTargetDensityFromState\"</tt>,",
      "you must specify a <tt>OCTTargetDensityState</tt> block, in order to specify which linear",
      "combination of the states present in <tt>restart/gs</tt> is used to",
      "create the target density.",
      " ",
      "The syntax is the same as the <tt>TransformStates</tt> block."
    ],
    "LineNumber": 82,
    "Manuals": [],
    "Name": "OCTTargetDensityFromState",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_density_inc.F90",
    "Testfiles": [
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/09-density+current.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "octtargetoperator": {
    "CallLine": "call parse_variable(namespace, 'OCTTargetOperator', oct_tg_gstransformation, tg%type)",
    "Default": [
      "oct_tg_gstransformation"
    ],
    "Description": [
      "The variable <tt>OCTTargetOperator</tt> prescribes which kind of target functional is",
      "to be used."
    ],
    "LineNumber": 264,
    "Manuals": [],
    "Name": "OCTTargetOperator",
    "Options": [
      {
        "Description": [
          "The target operator is a projection operator on the ground state, <i>i.e.</i> the",
          "objective is to populate the ground state as much as possible."
        ],
        "Name": "oct_tg_groundstate",
        "Value": "1"
      },
      {
        "Description": [
          "(Experimental) The target operator is an \"excited state\". This means that the target operator",
          "is a linear combination of Slater determinants, each one formed by replacing",
          "in the ground-state Slater determinant one occupied state with one excited",
          "state (<i>i.e.</i> \"single excitations\"). The description of which excitations are",
          "used, and with which weights, should be given in a file called",
          "<tt>oct-excited-state-target</tt>.",
          "See the documentation of subroutine <tt>excited_states_elec_init</tt> in the source",
          "code in order to use this feature."
        ],
        "Name": "oct_tg_excited",
        "Value": "2"
      },
      {
        "Description": [
          "The target operator is a projection operator on a transformation of the ground-state",
          "orbitals defined by the block <tt>OCTTargetTransformStates</tt>."
        ],
        "Name": "oct_tg_gstransformation",
        "Value": "3"
      },
      {
        "Description": [
          "(Experimental) Allows to define target state by using <tt>OCTTargetUserdefined</tt>."
        ],
        "Name": "oct_tg_userdefined",
        "Value": "4"
      },
      {
        "Description": [
          "(Experimental)"
        ],
        "Name": "oct_tg_jdensity",
        "Value": "5"
      },
      {
        "Description": [
          "(Experimental) The target operator is a local operator."
        ],
        "Name": "oct_tg_local",
        "Value": "6"
      },
      {
        "Description": [
          "(Experimental) The target operator is a time-dependent local operator."
        ],
        "Name": "oct_tg_td_local",
        "Value": "7"
      },
      {
        "Description": [
          "(Experimental) Target operator is the projection onto the complement of a given state, given by the",
          "block <tt>OCTTargetTransformStates</tt>. This means that the target operator is the unity",
          "operator minus the projector onto that state."
        ],
        "Name": "oct_tg_exclude_state",
        "Value": "8"
      },
      {
        "Description": [
          "(Experimental) The target is the optimization of the HHG yield. You must supply the <tt>OCTOptimizeHarmonicSpectrum</tt>",
          "block, and it attempts to optimize the maximum of the spectrum around each harmonic peak. You may",
          "use only one of the gradient-less optimization schemes."
        ],
        "Name": "oct_tg_hhg",
        "Value": "9"
      },
      {
        "Description": [
          "(Experimental) The target is a function of the velocities of the nuclei at the end of the influence of",
          "the external field, defined by <tt>OCTVelocityTarget</tt>"
        ],
        "Name": "oct_tg_velocity",
        "Value": "10"
      },
      {
        "Description": [
          "(Experimental) The target is the optimization of the HHG yield. You must supply the",
          "<tt>OCTHarmonicWeight</tt> string. It attempts to optimize the integral of the harmonic spectrum multiplied",
          "by some user-defined weight function."
        ],
        "Name": "oct_tg_hhgnew",
        "Value": "12"
      },
      {
        "Description": [
          "(Experimental)"
        ],
        "Name": "oct_tg_classical",
        "Value": "13"
      },
      {
        "Description": [
          "(Experimental)"
        ],
        "Name": "oct_tg_spin",
        "Value": "14"
      }
    ],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target.F90",
    "Testfiles": [
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "octtargetspin": {
    "CallLine": "if (parse_block(namespace, 'OCTTargetSpin', blk) == 0) then",
    "Default": null,
    "Description": [
      "(Experimental) Specify the targeted spin as a 3-component vector. It will be normalized."
    ],
    "LineNumber": 44,
    "Manuals": [],
    "Name": "OCTTargetSpin",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_spin_inc.F90",
    "Testfiles": [
      "optimal_control/12-spintarget.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "octtargettransformstates": {
    "Default": [
      "no"
    ],
    "Description": [
      "If <tt>OCTTargetOperator = oct_tg_gstransformation</tt>, you must specify a",
      "<tt>OCTTargetTransformStates</tt> block, in order to specify which linear",
      "combination of the states present in <tt>restart/gs</tt> is used to",
      "create the target state.",
      " ",
      "The syntax is the same as the <tt>TransformStates</tt> block."
    ],
    "Manuals": [],
    "Name": "OCTTargetTransformStates",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_gstransformation_inc.F90",
    "Testfiles": [
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/04-box.05-oct_long.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "octtargetuserdefined": {
    "CallLine": "if (parse_block(namespace, 'OCTTargetUserdefined', blk) == 0) then",
    "Default": null,
    "Description": [
      "Define a target state. Syntax follows the one of the <tt>UserDefinedStates</tt> block.",
      "Example:",
      " ",
      "<tt>%OCTTargetUserdefined",
      "<br>&nbsp;&nbsp; 1 | 1 | 1 |  \"exp(-r^2)*exp(-i*0.2*x)\"",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 55,
    "Manuals": [],
    "Name": "OCTTargetUserdefined",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_userdefined_inc.F90",
    "Testfiles": [
      "optimal_control/01-asym_doublewell.05-oct_run.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "octtdtarget": {
    "CallLine": "if (parse_block(namespace, 'OCTTdTarget', blk) == 0) then",
    "Default": null,
    "Description": [
      "(Experimental) If <tt>OCTTargetOperator = oct_tg_td_local</tt>, then you must supply",
      "a OCTTdTarget block. The block should only contain one element, a string cotaining the",
      "definition of the time-dependent local target, <i>i.e.</i> a function of x,y,z and t that",
      "is to be maximized along the evolution."
    ],
    "LineNumber": 43,
    "Manuals": [],
    "Name": "OCTTdTarget",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_tdlocal_inc.F90",
    "Testfiles": [
      "optimal_control/03-localtarget.03-tdoct.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "octvelocityderivatives": {
    "CallLine": "if (parse_block(namespace, 'OCTVelocityDerivatives', blk) == 0) then",
    "Default": null,
    "Description": [
      "If <tt>OCTTargetOperator = oct_tg_velocity</tt>, and",
      "<tt>OCTScheme = oct_cg</tt> or <tt>OCTScheme = oct_bfgs</tt>",
      "then you must supply the target in terms of the ionic velocities AND",
      "the derivatives of the target with respect to the ionic velocity components.",
      "The derivatives are supplied via strings through the block",
      "<tt>OCTVelocityDerivatives</tt>.",
      "Each velocity component is supplied by <tt>\"v[n_atom,vec_comp]\"</tt>,",
      "while <tt>n_atom</tt> is the atom number, corresponding to the",
      "<tt>Coordinates</tt> block, and <tt>vec_comp</tt> is the corresponding",
      "vector component of the velocity. The first line of the",
      "<tt>OCTVelocityDerivatives</tt> block contains the derivatives",
      "with respect to <tt>v[1,*]</tt>, the second with respect to <tt>v[2,*]</tt> and so",
      "on. The first column contains all derivatives with respect <tt>v[*,1]</tt>,",
      "the second with respect to <tt>v[*,2]</tt> and the third w.r.t. <tt>v[*,3]</tt>.",
      "As an example, we show the <tt>OCTVelocityDerivatives</tt> block",
      "corresponding to the target shown in the <tt>OCTVelocityTarget</tt>",
      "help section:",
      " ",
      "<tt>%OCTVelocityDerivatives",
      "<br> \" 2*(v[1,1]-v[2,1])\" | \" 2*(v[1,2]-v[2,2])\" | \" 2*(v[1,3]-v[2,3])\"",
      "<br> \"-2*(v[1,1]-v[2,1])\" | \"-2*(v[1,2]-v[2,2])\" | \"-2*(v[1,3]-v[2,3])\"",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 111,
    "Manuals": [],
    "Name": "OCTVelocityDerivatives",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_velocity_inc.F90",
    "Testfiles": [
      "optimal_control/08-velocities.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "octvelocitytarget": {
    "CallLine": "if (parse_block(namespace, 'OCTVelocityTarget', blk) == 0) then",
    "Default": null,
    "Description": [
      "If <tt>OCTTargetOperator = oct_tg_velocity</tt>, then one must supply the",
      "target to optimize in terms of the ionic velocities. This is done by",
      "supplying a string through the block <tt>OCTVelocityTarget</tt>.",
      "Each velocity component is supplied by <tt>\"v[n_atom,vec_comp]\"</tt>,",
      "where <tt>n_atom</tt> is the atom number, corresponding to the",
      "<tt>Coordinates</tt> block, and <tt>vec_comp</tt> is the corresponding",
      "vector component of the velocity. The target string can be",
      "supplied by using several lines in this block.",
      "As an example, the following target can be used to maximize the",
      "velocity difference between atom 1 and 2 (in a 3D system):",
      " ",
      "<tt>%OCTVelocityTarget",
      "<br> \"(v[1,1]-v[2,1])^2 + (v[1,2]-v[2,2])^2 + \"",
      "<br> \"(v[1,3]-v[2,3])^2\"",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 89,
    "Manuals": [],
    "Name": "OCTVelocityTarget",
    "Options": [],
    "Section": "Calculation Modes::Optimal Control",
    "Sourcefile": "opt_control/target_velocity_inc.F90",
    "Testfiles": [
      "optimal_control/08-velocities.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "oeplevel": {
    "CallLine": "call parse_variable(namespace, 'OEPLevel', OEP_LEVEL_KLI, oep%level)",
    "Default": [
      "oep_kli"
    ],
    "Description": [
      "At what level shall <tt>Octopus</tt> handle the optimized effective potential (OEP) equation."
    ],
    "LineNumber": 159,
    "Manuals": [],
    "Name": "OEPLevel",
    "Options": [
      {
        "Description": [
          "Do not solve OEP equation."
        ],
        "Name": "oep_none",
        "Value": "1"
      },
      {
        "Description": [
          "Krieger-Li-Iafrate (KLI) approximation.",
          "Ref: JB Krieger, Y Li, GJ Iafrate, <i>Phys. Lett. A</i> <b>146</b>, 256 (1990)."
        ],
        "Name": "oep_kli",
        "Value": "3"
      },
      {
        "Description": [
          "(Experimental) Full solution of OEP equation using the Sternheimer approach.",
          "The linear solver will be controlled by the variables in section <tt>Linear Response::Solver</tt>,",
          "and the iterations for OEP by <tt>Linear Response::SCF in LR calculations</tt> and variable",
          "<tt>OEPMixing</tt>. Note that default for <tt>LRMaximumIter</tt> is set to 10.",
          "Ref: S. Kuemmel and J. Perdew, <i>Phys. Rev. Lett.</i> <b>90</b>, 043004 (2003)."
        ],
        "Name": "oep_full",
        "Value": "5"
      }
    ],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "electrons/xc_oep.F90",
    "Testfiles": [
      "functionals/03-xc.exx.inp",
      "functionals/01-xc_1d.oep_kli.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/04-oep.02-jellium-exx_kli.inp",
      "functionals/03-xc.sic_pz.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/01-xc_1d.oep_exx.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/03-xc.kli.inp",
      "functionals/04-oep.03-jellium-full_exx.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "functionals/07-sic.02-scdm.inp",
      "finite_systems_1d/02-neon_mpi.03-td_calc-kli_par_states.inp",
      "finite_systems_1d/02-neon_mpi.02-ground_state-kli_par_domains.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "oepmixing": {
    "CallLine": "call parse_variable(namespace, 'OEPMixing', M_ONE, oep%mixing)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "The linear mixing factor used to solve the Sternheimer",
      "equation in the full OEP procedure."
    ],
    "LineNumber": 145,
    "Manuals": [],
    "Name": "OEPMixing",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "photons/xc_oep_photon.F90",
    "Testfiles": [
      "functionals/01-xc_1d.oep_exx.inp",
      "functionals/17-oep-photons.03-oep.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "oepmixingscheme": {
    "CallLine": "call parse_variable(namespace, 'OEPMixingScheme', OEP_MIXING_SCHEME_CONST, oep%mixing_scheme)",
    "Default": [
      "1.0"
    ],
    "Description": [],
    "LineNumber": 164,
    "Manuals": [],
    "Name": "OEPMixingScheme",
    "Options": [
      {
        "Description": [],
        "Name": "OEP_MIXING_SCHEME_CONST",
        "Value": "1"
      },
      {
        "Description": [],
        "Name": "OEP_MIXING_SCHEME_BB",
        "Value": "2"
      },
      {
        "Description": [],
        "Name": "OEP_MIXING_SCHEME_DENS",
        "Value": "3"
      }
    ],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "photons/xc_oep_photon.F90",
    "Testfiles": [
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/17-oep-photons.03-oep.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "oepremoveelectron": {
    "CallLine": "call parse_variable(namespace, 'OEPRemoveElectron', .false., oep%rm_ee_interaction)",
    "Default": [
      ".false."
    ],
    "Description": [
      "Remove electron-electron interaction in OEP-Photon calculations"
    ],
    "LineNumber": 210,
    "Manuals": [],
    "Name": "OEPRemoveElectron",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "photons/xc_oep_photon.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "onlyuserdefinedinitialstates": {
    "CallLine": "call parse_variable(namespace, 'OnlyUserDefinedInitialStates', .false., st%only_userdef_istates)",
    "Default": [
      "no"
    ],
    "Description": [
      "If true, then only user-defined states from the block <tt>UserDefinedStates</tt>",
      "will be used as initial states for a time-propagation. No attempt is made",
      "to load ground-state orbitals from a previous ground-state run."
    ],
    "LineNumber": 512,
    "Manuals": [],
    "Name": "OnlyUserDefinedInitialStates",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "operateaccel": {
    "CallLine": "call parse_variable(namespace, 'OperateAccel',  OP_MAP, function_opencl)",
    "Default": [
      "map"
    ],
    "Description": [
      "This variable selects the subroutine used to apply non-local",
      "operators over the grid when an accelerator device is used."
    ],
    "LineNumber": 214,
    "Manuals": [],
    "Name": "OperateAccel",
    "Options": [
      {
        "Description": [
          "The standard implementation ported to OpenCL."
        ],
        "Name": "invmap",
        "Value": "1"
      },
      {
        "Description": [
          "A different version, more suitable for GPUs."
        ],
        "Name": "map",
        "Value": "2"
      }
    ],
    "Section": "Execution::Optimization",
    "Sourcefile": "grid/nl_operator.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "operatecomplex": {
    "CallLine": "call parse_variable(namespace, 'OperateComplex', default, zfunction_global)",
    "Default": [
      "optimized"
    ],
    "Description": [
      "This variable selects the subroutine used to apply non-local",
      "operators over the grid for complex functions."
    ],
    "LineNumber": 196,
    "Manuals": [],
    "Name": "OperateComplex",
    "Options": [
      {
        "Description": [
          "The standard Fortran function."
        ],
        "Name": "fortran",
        "Value": "0"
      },
      {
        "Description": [
          "This version is optimized using vector primitives (if available)."
        ],
        "Name": "optimized",
        "Value": "1"
      }
    ],
    "Section": "Execution::Optimization",
    "Sourcefile": "grid/nl_operator.F90",
    "Testfiles": [
      "components/01-derivatives_1d.02-fortran.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "operatedouble": {
    "CallLine": "call parse_variable(namespace, 'OperateDouble', default, dfunction_global)",
    "Default": [
      "optimized"
    ],
    "Description": [
      "This variable selects the subroutine used to apply non-local",
      "operators over the grid for real functions."
    ],
    "LineNumber": 193,
    "Manuals": [],
    "Name": "OperateDouble",
    "Options": [
      {
        "Description": [
          "The standard Fortran function."
        ],
        "Name": "fortran",
        "Value": "0"
      },
      {
        "Description": [
          "This version is optimized using vector primitives (if available)."
        ],
        "Name": "optimized",
        "Value": "1"
      }
    ],
    "Section": "Execution::Optimization",
    "Sourcefile": "grid/nl_operator.F90",
    "Testfiles": [
      "components/01-derivatives_1d.02-fortran.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "optimizechebyshevfilterdegree": {
    "CallLine": "call parse_variable(namespace, 'OptimizeChebyshevFilterDegree', default_chebyshev_params%optimize_degree, eigens%cheby_params%optimize_degree)",
    "Default": [
      "yes"
    ],
    "Description": [
      "Used by the Chebyshev filter only.",
      "Octopus generates a best-estimate for the degree of the Chebyshev polynomial used to filter the subspace.",
      "A separate estimate is generated for each state block, per SCF iteration. Note that if running parallelism",
      "over states, the block/batch containing the largest eigenstates will converge more slowly and will",
      "therefore use a larger degree relative to all other batches. One should therefore avoid setting \"ChebyshevFilterDegree\"",
      "to an excessive value (for example > 50). For more details regarding how the degree is estimated, one can refer to Section 5.4",
      "in \"Computer Physics Communications 187 (2015) 98\u2013105\" (http://dx.doi.org/10.1016/j.cpc.2014.10.015)."
    ],
    "LineNumber": 345,
    "Manuals": [],
    "Name": "OptimizeChebyshevFilterDegree",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/eigensolver.F90",
    "Testfiles": [
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/13-primitive.02-graphene.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "output": {
    "Default": [
      "none"
    ],
    "Description": [
      "Specifies what to print.",
      "Each output must be in a separate row. Optionally individual output formats and output intervals can be defined",
      "for each row or they can be read separately from <tt>OutputFormat</tt> and <tt>OutputInterval</tt> variables",
      "in the input file.",
      "The output files are written at the end of the run into the output directory for the",
      "relevant kind of run (<i>e.g.</i> <tt>static</tt> for <tt>CalculationMode = gs</tt>).",
      "Time-dependent simulations print only per iteration, including always the last. The frequency of output per iteration",
      "(available for <tt>CalculationMode</tt> = <tt>gs</tt>, <tt>unocc</tt>,  <tt>td</tt>, and <tt>opt_control</tt>)",
      "is set by <tt>OutputInterval</tt> and the directory is set by <tt>OutputIterDir</tt>.",
      "For linear-response run modes, the derivatives of many quantities can be printed, as listed in",
      "the options below. Indices in the filename are labelled as follows:",
      "<tt>sp</tt> = spin (or spinor component), <tt>k</tt> = <i>k</i>-point, <tt>st</tt> = state/band.",
      "There is no tag for directions, given as a letter. The perturbation direction is always",
      "the last direction for linear-response quantities, and a following +/- indicates the sign of the frequency.",
      " ",
      "Example (minimal):",
      "<br><br><tt>%Output",
      "<br>&nbsp;&nbsp;density",
      "<br>&nbsp;&nbsp;potential",
      "<br>%<br></tt>",
      " ",
      "Example (with OutputFormat):",
      "<br><br><tt>%Output",
      "<br>&nbsp;&nbsp;density   | cube + axis_z",
      "<br>&nbsp;&nbsp;potential | cube",
      "<br>%<br></tt>",
      " ",
      "Example (with OutputFormat, incomplete):",
      "<br><br><tt>%Output",
      "<br>&nbsp;&nbsp;density   | cube + axis_z",
      "<br>&nbsp;&nbsp;potential",
      "<br>%<br></tt>",
      " ",
      "Example (tagged):",
      "<br><br><tt>%Output",
      "<br>&nbsp;&nbsp;density   | \"output_format\" | cube + axis_z | \"output_interval\" | 50",
      "<br>&nbsp;&nbsp;potential | \"output_format\" | cube          | \"output_interval\" | 20",
      "<br>%<br></tt>",
      " ",
      "Example (tagged, incomplete):",
      "<br><br><tt>%Output",
      "<br>&nbsp;&nbsp;density   | \"output_format\"   | cube + axis_z",
      "<br>&nbsp;&nbsp;potential | \"output_interval\" | 20",
      "<br>%<br></tt>",
      "Missing information for the incomplete blocks will be parsed form the out-of-block",
      "definitions. It is also possible to mix the order of columns in the tagged format.",
      "See <tt>OutputFormat</tt>, and <tt>OutputInterval</tt>."
    ],
    "Manuals": [],
    "Name": "Output",
    "Options": [
      {
        "Description": [
          "Outputs Kohn-Sham potential, separated by parts. File names are <tt>v0</tt> for",
          "the local part of the ionic potential, <tt>vc</tt> for the classical potential (if it exists),",
          "<tt>vh</tt> for the Hartree potential, <tt>vks</tt> for the local part of the Kohn-Sham potential, and",
          "<tt>vxc-</tt> for the exchange-correlation potentials. For <tt>vks</tt> and <tt>vxc</tt>,",
          "a suffix for spin is added in the spin-polarized case."
        ],
        "Name": "potential",
        "Value": "1"
      },
      {
        "Description": [
          "Outputs density. The output file is called <tt>density-</tt>, or <tt>lr_density-</tt> in linear response."
        ],
        "Name": "density",
        "Value": "2"
      },
      {
        "Description": [
          "Outputs wavefunctions. Which wavefunctions are to be printed is specified",
          "by the variable <tt>OutputWfsNumber</tt> -- see below. The output file is called",
          "<tt>wf-</tt>, or <tt>lr_wf-</tt> in linear response."
        ],
        "Name": "wfs",
        "Value": "3"
      },
      {
        "Description": [
          "Outputs modulus squared of the wavefunctions.",
          "The output file is called <tt>sqm-wf-</tt>. For linear response, the filename is <tt>sqm_lr_wf-</tt>."
        ],
        "Name": "wfs_sqmod",
        "Value": "4"
      },
      {
        "Description": [
          "Outputs file containing the coordinates of the atoms treated within quantum mechanics.",
          "If <tt>OutputFormat = xyz</tt>, the file is called <tt>geometry.xyz</tt>; a",
          "file <tt>crystal.xyz</tt> is written with a supercell geometry if the system is periodic;",
          "if point charges were defined in the PDB file (see <tt>PDBCoordinates</tt>), they will be output",
          "in the file <tt>geometry_classical.xyz</tt>.",
          "If <tt>OutputFormat = xcrysden</tt>, a file called <tt>geometry.xsf</tt> is written."
        ],
        "Name": "geometry",
        "Value": "5"
      },
      {
        "Description": [
          "Outputs the total current density. The output file is called <tt>current-</tt>.",
          "For linear response, the filename is <tt>lr_current-</tt>."
        ],
        "Name": "current",
        "Value": "6"
      },
      {
        "Description": [
          "Outputs electron localization function (ELF). The output file is called <tt>elf-</tt>,",
          "or <tt>lr_elf-</tt> in linear response, in which case the associated function D is also written,",
          "as <tt>lr_elf_D-</tt>. Only in 2D and 3D."
        ],
        "Name": "ELF",
        "Value": "7"
      },
      {
        "Description": [
          "Outputs basins of attraction of the ELF. The output file is called",
          "<tt>elf_rs_basins.info</tt>. Only in 2D and 3D."
        ],
        "Name": "ELF_basins",
        "Value": "8"
      },
      {
        "Description": [
          "Outputs Laplacian of the density which shows lone pairs, bonded charge concentrations",
          "and regions subject to electrophilic or nucleophilic attack.",
          "See RF Bader, <i>Atoms in Molecules: A Quantum Theory</i> (Oxford Univ. Press, Oxford, 1990)."
        ],
        "Name": "Bader",
        "Value": "9"
      },
      {
        "Description": [
          "Outputs electronic pressure. See Tao, Vignale, and Tokatly, <i>Phys Rev Lett</i> <b>100</b>, 206405 (2008)."
        ],
        "Name": "el_pressure",
        "Value": "10"
      },
      {
        "Description": [
          "Outputs a series of matrix elements of the Kohn-Sham states. What is output can",
          "be controlled by the <tt>OutputMatrixElements</tt> variable."
        ],
        "Name": "matrix_elements",
        "Value": "11"
      },
      {
        "Description": [
          "Outputs dipole-moment density <tt>dipole_density-</tt>, or polarizability density <tt>alpha_density-</tt>",
          "in linear response. If <tt>ResponseMethod = finite_differences</tt>, the hyperpolarizability density",
          "<tt>beta_density-</tt> is also printed."
        ],
        "Name": "pol_density",
        "Value": "12"
      },
      {
        "Description": [
          "Outputs values of the coordinates over the grid. Files",
          "will be called <tt>mesh_r-</tt> followed by the direction."
        ],
        "Name": "mesh_r",
        "Value": "13"
      },
      {
        "Description": [
          "Outputs kinetic-energy density, defined as:",
          " ",
          "<math>\\tau_\\sigma(\\vec{r}) = \\sum_{i=1}^{N_\\sigma}",
          "\\left| \\vec{\\nabla} \\phi_{i\\sigma}(\\vec{r}) \\right|^2\\,. </math>",
          " ",
          "The index <math>\\sigma</math> is the spin index for the spin-polarized case,",
          "or if you are using spinors. For spin-unpolarized calculations, you",
          "get the total kinetic-energy density. The previous expression assumes full",
          "or null occupations. If fractional occupation numbers, each term in the sum",
          "is weighted by the occupation. Also, if we are working with an infinite",
          "system, all <i>k</i>-points are summed up, with their corresponding weights. The",
          "files will be called <tt>tau-sp1</tt> and <tt>tau-sp2</tt>, if the spin-resolved kinetic",
          "energy density is produced (runs in spin-polarized and spinors mode), or",
          "only <tt>tau</tt> if the run is in spin-unpolarized mode."
        ],
        "Name": "kinetic_energy_density",
        "Value": "14"
      },
      {
        "Description": [
          "Outputs density of states. See <tt>DOSEnergyMax</tt>, <tt>DOSEnergyMin</tt>, <tt>DOSEnergyPoints</tt>,",
          "and <tt>DOSGamma</tt>."
        ],
        "Name": "dos",
        "Value": "15"
      },
      {
        "Description": [
          "Outputs transition-potential approximation (TPA) matrix elements, using <math>\\vec{q}</math>-vector specified",
          "by <tt>MomentumTransfer</tt>."
        ],
        "Name": "tpa",
        "Value": "16"
      },
      {
        "Description": [
          "Outputs file <tt>forces.xsf</tt> containing structure and forces on the atoms as",
          "a vector associated with each atom, which can be visualized with XCrySDen."
        ],
        "Name": "forces",
        "Value": "17"
      },
      {
        "Description": [
          "(Experimental) Outputs wavefunctions in Fourier space. This is",
          "only implemented for the ETSF file format output. The file will",
          "be called <tt>wfs-pw-etsf.nc</tt>."
        ],
        "Name": "wfs_fourier",
        "Value": "18"
      },
      {
        "Description": [
          "Outputs the XC density, which is the charge density that",
          "generates the XC potential. (This is <math>-1/4\\pi</math> times",
          "the Laplacian of the XC potential). The files are called <tt>nxc</tt>."
        ],
        "Name": "xc_density",
        "Value": "19"
      },
      {
        "Description": [
          "Outputs the photoelectron wavefunctions. The file name is <tt>pes_wfs-</tt>",
          "plus the orbital number."
        ],
        "Name": "PES_wfs",
        "Value": "20"
      },
      {
        "Description": [
          "Outputs the photolectron density. Output file is <tt>pes_dens-</tt> plus spin species if",
          "spin-polarized calculation is performed."
        ],
        "Name": "PES_density",
        "Value": "21"
      },
      {
        "Description": [
          "Outputs the time-dependent photoelectron spectrum."
        ],
        "Name": "PES",
        "Value": "22"
      },
      {
        "Description": [
          "Output for a run with <a href=http://www.berkeleygw.org>BerkeleyGW</a>.",
          "See <tt>Output::BerkeleyGW</tt> for further specification."
        ],
        "Name": "BerkeleyGW",
        "Value": "23"
      },
      {
        "Description": [
          "Outputs the \"kick\", or time-delta perturbation applied to compute optical response in real time."
        ],
        "Name": "delta_perturbation",
        "Value": "24"
      },
      {
        "Description": [
          "Outputs the (scalar) time-dependent potential."
        ],
        "Name": "external_td_potential",
        "Value": "25"
      },
      {
        "Description": [
          "Triggers the ModelMB wavefunctions to be output for each state."
        ],
        "Name": "mmb_wfs",
        "Value": "26"
      },
      {
        "Description": [
          "Triggers the ModelMB density matrix to be output for each state, and the particles",
          "specified by the <tt>DensitytoCalc</tt> block. Calculates, and outputs, the reduced density",
          "matrix. For the moment the trace is made over the second dimension, and",
          "the code is limited to 2D. The idea is to model <i>N</i> particles in 1D as an",
          "<i>N</i>-dimensional non-interacting problem, then to trace out <i>N</i>-1 coordinates."
        ],
        "Name": "mmb_den",
        "Value": "27"
      },
      {
        "Description": [
          "Prints the gradient of the potential."
        ],
        "Name": "potential_gradient",
        "Value": "28"
      },
      {
        "Description": [
          "Outputs the total energy density to a file called",
          "<tt>energy_density</tt>."
        ],
        "Name": "energy_density",
        "Value": "29"
      },
      {
        "Description": [
          "Outputs the total heat current density. The output file is",
          "called <tt>heat_current-</tt>."
        ],
        "Name": "heat_current",
        "Value": "30"
      },
      {
        "Description": [
          "Outputs the electron-photon correlation function. The output file is",
          "called <tt>photon_correlator</tt>."
        ],
        "Name": "photon_correlator",
        "Value": "31"
      },
      {
        "Description": [
          "todo: document J_flow option!"
        ],
        "Name": "J_flow",
        "Value": "32"
      },
      {
        "Description": [
          "Outputs the current density resolved in momentum space. The output file is called <tt>current_kpt-</tt>."
        ],
        "Name": "current_kpt",
        "Value": "33"
      },
      {
        "Description": [
          "Outputs the electronic density resolved in momentum space."
        ],
        "Name": "density_kpt",
        "Value": "34"
      },
      {
        "Description": [
          "Only for DFT+U calculations.",
          "Outputs the occupation matrices of DFT+U"
        ],
        "Name": "occ_matrices",
        "Value": "35"
      },
      {
        "Description": [
          "Only for DFT+U calculations.",
          "Outputs the value of the effectiveU for each atoms"
        ],
        "Name": "effectiveU",
        "Value": "36"
      },
      {
        "Description": [
          "Only for DFT+U calculations.",
          "Outputs file containing structure and magnetization of the localized subspace",
          "on the atoms as a vector associated with each atom, which can be visualized.",
          "For the moment, it only works if a +U is added on one type of orbital per atom."
        ],
        "Name": "magnetization",
        "Value": "37"
      },
      {
        "Description": [
          "Only for DFT+U calculations.",
          "Outputs the localized orbitals that form the correlated subspace"
        ],
        "Name": "local_orbitals",
        "Value": "38"
      },
      {
        "Description": [
          "Only for DFT+U calculations.",
          "Outputs the Kanamori interaction parameters U, U`, and J.",
          "These parameters are not determined self-consistently, but are taken from the",
          "occupation matrices and Coulomb integrals comming from a standard +U calculation."
        ],
        "Name": "kanamoriU",
        "Value": "39"
      },
      {
        "Description": [
          "Outputs the exchange-correlation torque. Only for the spinor case and in the 3D case."
        ],
        "Name": "xc_torque",
        "Value": "40"
      },
      {
        "Description": [
          "Outputs the eigenvalues resolved in momentum space, with one file for each band."
        ],
        "Name": "eigenval_kpt",
        "Value": "41"
      },
      {
        "Description": [
          "Outputs the stress tensor and each of its contributing terms"
        ],
        "Name": "stress",
        "Value": "42"
      },
      {
        "Description": [
          "Outputs the diamagnetic current density from a non-uniform vector potential.",
          "The output file is called <tt>current_dia-</tt>."
        ],
        "Name": "current_dia",
        "Value": "43"
      }
    ],
    "Section": "Output",
    "Sourcefile": "grid/io_function.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "linear_response/05-polarizability.02-sternheimer.inp",
      "finite_systems_3d/05-output.02-gs.inp",
      "finite_systems_3d/16-scfinlcao_std.01-gs.inp",
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "finite_systems_3d/05-output.04-convert-op.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/05-output.03-convert.inp",
      "real_time/11-tdmagnetic.02-unocc.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "pseudopotentials/02-cu2_hgh.02_gs_current.inp",
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "symmetries/07-symmetrization_lda.01-spg2_sym.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "tutorials/06-octopus_basics-periodic_systems.02-silicon_converged.inp",
      "tutorials/04-octopus_basics-visualization.01-benzene.inp",
      "tutorials/06-octopus_basics-periodic_systems.01-silicon.inp",
      "functionals/18-mgga.01-br89.inp",
      "functionals/05-ks_inversion.02-two_particle.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/05-ks_inversion.01-target_density.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/05-lithium.01-gs.inp",
      "periodic_systems/32-photodoping.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/09-etsf_io.01-gs.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/10-berkeleygw.02-unocc.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/15-bandstructure.02-unocc.inp",
      "periodic_systems/13-primitive.01-diamond.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "optimal_control/10-current.01-ground_state.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/02-sym_doublewell.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.02-unocc.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/09-density+current.01-ground_state.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/11-full_delta.01-gs.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/10-intersite.01-Na2.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "outputduringscf": {
    "CallLine": "call parse_variable(namespace, 'OutputDuringSCF', .false., outp%duringscf)",
    "Default": [
      "no"
    ],
    "Description": [
      "During <tt>gs</tt> and <tt>unocc</tt> runs, if this variable is set to yes,",
      "output will be written after every <tt>OutputInterval</tt> iterations."
    ],
    "LineNumber": 343,
    "Manuals": [],
    "Name": "OutputDuringSCF",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "output/output.F90",
    "Testfiles": [
      "finite_systems_3d/05-output.02-gs.inp",
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "finite_systems_3d/41-gpu-bug.01-C.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "outputformat": {
    "Default": [
      "0"
    ],
    "Description": [
      "Describes the format of the output files.",
      "This variable can also be defined inside the <tt>Output</tt> block.",
      "See <tt>Output</tt>.",
      "Example: <tt>axis_x + plane_x + dx</tt>"
    ],
    "Manuals": [],
    "Name": "OutputFormat",
    "Options": [
      {
        "Description": [
          "The values of the function on the <i>x</i> axis are printed. The string <tt>.y=0,z=0</tt> is appended",
          "to previous file names."
        ],
        "Name": "axis_x",
        "Value": "bit(0)"
      },
      {
        "Description": [
          "The values of the function on the <i>y</i> axis are printed. The string <tt>.x=0,z=0</tt> is appended",
          "to previous file names."
        ],
        "Name": "axis_y",
        "Value": "bit(1)"
      },
      {
        "Description": [
          "The values of the function on the <i>z</i> axis are printed. The string <tt>.x=0,y=0</tt> is appended",
          "to previous file names."
        ],
        "Name": "axis_z",
        "Value": "bit(2)"
      },
      {
        "Description": [
          "A plane slice at <i>x</i> = 0 is printed. The string <tt>.x=0</tt> is appended",
          "to previous file names."
        ],
        "Name": "plane_x",
        "Value": "bit(3)"
      },
      {
        "Description": [
          "A plane slice at <i>y</i> = 0 is printed. The string <tt>.y=0</tt> is appended",
          "to previous file names."
        ],
        "Name": "plane_y",
        "Value": "bit(4)"
      },
      {
        "Description": [
          "A plane slice at <i>z</i> = 0 is printed. The string <tt>.z=0</tt> is appended to",
          "previous file names."
        ],
        "Name": "plane_z",
        "Value": "bit(5)"
      },
      {
        "Description": [
          "For printing three-dimensional information, the open-source program",
          "visualization tool <a href=http://www.opendx.org>OpenDX</a> can be used. The string",
          "<tt>.dx</tt> is appended to previous file names. Available only in 3D."
        ],
        "Name": "dx",
        "Value": "bit(6)"
      },
      {
        "Description": [
          "Outputs in <a href=http://www.unidata.ucar.edu/packages/netcdf>NetCDF</a> format. This file",
          "can then be read, for example, by OpenDX. The string <tt>.ncdf</tt> is appended to previous file names.",
          "Requires the NetCDF library. Only writes the real part of complex functions."
        ],
        "Name": "netcdf",
        "Value": "bit(7)"
      },
      {
        "Description": [
          "Generates output files of a given quantity (density, wavefunctions, ...) which include",
          "the internal numbering of mesh points. Since this mode produces large datafiles this is only",
          "useful for small meshes and debugging purposes.",
          "The output can also be used to display the mesh directly. A Gnuplot script for mesh visualization",
          "can be found under <tt>PREFIX/share/octopus/util/display_mesh_index.gp</tt>."
        ],
        "Name": "mesh_index",
        "Value": "bit(8)"
      },
      {
        "Description": [
          "A format for printing structures and three-dimensional information, which can be visualized by",
          "the free open-source program <a href=http://www.xcrysden.org>XCrySDen</a> and others. The string",
          "<tt>.xsf</tt> is appended to previous file names. Note that lattice vectors and coordinates are as",
          "specified by <tt>UnitsOutput</tt>. Available in 2D and 3D."
        ],
        "Name": "xcrysden",
        "Value": "bit(9)"
      },
      {
        "Description": [
          "In combination with <tt>plane_x</tt>, <tt>plane_y</tt> and",
          "<tt>plane_z</tt>, this option produces output files which are",
          "suitable for 2D Matlab functions like <tt>mesh()</tt>,",
          "<tt>surf()</tt>, or <tt>waterfall()</tt>. To load these files",
          "into Matlab you can use, <i>e.g.</i>",
          ">> density = load('static/density-1.x=0.matlab.abs');",
          ">> mesh(density);"
        ],
        "Name": "matlab",
        "Value": "bit(10)"
      },
      {
        "Description": [
          "Outputs in Matlab mode the internal mesh in a format similar to",
          ">> [x,y] = meshgrid(-2:.2:2,-1:.15:1)",
          "The <i>x</i> meshgrid is contained in a file <tt>*.meshgrid.x</tt> and the <i>y</i>-grid can be found in",
          "<tt>*.meshgrid.y</tt>."
        ],
        "Name": "meshgrid",
        "Value": "bit(11)"
      },
      {
        "Description": [
          "This option includes the output of the mesh enlargement. Default is without.",
          "Supported only by <tt>binary</tt>, <tt>axis</tt>, <tt>plane</tt>, <tt>mesh_index</tt>,",
          "and <tt>matlab</tt> formats.",
          "Not all types of <tt>Output</tt> will have this information available. Not supported when parallel in domains."
        ],
        "Name": "boundary_points",
        "Value": "bit(12)"
      },
      {
        "Description": [
          "Plain binary, new format."
        ],
        "Name": "binary",
        "Value": "bit(13)"
      },
      {
        "Description": [
          "<a href=http://www.etsf.eu/resources/software/standardization_project>ETSF file format</a>.",
          "Requires the ETSF_IO library. Applies only to <tt>Output = density</tt>, <tt>geometry</tt>,",
          "<tt>wfs</tt>, and/or <tt>wfs_fourier</tt>."
        ],
        "Name": "etsf",
        "Value": "bit(14)"
      },
      {
        "Description": [
          "Geometry will be output in XYZ format. Does not affect other outputs."
        ],
        "Name": "xyz",
        "Value": "bit(15)"
      },
      {
        "Description": [
          "Generates output in the <a href=http://paulbourke.net/dataformats/cube>cube file format</a>.",
          "Available only in 3D. Only writes the real part of complex functions.",
          "This output format always uses atomic units."
        ],
        "Name": "cube",
        "Value": "bit(16)"
      },
      {
        "Description": [
          "Generates output in <a href=http://plato.cgl.ucsf.edu/chimera/docs/UsersGuide/bild.html>BILD format</a>."
        ],
        "Name": "bild",
        "Value": "bit(19)"
      },
      {
        "Description": [
          "Generates output in <a href=http://www.vtk.org/VTK/img/file-formats.pdf>VTK legacy format</a>."
        ],
        "Name": "vtk",
        "Value": "bit(20)"
      },
      {
        "Description": [
          "Integrates the function in the x-y plane and the result on the <i>z</i> axis is printed."
        ],
        "Name": "integrate_xy",
        "Value": "bit(21)"
      },
      {
        "Description": [
          "Integrates the function in the x-z plane and the result on the <i>y</i> axis is printed"
        ],
        "Name": "integrate_xz",
        "Value": "bit(22)"
      },
      {
        "Description": [
          "Integrates the function in the y-z plane and the result on the <i>x</i> axis is printed"
        ],
        "Name": "integrate_yz",
        "Value": "bit(23)"
      },
      {
        "Description": [
          "Plain text format regardless of dimensionality. For the moment only employed by the oct-phototoelectron_spectrum",
          "post-processing utility."
        ],
        "Name": "ascii",
        "Value": "bit(24)"
      }
    ],
    "Section": "Output",
    "Sourcefile": "grid/io_function.F90",
    "Testfiles": [
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/07-symmetrization_lda.01-spg2_sym.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "tutorials/04-octopus_basics-visualization.01-benzene.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/15-bandstructure.05-wannier90_states.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/09-etsf_io.01-gs.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_restarted.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/01-free-propagation.02-2_pulses_td.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "flag"
  },
  "outputinterval": {
    "Default": [
      "50"
    ],
    "Description": [
      "The output requested by variable <tt>Output</tt> is written",
      "to the directory <tt>OutputIterDir</tt>",
      "when the iteration number is a multiple of the <tt>OutputInterval</tt> variable.",
      "Subdirectories are named Y.X, where Y is <tt>td</tt>, <tt>scf</tt>, or <tt>unocc</tt>, and",
      "X is the iteration number. To use the working directory, specify <tt>\".\"</tt>",
      "(Output of restart files is instead controlled by <tt>RestartWriteInterval</tt>.)",
      "Must be >= 0. If it is 0, then no output is written. For <tt>gs</tt> and <tt>unocc</tt>",
      "calculations, <tt>OutputDuringSCF</tt> must be set too for this output to be produced.",
      "This variable can also be defined inside the <tt>Output</tt> block.",
      "See <tt>Output</tt>."
    ],
    "Manuals": [],
    "Name": "OutputInterval",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "grid/io_function.F90",
    "Testfiles": [
      "finite_systems_3d/05-output.02-gs.inp",
      "finite_systems_3d/41-gpu-bug.01-C.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "outputiterdir": {
    "CallLine": "call parse_variable(namespace, 'OutputIterDir', \"output_iter\", outp%iter_dir)",
    "Default": [
      "\"output_iter\""
    ],
    "Description": [
      "The name of the directory where <tt>Octopus</tt> stores information",
      "such as the density, forces, etc. requested by variable <tt>Output</tt>",
      "in the format specified by <tt>OutputFormat</tt>.",
      "This information is written while iterating <tt>CalculationMode = gs</tt>, <tt>unocc</tt>, or <tt>td</tt>,",
      "according to <tt>OutputInterval</tt>, and has nothing to do with the restart information."
    ],
    "LineNumber": 373,
    "Manuals": [],
    "Name": "OutputIterDir",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "output/output.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "outputmatrixelements": {
    "Default": [
      "none"
    ],
    "Description": [
      "Specifies what matrix elements to print.",
      "Enabled only if <tt>Output</tt> block includes <tt>matrix_elements</tt>.",
      "The output files go into the <tt>static</tt> directory, except when",
      "running a time-dependent simulation, when the directory <tt>td.XXXXXXX</tt> is used.",
      " ",
      "Example:",
      "<br><br><tt>%OutputMatrixElements",
      "<br>&nbsp;&nbsp;momentum",
      "<br>&nbsp;&nbsp;ks_multipoles",
      "<br>%<br></tt>",
      " ",
      "It is possible to specify only compute the matrix elements for some of the states",
      "using the variables <tt>OutptMEStart</tt> and <tt>OutputMEEnd</tt>."
    ],
    "Manuals": [],
    "Name": "OutputMatrixElements",
    "Options": [
      {
        "Description": [
          "Momentum. Filename: <tt>ks_me_momentum</tt>."
        ],
        "Name": "momentum",
        "Value": "1"
      },
      {
        "Description": [
          "Dimensionless angular momentum <math>\\vec{r} \\times \\vec{k}</math>. Filename: <tt>ks_me_angular_momentum</tt>."
        ],
        "Name": "ang_momentum",
        "Value": "2"
      },
      {
        "Description": [
          "<math>\\left< i \\left| \\hat{T} + V_{ext} \\right| j \\right></math>. Not available with states parallelization."
        ],
        "Name": "one_body",
        "Value": "3"
      },
      {
        "Description": [
          "<math>\\left< ij \\left| \\frac{1}{\\left|\\vec{r}_1-\\vec{r}_2\\right|} \\right| kl \\right></math>.",
          "Not available with states parallelization.",
          "Not available with states parallelization. For periodic system, this is not available for k-point parallelization neither."
        ],
        "Name": "two_body",
        "Value": "4"
      },
      {
        "Description": [
          "<math>\\left< n1-k1, n2-k2 \\left| \\frac{1}{\\left|\\vec{r}_1-\\vec{r}_2\\right|} \\right| n2-k1 n1-k2 \\right></math>.",
          "Not available with states parallelization. For periodic system, this is not available for k-point parallelization neither."
        ],
        "Name": "two_body_exc_k",
        "Value": "5"
      },
      {
        "Description": [
          "See <tt>OutputMEMultipoles</tt>. Not available with states parallelization."
        ],
        "Name": "ks_multipoles",
        "Value": "6"
      },
      {
        "Description": [
          "Prints the dipole matrix elements. Not available with states parallelization.",
          "For periodic systems, the intraband terms (dipole matrix elements between degenerated states)",
          "are set to zero, and only the absolute value of the dipole matrix element is printed.",
          "Not yet supported for spinors."
        ],
        "Name": "dipole",
        "Value": "7"
      }
    ],
    "Section": "Output",
    "Sourcefile": "output/output_me.F90",
    "Testfiles": [
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/13-primitive.01-diamond.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "outputmeend": {
    "CallLine": "call parse_variable(namespace, 'OutputMEEnd', nst, this%st_end)",
    "Default": [
      "1"
    ],
    "Description": [
      "Specifies the highest state/band index used to compute the matrix element.",
      "So far, this is only used for dipole matrix elements."
    ],
    "LineNumber": 174,
    "Manuals": [],
    "Name": "OutputMEEnd",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "output/output_me.F90",
    "Testfiles": [
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/13-primitive.01-diamond.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "outputmemultipoles": {
    "CallLine": "call parse_variable(namespace, 'OutputMEMultipoles', 1, this%ks_multipoles)",
    "Default": [
      "1"
    ],
    "Description": [
      "This variable decides which multipole moments are printed out for",
      "<tt>OutputMatrixElements = ks_multipoles</tt>:",
      " ",
      "In 3D, if, for example, <tt>OutputMEMultipoles = 1</tt>, then the program will print three",
      "files, <tt>ks_me_multipoles.x</tt> (<tt>x</tt>=1,2,3), containing",
      "respectively the (1,-1), (1,0) and (1,1) multipole matrix elements",
      "between Kohn-Sham states.",
      " ",
      "In 2D, this variable is ignored: it will always print two files,",
      "<tt>ks_me_multipoles.i</tt> (<tt>i</tt>=1,2), containing the <math>x</math> and",
      "<math>y</math> dipole matrix elements.",
      " ",
      "In 1D, if, for example, <tt>OutputMEMultipoles = 2</tt>, the program will print two files, containing the",
      "<math>x</math> and <math>x^2</math> matrix elements between Kohn-Sham states."
    ],
    "LineNumber": 152,
    "Manuals": [],
    "Name": "OutputMEMultipoles",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "output/output_me.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "outputmestart": {
    "CallLine": "call parse_variable(namespace, 'OutputMEStart', 1, this%st_start)",
    "Default": [
      "1"
    ],
    "Description": [
      "Specifies the state/band index for starting to compute the matrix element.",
      "So far, this is only used for dipole matrix elements."
    ],
    "LineNumber": 163,
    "Manuals": [],
    "Name": "OutputMEStart",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "output/output_me.F90",
    "Testfiles": [
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/13-primitive.01-diamond.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "outputwfsnumber": {
    "CallLine": "call parse_variable(namespace, 'OutputWfsNumber', default, outp%wfs_list)",
    "Default": [
      "all",
      "states"
    ],
    "Description": [
      "Which wavefunctions to print, in list form: <i>i.e.</i>, \"1-5\" to print the first",
      "five states, \"2,3\" to print the second and the third state, etc.",
      "If more states are specified than available, extra ones will be ignored."
    ],
    "LineNumber": 189,
    "Manuals": [],
    "Name": "OutputWfsNumber",
    "Options": [],
    "Section": "Output",
    "Sourcefile": "output/output.F90",
    "Testfiles": [
      "periodic_systems/09-etsf_io.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "parallelizationnumberslaves": {
    "CallLine": "call parse_variable(namespace, 'ParallelizationNumberSlaves', 0, num_slaves)",
    "Default": [
      "0"
    ],
    "Description": [
      "Slaves are nodes used for task parallelization. The number of",
      "such nodes is given by this variable multiplied by the number",
      "of domains used in domain parallelization."
    ],
    "LineNumber": 346,
    "Manuals": [],
    "Name": "ParallelizationNumberSlaves",
    "Options": [],
    "Section": "Execution::Parallelization",
    "Sourcefile": "basic/multicomm.F90",
    "Testfiles": [
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/06-caetrs.03-kick-tp1.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "parallelizationofderivatives": {
    "CallLine": "call parse_variable(namespace, 'ParallelizationOfDerivatives', NON_BLOCKING, der%comm_method)",
    "Default": [
      "non_blocking"
    ],
    "Description": [
      "This option selects how the communication of mesh boundaries is performed."
    ],
    "LineNumber": 272,
    "Manuals": [],
    "Name": "ParallelizationOfDerivatives",
    "Options": [
      {
        "Description": [
          "Blocking communication."
        ],
        "Name": "blocking",
        "Value": "1"
      },
      {
        "Description": [
          "Communication is based on non-blocking point-to-point communication."
        ],
        "Name": "non_blocking",
        "Value": "2"
      }
    ],
    "Section": "Execution::Parallelization",
    "Sourcefile": "grid/derivatives.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "parallelizationpoissonallnodes": {
    "CallLine": "call parse_variable(namespace, 'ParallelizationPoissonAllNodes', .true., this%all_nodes_default)",
    "Default": [
      "true"
    ],
    "Description": [
      "When running in parallel, this variable selects whether the",
      "Poisson solver should divide the work among all nodes or only",
      "among the parallelization-in-domains groups."
    ],
    "LineNumber": 220,
    "Manuals": [],
    "Name": "ParallelizationPoissonAllNodes",
    "Options": [],
    "Section": "Execution::Parallelization",
    "Sourcefile": "poisson/poisson.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "parallelxc": {
    "CallLine": "call parse_variable(namespace, 'ParallelXC', .true., xcs%parallel)",
    "Default": [
      "true"
    ],
    "Description": [
      "When enabled, additional parallelization",
      "will be used for the calculation of the XC functional."
    ],
    "LineNumber": 370,
    "Manuals": [],
    "Name": "ParallelXC",
    "Options": [],
    "Section": "Execution::Parallelization",
    "Sourcefile": "hamiltonian/xc.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "pardomains": {
    "CallLine": "call parse_variable(namespace, 'ParDomains', default(P_STRATEGY_DOMAINS), parse(P_STRATEGY_DOMAINS))",
    "Default": [
      "auto"
    ],
    "Description": [
      "This variable controls the number of processors used for the",
      "parallelization in domains.",
      "The special value <tt>auto</tt>, the default, lets Octopus",
      "decide how many processors will be assigned for this",
      "strategy. To disable parallelization in domains, you can use",
      "<tt>ParDomains = no</tt> (or set the number of processors to",
      "1).",
      " ",
      "The total number of processors required is the multiplication",
      "of the processors assigned to each parallelization strategy."
    ],
    "LineNumber": 239,
    "Manuals": [],
    "Name": "ParDomains",
    "Options": [
      {
        "Description": [
          "The number of processors is assigned automatically."
        ],
        "Name": "auto",
        "Value": "-1"
      },
      {
        "Description": [
          "This parallelization strategy is not used."
        ],
        "Name": "no",
        "Value": "0"
      }
    ],
    "Section": "Execution::Parallelization",
    "Sourcefile": "basic/multicomm.F90",
    "Testfiles": [
      "multisystem/16-bomd.02-td.inp",
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/24-o2-spin.01-gs.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "real_time/10-bomd.02-td.inp",
      "real_time/05-time_propagation.04-td_domains_states-reorder_ranks.inp",
      "real_time/05-time_propagation.06-td_fast_md.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/05-time_propagation.03-td_domains_states.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/05-time_propagation.05-td_md.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "functionals/12-vdw_solid_c6.01-gs_diamond.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "finite_systems_1d/02-neon_mpi.03-td_calc-kli_par_states.inp",
      "components/10-hartree_pfft.06-fft-parstates.inp",
      "components/07-cholesky_serial.01-real.inp",
      "components/07-cholesky_serial.03-parindep.inp",
      "components/07-cholesky_serial.02-complex.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/06-laser.03-velocity_gauge.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/06-laser.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "parkpoints": {
    "CallLine": "call parse_variable(namespace, 'ParKPoints', default(P_STRATEGY_KPOINTS), parse(P_STRATEGY_KPOINTS))",
    "Default": [
      "auto"
    ],
    "Description": [
      "This variable controls the number of processors used for the",
      "parallelization in K-Points and/or spin.",
      "The special value <tt>auto</tt> lets Octopus decide how many processors will be",
      "assigned for this strategy. To disable parallelization in",
      "KPoints, you can use <tt>ParKPoints = no</tt> (or set the",
      "number of processors to 1).",
      " ",
      "The total number of processors required is the multiplication",
      "of the processors assigned to each parallelization strategy."
    ],
    "LineNumber": 283,
    "Manuals": [],
    "Name": "ParKPoints",
    "Options": [
      {
        "Description": [
          "The number of processors is assigned automatically."
        ],
        "Name": "auto",
        "Value": "-1"
      },
      {
        "Description": [
          "This parallelization strategy is not used."
        ],
        "Name": "no",
        "Value": "0"
      }
    ],
    "Section": "Execution::Parallelization",
    "Sourcefile": "basic/multicomm.F90",
    "Testfiles": [
      "finite_systems_3d/36-kli_x.01-gs.inp",
      "finite_systems_3d/28-carbon_big_box.01-ground_state.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "functionals/03-xc.exx.inp",
      "functionals/01-xc_1d.oep_kli.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/03-xc.sic_pz.inp",
      "functionals/03-xc.pbe0_oep.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/01-xc_1d.oep_exx.inp",
      "functionals/03-xc.b3lyp_oep.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/14-libvdwxc_Be_hcp.01-vdwdfcx.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "functionals/03-xc.kli.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "functionals/12-vdw_solid_c6.01-gs_diamond.inp",
      "functionals/03-xc.fbex.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/15-bandstructure.05-wannier90_states.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/15-bandstructure.03-wannier90_setup.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/09-etsf_io.01-gs.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "parother": {
    "CallLine": "call parse_variable(namespace, 'ParOther', default(P_STRATEGY_OTHER), parse(P_STRATEGY_OTHER))",
    "Default": [
      "auto"
    ],
    "Description": [
      "This variable controls the number of processors used for the",
      "'other' parallelization mode, that is CalculatioMode",
      "dependent. For <tt>CalculationMode = casida</tt>, it means",
      "parallelization in electron-hole pairs.",
      " ",
      "The special value <tt>auto</tt>,",
      "the default, lets Octopus decide how many processors will be",
      "assigned for this strategy. To disable parallelization in",
      "Other, you can use <tt>ParOther = no</tt> (or set the",
      "number of processors to 1).",
      " ",
      "The total number of processors required is the multiplication",
      "of the processors assigned to each parallelization strategy."
    ],
    "LineNumber": 308,
    "Manuals": [],
    "Name": "ParOther",
    "Options": [
      {
        "Description": [
          "The number of processors is assigned automatically."
        ],
        "Name": "auto",
        "Value": "-1"
      },
      {
        "Description": [
          "This parallelization strategy is not used."
        ],
        "Name": "no",
        "Value": "0"
      }
    ],
    "Section": "Execution::Parallelization",
    "Sourcefile": "basic/multicomm.F90",
    "Testfiles": [
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/07-casida-photons.02-photons.inp",
      "linear_response/07-casida-photons.04-elpa.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "parstates": {
    "CallLine": "call parse_variable(namespace, 'ParStates', default(P_STRATEGY_STATES), parse(P_STRATEGY_STATES))",
    "Default": null,
    "Description": [
      "This variable controls the number of processors used for the",
      "parallelization in states. The special value <tt>auto</tt> lets",
      "Octopus decide how many processors will be assigned for this",
      "strategy. To disable parallelization in states, you can use",
      "<tt>ParStates = no</tt> (or set the number of processors to 1).",
      " ",
      "The default value depends on the <tt>CalculationMode</tt>. For",
      "<tt>CalculationMode = td</tt> the default is <tt>auto</tt>, while",
      "for for other modes the default is <tt>no</tt>.",
      " ",
      "The total number of processors required is the multiplication",
      "of the processors assigned to each parallelization strategy."
    ],
    "LineNumber": 262,
    "Manuals": [],
    "Name": "ParStates",
    "Options": [
      {
        "Description": [
          "The number of processors is assigned automatically."
        ],
        "Name": "auto",
        "Value": "-1"
      },
      {
        "Description": [
          "This parallelization strategy is not used."
        ],
        "Name": "no",
        "Value": "0"
      }
    ],
    "Section": "Execution::Parallelization",
    "Sourcefile": "basic/multicomm.F90",
    "Testfiles": [
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/20-eigensolver.05-rmmdiis.inp",
      "finite_systems_3d/31-acetylene_b3lyp.01-gs.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "real_time/05-time_propagation.04-td_domains_states-reorder_ranks.inp",
      "real_time/05-time_propagation.06-td_fast_md.inp",
      "real_time/10-bomd.03-td_restart.inp",
      "real_time/19-td_move_ions.03-td_restart.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/05-time_propagation.03-td_domains_states.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/05-time_propagation.05-td_md.inp",
      "real_time/19-td_move_ions.02-td.inp",
      "real_time/05-time_propagation.02-td_domains.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "functionals/12-vdw_solid_c6.01-gs_diamond.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "finite_systems_1d/02-neon_mpi.02-ground_state-kli_par_domains.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "components/10-hartree_pfft.06-fft-parstates.inp",
      "components/07-cholesky_serial.01-real.inp",
      "components/07-cholesky_serial.03-parindep.inp",
      "components/07-cholesky_serial.02-complex.inp",
      "maxwell/14-quadrupole-pot.01-hydrogen-gs.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "particlecharge": {
    "CallLine": "call parse_variable(namespace, 'ParticleCharge', M_ONE, this%charge(1))",
    "Default": null,
    "Description": [
      "Charge of classical particle"
    ],
    "LineNumber": 111,
    "Manuals": [],
    "Name": "ParticleCharge",
    "Options": [],
    "Section": "ClassicalParticles",
    "Sourcefile": "classical/charged_particle.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "particleinitialposition": {
    "CallLine": "if (parse_block(this%namespace, 'ParticleInitialPosition', blk) == 0) then",
    "Default": null,
    "Description": [
      "Initial position of classical particle, in Km."
    ],
    "LineNumber": 205,
    "Manuals": [],
    "Name": "ParticleInitialPosition",
    "Options": [],
    "Section": "ClassicalParticles",
    "Sourcefile": "classical/classical_particle.F90",
    "Testfiles": [
      "multisystem/03-interactions_creation.03-case3.inp",
      "multisystem/03-interactions_creation.01-case1.inp",
      "multisystem/03-interactions_creation.02-case2.inp",
      "multisystem/03-interactions_creation.04-case4.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "particleinitialvelocity": {
    "CallLine": "if (parse_block(this%namespace, 'ParticleInitialVelocity', blk) == 0) then",
    "Default": null,
    "Description": [
      "Initial velocity of classical particle in Km/s."
    ],
    "LineNumber": 223,
    "Manuals": [],
    "Name": "ParticleInitialVelocity",
    "Options": [],
    "Section": "ClassicalParticles",
    "Sourcefile": "classical/classical_particle.F90",
    "Testfiles": [
      "multisystem/03-interactions_creation.03-case3.inp",
      "multisystem/03-interactions_creation.01-case1.inp",
      "multisystem/03-interactions_creation.02-case2.inp",
      "multisystem/14-lennard-jones.01-classical-particles-N2.inp",
      "multisystem/03-interactions_creation.04-case4.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "particlemass": {
    "CallLine": "call parse_variable(namespace, 'ParticleMass', M_ONE, this%mass(1))",
    "Default": null,
    "Description": [
      "Mass of classical particle in Kg."
    ],
    "LineNumber": 129,
    "Manuals": [],
    "Name": "ParticleMass",
    "Options": [],
    "Section": "ClassicalParticles",
    "Sourcefile": "classical/classical_particle.F90",
    "Testfiles": [
      "multisystem/14-lennard-jones.01-classical-particles-N2.inp",
      "finite_systems_1d/09-morse.02-unocc.inp",
      "finite_systems_1d/09-morse.01-gs.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/06-zbr98.01-ground_state.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "partitionprint": {
    "CallLine": "call parse_variable(namespace, 'PartitionPrint', .true., partition_print)",
    "Default": [
      "true"
    ],
    "Description": [
      "(experimental) If disabled, <tt>Octopus</tt> will not compute",
      "nor print the partition information, such as local points,",
      "no. of neighbours, ghost points and boundary points."
    ],
    "LineNumber": 656,
    "Manuals": [],
    "Name": "PartitionPrint",
    "Options": [],
    "Section": "Execution::Parallelization",
    "Sourcefile": "grid/mesh_init.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "paulihamiltonianterms": {
    "CallLine": "call parse_variable(namespace, 'PauliHamiltonianTerms', fmc_default, pauli_terms)",
    "Default": [
      "non_uniform_vector_potential",
      "+",
      "zeeman_term"
    ],
    "Description": [
      "Terms to be included in the Pauli Hamiltonnian."
    ],
    "LineNumber": 194,
    "Manuals": [],
    "Name": "PauliHamiltonianTerms",
    "Options": [
      {
        "Description": [
          "Adds non-uniform vector potential to the canonical momentum."
        ],
        "Name": "non_uniform_vector_potential",
        "Value": "bit(1)"
      },
      {
        "Description": [
          "Adds the non-uniform Zeeman potential."
        ],
        "Name": "zeeman_term",
        "Value": "bit(2)"
      }
    ],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/mxll_elec_coupling.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "flag"
  },
  "pcmcalcmethod": {
    "CallLine": "call parse_variable(namespace, 'PCMCalcMethod', PCM_CALC_DIRECT, pcm%calc_method)",
    "Default": [
      "pcm_direct"
    ],
    "Description": [
      "Defines the method to be used to obtain the PCM potential."
    ],
    "LineNumber": 999,
    "Manuals": [],
    "Name": "PCMCalcMethod",
    "Options": [
      {
        "Description": [
          "Direct sum of the potential generated by the polarization charges regularized",
          "with a Gaussian smearing [A. Delgado, et al., J Chem Phys 143, 144111 (2015)]."
        ],
        "Name": "pcm_direct",
        "Value": "1"
      },
      {
        "Description": [
          "Solving the Poisson equation for the polarization charge density."
        ],
        "Name": "pcm_poisson",
        "Value": "2"
      }
    ],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "pcmcalculation": {
    "CallLine": "call parse_variable(namespace, 'PCMCalculation', .false., pcm%run_pcm)",
    "Default": [
      "no"
    ],
    "Description": [
      "If true, the calculation is performed accounting for solvation effects",
      "by using the Integral Equation Formalism Polarizable Continuum Model IEF-PCM",
      "formulated in real-space and real-time (<i>J. Chem. Phys.</i> <b>143</b>, 144111 (2015),",
      "<i>Chem. Rev.</i> <b>105</b>, 2999 (2005), <i>J. Chem. Phys.</i> <b>139</b>, 024105 (2013)).",
      "At the moment, this option is available only for <tt>TheoryLevel = DFT</tt>.",
      "PCM is tested for CalculationMode = gs, while still experimental for other values (in particular, CalculationMode = td)."
    ],
    "LineNumber": 3226,
    "Manuals": [],
    "Name": "PCMCalculation",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/32-tdpcm_methane.01-ground_state.inp",
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "real_time/20-pcm-local-field-absorption.01-gs.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "pcmcavity": {
    "CallLine": "call parse_variable(namespace, 'PCMCavity', '', pcm%input_cavity)",
    "Default": null,
    "Description": [
      "Name of the file containing the geometry of the cavity hosting the solute molecule.",
      "The data must be in atomic units and the file must contain the following information sequentially:",
      "T               < Number of tesserae",
      "s_x(1:T)        < coordinates x of the tesserae",
      "s_y(1:T)        < coordinates y of the tesserae",
      "s_z(1:T)        < coordinates z of the tesserae",
      "A(1:T)          < areas of the tesserae",
      "R_sph(1:T)      < Radii of the spheres to which the tesserae belong",
      "normal(1:T,1:3) < Outgoing unitary vectors at the tesserae surfaces"
    ],
    "LineNumber": 669,
    "Manuals": [],
    "Name": "PCMCavity",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "pcmchargesmearnn": {
    "CallLine": "call parse_variable(namespace, 'PCMChargeSmearNN', default_nn, pcm%tess_nn)",
    "Default": [
      "2",
      "*",
      "max_area",
      "*",
      "PCMSmearingFactor"
    ],
    "Description": [
      "Defines the number of nearest neighbor mesh-points to be taken around each",
      "cavity tessera in order to smear the charge when PCMCalcMethod = pcm_poisson.",
      "Setting PCMChargeSmearNN = 1 means first nearest neighbors, PCMChargeSmearNN = 2",
      "second nearest neighbors, and so on.",
      "The default value is such that the neighbor mesh contains points in a radius",
      "equal to the width used for the gaussian smearing."
    ],
    "LineNumber": 1048,
    "Manuals": [],
    "Name": "PCMChargeSmearNN",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "pcmdebyerelaxtime": {
    "CallLine": "call parse_variable(namespace, 'PCMDebyeRelaxTime', M_ZERO, pcm%deb%tau)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "Relaxation time of the solvent within Debye model (<math>\\tau</math>). Recall Debye dieletric function:",
      "<math>\\varepsilon(\\omega)=\\varepsilon_d+\\frac{\\varepsilon_0-\\varepsilon_d}{1-i\\omega\\tau}</math>"
    ],
    "LineNumber": 3254,
    "Manuals": [],
    "Name": "PCMDebyeRelaxTime",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "pcmdrudeldamping": {
    "CallLine": "call parse_variable(namespace, 'PCMDrudeLDamping', M_ZERO, pcm%drl%gm)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "Damping factor of the solvent charges oscillations within Drude-Lorentz model (<math>\\gamma</math>).",
      "Recall Drude-Lorentz dielectric function: <math>\\varepsilon(\\omega)=1+\\frac{A}{\\omega_0^2-\\omega^2+i\\gamma\\omega}</math>"
    ],
    "LineNumber": 3259,
    "Manuals": [],
    "Name": "PCMDrudeLDamping",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "pcmdrudelomega": {
    "CallLine": "call parse_variable(namespace, 'PCMDrudeLOmega', sqrt(M_ONE/(pcm%deb%eps_0-M_ONE)), pcm%drl%w0)",
    "Default": [
      "<math>\\sqrt{1/(\\varepsilon_0-1)}</math>"
    ],
    "Description": [
      "Resonance frequency of the solvent within Drude-Lorentz model (<math>\\omega_0</math>).",
      "Recall Drude-Lorentz dielectric function: <math>\\varepsilon(\\omega)=1+\\frac{A}{\\omega_0^2-\\omega^2+i\\gamma\\omega}</math>",
      "Default values of <math>\\omega_0</math> guarantee to recover static dielectric constant."
    ],
    "LineNumber": 3257,
    "Manuals": [],
    "Name": "PCMDrudeLOmega",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "pcmdynamicepsilon": {
    "CallLine": "call parse_variable(namespace, 'PCMDynamicEpsilon', pcm%deb%eps_0, pcm%deb%eps_d)",
    "Default": [
      "PCMStaticEpsilon"
    ],
    "Description": [
      "High-frequency dielectric constant of the solvent (<math>\\varepsilon_d</math>).",
      "<math>\\varepsilon_d=\\varepsilon_0</math> indicate equilibrium with solvent."
    ],
    "LineNumber": 3263,
    "Manuals": [],
    "Name": "PCMDynamicEpsilon",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "pcmeominitialcharges": {
    "CallLine": "call parse_variable(namespace, 'PCMEoMInitialCharges', 0, pcm%initial_asc)",
    "Default": [
      "0"
    ],
    "Description": [
      "If =0 the propagation of the solvent polarization charges starts from internally generated initial charges",
      "in equilibrium with the initial potential.",
      "For Debye EOM-PCM, if >0 the propagation of the solvent polarization charges starts from initial charges from input file.",
      "if =1, initial pol. charges due to solute electrons are read from input file.",
      "else if =2, initial pol. charges due to external potential are read from input file.",
      "else if =3, initial pol. charges due to solute electrons and external potential are read from input file.",
      "Files should be located in pcm directory and are called ASC_e.dat and ASC_ext.dat, respectively.",
      "The latter files are generated after any PCM run and contain the last values of the polarization charges."
    ],
    "LineNumber": 410,
    "Manuals": [],
    "Name": "PCMEoMInitialCharges",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "pcmepsilonmodel": {
    "CallLine": "call parse_variable(namespace, 'PCMEpsilonModel', PCM_DEBYE_MODEL, pcm%which_eps)",
    "Default": [
      "pcm_debye"
    ],
    "Description": [
      "Define the dielectric function model."
    ],
    "LineNumber": 3249,
    "Manuals": [],
    "Name": "PCMEpsilonModel",
    "Options": [
      {
        "Description": [
          "Debye model: <math>\\varepsilon(\\omega)=\\varepsilon_d+\\frac{\\varepsilon_0-\\varepsilon_d}{1-i\\omega\\tau}</math>"
        ],
        "Name": "pcm_debye",
        "Value": "1"
      },
      {
        "Description": [
          "Drude-Lorentz model: <math>\\varepsilon(\\omega)=1+\\frac{A}{\\omega_0^2-\\omega^2+i\\gamma\\omega}</math>"
        ],
        "Name": "pcm_drude",
        "Value": "2"
      }
    ],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "pcmgamessbenchmark": {
    "CallLine": "call parse_variable(namespace, 'PCMGamessBenchmark', .false., gamess_benchmark)",
    "Default": [
      ".false."
    ],
    "Description": [
      "If PCMGamessBenchmark is set to \"yes\", the pcm_matrix is also written in a Gamess format.",
      "for benchamarking purposes."
    ],
    "LineNumber": 598,
    "Manuals": [],
    "Name": "PCMGamessBenchmark",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "pcmkick": {
    "CallLine": "call parse_variable(namespace, 'PCMKick', .false., pcm%kick_like)",
    "Default": [
      "no"
    ],
    "Description": [
      "This variable controls the effect the kick has on the polarization of the solvent.",
      "If .true.  ONLY the FAST degrees-of-freedom of the solvent follow the kick. The potential due to polarization charges behaves",
      "as another kick, i.e., it is a delta-perturbation.",
      "If .false. ALL           degrees-of-freedom of the solvent follow the kick. The potential due to polarization charges evolves",
      "following an equation of motion. When Debye dielectric model is used, just a part of the potential behaves as another kick."
    ],
    "LineNumber": 556,
    "Manuals": [],
    "Name": "PCMKick",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "pcmlocalfield": {
    "CallLine": "call parse_variable(namespace, 'PCMLocalField', .false., pcm%localf)",
    "Default": [
      "no"
    ],
    "Description": [
      "This variable is a flag for including local field effects when an external field is applied. The total field interacting with",
      "the molecule (also known as cavity field) is not the bare field in the solvent (the so-called Maxwell field), but it also",
      "include a contribution due to the polarization of the solvent. The latter is calculated here within the PCM framework.",
      "See [G. Gil, et al., J. Chem. Theory Comput., 2019, 15 (4), pp 2306\u20132319]."
    ],
    "LineNumber": 3228,
    "Manuals": [],
    "Name": "PCMLocalField",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "pcmqtottol": {
    "CallLine": "call parse_variable(namespace, 'PCMQtotTol', M_HALF, pcm%q_tot_tol)",
    "Default": [
      "0.5"
    ],
    "Description": [
      "If <tt>PCMRenormCharges=.true.</tt> and  <math>\\delta Q = |[\\sum_i q_i| - ((\\epsilon-1)/\\epsilon)*|Q_M]|>PCMQtotTol</math>",
      "the polarization charges will be normalized as",
      "<math>q_i^\\prime=q_i + signfunction(e, n, \\delta Q) (q_i/q_{tot})*\\delta Q</math>",
      "with <math>q_{tot} = \\sum_i q_i</math>. For values of <math>\\delta Q > 0.5</math>",
      "(printed by the code in the file pcm/pcm_info.out) even, if polarization charges are renormalized,",
      "the calculated results might be inaccurate or erroneous."
    ],
    "LineNumber": 625,
    "Manuals": [],
    "Name": "PCMQtotTol",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "pcmradiusscaling": {
    "CallLine": "call parse_variable(namespace, 'PCMRadiusScaling', default_value, pcm%scale_r)",
    "Default": null,
    "Description": [
      "Scales the radii of the spheres used to build the solute cavity surface.",
      "The default value depends on the choice of <tt>PCMVdWRadii</tt>:",
      "1.2 for <tt>pcm_vdw_optimized</tt> and 1.0 for <tt>pcm_vdw_species</tt>."
    ],
    "LineNumber": 303,
    "Manuals": [],
    "Name": "PCMRadiusScaling",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [
      "real_time/20-pcm-local-field-absorption.01-gs.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "pcmrenormcharges": {
    "CallLine": "call parse_variable(namespace, 'PCMRenormCharges', .false., pcm%renorm_charges)",
    "Default": [
      ".false."
    ],
    "Description": [
      "If .true. renormalization of the polarization charges is performed to enforce fulfillment",
      "of the Gauss law, <math>\\sum_i q_i^{e/n} = -[(\\epsilon-1)/\\epsilon] Q_M^{e/n}</math> where",
      "<math>q_i^{e/n}</math> are the polarization charges induced by the electrons/nuclei of the molecule",
      "and <math>Q_M^{e/n}</math> is the nominal electronic/nuclear charge of the system. This can be needed",
      "to treat molecules in weakly polar solvents."
    ],
    "LineNumber": 611,
    "Manuals": [],
    "Name": "PCMRenormCharges",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "pcmsmearingfactor": {
    "CallLine": "call parse_variable(namespace, 'PCMSmearingFactor', M_ONE, pcm%gaussian_width)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "Parameter used to control the width (area of each tessera) of the Gaussians used to distribute",
      "the polarization charges on each tessera (arXiv:1507.05471). If set to zero, the solvent",
      "reaction potential in real-space is defined by using point charges."
    ],
    "LineNumber": 642,
    "Manuals": [],
    "Name": "PCMSmearingFactor",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "pcmsolute": {
    "CallLine": "call parse_variable(namespace, 'PCMSolute', .true., pcm%solute)",
    "Default": [
      "yes"
    ],
    "Description": [
      "This variable is a flag for including polarization effects of the solvent due to the solute.",
      "(Useful for analysis) When external fields are applied, turning off the solvent-molecule interaction (PCMSolute=no) and",
      "activating the solvent polarization due to the applied field (PCMLocalField=yes) allows to include only local field effects."
    ],
    "LineNumber": 533,
    "Manuals": [],
    "Name": "PCMSolute",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "pcmspheresonh": {
    "CallLine": "call parse_variable(namespace, 'PCMSpheresOnH', .false., add_spheres_h)",
    "Default": [
      "no"
    ],
    "Description": [
      "If true, spheres centered at the Hydrogens atoms are included to build the solute cavity surface."
    ],
    "LineNumber": 680,
    "Manuals": [],
    "Name": "PCMSpheresOnH",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [
      "real_time/20-pcm-local-field-absorption.01-gs.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "pcmstaticepsilon": {
    "CallLine": "call parse_variable(namespace, 'PCMStaticEpsilon' , M_ONE, pcm%deb%eps_0)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "Static dielectric constant of the solvent (<math>\\varepsilon_0</math>). 1.0 indicates gas phase."
    ],
    "LineNumber": 3246,
    "Manuals": [],
    "Name": "PCMStaticEpsilon",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/32-tdpcm_methane.01-ground_state.inp",
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "real_time/20-pcm-local-field-absorption.01-gs.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "pcmtdlevel": {
    "CallLine": "call parse_variable(namespace, 'PCMTDLevel' , PCM_TD_EQ, pcm%tdlevel)",
    "Default": [
      "eq"
    ],
    "Description": [
      "When CalculationMode=td, PCMTDLevel it sets the way the time-depenendent solvent polarization is propagated."
    ],
    "LineNumber": 3242,
    "Manuals": [],
    "Name": "PCMTDLevel",
    "Options": [
      {
        "Description": [
          "If PCMTDLevel=eq, the solvent is always in equilibrium with the solute or the external field, i.e.,",
          "the solvent polarization follows instantaneously the changes in solute density or in the external field.",
          "PCMTDLevel=neq and PCMTDLevel=eom are both nonequilibrium runs."
        ],
        "Name": "eq",
        "Value": "0"
      },
      {
        "Description": [
          "If PCMTDLevel=neq, solvent polarization charges are splitted in two terms:",
          "one that follows instantaneously the changes in the solute density or in the external field (dynamical polarization charges),",
          "and another that lag behind in the evolution w.r.t. the solute density or the external field (inertial polarization charges)."
        ],
        "Name": "neq",
        "Value": "1"
      },
      {
        "Description": [
          "If PCMTDLevel=eom, solvent polarization charges evolves following an equation of motion, generalizing 'neq' propagation.",
          "The equation of motion used here depends on the value of PCMEpsilonModel."
        ],
        "Name": "eom",
        "Value": "2"
      }
    ],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "pcmtessmindistance": {
    "CallLine": "call parse_variable(namespace, 'PCMTessMinDistance', 0.1_real64, min_distance)",
    "Default": [
      "0.1"
    ],
    "Description": [
      "Minimum distance between tesserae.",
      "Any two tesserae having smaller distance in the starting tesselation will be merged together."
    ],
    "LineNumber": 758,
    "Manuals": [],
    "Name": "PCMTessMinDistance",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "pcmtesssubdivider": {
    "CallLine": "call parse_variable(namespace, 'PCMTessSubdivider', 1, subdivider)",
    "Default": [
      "1"
    ],
    "Description": [
      "Allows to subdivide further each tessera refining the discretization of the cavity tesselation.",
      "Can take only two values, 1 or 4. 1 corresponds to 60 tesserae per sphere, while 4 corresponds to 240 tesserae per sphere."
    ],
    "LineNumber": 746,
    "Manuals": [],
    "Name": "PCMTessSubdivider",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "pcmupdateiter": {
    "CallLine": "call parse_variable(namespace, 'PCMUpdateIter', 1, pcm%update_iter)",
    "Default": [
      "1"
    ],
    "Description": [
      "Defines how often the PCM potential is updated during time propagation."
    ],
    "LineNumber": 587,
    "Manuals": [],
    "Name": "PCMUpdateIter",
    "Options": [],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "pcmvdwradii": {
    "CallLine": "call parse_variable(namespace, 'PCMVdWRadii', PCM_VDW_OPTIMIZED, pcm_vdw_type)",
    "Default": [
      "pcm_vdw_optimized"
    ],
    "Description": [
      "This variable selects which van der Waals radius will be used to generate the solvent cavity."
    ],
    "LineNumber": 285,
    "Manuals": [],
    "Name": "PCMVdWRadii",
    "Options": [
      {
        "Description": [
          "Use the van der Waals radius optimized by Stefan Grimme in J. Comput. Chem. 27: 1787-1799, 2006,",
          "except for C, N and O, reported in J. Chem. Phys. 120, 3893 (2004)."
        ],
        "Name": "pcm_vdw_optimized",
        "Value": "1"
      },
      {
        "Description": [
          "The vdW radii are set from the <tt>share/pseudopotentials/elements</tt> file. These values are obtained from",
          "Alvarez S., Dalton Trans., 2013, 42, 8617-8636. Values can be changed in the <tt>Species</tt> block."
        ],
        "Name": "pcm_vdw_species",
        "Value": "2"
      }
    ],
    "Section": "Hamiltonian::PCM",
    "Sourcefile": "hamiltonian/pcm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "pdbcoordinates": {
    "Default": null,
    "Description": [
      "If this variable is present, the program tries to read the atomic coordinates",
      "from the file specified by its value. The PDB (<a href=http://www.rcsb.org/pdb>Protein Data Bank</a>)",
      "format is quite complicated, and it goes",
      "well beyond the scope of this manual. You can find a comprehensive",
      "description <a href=http://www.wwpdb.org/docs.html>here</a>.",
      "From the plethora of instructions defined in the PDB standard, <tt>Octopus</tt>",
      "only reads two, <tt>ATOM</tt> and <tt>HETATOM</tt>. From these fields, it reads:",
      "<ul>",
      "<li> columns 13-16: The species; in fact <tt>Octopus</tt> only cares about the",
      "first letter - <tt>CA</tt> and <tt>CB</tt> will both refer to carbon - so elements whose",
      "chemical symbol has more than one letter cannot be represented in this way.",
      "So, if you want to run mercury (Hg), please use one of the other methods",
      "to input the coordinates.",
      "<li> columns 18-21: The residue. Ignored.",
      "<li> columns 31-54: The Cartesian coordinates. The Fortran format is <tt>(3f8.3)</tt>.</li>",
      "<li> columns 61-65: Classical charge of the atom. Required if reading classical atoms, ignored otherwise.",
      "The Fortran format is <tt>(f6.2)</tt>.</li>",
      "</ul>",
      "NOTE: The coordinates are treated in the units specified by <tt>Units</tt> and/or <tt>UnitsInput</tt>."
    ],
    "Manuals": [],
    "Name": "PDBCoordinates",
    "Options": [],
    "Section": "System::Coordinates",
    "Sourcefile": "ions/read_coords.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "pdbgoconstrains": {
    "Default": null,
    "Description": [
      "Like <tt>XYZGOConstrains</tt> but in PDB format, as in <tt>PDBCoordinates</tt>."
    ],
    "Manuals": [],
    "Name": "PDBGOConstrains",
    "Options": [],
    "Section": "Calculation Modes::Geometry Optimization",
    "Sourcefile": "main/geom_opt.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "pdbvelocities": {
    "Default": null,
    "Description": [
      "Like <tt>XYZVelocities</tt> but in PDB format, as in <tt>PDBCoordinates</tt>."
    ],
    "Manuals": [],
    "Name": "PDBVelocities",
    "Options": [],
    "Section": "System::Velocities",
    "Sourcefile": "ions/ion_dynamics.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "periodicboundarymask": {
    "CallLine": "if (parse_block(namespace, 'PeriodicBoundaryMask', blk) < 0) then",
    "Default": null,
    "Description": [
      "(Experimental) Defines a mask for which periodic boundaries are replaced by zero boundary conditions."
    ],
    "LineNumber": 181,
    "Manuals": [],
    "Name": "PeriodicBoundaryMask",
    "Options": [],
    "Section": "Mesh",
    "Sourcefile": "grid/grid.F90",
    "Testfiles": [
      "periodic_systems/20-masked_periodic_boundaries.01-graphene.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "periodicdimensions": {
    "CallLine": "call parse_variable(namespace, 'PeriodicDimensions', 0, this%periodic_dim)",
    "Default": [
      "0"
    ],
    "Description": [
      "Define how many directions are to be considered periodic. It has to be a number",
      "between zero and <tt>Dimensions</tt>."
    ],
    "LineNumber": 92,
    "Manuals": [],
    "Name": "PeriodicDimensions",
    "Options": [
      {
        "Description": [
          "No direction is periodic (molecule)."
        ],
        "Name": "0"
      },
      {
        "Description": [
          "The <i>x</i> direction is periodic."
        ],
        "Name": "1"
      },
      {
        "Description": [
          "The <i>x</i> and <i>y</i> directions are periodic."
        ],
        "Name": "2"
      },
      {
        "Description": [
          "The <i>x</i>, <i>y</i>, and <i>z</i> directions are periodic."
        ],
        "Name": "3"
      }
    ],
    "Section": "System",
    "Sourcefile": "basic/space.F90",
    "Testfiles": [
      "real_time/22-td_move_ions_periodic.02-td.inp",
      "symmetries/05-hexagonal.23-spg165.inp",
      "symmetries/02-monoclinic.05-spg7.inp",
      "symmetries/05-hexagonal.41-spg183.inp",
      "symmetries/02-monoclinic.04-spg6.inp",
      "symmetries/03-orthorombic.14-spg29.inp",
      "symmetries/04-tetragonal.27-spg101.inp",
      "symmetries/06-cubic.29-spg223.inp",
      "symmetries/03-orthorombic.53-spg68.inp",
      "symmetries/04-tetragonal.33-spg107.inp",
      "symmetries/02-monoclinic.07-spg9.inp",
      "symmetries/06-cubic.04-spg198.inp",
      "symmetries/04-tetragonal.51-spg125.inp",
      "symmetries/04-tetragonal.03-spg77.inp",
      "symmetries/03-orthorombic.31-spg46.inp",
      "symmetries/04-tetragonal.08-spg82.inp",
      "symmetries/03-orthorombic.05-spg20.inp",
      "symmetries/04-tetragonal.36-spg110.inp",
      "symmetries/05-hexagonal.15-spg157.inp",
      "symmetries/02-monoclinic.12-spg14.inp",
      "symmetries/03-orthorombic.19-spg34.inp",
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "symmetries/05-hexagonal.28-spg170.inp",
      "symmetries/04-tetragonal.23-spg97.inp",
      "symmetries/04-tetragonal.48-spg122.inp",
      "symmetries/04-tetragonal.21-spg95.inp",
      "symmetries/06-cubic.21-spg215.inp",
      "symmetries/02-monoclinic.09-spg11.inp",
      "symmetries/04-tetragonal.18-spg92.inp",
      "symmetries/04-tetragonal.52-spg126.inp",
      "symmetries/03-orthorombic.55-spg70.inp",
      "symmetries/03-orthorombic.09-spg24.inp",
      "symmetries/04-tetragonal.62-spg136.inp",
      "symmetries/02-monoclinic.08-spg10.inp",
      "symmetries/04-tetragonal.38-spg112.inp",
      "symmetries/04-tetragonal.49-spg123.inp",
      "symmetries/03-orthorombic.20-spg35.inp",
      "symmetries/06-cubic.05-spg199.inp",
      "symmetries/06-cubic.35-spg229.inp",
      "symmetries/02-monoclinic.03-spg5.inp",
      "symmetries/02-monoclinic.06-spg8.inp",
      "symmetries/06-cubic.06-spg200.inp",
      "symmetries/04-tetragonal.57-spg131.inp",
      "symmetries/04-tetragonal.45-spg119.inp",
      "symmetries/05-hexagonal.49-spg191.inp",
      "symmetries/03-orthorombic.26-spg41.inp",
      "symmetries/06-cubic.15-spg209.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/06-cubic.08-spg202.inp",
      "symmetries/04-tetragonal.35-spg109.inp",
      "symmetries/03-orthorombic.07-spg22.inp",
      "symmetries/04-tetragonal.32-spg106.inp",
      "symmetries/04-tetragonal.12-spg86.inp",
      "symmetries/06-cubic.01-spg195.inp",
      "symmetries/05-hexagonal.38-spg180.inp",
      "symmetries/04-tetragonal.01-spg75.inp",
      "symmetries/03-orthorombic.25-spg40.inp",
      "symmetries/04-tetragonal.39-spg113.inp",
      "symmetries/05-hexagonal.02-spg144.inp",
      "symmetries/05-hexagonal.06-spg148.inp",
      "symmetries/06-cubic.32-spg226.inp",
      "symmetries/03-orthorombic.47-spg62.inp",
      "symmetries/05-hexagonal.20-spg162.inp",
      "symmetries/06-cubic.24-spg218.inp",
      "symmetries/06-cubic.30-spg224.inp",
      "symmetries/05-hexagonal.12-spg154.inp",
      "symmetries/05-hexagonal.07-spg149.inp",
      "symmetries/05-hexagonal.27-spg169.inp",
      "symmetries/03-orthorombic.45-spg60.inp",
      "symmetries/05-hexagonal.19-spg161.inp",
      "symmetries/05-hexagonal.16-spg158.inp",
      "symmetries/05-hexagonal.48-spg190.inp",
      "symmetries/06-cubic.09-spg203.inp",
      "symmetries/03-orthorombic.24-spg39.inp",
      "symmetries/03-orthorombic.50-spg65.inp",
      "symmetries/06-cubic.34-spg228.inp",
      "symmetries/05-hexagonal.42-spg184.inp",
      "symmetries/03-orthorombic.23-spg38.inp",
      "symmetries/04-tetragonal.13-spg87.inp",
      "symmetries/06-cubic.02-spg196.inp",
      "symmetries/02-monoclinic.13-spg15.inp",
      "symmetries/05-hexagonal.45-spg187.inp",
      "symmetries/05-hexagonal.22-spg164.inp",
      "symmetries/03-orthorombic.43-spg58.inp",
      "symmetries/03-orthorombic.34-spg49.inp",
      "symmetries/04-tetragonal.47-spg121.inp",
      "symmetries/02-monoclinic.02-spg4.inp",
      "symmetries/03-orthorombic.39-spg54.inp",
      "symmetries/04-tetragonal.17-spg91.inp",
      "symmetries/04-tetragonal.22-spg96.inp",
      "symmetries/05-hexagonal.35-spg177.inp",
      "symmetries/03-orthorombic.13-spg28.inp",
      "symmetries/05-hexagonal.13-spg155.inp",
      "symmetries/03-orthorombic.42-spg57.inp",
      "symmetries/06-cubic.12-spg206.inp",
      "symmetries/02-monoclinic.10-spg12.inp",
      "symmetries/06-cubic.07-spg201.inp",
      "symmetries/03-orthorombic.36-spg51.inp",
      "symmetries/05-hexagonal.44-spg186.inp",
      "symmetries/04-tetragonal.04-spg78.inp",
      "symmetries/05-hexagonal.21-spg163.inp",
      "symmetries/04-tetragonal.02-spg76.inp",
      "symmetries/03-orthorombic.22-spg37.inp",
      "symmetries/05-hexagonal.32-spg174.inp",
      "symmetries/03-orthorombic.35-spg50.inp",
      "symmetries/03-orthorombic.17-spg32.inp",
      "symmetries/05-hexagonal.17-spg159.inp",
      "symmetries/03-orthorombic.04-spg19.inp",
      "symmetries/04-tetragonal.20-spg94.inp",
      "symmetries/06-cubic.20-spg214.inp",
      "symmetries/04-tetragonal.65-spg139.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/03-orthorombic.32-spg47.inp",
      "symmetries/03-orthorombic.02-spg17.inp",
      "symmetries/04-tetragonal.15-spg89.inp",
      "symmetries/03-orthorombic.57-spg72.inp",
      "symmetries/03-orthorombic.15-spg30.inp",
      "symmetries/03-orthorombic.49-spg64.inp",
      "symmetries/06-cubic.11-spg205.inp",
      "symmetries/04-tetragonal.30-spg104.inp",
      "symmetries/04-tetragonal.59-spg133.inp",
      "symmetries/03-orthorombic.54-spg69.inp",
      "symmetries/03-orthorombic.41-spg56.inp",
      "symmetries/06-cubic.19-spg213.inp",
      "symmetries/05-hexagonal.05-spg147.inp",
      "symmetries/04-tetragonal.25-spg99.inp",
      "symmetries/03-orthorombic.58-spg73.inp",
      "symmetries/04-tetragonal.43-spg117.inp",
      "symmetries/01-triclinic.02-spg2.inp",
      "symmetries/04-tetragonal.42-spg116.inp",
      "symmetries/05-hexagonal.50-spg192.inp",
      "symmetries/04-tetragonal.68-spg142.inp",
      "symmetries/04-tetragonal.40-spg114.inp",
      "symmetries/05-hexagonal.34-spg176.inp",
      "symmetries/04-tetragonal.63-spg137.inp",
      "symmetries/06-cubic.31-spg225.inp",
      "symmetries/05-hexagonal.36-spg178.inp",
      "symmetries/05-hexagonal.30-spg172.inp",
      "symmetries/03-orthorombic.48-spg63.inp",
      "symmetries/04-tetragonal.11-spg85.inp",
      "symmetries/05-hexagonal.40-spg182.inp",
      "symmetries/05-hexagonal.11-spg153.inp",
      "symmetries/04-tetragonal.41-spg115.inp",
      "symmetries/01-triclinic.16-spg16.inp",
      "symmetries/04-tetragonal.26-spg100.inp",
      "symmetries/05-hexagonal.24-spg166.inp",
      "symmetries/03-orthorombic.56-spg71.inp",
      "symmetries/06-cubic.16-spg210.inp",
      "symmetries/06-cubic.25-spg219.inp",
      "symmetries/03-orthorombic.51-spg66.inp",
      "symmetries/05-hexagonal.47-spg189.inp",
      "symmetries/04-tetragonal.24-spg98.inp",
      "symmetries/05-hexagonal.51-spg193.inp",
      "symmetries/03-orthorombic.37-spg52.inp",
      "symmetries/05-hexagonal.39-spg181.inp",
      "symmetries/03-orthorombic.27-spg42.inp",
      "symmetries/04-tetragonal.58-spg132.inp",
      "symmetries/04-tetragonal.31-spg105.inp",
      "symmetries/04-tetragonal.06-spg80.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "symmetries/05-hexagonal.10-spg152.inp",
      "symmetries/05-hexagonal.01-spg143.inp",
      "symmetries/05-hexagonal.04-spg146.inp",
      "symmetries/04-tetragonal.19-spg93.inp",
      "symmetries/03-orthorombic.08-spg23.inp",
      "symmetries/07-symmetrization_lda.01-spg2_sym.inp",
      "symmetries/04-tetragonal.29-spg103.inp",
      "symmetries/06-cubic.27-spg221.inp",
      "symmetries/04-tetragonal.56-spg130.inp",
      "symmetries/06-cubic.36-spg230.inp",
      "symmetries/04-tetragonal.55-spg129.inp",
      "symmetries/04-tetragonal.44-spg118.inp",
      "symmetries/04-tetragonal.53-spg127.inp",
      "symmetries/03-orthorombic.11-spg26.inp",
      "symmetries/05-hexagonal.14-spg156.inp",
      "symmetries/06-cubic.33-spg227.inp",
      "symmetries/05-hexagonal.43-spg185.inp",
      "symmetries/03-orthorombic.40-spg55.inp",
      "symmetries/06-cubic.13-spg207.inp",
      "symmetries/06-cubic.03-spg197.inp",
      "symmetries/06-cubic.14-spg208.inp",
      "symmetries/02-monoclinic.11-spg13.inp",
      "symmetries/06-cubic.17-spg211.inp",
      "symmetries/03-orthorombic.30-spg45.inp",
      "symmetries/06-cubic.28-spg222.inp",
      "symmetries/05-hexagonal.46-spg188.inp",
      "symmetries/03-orthorombic.16-spg31.inp",
      "symmetries/06-cubic.23-spg217.inp",
      "symmetries/04-tetragonal.10-spg84.inp",
      "symmetries/06-cubic.18-spg212.inp",
      "symmetries/04-tetragonal.66-spg140.inp",
      "symmetries/04-tetragonal.16-spg90.inp",
      "symmetries/04-tetragonal.61-spg135.inp",
      "symmetries/03-orthorombic.46-spg61.inp",
      "symmetries/01-triclinic.01-spg1.inp",
      "symmetries/03-orthorombic.29-spg44.inp",
      "symmetries/04-tetragonal.67-spg141.inp",
      "symmetries/03-orthorombic.18-spg33.inp",
      "symmetries/05-hexagonal.33-spg175.inp",
      "symmetries/05-hexagonal.25-spg167.inp",
      "symmetries/04-tetragonal.64-spg138.inp",
      "symmetries/03-orthorombic.01-spg16.inp",
      "symmetries/03-orthorombic.21-spg36.inp",
      "symmetries/05-hexagonal.52-spg194.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "symmetries/06-cubic.26-spg220.inp",
      "symmetries/03-orthorombic.52-spg67.inp",
      "symmetries/04-tetragonal.37-spg111.inp",
      "symmetries/04-tetragonal.28-spg102.inp",
      "symmetries/05-hexagonal.26-spg168.inp",
      "symmetries/05-hexagonal.31-spg173.inp",
      "symmetries/03-orthorombic.59-spg74.inp",
      "symmetries/03-orthorombic.33-spg48.inp",
      "symmetries/04-tetragonal.50-spg124.inp",
      "symmetries/05-hexagonal.37-spg179.inp",
      "symmetries/04-tetragonal.60-spg134.inp",
      "symmetries/03-orthorombic.10-spg25.inp",
      "symmetries/05-hexagonal.08-spg150.inp",
      "symmetries/03-orthorombic.03-spg18.inp",
      "symmetries/05-hexagonal.29-spg171.inp",
      "symmetries/04-tetragonal.54-spg128.inp",
      "symmetries/03-orthorombic.44-spg59.inp",
      "symmetries/05-hexagonal.03-spg145.inp",
      "symmetries/05-hexagonal.18-spg160.inp",
      "symmetries/03-orthorombic.06-spg21.inp",
      "symmetries/04-tetragonal.14-spg88.inp",
      "symmetries/04-tetragonal.34-spg108.inp",
      "symmetries/05-hexagonal.09-spg151.inp",
      "symmetries/03-orthorombic.12-spg27.inp",
      "symmetries/03-orthorombic.28-spg43.inp",
      "symmetries/04-tetragonal.46-spg120.inp",
      "symmetries/03-orthorombic.38-spg53.inp",
      "symmetries/02-monoclinic.01-spg3.inp",
      "symmetries/06-cubic.22-spg216.inp",
      "symmetries/06-cubic.10-spg204.inp",
      "symmetries/04-tetragonal.07-spg81.inp",
      "symmetries/04-tetragonal.09-spg83.inp",
      "symmetries/04-tetragonal.05-spg79.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/13-arpes_2d.01-gs.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "tutorials/06-octopus_basics-periodic_systems.02-silicon_converged.inp",
      "tutorials/06-octopus_basics-periodic_systems.01-silicon.inp",
      "tutorials/06-octopus_basics-periodic_systems.03-bandstructure.inp",
      "functionals/03-xc.mvorb_hse06_fock.inp",
      "functionals/10-vdw_d3_dna.01-gs_novdw.inp",
      "functionals/14-libvdwxc_Be_hcp.01-vdwdfcx.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "functionals/10-vdw_d3_dna.02-gs_d3.inp",
      "functionals/12-vdw_solid_c6.01-gs_diamond.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/04-silicon.02-kdotp.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/22-berry.02-cubic_Si.inp",
      "periodic_systems/11-silicon_force.01-gs.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/05-lithium.04-dielectric_function.inp",
      "periodic_systems/11-silicon_force.02-nlcc.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.02_kdotp.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/27-Ar.02-kdotp.inp",
      "periodic_systems/13-primitive.03-bcc_iron.inp",
      "periodic_systems/05-lithium.05-tdtdm.inp",
      "periodic_systems/26-Na.01-gs.inp",
      "periodic_systems/22-berry.01-cubic_Si_gs.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/01-free_electrons.02-unocc.inp",
      "periodic_systems/15-bandstructure.04-wannier90_output.inp",
      "periodic_systems/06-h2o_pol_lr.01_gs.inp",
      "periodic_systems/19-unfolding.03-unocc.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/15-bandstructure.05-wannier90_states.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/01-free_electrons.01-ground_state.inp",
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/15-bandstructure.03-wannier90_setup.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/02-cosine_potential.02-unocc.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/05-lithium.01-gs.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "periodic_systems/32-photodoping.01-gs.inp",
      "periodic_systems/07-mgga.02-tb09_gs_nosymm.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/20-masked_periodic_boundaries.01-graphene.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/27-Ar.01-gs.inp",
      "periodic_systems/24-hartree_fock_1D.01-gs.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "periodic_systems/31-magnon_1d.01-gs.inp",
      "periodic_systems/09-etsf_io.01-gs.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/26-Na.02-kdotp.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/03-sodium_chain.03-ground_state_disp.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/04-silicon.03-emresp.inp",
      "periodic_systems/10-berkeleygw.02-unocc.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/15-bandstructure.02-unocc.inp",
      "periodic_systems/23-hybrids.01-ace.inp",
      "periodic_systems/19-unfolding.02-setup.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/13-primitive.01-diamond.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/19-unfolding.04-run.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/08-benzene_supercell.01-gs.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "periodic_systems/02-cosine_potential.01-ground_state.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "components/22-density_calc.01-Si.inp",
      "components/20-dft_u.04-complex_submesh.inp",
      "components/26-batch_ops.02-jellium-complex.inp",
      "components/05-hartree_3d_fft.04-3d_3d_periodic.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/26-batch_ops.03-jellium-spinor.inp",
      "components/10-hartree_pfft.03-3d_1d_periodic.inp",
      "components/03-derivatives_3d.02-non-orthogonal.inp",
      "components/26-batch_ops.01-jellium.inp",
      "components/10-hartree_pfft.05-3d_2d_periodic.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/21-hamiltonian_apply.01-Si.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/24-boundaries.01-jellium.inp",
      "components/10-hartree_pfft.04-3d_3d_periodic.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/03-derivatives_3d.02-non-orthogonal_unpacked.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/05-hartree_3d_fft.03-3d_1d_periodic.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "components/05-hartree_3d_fft.05-3d_2d_periodic.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/09-basis_from_states.01-lda.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "pes_flux_anisotropycorrection": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_AnisotropyCorrection', .false., this%anisotrpy_correction)",
    "Default": null,
    "Description": [
      "Apply anisotropy correction.",
      " "
    ],
    "LineNumber": 283,
    "Manuals": [],
    "Name": "PES_Flux_AnisotropyCorrection",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "pes_flux_arpes_grid": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_ARPES_grid', arpes_grid, this%arpes_grid)",
    "Default": null,
    "Description": [
      "Use a curvilinear momentum space grid that compensates the transformation",
      "used to obtain ARPES. With this choice ARPES data is laid out on a Cartesian",
      "regular grid.",
      "By default true when <tt>PES_Flux_Shape = pln</tt> and a <tt>KPointsPath</tt>",
      "is specified."
    ],
    "LineNumber": 1134,
    "Manuals": [],
    "Name": "PES_Flux_ARPES_grid",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "pes_flux_deltak": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_DeltaK', 0.02_real64, this%dk)",
    "Default": [
      "0.02"
    ],
    "Description": [
      "Spacing of the the photoelectron momentum grid."
    ],
    "LineNumber": 924,
    "Manuals": [],
    "Name": "PES_Flux_DeltaK",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "pes_flux_energygrid": {
    "CallLine": "if (parse_block(namespace, 'PES_Flux_EnergyGrid', blk) == 0) then",
    "Default": null,
    "Description": [
      "The block <tt>PES_Flux_EnergyGrid</tt> specifies the energy grid",
      "in momentum space.",
      "<tt><br>%PES_Flux_EnergyGrid",
      "<br>&nbsp;&nbsp; Emin | Emax | DeltaE",
      "<br>%</tt>"
    ],
    "LineNumber": 832,
    "Manuals": [],
    "Name": "PES_Flux_EnergyGrid",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/13-arpes_2d.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "pes_flux_face_dens": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_Face_Dens', M_ONE, fc_ptdens)",
    "Default": null,
    "Description": [
      "Define the number of points density per unit of area (in au) on the",
      "face of the 'cub' surface."
    ],
    "LineNumber": 389,
    "Manuals": [],
    "Name": "PES_Flux_Face_Dens",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [
      "photo_electron/09-flux_3d.04-Na_td_cub.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "pes_flux_gridtransformmatrix": {
    "CallLine": "if (parse_block(namespace, 'PES_Flux_GridTransformMatrix', blk) == 0) then",
    "Default": null,
    "Description": [
      "Define an optional transformation matrix for the momentum grid.",
      " ",
      "<tt>%PES_Flux_GridTransformMatrix",
      "<br>&nbsp;&nbsp; M_11 | M_12  | M_13",
      "<br>&nbsp;&nbsp; M_21 | M_22  | M_23",
      "<br>&nbsp;&nbsp; M_31 | M_32  | M_33",
      "<br>%",
      "</tt>"
    ],
    "LineNumber": 1501,
    "Manuals": [],
    "Name": "PES_Flux_GridTransformMatrix",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "pes_flux_kmax": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_Kmax', M_ONE, kmax(1))",
    "Default": [
      "1.0"
    ],
    "Description": [
      "The maximum value of the photoelectron momentum.",
      "For cartesian momentum grids one can specify a value different",
      "for cartesian direction using a block input."
    ],
    "LineNumber": 888,
    "Manuals": [],
    "Name": "PES_Flux_Kmax",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "pes_flux_kmin": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_Kmin', M_ZERO, kmin(1))",
    "Default": [
      "0.0"
    ],
    "Description": [
      "The minimum value of the photoelectron momentum.",
      "For cartesian momentum grids one can specify a value different",
      "for cartesian direction using a block input."
    ],
    "LineNumber": 912,
    "Manuals": [],
    "Name": "PES_Flux_Kmin",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [
      "photo_electron/09-flux_3d.04-Na_td_cub.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "pes_flux_lmax": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_Lmax', 80, this%lmax)",
    "Default": [
      "80"
    ],
    "Description": [
      "Maximum order of the spherical harmonic to be integrated on an equidistant spherical",
      "grid (to be changed to Gauss-Legendre quadrature)."
    ],
    "LineNumber": 315,
    "Manuals": [],
    "Name": "PES_Flux_Lmax",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [
      "photo_electron/09-flux_3d.02-Na_td_sph.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "pes_flux_lsize": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_Lsize', border(mdim), border(mdim))",
    "Default": null,
    "Description": [
      "For <tt>PES_Flux_Shape = cub</tt> sets the dimensions along each direction. The syntax is:",
      " ",
      "<tt>%PES_Flux_Lsize",
      "<br>&nbsp;&nbsp;xsize | ysize | zsize",
      "<br>%",
      "</tt>",
      " ",
      "where <tt>xsize</tt>, <tt>ysize</tt>, and <tt>zsize</tt> are with respect to the origin. The surface can",
      "be shifted with <tt>PES_Flux_Offset</tt>.",
      "If <tt>PES_Flux_Shape = pln</tt>, specifies the position of two planes perpendicular to",
      "the non-periodic dimension symmetrically placed at <tt>PES_Flux_Lsize</tt> distance from",
      "the origin."
    ],
    "LineNumber": 358,
    "Manuals": [],
    "Name": "PES_Flux_Lsize",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/13-arpes_2d.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "pes_flux_momenutum_grid": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_Momenutum_Grid', kgrid, this%kgrid)",
    "Default": null,
    "Description": [
      "Decides how the grid in momentum space is generated."
    ],
    "LineNumber": 787,
    "Manuals": [],
    "Name": "PES_Flux_Momenutum_Grid",
    "Options": [
      {
        "Description": [
          "The grid is in polar coordinates with the zenith axis is along z.",
          "The grid parameters are defined by PES_Flux_Kmax, PES_Flux_DeltaK,",
          "PES_Flux_StepsThetaK, PES_Flux_StepsPhiK.",
          "This is the default choice for PES_Flux_Shape = sph or cub."
        ],
        "Name": "polar",
        "Value": "1"
      },
      {
        "Description": [
          "The grid is in cartesian coordinates with parameters defined by",
          "PES_Flux_ARPES_grid, PES_Flux_EnergyGrid.",
          "This is the default choice for PES_Flux_Shape = sph or cub."
        ],
        "Name": "cartesian",
        "Value": "2"
      }
    ],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "pes_flux_offset": {
    "CallLine": "if (parse_block(namespace, 'PES_Flux_Offset', blk) == 0) then",
    "Default": null,
    "Description": [
      "Shifts the surface for <tt>PES_Flux_Shape = cub</tt>. The syntax is:",
      " ",
      "<tt>%PES_Flux_Offset",
      "<br>&nbsp;&nbsp;xshift | yshift | zshift",
      "<br>%",
      "</tt>"
    ],
    "LineNumber": 299,
    "Manuals": [],
    "Name": "PES_Flux_Offset",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "pes_flux_parallelization": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_Parallelization', par_strategy, this%par_strategy)",
    "Default": null,
    "Description": [
      "The parallelization strategy to be used to calculate the PES spectrum",
      "using the resources available in the domain parallelization pool.",
      "This option is not available without domain parallelization.",
      "Parallelization over k-points and states is always enabled when available."
    ],
    "LineNumber": 499,
    "Manuals": [],
    "Name": "PES_Flux_Parallelization",
    "Options": [
      {
        "Description": [
          "No parallelization."
        ],
        "Name": "pf_none",
        "Value": "bit(1)"
      },
      {
        "Description": [
          "Parallelize time integration. This requires to store some quantities over a",
          "number of time steps equal to the number of cores available."
        ],
        "Name": "pf_time",
        "Value": "bit(2)"
      },
      {
        "Description": [
          "Parallelize over the final momentum grid. This strategy has a much lower",
          "memory footprint than the one above (time) but seems to provide a smaller",
          "speedup."
        ],
        "Name": "pf_momentum",
        "Value": "bit(3)"
      },
      {
        "Description": [
          "Parallelize over surface points.",
          " ",
          " ",
          "Option pf_time and pf_surface can be combined: pf_time + pf_surface.",
          " "
        ],
        "Name": "pf_surface",
        "Value": "bit(4)"
      }
    ],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "flag"
  },
  "pes_flux_phik": {
    "CallLine": "if (parse_block(namespace, 'PES_Flux_PhiK', blk) == 0) then",
    "Default": null,
    "Description": [
      "Define the grid points on theta (<math>0 \\le \\theta \\le 2\\pi</math>) when",
      "using a spherical grid in momentum.",
      "The block defines the maximum and minimum values of theta and the number of",
      "of points for the discretization.",
      " ",
      "<tt>%PES_Flux_PhiK",
      "<br>&nbsp;&nbsp; theta_min | theta_max  | npoints",
      "<br>%",
      "</tt>",
      " ",
      "By default theta_min=0, theta_max = pi, npoints = 90."
    ],
    "LineNumber": 1022,
    "Manuals": [],
    "Name": "PES_Flux_PhiK",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "pes_flux_radius": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_Radius', M_ZERO, this%radius)",
    "Default": null,
    "Description": [
      "The radius of the sphere, if <tt>PES_Flux_Shape == sph</tt>."
    ],
    "LineNumber": 404,
    "Manuals": [],
    "Name": "PES_Flux_Radius",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [
      "photo_electron/09-flux_3d.02-Na_td_sph.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "pes_flux_runtimeoutput": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_RuntimeOutput', .false., this%runtime_output)",
    "Default": null,
    "Description": [
      "Write output in ascii format at runtime.",
      " "
    ],
    "LineNumber": 616,
    "Manuals": [],
    "Name": "PES_Flux_RuntimeOutput",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "pes_flux_shape": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_Shape', default_shape, this%surf_shape)",
    "Default": null,
    "Description": [
      "The shape of the surface."
    ],
    "LineNumber": 264,
    "Manuals": [],
    "Name": "PES_Flux_Shape",
    "Options": [
      {
        "Description": [
          "Uses a parallelepiped as surface. All surface points are grid points.",
          "Choose the location of the surface with variable <tt>PES_Flux_Lsize</tt>",
          "(default for 1D and 2D)."
        ],
        "Name": "cub",
        "Value": "1"
      },
      {
        "Description": [
          "Constructs a sphere with radius <tt>PES_Flux_Radius</tt>. Points on the sphere",
          "are interpolated by trilinear interpolation (default for 3D)."
        ],
        "Name": "sph",
        "Value": "2"
      },
      {
        "Description": [
          "This option is for periodic systems.",
          "Constructs a plane perpendicular to the non-periodic dimension",
          "at <tt>PES_Flux_Lsize</tt>."
        ],
        "Name": "pln",
        "Value": "3"
      }
    ],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "pes_flux_stepsphik": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_StepsPhiK', 90, this%nstepsphik)",
    "Default": [
      "90"
    ],
    "Description": [
      "Number of steps in <math>\\phi</math> (<math>0 \\le \\phi \\le 2 \\pi</math>) for the spherical grid in k."
    ],
    "LineNumber": 1043,
    "Manuals": [],
    "Name": "PES_Flux_StepsPhiK",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [
      "photo_electron/09-flux_3d.02-Na_td_sph.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "pes_flux_stepsphir": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_StepsPhiR', 2 * this%lmax + 1, nstepsphir)",
    "Default": [
      "2",
      "<tt>PES_Flux_Lmax</tt>",
      "+",
      "1"
    ],
    "Description": [
      "Number of steps in <math>\\phi</math> (<math>0 \\le \\phi \\le 2 \\pi</math>) for the spherical surface."
    ],
    "LineNumber": 441,
    "Manuals": [],
    "Name": "PES_Flux_StepsPhiR",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "pes_flux_stepsthetak": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_StepsThetaK', 45, this%nstepsthetak)",
    "Default": [
      "45"
    ],
    "Description": [
      "Number of steps in <math>\\theta</math> (<math>0 \\le \\theta \\le \\pi</math>) for the spherical grid in k."
    ],
    "LineNumber": 994,
    "Manuals": [],
    "Name": "PES_Flux_StepsThetaK",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [
      "photo_electron/09-flux_3d.02-Na_td_sph.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "pes_flux_stepsthetar": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_StepsThetaR', 2 * this%lmax + 1, nstepsthetar)",
    "Default": [
      "2",
      "<tt>PES_Flux_Lmax</tt>",
      "+",
      "1"
    ],
    "Description": [
      "Number of steps in <math>\\theta</math> (<math>0 \\le \\theta \\le \\pi</math>) for the spherical surface."
    ],
    "LineNumber": 430,
    "Manuals": [],
    "Name": "PES_Flux_StepsThetaR",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "pes_flux_thetak": {
    "CallLine": "if (parse_block(namespace, 'PES_Flux_ThetaK', blk) == 0) then",
    "Default": null,
    "Description": [
      "Define the grid points on theta (<math>0 \\le \\theta \\le \\pi</math>) when",
      "using a spherical grid in momentum.",
      "The block defines the maximum and minimum values of theta and the number of",
      "of points for the discretization.",
      " ",
      "<tt>%PES_Flux_ThetaK",
      "<br>&nbsp;&nbsp; theta_min | theta_max  | npoints",
      "<br>%",
      "</tt>",
      " ",
      "By default theta_min=0, theta_max = pi, npoints = 45."
    ],
    "LineNumber": 974,
    "Manuals": [],
    "Name": "PES_Flux_ThetaK",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "pes_flux_usesymmetries": {
    "CallLine": "call parse_variable(namespace, 'PES_Flux_UseSymmetries', use_symmetry, this%use_symmetry)",
    "Default": null,
    "Description": [
      "Use surface and momentum grid symmetries to speed up calculation and",
      "lower memory footprint.",
      "By default available only when the surface shape matches the grid symmetry i.e.:",
      "PES_Flux_Shape = m_cub or m_pln and PES_Flux_Momenutum_Grid = m_cartesian",
      "or",
      "PES_Flux_Shape = m_sph and PES_Flux_Momenutum_Grid = m_polar"
    ],
    "LineNumber": 581,
    "Manuals": [],
    "Name": "PES_Flux_UseSymmetries",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_flux.F90",
    "Testfiles": [
      "photo_electron/09-flux_3d.04-Na_td_cub.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "pes_spm_deltaomega": {
    "CallLine": "call parse_variable(namespace, 'PES_spm_DeltaOmega', units_to_atomic(units_inp%energy, this%omegamax/500_real64), this%delomega)",
    "Default": null,
    "Description": [
      "The spacing in frequency domain for the photoelectron spectrum (if <tt>PES_spm_OmegaMax > 0</tt>).",
      "The default is <tt>PES_spm_OmegaMax/500</tt>."
    ],
    "LineNumber": 184,
    "Manuals": [],
    "Name": "PES_spm_DeltaOmega",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_spm.F90",
    "Testfiles": [
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "pes_spm_omegamax": {
    "CallLine": "call parse_variable(namespace, 'PES_spm_OmegaMax', units_to_atomic(units_inp%energy, M_ZERO), this%omegamax)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "If <tt>PES_spm_OmegaMax > 0</tt>, the photoelectron spectrum is directly calculated during",
      "time-propagation, evaluated by the PES_spm method. <tt>PES_spm_OmegaMax</tt> is then the maximum frequency",
      "(approximate kinetic energy) and <tt>PES_spm_DeltaOmega</tt> the spacing in frequency domain of the spectrum."
    ],
    "LineNumber": 168,
    "Manuals": [],
    "Name": "PES_spm_OmegaMax",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_spm.F90",
    "Testfiles": [
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "pes_spm_points": {
    "CallLine": "if (parse_block(namespace, 'PES_spm_points', blk) < 0) then",
    "Default": null,
    "Description": [
      "List of points at which to calculate the photoelectron spectrum by the sample point",
      "method. If no points are given, a spherical grid is generated automatically.",
      "The exact syntax is:",
      " ",
      "<tt>%PES_spm_points",
      "<br>&nbsp;&nbsp;x1 | y1 | z1",
      "<br>%",
      "</tt>"
    ],
    "LineNumber": 129,
    "Manuals": [],
    "Name": "PES_spm_points",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_spm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "pes_spm_radius": {
    "CallLine": "call parse_variable(namespace, 'PES_spm_Radius', M_ZERO, radius)",
    "Default": null,
    "Description": [
      "The radius of the sphere for the spherical grid (if no <tt>PES_spm_points</tt>",
      "are given)."
    ],
    "LineNumber": 224,
    "Manuals": [],
    "Name": "PES_spm_Radius",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_spm.F90",
    "Testfiles": [
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "pes_spm_recipe": {
    "CallLine": "call parse_variable(namespace, 'PES_spm_recipe', M_PHASE, this%recipe)",
    "Default": [
      "phase"
    ],
    "Description": [
      "The type for calculating the photoelectron spectrum in the sample point method."
    ],
    "LineNumber": 153,
    "Manuals": [],
    "Name": "PES_spm_recipe",
    "Options": [
      {
        "Description": [
          "Calculate the photoelectron spectrum according to A. Pohl, P.-G. Reinhard, and",
          "E. Suraud, <i>Phys. Rev. Lett.</i> <b>84</b>, 5090 (2000)."
        ],
        "Name": "raw",
        "Value": "1"
      },
      {
        "Description": [
          "Calculate the photoelectron spectrum by including the Volkov phase (approximately), see",
          "P. M. Dinh, P. Romaniello, P.-G. Reinhard, and E. Suraud, <i>Phys. Rev. A.</i> <b>87</b>, 032514 (2013)."
        ],
        "Name": "phase",
        "Value": "2"
      }
    ],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_spm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "pes_spm_stepsphir": {
    "CallLine": "call parse_variable(namespace, 'PES_spm_StepsPhiR', 90, this%nstepsphir)",
    "Default": [
      "90"
    ],
    "Description": [
      "Number of steps in <math>\\phi</math> (<math>0 \\le \\phi \\le 2 \\pi</math>) for the spherical grid (if no",
      "<tt>PES_spm_points</tt> are given)."
    ],
    "LineNumber": 209,
    "Manuals": [],
    "Name": "PES_spm_StepsPhiR",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_spm.F90",
    "Testfiles": [
      "photo_electron/12-spm_3d.02-Na_td.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "pes_spm_stepsthetar": {
    "CallLine": "call parse_variable(namespace, 'PES_spm_StepsThetaR', 45, this%nstepsthetar)",
    "Default": [
      "45"
    ],
    "Description": [
      "Number of steps in <math>\\theta</math> (<math>0 \\le \\theta \\le \\pi</math>) for the spherical grid (if no",
      "<tt>PES_spm_points</tt> are given)."
    ],
    "LineNumber": 198,
    "Manuals": [],
    "Name": "PES_spm_StepsThetaR",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_spm.F90",
    "Testfiles": [
      "photo_electron/12-spm_3d.02-Na_td.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "pesmask2penlargefactor": {
    "CallLine": "call parse_variable(namespace, 'PESMask2PEnlargeFactor', M_ONE, mask%enlarge_2p(1))",
    "Default": [
      "1.0"
    ],
    "Description": [
      "Mask two points enlargement factor. Enlarges the mask box by adding two",
      "points at the edges of the box in each direction (x,y,z) at a distance",
      "L=Lb*<tt>PESMask2PEnlargeFactor</tt> where <i>Lb</i> is the box size.",
      "This allows to run simulations with an additional void space at a price of",
      "adding few points. The Fourier space associated with the new box is restricted",
      "by the same factor.",
      " ",
      "Note: needs <tt> PESMaskPlaneWaveProjection = nfft_map or pnfft_map </tt>."
    ],
    "LineNumber": 404,
    "Manuals": [],
    "Name": "PESMask2PEnlargeFactor",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_mask.F90",
    "Testfiles": [
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/04-nfft.02-ati.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "pesmaskenlargefactor": {
    "CallLine": "call parse_variable(namespace, 'PESMaskEnlargeFactor', M_ONE, mask%enlarge(1))",
    "Default": [
      "1"
    ],
    "Description": [
      "Mask box enlargement level. Enlarges the mask bounding box by a <tt>PESMaskEnlargeFactor</tt>.",
      "This helps to avoid wavefunction wrapping at the boundaries."
    ],
    "LineNumber": 367,
    "Manuals": [],
    "Name": "PESMaskEnlargeFactor",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_mask.F90",
    "Testfiles": [
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/02-restart.02-restart_ba.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "pesmaskfiltercutoff": {
    "CallLine": "call parse_variable(namespace, 'PESMaskFilterCutOff', -M_ONE, pCutOff, unit = units_inp%energy)",
    "Default": [
      "-1"
    ],
    "Description": [
      "In calculation with <tt>PESMaskMode = fullmask_mode</tt> and NFFT, spurious frequencies",
      "may lead to numerical instability of the algorithm. This option gives the possibility",
      "to filter out the unwanted components by setting an energy cut-off.",
      "If <tt>PESMaskFilterCutOff = -1</tt> no filter is applied."
    ],
    "LineNumber": 695,
    "Manuals": [],
    "Name": "PESMaskFilterCutOff",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_mask.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "pesmaskincludepsia": {
    "CallLine": "call parse_variable(namespace, 'PESMaskIncludePsiA', .false., mask%add_psia)",
    "Default": [
      "false"
    ],
    "Description": [
      "Add the contribution of <math>\\Psi_A</math> in the mask region to the photo-electron spectrum.",
      "Literally adds the Fourier components of:",
      "<math>\\Theta(r-R1) \\Psi_A(r)</math>",
      "with <math>\\Theta</math> being the Heaviside step function.",
      "With this option PES will contain all the contributions starting from the inner",
      "radius <math>R1</math>. Use this option to improve convergence with respect to the box size",
      "and total simulation time.",
      "Note: Carefully choose <math>R1</math> in order to avoid contributions from returning electrons."
    ],
    "LineNumber": 724,
    "Manuals": [],
    "Name": "PESMaskIncludePsiA",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_mask.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "pesmaskmode": {
    "CallLine": "call parse_variable(namespace, 'PESMaskMode', PES_MASK_MODE_MASK, mask%mode)",
    "Default": [
      "mask_mode"
    ],
    "Description": [
      "PES calculation mode."
    ],
    "LineNumber": 257,
    "Manuals": [],
    "Name": "PESMaskMode",
    "Options": [
      {
        "Description": [
          "Mask method."
        ],
        "Name": "mask_mode",
        "Value": "1"
      },
      {
        "Description": [
          "Full mask method. This includes a back action of the momentum-space states on the",
          "interaction region. This enables electrons to come back from the continuum."
        ],
        "Name": "fullmask_mode",
        "Value": "2"
      },
      {
        "Description": [
          "Passive analysis of the wf. Simply analyze the plane-wave components of the",
          "wavefunctions on the region <i>r</i> > <i>R1</i>. This mode employs a step masking function by default."
        ],
        "Name": "passive_mode",
        "Value": "3"
      }
    ],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_mask.F90",
    "Testfiles": [
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/04-nfft.02-ati.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "pesmaskplanewaveprojection": {
    "CallLine": "call parse_variable(namespace, 'PESMaskPlaneWaveProjection', PW_MAP_FFT, mask%pw_map_how)",
    "Default": [
      "fft_map"
    ],
    "Description": [
      "With the mask method, wavefunctions in the continuum are treated as plane waves.",
      "This variable sets how to calculate the plane-wave projection in the buffer",
      "region. We perform discrete Fourier transforms (DFT) in order to approximate",
      "a continuous Fourier transform. The major drawback of this approach is the built-in",
      "periodic boundary condition of DFT. Choosing an appropriate plane-wave projection",
      "for a given simulation in addition to <tt>PESMaskEnlargeFactor</tt> and",
      "<tt>PESMask2PEnlargeFactor</tt>will help to converge the results.",
      " ",
      "NOTE: depending on the value of <tt>PESMaskMode</tt> <tt>PESMaskPlaneWaveProjection</tt>,",
      "may affect not only performance but also the time evolution of the density."
    ],
    "LineNumber": 313,
    "Manuals": [],
    "Name": "PESMaskPlaneWaveProjection",
    "Options": [
      {
        "Description": [
          "FFT filtered in order to keep only outgoing waves. 1D only."
        ],
        "Name": "fft_out",
        "Value": "2"
      },
      {
        "Description": [
          "FFT transform."
        ],
        "Name": "fft_map",
        "Value": "3"
      },
      {
        "Description": [
          "Non-equispaced FFT map."
        ],
        "Name": "nfft_map",
        "Value": "5"
      },
      {
        "Description": [
          "Use PFFT library."
        ],
        "Name": "pfft_map",
        "Value": "6"
      },
      {
        "Description": [
          "Use PNFFT library."
        ],
        "Name": "pnfft_map",
        "Value": "7"
      }
    ],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_mask.F90",
    "Testfiles": [
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/04-nfft.02-ati.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "pesmaskshape": {
    "CallLine": "call parse_variable(namespace, 'PESMaskShape', defaultMask, mask%shape)",
    "Default": [
      "m_sin2"
    ],
    "Description": [
      "The mask function shape."
    ],
    "LineNumber": 583,
    "Manuals": [],
    "Name": "PESMaskShape",
    "Options": [
      {
        "Description": [
          "sin2 mask."
        ],
        "Name": "m_sin2",
        "Value": "1"
      },
      {
        "Description": [],
        "Name": "m_step",
        "Value": "2"
      },
      {
        "Description": [],
        "Name": "m_erf",
        "Value": "3"
      }
    ],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_mask.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "pesmasksize": {
    "CallLine": "if (parse_block(namespace, 'PESMaskSize', blk) == 0) then",
    "Default": null,
    "Description": [
      "Set the size of the mask function.",
      "Here you can set the inner (R1) and outer (R2) radius by setting",
      "the block as follows:",
      " ",
      "<tt>%PESMaskSize",
      "<br>&nbsp;&nbsp; R1 | R2 | \"user-defined\"",
      "<br>%</tt>",
      " ",
      "The optional 3rd column is a user-defined expression for the mask",
      "function. For example, <i>r</i> creates a spherical mask (which is the",
      "default for <tt>BoxShape = sphere</tt>). Note, values R2 larger than",
      "the box size may lead in this case to unexpected reflection",
      "behaviours."
    ],
    "LineNumber": 606,
    "Manuals": [],
    "Name": "PESMaskSize",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_mask.F90",
    "Testfiles": [
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/04-nfft.02-ati.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "pesmaskspectenergymax": {
    "CallLine": "call parse_variable(namespace, 'PESMaskSpectEnergyMax', MaxE, mask%energyMax, unit = units_inp%energy)",
    "Default": [
      "maxval(mask%Lk)<math>^2/2</math>"
    ],
    "Description": [
      "The maximum energy for the PES spectrum."
    ],
    "LineNumber": 743,
    "Manuals": [],
    "Name": "PESMaskSpectEnergyMax",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_mask.F90",
    "Testfiles": [
      "photo_electron/01-h1d_lin.01-mask.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "pesmaskspectenergystep": {
    "CallLine": "call parse_variable(namespace, 'PESMaskSpectEnergyStep', DeltaE, mask%energyStep, unit = units_inp%energy)",
    "Default": null,
    "Description": [
      "The PES spectrum energy step."
    ],
    "LineNumber": 753,
    "Manuals": [],
    "Name": "PESMaskSpectEnergyStep",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_mask.F90",
    "Testfiles": [
      "photo_electron/01-h1d_lin.01-mask.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "pesmaskstarttime": {
    "CallLine": "call parse_variable(namespace, 'PESMaskStartTime', -M_ONE, mask%start_time, unit = units_inp%time)",
    "Default": [
      "-1.0"
    ],
    "Description": [
      "The time photoelectrons start to be recorded. In pump-probe simulations, this allows",
      "getting rid of an unwanted ionization signal coming from the pump.",
      "NOTE: This will enforce the mask boundary conditions for all times."
    ],
    "LineNumber": 285,
    "Manuals": [],
    "Name": "PESMaskStartTime",
    "Options": [],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes_mask.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "photodopingband": {
    "CallLine": "call parse_variable(namespace, 'PhotoDopingBand', 1, this%photodop_bandmin)",
    "Default": [
      "1"
    ],
    "Description": [
      "This variable specifies where the minium (starting) conduction band index for the photodoping electrons."
    ],
    "LineNumber": 186,
    "Manuals": [],
    "Name": "PhotoDopingBand",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/smear.F90",
    "Testfiles": [
      "periodic_systems/32-photodoping.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "photodopingnumelectrons": {
    "CallLine": "call parse_variable(namespace, 'PhotoDopingNumElectrons', M_ZERO, this%nephotodop)",
    "Default": [
      "0"
    ],
    "Description": [
      "This variable allows to set the number of valence electrons taken out to put",
      "into the conduction bands. The method follows Marini and Calandra, PRB 104, 144103 (2021)."
    ],
    "LineNumber": 170,
    "Manuals": [],
    "Name": "PhotoDopingNumElectrons",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/smear.F90",
    "Testfiles": [
      "periodic_systems/32-photodoping.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "photodopingsmearing": {
    "CallLine": "call parse_variable(namespace, 'PhotoDopingSmearing', 0.1_real64 / (M_TWO * P_Ry), this%dsmear_cond, units_inp%energy)",
    "Default": [
      "0.1",
      "eV"
    ],
    "Description": [
      "If <tt>Occupations</tt> is not set, <tt>PhotoDopingSmearing</tt> is the",
      "smearing width used in the <tt>SmearingFunction</tt> to distribute the electrons in conduction bands",
      "among the existing states."
    ],
    "LineNumber": 159,
    "Manuals": [],
    "Name": "PhotoDopingSmearing",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/smear.F90",
    "Testfiles": [
      "periodic_systems/32-photodoping.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "photoelectronspectrum": {
    "CallLine": "call parse_variable(namespace, 'PhotoElectronSpectrum', PHOTOELECTRON_NONE, photoelectron_flags)",
    "Default": [
      "none"
    ],
    "Description": [
      "This variable controls the method used for the calculation of",
      "the photoelectron spectrum. You can specify more than one value",
      "by giving them as a sum, for example:",
      "<tt>PhotoElectronSpectrum = pes_spm + pes_mask</tt>"
    ],
    "LineNumber": 125,
    "Manuals": [],
    "Name": "PhotoElectronSpectrum",
    "Options": [
      {
        "Description": [
          "The photoelectron spectrum is not calculated. This is the default."
        ],
        "Name": "none",
        "Value": "0"
      },
      {
        "Description": [
          "Store the wavefunctions at specific points in order to",
          "calculate the photoelectron spectrum at a point far in the box as proposed in",
          "A. Pohl, P.-G. Reinhard, and E. Suraud, <i>Phys. Rev. Lett.</i> <b>84</b>, 5090 (2000)."
        ],
        "Name": "pes_spm",
        "Value": "2"
      },
      {
        "Description": [
          "Calculate the photo-electron spectrum using the mask method.",
          "U. De Giovannini, D. Varsano, M. A. L. Marques, H. Appel, E. K. U. Gross, and A. Rubio,",
          "<i>Phys. Rev. A</i> <b>85</b>, 062515 (2012)."
        ],
        "Name": "pes_mask",
        "Value": "4"
      },
      {
        "Description": [
          "Calculate the photo-electron spectrum using the t-surff technique, <i>i.e.</i>,",
          "spectra are computed from the electron flux through a surface close to the absorbing",
          "boundaries of the box. (Experimental.)",
          "L. Tao and A. Scrinzi, <i>New Journal of Physics</i> <b>14</b>, 013021 (2012)."
        ],
        "Name": "pes_flux",
        "Value": "8"
      }
    ],
    "Section": "Time-Dependent::PhotoElectronSpectrum",
    "Sourcefile": "td/pes.F90",
    "Testfiles": [
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "photoelectronspectrumoutput": {
    "Default": [
      "none"
    ],
    "Description": [
      "Specifies what to output extracting the photoelectron cross-section informations.",
      "When we use polar coordinates the zenith axis is set by vec (default is the first",
      "laser field polarization vector), theta is the inclination angle measured from",
      "vec (from 0 to \\pi), and phi is the azimuthal angle on a plane perpendicular to",
      "vec (from 0 to 2\\pi).",
      "Each option must be in a separate row. Optionally individual output formats can be defined",
      "for each row or they can be read separately from <tt>OutputFormat</tt> variable",
      "in the input file.",
      " ",
      "Example (minimal):",
      "<br><br><tt>%PhotoelectronSpectrumOutput",
      "<br>&nbsp;&nbsp;energy_tot",
      "<br>&nbsp;&nbsp;velocity_map",
      "<br>%<br></tt>",
      " ",
      "Example (with OutputFormat):",
      "<br><br><tt>%PhotoelectronSpectrumOutput",
      "<br>&nbsp;&nbsp;arpes        | vtk",
      "<br>&nbsp;&nbsp;velocity_map | ncdf",
      "<br>%<br></tt>",
      " "
    ],
    "Manuals": [],
    "Name": "PhotoelectronSpectrumOutput",
    "Options": [
      {
        "Description": [
          "Output the energy-resolved photoelectron spectrum: E."
        ],
        "Name": "energy_tot",
        "Value": "1"
      },
      {
        "Description": [
          "Output the energy and angle resolved spectrum: (theta, E)",
          "The result is integrated over phi."
        ],
        "Name": "energy_angle",
        "Value": "2"
      },
      {
        "Description": [
          "Velocity map on a plane orthogonal to pvec: (px, py). The allowed cutting planes",
          "(pvec) can only be parallel to the x,y,z=0 planes.",
          "Space is oriented so that the z-axis is along vec. Supports the -I option."
        ],
        "Name": "velocity_map_cut",
        "Value": "3"
      },
      {
        "Description": [
          "Angle and energy-resolved spectrum on the inclination plane: (Ex, Ey).",
          "The result is integrated over ph;"
        ],
        "Name": "energy_xy",
        "Value": "4"
      },
      {
        "Description": [
          "Ionization probability integrated on spherical cuts: (theta, phi)."
        ],
        "Name": "energy_th_ph",
        "Value": "5"
      },
      {
        "Description": [
          "Full momentum-resolved ionization probability: (px, py, pz).",
          "The output format can be controlled with <tt>OutputHow</tt> and can be vtk, ncdf or ascii."
        ],
        "Name": "velocity_map",
        "Value": "6"
      },
      {
        "Description": [
          "Full ARPES for semi-periodic systems (vtk)."
        ],
        "Name": "arpes",
        "Value": "7"
      },
      {
        "Description": [
          "ARPES cut on a plane following a zero-weight path in reciprocal space."
        ],
        "Name": "arpes_cut",
        "Value": "8"
      }
    ],
    "Section": "Utilities::oct-photoelectron_spectrum",
    "Sourcefile": "utils/photoelectron_spectrum.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "photoelectronspectrumresolvestates": {
    "CallLine": "call parse_variable(global_namespace, 'PhotoelectronSpectrumResolveStates', .false., resolve_states)",
    "Default": "",
    "Description": [
      "If <tt>yes</tt> calculate the photoelectron spectrum resolved in each K.S. state.",
      "Optionally a range of states can be given as two slot block where the",
      "first slot is the lower state index and the second is the highest one.",
      "For example to calculate the spectra from state i to state j:",
      " ",
      "<tt>%PhotoelectronSpectrumResolveStates",
      "<br> i | j",
      "<br>%</tt>"
    ],
    "LineNumber": 352,
    "Manuals": [],
    "Name": "PhotoelectronSpectrumResolveStates",
    "Options": [],
    "Section": "Utilities::oct-photoelectron_spectrum",
    "Sourcefile": "utils/photoelectron_spectrum.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "photoneta": {
    "CallLine": "call parse_variable(namespace, 'PhotonEta', 0.0000367_real64, this%pt_eta, units_inp%energy)",
    "Default": [
      "0.0000367"
    ],
    "Description": [
      "This variable provides the value for the broadening of the photonic spectra",
      "when the coupling of electrons to photons is enabled in the frequency-dependent Sternheimer equation"
    ],
    "LineNumber": 294,
    "Manuals": [],
    "Name": "PhotonEta",
    "Options": [],
    "Section": "Linear Response::Sternheimer",
    "Sourcefile": "sternheimer/sternheimer.F90",
    "Testfiles": [
      "linear_response/08-sternheimer-photons.02-em_resp.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "photonmodes": {
    "CallLine": "if (parse_block(namespace, 'PhotonModes', blk) == 0) then",
    "Default": null,
    "Description": [
      "Each line of the block should specify one photon mode. The syntax is the following:",
      " ",
      "%PhotonModes",
      "omega1 | lambda1| PolX1 | PolY1 | PolZ1",
      "...",
      "%",
      " ",
      "The first column is the mode frequency, in units of energy.",
      "The second column is the coupling strength, in units of energy.",
      "The remaining columns specify the polarization direction of the mode.",
      "If the polarization vector should be normalized to one. If that is not the case",
      "the code will normalize it."
    ],
    "LineNumber": 204,
    "Manuals": [],
    "Name": "PhotonModes",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "photons/photon_mode.F90",
    "Testfiles": [
      "linear_response/08-sternheimer-photons.02-em_resp.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/07-casida-photons.06-spectrum.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/07-casida-photons.02-photons.inp",
      "linear_response/07-casida-photons.04-elpa.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/16-dressed-rdmft.03-rdmft.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/16-dressed-rdmft.02-hf.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/16-dressed-rdmft.01-ip.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "photonmodesfilename": {
    "CallLine": "call parse_variable(namespace, 'PhotonmodesFilename', 'photonmodes', filename)",
    "Default": [
      "\"photonmodes\""
    ],
    "Description": [
      "Filename for photon modes in text format",
      "- first line contains 2 integers: number of photon modes and number of",
      "columns",
      "- each further line contains the given number of floats for one photon",
      "mode"
    ],
    "LineNumber": 110,
    "Manuals": [],
    "Name": "PhotonmodesFilename",
    "Options": [],
    "Section": "Linear Response::Casida",
    "Sourcefile": "photons/photon_mode.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "photonxcenergymethod": {
    "CallLine": "call parse_variable(namespace, 'PhotonXCEnergyMethod', 1, xc_photons%energy_method)",
    "Default": [
      "1"
    ],
    "Description": [
      "There are different ways to calculate the energy,"
    ],
    "LineNumber": 185,
    "Manuals": [],
    "Name": "PhotonXCEnergyMethod",
    "Options": [
      {
        "Description": [
          "(modified) virial approach</br>",
          "<math>",
          "(E_{\\rm{px}}^{\\rm{virial}} = \\frac{1}{2}\\int d\\mathbf{r}\\ \\mathbf{r}\\cdot[",
          "-\\rho(\\mathbf{r})\\nabla v_{\\rm{px}}(\\mathbf{r})])",
          "</math></br>"
        ],
        "Name": "virial",
        "Value": "1"
      },
      {
        "Description": [
          "expectation value w.tr.t. the wave functions (valid only for 1 electron)</br>",
          "<math>",
          "E_{\\rm{px}}[\\rho] = -\\sum_{\\alpha=1}^{M_{p}}\\frac{\\tilde{\\lambda}_{\\alpha}^{2}}{2\\tilde{\\omega}_{\\alpha}^{2}}",
          "\\langle (\\tilde{\\mathbf{{\\varepsilon}}}_{\\alpha}\\cdot\\hat{\\mathbf{J}}_{\\rm{p}})\\Phi[\\rho]",
          "| (\\tilde{\\mathbf{{\\varepsilon}}}_{\\alpha}\\cdot\\hat{\\mathbf{J}}_{\\rm{p}})\\Phi[\\rho] \\rangle",
          "</math></br>",
          "This option only works for the wave function based electron-photon functionals"
        ],
        "Name": "expectation_value",
        "Value": "2"
      },
      {
        "Description": [
          "energy from electron density</br>",
          "<math>",
          "E_{\\rm pxLDA}[\\rho] = \\frac{-2\\pi^{2}}{(d+2)({2V_{d}})^{\\frac{2}{d}}}",
          "\\sum_{\\alpha=1}^{M_{p}}\\frac{\\tilde{\\lambda}_{\\alpha}^{2}}{\\tilde{\\omega}_{\\alpha}^{2}}",
          "\\int d\\mathbf{r}\\ \\rho^{\\frac{2+d}{d}}(\\mathbf{r})",
          "</math></br>",
          "This option only works with LDA electron-photon functionals."
        ],
        "Name": "LDA",
        "Value": "3"
      }
    ],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "electrons/xc_photons.F90",
    "Testfiles": [
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "photonxcetac": {
    "CallLine": "call parse_variable(namespace, 'PhotonXCEtaC', M_ONE, xc_photons%eta_c)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "The scaling factor for the px potential to reduce the weak coupling perturbation regime"
    ],
    "LineNumber": 205,
    "Manuals": [],
    "Name": "PhotonXCEtaC",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "electrons/xc_photons.F90",
    "Testfiles": [
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "photonxclambshift": {
    "CallLine": "call parse_variable(namespace, 'PhotonXCLambShift', .false., xc_photons%llamb_freespace)",
    "Default": [
      ".false."
    ],
    "Description": [
      "to deal with the photon free exchange potential for continuum mode in free space"
    ],
    "LineNumber": 230,
    "Manuals": [],
    "Name": "PhotonXCLambShift",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "electrons/xc_photons.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "photonxclambshiftomegacutoff": {
    "CallLine": "call parse_variable(namespace, 'PhotonXCLambShiftOmegaCutoff', M_ZERO, xc_photons%lamb_omega)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "the cutoff frequency (Ha) for Lamb shift"
    ],
    "LineNumber": 243,
    "Manuals": [],
    "Name": "PhotonXCLambShiftOmegaCutoff",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "electrons/xc_photons.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "photonxclambshiftrenormalizemass": {
    "CallLine": "call parse_variable(namespace, 'PhotonXCLambShiftRenormalizeMass', .false., xc_photons%llamb_re_mass)",
    "Default": [
      ".false."
    ],
    "Description": [
      "to deal with the photon free exchange potential for continuum mode in free space"
    ],
    "LineNumber": 253,
    "Manuals": [],
    "Name": "PhotonXCLambShiftRenormalizeMass",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "electrons/xc_photons.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "photonxcldakappa": {
    "CallLine": "call parse_variable(namespace, 'PhotonXCLDAKappa', M_ONE, xc_photons%pxlda_kappa)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "the scaling factor for px-LDA potential"
    ],
    "LineNumber": 151,
    "Manuals": [],
    "Name": "PhotonXCLDAKappa",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "electrons/xc_photons.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "pnfftcutoff": {
    "CallLine": "call parse_variable(namespace, 'PNFFTCutoff', 6, pnfft%mm)",
    "Default": [
      "6"
    ],
    "Description": [
      "Cut-off parameter of the window function."
    ],
    "LineNumber": 122,
    "Manuals": [],
    "Name": "PNFFTCutoff",
    "Options": [],
    "Section": "Mesh::FFTs",
    "Sourcefile": "math/pnfft.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "pnfftoversampling": {
    "CallLine": "call parse_variable(namespace, 'PNFFTOversampling', M_TWO, pnfft%sigma)",
    "Default": [
      "2.0"
    ],
    "Description": [
      "PNFFT oversampling factor (sigma). This will rule the size of the FFT under the hood."
    ],
    "LineNumber": 131,
    "Manuals": [],
    "Name": "PNFFTOversampling",
    "Options": [],
    "Section": "Mesh::FFTs",
    "Sourcefile": "math/pnfft.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "poisson1dsoftcoulombparam": {
    "CallLine": "call parse_variable(namespace, 'Poisson1DSoftCoulombParam', M_ONE, this%poisson_soft_coulomb_param, units_inp%length)",
    "Default": [
      "1.0",
      "bohr"
    ],
    "Description": [
      "When <tt>Dimensions = 1</tt>, to prevent divergence, the Coulomb interaction treated by the Poisson",
      "solver is not <math>1/r</math> but <math>1/\\sqrt{a^2 + r^2}</math>, where this variable sets the value of <math>a</math>."
    ],
    "LineNumber": 127,
    "Manuals": [],
    "Name": "Poisson1DSoftCoulombParam",
    "Options": [],
    "Section": "Hamiltonian::Poisson",
    "Sourcefile": "poisson/poisson_init_inc.F90",
    "Testfiles": [
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/07-casida-photons.06-spectrum.inp",
      "linear_response/07-casida-photons.01-gs.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/07-casida-photons.02-photons.inp",
      "linear_response/07-casida-photons.04-elpa.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "poissoncutoffradius": {
    "CallLine": "call parse_variable(namespace, 'PoissonCutoffRadius', default_r_c, r_c, units_inp%length)",
    "Default": null,
    "Description": [
      "When <tt>PoissonSolver = fft</tt> and <tt>PoissonFFTKernel</tt> is neither <tt>multipole_corrections</tt>",
      "nor <tt>fft_nocut</tt>,",
      "this variable controls the distance after which the electron-electron interaction goes to zero.",
      "A warning will be written if the value is too large and will cause spurious interactions between images.",
      "The default is half of the FFT box max dimension in a finite direction."
    ],
    "LineNumber": 190,
    "Manuals": [],
    "Name": "PoissonCutoffRadius",
    "Options": [],
    "Section": "Hamiltonian::Poisson",
    "Sourcefile": "poisson/poisson_fft.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "poissonfftkernel": {
    "CallLine": "call parse_variable(namespace, 'PoissonFFTKernel', default_kernel, this%kernel)",
    "Default": null,
    "Description": [
      "Defines which kernel is used to impose the correct boundary",
      "conditions when using FFTs to solve the Poisson equation. The",
      "default is selected depending on the dimensionality and",
      "periodicity of the system:",
      "<br>In 1D, <tt>spherical</tt> if finite, <tt>fft_nocut</tt> if periodic.",
      "<br>In 2D, <tt>spherical</tt> if finite, <tt>cylindrical</tt> if 1D-periodic, <tt>fft_nocut</tt> if 2D-periodic.",
      "<br>In 3D, <tt>spherical</tt> if finite, <tt>cylindrical</tt> if 1D-periodic, <tt>planar</tt> if 2D-periodic,",
      "<tt>fft_nocut</tt> if 3D-periodic.",
      "See C. A. Rozzi et al., <i>Phys. Rev. B</i> <b>73</b>, 205119 (2006) for 3D implementation and",
      "A. Castro et al., <i>Phys. Rev. B</i> <b>80</b>, 033102 (2009) for 2D implementation."
    ],
    "LineNumber": 379,
    "Manuals": [],
    "Name": "PoissonFFTKernel",
    "Options": [
      {
        "Description": [
          "FFTs using spherical cutoff (in 2D or 3D)."
        ],
        "Name": "spherical",
        "Value": "0"
      },
      {
        "Description": [
          "FFTs using cylindrical cutoff (in 2D or 3D)."
        ],
        "Name": "cylindrical",
        "Value": "1"
      },
      {
        "Description": [
          "FFTs using planar cutoff (in 3D)."
        ],
        "Name": "planar",
        "Value": "2"
      },
      {
        "Description": [
          "FFTs without using a cutoff (for fully periodic systems)."
        ],
        "Name": "fft_nocut",
        "Value": "3"
      },
      {
        "Description": [
          "The boundary conditions are imposed by using a multipole expansion. Only appropriate for finite systems.",
          "Further specification occurs with variables <tt>PoissonSolverBoundaries</tt> and <tt>PoissonSolverMaxMultipole</tt>."
        ],
        "Name": "multipole_correction",
        "Value": "4"
      }
    ],
    "Section": "Hamiltonian::Poisson",
    "Sourcefile": "poisson/poisson.F90",
    "Testfiles": [
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "linear_response/01-casida.09-spectrum.inp",
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "linear_response/01-casida.01-gs.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "finite_systems_3d/12-forces.01-N2_gs.inp",
      "pseudopotentials/08-carbon_fhi.01-gs.inp",
      "pseudopotentials/09-carbon_cpi.01-gs.inp",
      "components/05-hartree_3d_fft.02-fft_corrected.inp",
      "components/10-hartree_pfft.02-fft_corrected.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "poissonsolver": {
    "CallLine": "call parse_variable(namespace, 'PoissonSolver', default_solver, this%method)",
    "Default": null,
    "Description": [
      "Defines which method to use to solve the Poisson equation. Some incompatibilities apply depending on",
      "dimensionality, periodicity, etc.",
      "For a comparison of the accuracy and performance of the methods in Octopus, see P Garcia-Risue&ntilde;o,",
      "J Alberdi-Rodriguez <i>et al.</i>, <i>J. Comp. Chem.</i> <b>35</b>, 427-444 (2014)",
      "or <a href=http://arxiv.org/abs/1211.2092>arXiV</a>.",
      "Defaults:",
      "<br> 1D and 2D: <tt>fft</tt>.",
      "<br> 3D: <tt>cg_corrected</tt> if curvilinear, <tt>isf</tt> if not periodic, <tt>fft</tt> if periodic.",
      "<br> Dressed orbitals: <tt>direct_sum</tt>."
    ],
    "LineNumber": 292,
    "Manuals": [],
    "Name": "PoissonSolver",
    "Options": [
      {
        "Description": [
          "Do not use a Poisson solver at all."
        ],
        "Name": "NoPoisson",
        "Value": "-99"
      },
      {
        "Description": [
          "(Experimental) Fast multipole method. Requires FMM library."
        ],
        "Name": "FMM",
        "Value": "-4"
      },
      {
        "Description": [
          "Direct evaluation of the Hartree potential (only for finite systems)."
        ],
        "Name": "direct_sum",
        "Value": "-1"
      },
      {
        "Description": [
          "The Poisson equation is solved using FFTs. A cutoff technique",
          "for the Poisson kernel is selected so the proper boundary",
          "conditions are imposed according to the periodicity of the",
          "system. This can be overridden by the <tt>PoissonFFTKernel</tt>",
          "variable. To choose the FFT library use <tt>FFTLibrary</tt>"
        ],
        "Name": "fft",
        "Value": "0"
      },
      {
        "Description": [
          "Conjugate gradients (only for finite systems)."
        ],
        "Name": "cg",
        "Value": "5"
      },
      {
        "Description": [
          "Conjugate gradients, corrected for boundary conditions (only for finite systems)."
        ],
        "Name": "cg_corrected",
        "Value": "6"
      },
      {
        "Description": [
          "Multigrid method (only for finite systems)."
        ],
        "Name": "multigrid",
        "Value": "7"
      },
      {
        "Description": [
          "Interpolating Scaling Functions Poisson solver (only for finite systems)."
        ],
        "Name": "isf",
        "Value": "8"
      },
      {
        "Description": [
          "Solver based on Interpolating Scaling Functions as implemented in the PSolver library.",
          "Parallelization in k-points requires <tt>PoissonSolverPSolverParallelData</tt> = no.",
          "Requires the PSolver external library."
        ],
        "Name": "psolver",
        "Value": "10"
      }
    ],
    "Section": "Hamiltonian::Poisson",
    "Sourcefile": "poisson/poisson.F90",
    "Testfiles": [
      "finite_systems_2d/01-quadratic_box.03-hartree+xc.inp",
      "finite_systems_2d/01-quadratic_box.04-spin_polarized.inp",
      "finite_systems_2d/01-quadratic_box.02-hartree.inp",
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/12-electronic_subsystem_propagators.01-gs.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/16-bomd.01-gs.inp",
      "multisystem/15-electronic_system_restart.04-td_restart_part2.inp",
      "multisystem/16-bomd.02-td.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/15-electronic_system_restart.01-gs.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/03-vdw_sternheimer.02-vdw.inp",
      "linear_response/02-h2o_pol_lr.04_h2o_susc.inp",
      "linear_response/06-vib_modes_fd.01-vib_modes_fd.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "linear_response/02-h2o_pol_lr.01_h2o_gs.inp",
      "linear_response/01-casida.09-spectrum.inp",
      "linear_response/06-vib_modes_fd.01-ground_state.inp",
      "linear_response/02-h2o_pol_lr.03_h2o_dyn_pol_cmplx.inp",
      "linear_response/04-vib_modes.01-ground_state.inp",
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/02-h2o_pol_lr.02_h2o_dyn_pol.inp",
      "linear_response/04-vib_modes.02-vib_modes.inp",
      "linear_response/04-vib_modes.03-vib_modes_restart.inp",
      "linear_response/07-casida-photons.06-spectrum.inp",
      "linear_response/07-casida-photons.01-gs.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/02-h2o_pol_lr.05_h2o_magn_opt.inp",
      "linear_response/01-casida.01-gs.inp",
      "linear_response/07-casida-photons.02-photons.inp",
      "linear_response/03-vdw_sternheimer.01-ground_state.inp",
      "linear_response/07-casida-photons.04-elpa.inp",
      "finite_systems_3d/30-local_multipoles.02-multipoles.inp",
      "finite_systems_3d/14-fullerene_unpacked.02-td-unpacked.inp",
      "finite_systems_3d/22-preconditioner.01-none.inp",
      "finite_systems_3d/22-preconditioner.03-jacobi.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/30-local_multipoles.01-gs.inp",
      "finite_systems_3d/34-walltime.02-restart_gs.inp",
      "finite_systems_3d/05-output.02-gs.inp",
      "finite_systems_3d/16-scfinlcao_std.01-gs.inp",
      "finite_systems_3d/03-magnetic.01-gs-unpolarized.inp",
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/33-cg.02-additional_terms.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/20-eigensolver.01-cg.inp",
      "finite_systems_3d/13-full_potential_hydrogen.02-gs-cg.inp",
      "finite_systems_3d/10-fullerene.01-gs.inp",
      "finite_systems_3d/14-fullerene_unpacked.03-td-packed.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/18-preconditioner_poisson.01-poisson.inp",
      "finite_systems_3d/24-o2-spin.01-gs.inp",
      "finite_systems_3d/39-adsic.02-polarized.inp",
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "finite_systems_3d/12-forces.03-N2_gs.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/35-slater_x.01-gs.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/30-local_multipoles.03-multipoles_restart.inp",
      "finite_systems_3d/22-preconditioner.04-multigrid.inp",
      "finite_systems_3d/33-cg.03-cg_direction.inp",
      "finite_systems_3d/23-go-na2.02-simplex.inp",
      "finite_systems_3d/05-output.04-convert-op.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/22-preconditioner.05-multigrid_rmmdiis.inp",
      "finite_systems_3d/36-kli_x.01-gs.inp",
      "finite_systems_3d/23-go-na2.04-fire_restart.inp",
      "finite_systems_3d/20-eigensolver.03-plan.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/05-output.03-convert.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/28-carbon_big_box.01-ground_state.inp",
      "finite_systems_3d/23-go-na2.03-fire.inp",
      "finite_systems_3d/23-go-na2.01-steep.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/09-spinors.03-rmmdiis_extra_states.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/34-walltime.03-td_walltime.inp",
      "finite_systems_3d/09-spinors.01-ground_state.inp",
      "finite_systems_3d/34-walltime.04-restart_td.inp",
      "finite_systems_3d/23-go-na2.05-constrains.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "finite_systems_3d/20-eigensolver.05-rmmdiis.inp",
      "finite_systems_3d/32-tdpcm_methane.01-ground_state.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/22-preconditioner.02-filter.inp",
      "finite_systems_3d/34-walltime.01-gs_walltime.inp",
      "finite_systems_3d/12-forces.02-N2_gs.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "finite_systems_3d/33-cg.01-orthogonalize_all.inp",
      "finite_systems_3d/37-sternheimer_polarized.02-em_resp.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "finite_systems_3d/14-fullerene_unpacked.01-gs.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/39-adsic.01-unpolarized.inp",
      "finite_systems_3d/37-sternheimer_polarized.01-gs.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "finite_systems_3d/12-forces.01-N2_gs.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "finite_systems_3d/09-spinors.02-rmmdiis.inp",
      "real_time/19-td_move_ions.01-gs.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/17-absorption-spin_symmetry.01-gs.inp",
      "real_time/10-bomd.02-td.inp",
      "real_time/02-propagators.01-gs.inp",
      "real_time/05-time_propagation.04-td_domains_states-reorder_ranks.inp",
      "real_time/01-propagators.09-magnus.inp",
      "real_time/02-propagators.02-cnsparskit.inp",
      "real_time/05-time_propagation.01-gs.inp",
      "real_time/05-time_propagation.06-td_fast_md.inp",
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/16-sparskit.01-gs.inp",
      "real_time/10-bomd.03-td_restart.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/01-propagators.07-caetrs.inp",
      "real_time/19-td_move_ions.03-td_restart.inp",
      "real_time/12-absorption.01-gs.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/09-angular_momentum.03-td_icl.inp",
      "real_time/06-caetrs.01-gs.inp",
      "real_time/05-time_propagation.03-td_domains_states.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/21-scissor.02-td.inp",
      "real_time/09-angular_momentum.01-gs.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/01-propagators.11-cfmagnus4.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/10-bomd.01-gs.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/13-absorption-spin.03-td-restart.inp",
      "real_time/09-angular_momentum.02-td_gipaw.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/01-propagators.08-cn.inp",
      "real_time/15-crank_nicolson.01-gs.inp",
      "real_time/01-propagators.05-etrs_chebyshev.inp",
      "real_time/24-adsic_freeze_orbitals.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/03-td_self_consistent.01-gs.inp",
      "real_time/01-propagators.06-aetrs.inp",
      "real_time/05-time_propagation.05-td_md.inp",
      "real_time/19-td_move_ions.02-td.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/01-propagators.01-gs.inp",
      "real_time/01-propagators.03-etrs_taylor.inp",
      "real_time/03-td_self_consistent.02-etrs.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/01-propagators.02-expmid.inp",
      "real_time/13-absorption-spin.01-gs.inp",
      "real_time/05-time_propagation.02-td_domains.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "real_time/01-propagators.10-exprk4.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "real_time/21-scissor.01-gs.inp",
      "real_time/12-absorption.03-td-restart.inp",
      "real_time/02-propagators.04-rungekutta4.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "pseudopotentials/06-carbon_dojo_pbe.01-gs.inp",
      "pseudopotentials/16-platinum_psp8.01-gs.inp",
      "pseudopotentials/10-helium_upf.02-gs_filter_ts.inp",
      "pseudopotentials/01-sg15-h.01-gs.inp",
      "pseudopotentials/08-carbon_fhi.01-gs.inp",
      "pseudopotentials/07-carbon_dojo_lda.01-gs.inp",
      "pseudopotentials/03-nlcc.01-Fatom.inp",
      "pseudopotentials/13-U235.01-gs.inp",
      "pseudopotentials/10-helium_upf.03-gs_filter_bsb.inp",
      "pseudopotentials/04-carbon_dojo_psml.01-gs.inp",
      "pseudopotentials/10-helium_upf.01-gs_nofilter.inp",
      "pseudopotentials/09-carbon_cpi.01-gs.inp",
      "pseudopotentials/02-cu2_hgh.01_gs.inp",
      "pseudopotentials/02-cu2_hgh.02_gs_current.inp",
      "pseudopotentials/14-carbon_dojo_psp8.01-gs.inp",
      "pseudopotentials/12-mix_and_match.01-mgo.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.01-N_atom.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.02-methane.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.02-td.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.03-td_laser.inp",
      "functionals/18-mgga.01-br89.inp",
      "functionals/09-vdw_ts_sc.01-gs.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/08-vdw_ts.01-gs.inp",
      "functionals/18-mgga.02-br89_oep.inp",
      "functionals/13-libvdwxc_h2o.01-vdwdfcx.inp",
      "functionals/22-xc_lrx.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/11-vdw_d3.01-gs.inp",
      "functionals/03-xc.fbex.inp",
      "finite_systems_1d/03-He-Hartree-Fock.01-gs.inp",
      "components/16-hartree_3d_psolver.02-psolver.inp",
      "components/05-hartree_3d_fft.04-3d_3d_periodic.inp",
      "components/35-helmholtz_decom.01-large_box_no_surf_corr.inp",
      "components/10-hartree_pfft.03-3d_1d_periodic.inp",
      "components/16-hartree_3d_psolver.01-psolver.inp",
      "components/11-hartree_cl.01-fft.inp",
      "components/10-hartree_pfft.05-3d_2d_periodic.inp",
      "components/35-helmholtz_decom.05-sphere_small_box_with_surf_corr.inp",
      "components/35-helmholtz_decom.04-cylinder_small_box_with_surf_corr.inp",
      "components/06-hartree_3d_isf.01-isf.inp",
      "components/12-hartree_direct_3d.01.inp",
      "components/25-subspace.01-jellium.inp",
      "components/10-hartree_pfft.06-fft-parstates.inp",
      "components/13-hartree_3d_mg.01-multigrid.inp",
      "components/10-hartree_pfft.04-3d_3d_periodic.inp",
      "components/05-hartree_3d_fft.02-fft_corrected.inp",
      "components/05-hartree_3d_fft.01-fft.inp",
      "components/35-helmholtz_decom.03-parallelepiped_small_box_with_surf_corr.inp",
      "components/10-hartree_pfft.02-fft_corrected.inp",
      "components/10-hartree_pfft.01-fft.inp",
      "components/04-hartree_3d_cg.01-cg_corrected.inp",
      "components/36-maxwell_vector_potential.inp",
      "components/35-helmholtz_decom.02-small_box_no_surf_corr.inp",
      "components/05-hartree_3d_fft.03-3d_1d_periodic.inp",
      "components/05-hartree_3d_fft.05-3d_2d_periodic.inp",
      "components/23-exponential_apply.01-jellium.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.01-benzene-gs.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp",
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/11-full_delta.01-gs.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.01-Na2.inp",
      "lda_u/05-forces.02-Na2_go.inp",
      "lda_u/10-intersite.01-Na2.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "poissonsolverboundaries": {
    "CallLine": "call parse_variable(namespace, 'PoissonSolverBoundaries', CORR_MULTIPOLE, this%method)",
    "Default": [
      "multipole"
    ],
    "Description": [
      "For finite systems, some Poisson solvers (<tt>multigrid</tt>,",
      "<tt>cg_corrected</tt>, and <tt>fft</tt> with <tt>PoissonFFTKernel = multipole_correction</tt>)",
      "require the calculation of the",
      "boundary conditions with an auxiliary method. This variable selects that method."
    ],
    "LineNumber": 105,
    "Manuals": [],
    "Name": "PoissonSolverBoundaries",
    "Options": [
      {
        "Description": [
          "A multipole expansion of the density is used to approximate the potential on the boundaries."
        ],
        "Name": "multipole",
        "Value": "1"
      },
      {
        "Description": [
          "An exact integration of the Poisson equation is done over the boundaries. This option is",
          "experimental, and not implemented for domain parallelization."
        ],
        "Name": "exact",
        "Value": "3"
      }
    ],
    "Section": "Hamiltonian::Poisson",
    "Sourcefile": "poisson/poisson_corrections.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "poissonsolvermaxiter": {
    "CallLine": "call parse_variable(namespace, 'PoissonSolverMaxIter', 500, iter)",
    "Default": [
      "500"
    ],
    "Description": [
      "The maximum number of iterations for conjugate-gradient",
      "Poisson solvers."
    ],
    "LineNumber": 147,
    "Manuals": [],
    "Name": "PoissonSolverMaxIter",
    "Options": [],
    "Section": "Hamiltonian::Poisson",
    "Sourcefile": "poisson/poisson_init_inc.F90",
    "Testfiles": [
      "components/35-helmholtz_decom.01-large_box_no_surf_corr.inp",
      "components/35-helmholtz_decom.02-small_box_no_surf_corr.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "poissonsolvermaxmultipole": {
    "CallLine": "call parse_variable(namespace, 'PoissonSolverMaxMultipole', 2, maxl)",
    "Default": null,
    "Description": [
      "Order of the multipolar expansion for boundary corrections.",
      " ",
      "The Poisson solvers <tt>multigrid</tt>, <tt>cg</tt>, and <tt>cg_corrected</tt>",
      "(and <tt>fft</tt> with <tt>PoissonFFTKernel = multipole_correction</tt>)",
      "do a multipolar expansion of the given",
      "charge density, such that <math>\\rho = \\rho_{multip.expansion}+\\Delta",
      "\\rho</math>. The Hartree potential due to the <math>\\rho_{multip.expansion}</math> is",
      "calculated analytically, while the Hartree potential due to <math>\\Delta \\rho</math>",
      "is calculated with either a multigrid or cg solver.",
      "The order of the multipolar expansion is set by this variable.",
      " ",
      "Default is 4 for <tt>PoissonSolver = cg_corrected</tt> and <tt>multigrid</tt>, and 2",
      "for <tt>fft</tt> with <tt>PoissonFFTKernel = multipole_correction</tt>."
    ],
    "LineNumber": 188,
    "Manuals": [],
    "Name": "PoissonSolverMaxMultipole",
    "Options": [],
    "Section": "Hamiltonian::Poisson",
    "Sourcefile": "poisson/poisson_init_inc.F90",
    "Testfiles": [
      "components/13-hartree_3d_mg.01-multigrid.inp",
      "components/05-hartree_3d_fft.02-fft_corrected.inp",
      "components/10-hartree_pfft.02-fft_corrected.inp",
      "components/04-hartree_3d_cg.01-cg_corrected.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "poissonsolvermgmaxcycles": {
    "CallLine": "call parse_variable(namespace, 'PoissonSolverMGMaxCycles', 50, this%maxcycles)",
    "Default": [
      "60"
    ],
    "Description": [
      "Maximum number of multigrid cycles that are performed if",
      "convergence is not achieved."
    ],
    "LineNumber": 118,
    "Manuals": [],
    "Name": "PoissonSolverMGMaxCycles",
    "Options": [],
    "Section": "Hamiltonian::Poisson::Multigrid",
    "Sourcefile": "poisson/poisson_multigrid.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "poissonsolvermgpostsmoothingsteps": {
    "CallLine": "call parse_variable(namespace, 'PoissonSolverMGPostsmoothingSteps', 4, this%poststeps)",
    "Default": [
      "4"
    ],
    "Description": [
      "Number of Gauss-Seidel smoothing steps after coarse-level",
      "correction in the multigrid Poisson solver."
    ],
    "LineNumber": 108,
    "Manuals": [],
    "Name": "PoissonSolverMGPostsmoothingSteps",
    "Options": [],
    "Section": "Hamiltonian::Poisson::Multigrid",
    "Sourcefile": "poisson/poisson_multigrid.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "poissonsolvermgpresmoothingsteps": {
    "CallLine": "call parse_variable(namespace, 'PoissonSolverMGPresmoothingSteps', 1, this%presteps)",
    "Default": [
      "1"
    ],
    "Description": [
      "Number of Gauss-Seidel smoothing steps before coarse-level",
      "correction in the multigrid Poisson solver."
    ],
    "LineNumber": 98,
    "Manuals": [],
    "Name": "PoissonSolverMGPresmoothingSteps",
    "Options": [],
    "Section": "Hamiltonian::Poisson::Multigrid",
    "Sourcefile": "poisson/poisson_multigrid.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "poissonsolvermgrelaxationfactor": {
    "CallLine": "call parse_variable(namespace, 'PoissonSolverMGRelaxationFactor', M_ONE, this%relax_factor)",
    "Default": null,
    "Description": [
      "Relaxation factor of the relaxation operator used for the",
      "multigrid method. This is mainly for debugging,",
      "since overrelaxation does not help in a multigrid scheme.",
      "The default is 1.0, except 0.6666 for the <tt>gauss_jacobi</tt> method."
    ],
    "LineNumber": 174,
    "Manuals": [],
    "Name": "PoissonSolverMGRelaxationFactor",
    "Options": [],
    "Section": "Hamiltonian::Poisson::Multigrid",
    "Sourcefile": "poisson/poisson_multigrid.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "poissonsolvermgrelaxationmethod": {
    "CallLine": "call parse_variable(namespace, 'PoissonSolverMGRelaxationMethod', GAUSS_SEIDEL, this%relaxation_method)",
    "Default": null,
    "Description": [
      "Method used to solve the linear system approximately in each grid for the",
      "multigrid procedure that solves Poisson equation. Default is <tt>gauss_seidel</tt>,",
      "unless curvilinear coordinates are used, in which case the default is <tt>gauss_jacobi</tt>."
    ],
    "LineNumber": 154,
    "Manuals": [],
    "Name": "PoissonSolverMGRelaxationMethod",
    "Options": [
      {
        "Description": [
          "Gauss-Seidel."
        ],
        "Name": "gauss_seidel",
        "Value": "1"
      },
      {
        "Description": [
          "Gauss-Jacobi."
        ],
        "Name": "gauss_jacobi",
        "Value": "2"
      },
      {
        "Description": [
          "Alternative implementation of Gauss-Jacobi."
        ],
        "Name": "gauss_jacobi2",
        "Value": "3"
      }
    ],
    "Section": "Hamiltonian::Poisson::Multigrid",
    "Sourcefile": "poisson/poisson_multigrid.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "poissonsolvermgrestrictionmethod": {
    "CallLine": "call parse_variable(namespace, 'PoissonSolverMGRestrictionMethod', 2, this%restriction_method)",
    "Default": [
      "fullweight"
    ],
    "Description": [
      "Method used from fine-to-coarse grid transfer."
    ],
    "LineNumber": 131,
    "Manuals": [],
    "Name": "PoissonSolverMGRestrictionMethod",
    "Options": [
      {
        "Description": [
          "Injection"
        ],
        "Name": "injection",
        "Value": "1"
      },
      {
        "Description": [
          "Fullweight restriction"
        ],
        "Name": "fullweight",
        "Value": "2"
      }
    ],
    "Section": "Hamiltonian::Poisson::Multigrid",
    "Sourcefile": "poisson/poisson_multigrid.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "poissonsolvernodes": {
    "CallLine": "call parse_variable(namespace, 'PoissonSolverNodes', default_nodes, nodes)",
    "Default": [
      "0"
    ],
    "Description": [
      "How many nodes to use to solve the Poisson equation. A value of",
      "0, the default, implies that all available nodes are used."
    ],
    "LineNumber": 147,
    "Manuals": [],
    "Name": "PoissonSolverNodes",
    "Options": [],
    "Section": "Hamiltonian::Poisson",
    "Sourcefile": "poisson/poisson_isf.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "poissonsolverpsolverparalleldata": {
    "CallLine": "call parse_variable(namespace, 'PoissonSolverPSolverParallelData', .true., data_is_parallel)",
    "Default": [
      "yes"
    ],
    "Description": [
      "Indicates whether data is partitioned within the PSolver library.",
      "If data is distributed among processes, Octopus uses parallel data-structures",
      "and, thus, less memory.",
      "If \"yes\", data is parallelized. The <i>z</i>-axis of the input vector",
      "is split among the MPI processes.",
      "If \"no\", entire input and output vector is saved in all the MPI processes.",
      "If k-points parallelization is used, \"no\" must be selected."
    ],
    "LineNumber": 181,
    "Manuals": [],
    "Name": "PoissonSolverPSolverParallelData",
    "Options": [],
    "Section": "Hamiltonian::Poisson::PSolver",
    "Sourcefile": "poisson/poisson_psolver.F90",
    "Testfiles": [
      "components/16-hartree_3d_psolver.02-psolver.inp",
      "components/16-hartree_3d_psolver.01-psolver.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "poissonsolverthreshold": {
    "CallLine": "call parse_variable(namespace, 'PoissonSolverThreshold', 1.0e-6_real64, threshold)",
    "Default": [
      "1e-6"
    ],
    "Description": [
      "The tolerance for the Poisson solution, used by the <tt>cg</tt>,",
      "<tt>cg_corrected</tt>, and <tt>multigrid</tt> solvers."
    ],
    "LineNumber": 156,
    "Manuals": [],
    "Name": "PoissonSolverThreshold",
    "Options": [],
    "Section": "Hamiltonian::Poisson",
    "Sourcefile": "poisson/poisson_init_inc.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "poissontestperiodicthreshold": {
    "CallLine": "call parse_variable(namespace, 'PoissonTestPeriodicThreshold', 1e-5_real64, threshold)",
    "Default": [
      "1e-5"
    ],
    "Description": [
      "This threshold determines the accuracy of the periodic copies of",
      "the Gaussian charge distribution that are taken into account when",
      "computing the analytical solution for periodic systems.",
      "Be aware that the default leads to good results for systems",
      "that are periodic in 1D - for 3D it is very costly because of the",
      "large number of copies needed."
    ],
    "LineNumber": 1063,
    "Manuals": [],
    "Name": "PoissonTestPeriodicThreshold",
    "Options": [],
    "Section": "Hamiltonian::Poisson",
    "Sourcefile": "poisson/poisson.F90",
    "Testfiles": [
      "components/05-hartree_3d_fft.04-3d_3d_periodic.inp",
      "components/10-hartree_pfft.03-3d_1d_periodic.inp",
      "components/10-hartree_pfft.05-3d_2d_periodic.inp",
      "components/10-hartree_pfft.04-3d_3d_periodic.inp",
      "components/05-hartree_3d_fft.03-3d_1d_periodic.inp",
      "components/05-hartree_3d_fft.05-3d_2d_periodic.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "preconditioner": {
    "CallLine": "call parse_variable(namespace, 'Preconditioner', default, this%which)",
    "Default": null,
    "Description": [
      "Which preconditioner to use in order to solve the Kohn-Sham",
      "equations or the linear-response equations. The default is",
      "pre_filter, except for curvilinear coordinates, where no",
      "preconditioner is applied by default."
    ],
    "LineNumber": 133,
    "Manuals": [],
    "Name": "Preconditioner",
    "Options": [
      {
        "Description": [
          "Do not apply preconditioner."
        ],
        "Name": "no",
        "Value": "0"
      },
      {
        "Description": [
          "Filter preconditioner."
        ],
        "Name": "pre_filter",
        "Value": "1"
      },
      {
        "Description": [
          "Jacobi preconditioner. Only the local part of the pseudopotential is used.",
          "Not very helpful."
        ],
        "Name": "pre_jacobi",
        "Value": "2"
      },
      {
        "Description": [
          "Uses the full Laplacian as preconditioner. The inverse is calculated through",
          "the solution of the Poisson equation. This is, of course, very slow."
        ],
        "Name": "pre_poisson",
        "Value": "3"
      },
      {
        "Description": [
          "Multigrid preconditioner."
        ],
        "Name": "pre_multigrid",
        "Value": "7"
      }
    ],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/preconditioners.F90",
    "Testfiles": [
      "linear_response/08-sternheimer-photons.02-em_resp.inp",
      "finite_systems_3d/22-preconditioner.01-none.inp",
      "finite_systems_3d/22-preconditioner.03-jacobi.inp",
      "finite_systems_3d/18-preconditioner_poisson.01-poisson.inp",
      "finite_systems_3d/22-preconditioner.04-multigrid.inp",
      "finite_systems_3d/22-preconditioner.05-multigrid_rmmdiis.inp",
      "finite_systems_3d/22-preconditioner.02-filter.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/10-berkeleygw.02-unocc.inp",
      "finite_systems_1d/02-neon_mpi.01-ground_state-IP_par_domains.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "preconditionerfilterfactor": {
    "CallLine": "call parse_variable(namespace, 'PreconditionerFilterFactor', default_alpha, alpha)",
    "Default": null,
    "Description": [
      "This variable controls how much filter preconditioner is",
      "applied. A value of 1.0 means no preconditioning, 0.5 is the",
      "standard.",
      " ",
      "The default is 0.5, except for periodic systems where the",
      "default is 0.6.",
      " ",
      "If you observe that the first eigenvectors are not converging",
      "properly, especially for periodic systems, you should",
      "increment this value.",
      " ",
      "The allowed range for this parameter is between 0.5 and 1.0.",
      "For other values, the SCF may converge to wrong results."
    ],
    "LineNumber": 164,
    "Manuals": [],
    "Name": "PreconditionerFilterFactor",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/preconditioners.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "preconditioneriterationsmiddle": {
    "CallLine": "call parse_variable(namespace, 'PreconditionerIterationsMiddle', 1, this%nmiddle)",
    "Default": null,
    "Description": [
      "This variable is the number of smoothing iterations on the coarsest grid for the multigrid",
      "preconditioner. The default is 1."
    ],
    "LineNumber": 242,
    "Manuals": [],
    "Name": "PreconditionerIterationsMiddle",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/preconditioners.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "preconditioneriterationspost": {
    "CallLine": "call parse_variable(namespace, 'PreconditionerIterationsPost', 2, this%npost)",
    "Default": null,
    "Description": [
      "This variable is the number of post-smoothing iterations for the multigrid",
      "preconditioner. The default is 2."
    ],
    "LineNumber": 251,
    "Manuals": [],
    "Name": "PreconditionerIterationsPost",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/preconditioners.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "preconditioneriterationspre": {
    "CallLine": "call parse_variable(namespace, 'PreconditionerIterationsPre', 1, this%npre)",
    "Default": null,
    "Description": [
      "This variable is the number of pre-smoothing iterations for the multigrid",
      "preconditioner. The default is 1."
    ],
    "LineNumber": 233,
    "Manuals": [],
    "Name": "PreconditionerIterationsPre",
    "Options": [],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/preconditioners.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "preorthogonalization": {
    "CallLine": "call parse_variable(namespace, 'Preorthogonalization', default_preorthog, this%preorthogonalization)",
    "Default": null,
    "Description": [
      "Whether initial linear-response wavefunctions should be orthogonalized",
      "or not against the occupied states, at the start of each SCF cycle.",
      "Default is true only if <tt>SmearingFunction = semiconducting</tt>,",
      "or if the <tt>Occupations</tt> block specifies all full or empty states,",
      "and we are not solving for linear response in the occupied subspace too."
    ],
    "LineNumber": 191,
    "Manuals": [],
    "Name": "Preorthogonalization",
    "Options": [],
    "Section": "Linear Response::Sternheimer",
    "Sourcefile": "sternheimer/sternheimer.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "profilingallnodes": {
    "CallLine": "call parse_variable(namespace, 'ProfilingAllNodes', .false., prof_vars%all_nodes)",
    "Default": [
      "no"
    ],
    "Description": [
      "This variable controls whether all nodes print the time",
      "profiling output. If set to no, the default, only the root node",
      "will write the profile. If set to yes, all nodes will print it."
    ],
    "LineNumber": 258,
    "Manuals": [],
    "Name": "ProfilingAllNodes",
    "Options": [],
    "Section": "Execution::Optimization",
    "Sourcefile": "basic/profiling.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "profilingmode": {
    "CallLine": "call parse_variable(namespace, 'ProfilingMode', 0, prof_vars%mode)",
    "Default": [
      "no"
    ],
    "Description": [
      "Use this variable to run <tt>Octopus</tt> in profiling mode. In this mode",
      "<tt>Octopus</tt> records the time spent in certain areas of the code and",
      "the number of times this code is executed. These numbers",
      "are written in <tt>./profiling.NNN/profiling.nnn</tt> with <tt>nnn</tt> being the",
      "node number (<tt>000</tt> in serial) and <tt>NNN</tt> the number of processors.",
      "This is mainly for development purposes. Note, however, that",
      "<tt>Octopus</tt> should be compiled with <tt>--disable-debug</tt> to do proper",
      "profiling. Warning: you may encounter strange results with OpenMP."
    ],
    "LineNumber": 237,
    "Manuals": [],
    "Name": "ProfilingMode",
    "Options": [
      {
        "Description": [
          "No profiling information is generated."
        ],
        "Name": "no",
        "Value": "0"
      },
      {
        "Description": [
          "Profile the time spent in defined profiling regions."
        ],
        "Name": "prof_time",
        "Value": "1"
      },
      {
        "Description": [
          "As well as the time, summary information on memory usage and the largest arrays are reported."
        ],
        "Name": "prof_memory",
        "Value": "2"
      },
      {
        "Description": [
          "As well as the time and summary memory information, a",
          "log is reported of every allocation and deallocation."
        ],
        "Name": "prof_memory_full",
        "Value": "4"
      },
      {
        "Description": [
          "Enable instrumentation using LIKWID."
        ],
        "Name": "likwid",
        "Value": "8"
      },
      {
        "Description": [
          "Count the number of file open and close."
        ],
        "Name": "prof_io",
        "Value": "16"
      }
    ],
    "Section": "Execution::Optimization",
    "Sourcefile": "basic/profiling.F90",
    "Testfiles": [
      "finite_systems_3d/31-acetylene_b3lyp.01-gs.inp",
      "real_time/12-absorption.01-gs.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "periodic_systems/13-primitive.03-bcc_iron.inp",
      "periodic_systems/08-benzene_supercell.01-gs.inp",
      "finite_systems_1d/01-hydrogen.01-ground_state.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/03-localtarget.04-gs-mp.inp",
      "optimal_control/03-localtarget.01-gs.inp",
      "optimal_control/03-localtarget.03-tdoct.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "profilingoutputtree": {
    "CallLine": "call parse_variable(namespace, 'ProfilingOutputTree', .true., prof_vars%output_tree)",
    "Default": [
      "yes"
    ],
    "Description": [
      "This variable controls whether the profiling output is additionally",
      "written as a tree."
    ],
    "LineNumber": 330,
    "Manuals": [],
    "Name": "ProfilingOutputTree",
    "Options": [],
    "Section": "Execution::Optimization",
    "Sourcefile": "basic/profiling.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "profilingoutputyaml": {
    "CallLine": "call parse_variable(namespace, 'ProfilingOutputYAML', .false., prof_vars%output_yaml)",
    "Default": [
      "no"
    ],
    "Description": [
      "This variable controls whether the profiling output is additionally",
      "written to a YAML file."
    ],
    "LineNumber": 320,
    "Manuals": [],
    "Name": "ProfilingOutputYAML",
    "Options": [],
    "Section": "Execution::Optimization",
    "Sourcefile": "basic/profiling.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "propagatespatialmaxwellfield": {
    "CallLine": "call parse_variable(namespace, 'PropagateSpatialMaxwellField', .true., hm%spatial_constant_propagate)",
    "Default": [
      "yes"
    ],
    "Description": [
      "Allow for numerical propagation of Maxwells equations of spatially constant field.",
      "If set to no, do only analytic evaluation of the field inside the box."
    ],
    "LineNumber": 1452,
    "Manuals": [],
    "Name": "PropagateSpatialMaxwellField",
    "Options": [],
    "Section": "Maxwell::TD Propagation",
    "Sourcefile": "maxwell/propagator_mxll.F90",
    "Testfiles": [
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "propagationspectrumdampfactor": {
    "CallLine": "call parse_variable(namespace, 'PropagationSpectrumDampFactor', -M_ONE, spectrum%damp_factor, units_inp%time**(-1))",
    "Default": [
      "-1.0"
    ],
    "Description": [
      "If <tt>PropagationSpectrumDampMode = exponential, gaussian</tt>, the damping parameter of the exponential",
      "is fixed through this variable.",
      "Default value ensure that the damping function adquires a 0.0001 value at the end of the propagation time."
    ],
    "LineNumber": 312,
    "Manuals": [],
    "Name": "PropagationSpectrumDampFactor",
    "Options": [],
    "Section": "Utilities::oct-propagation_spectrum",
    "Sourcefile": "td/spectrum.F90",
    "Testfiles": [
      "periodic_systems/05-lithium.05-tdtdm.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "propagationspectrumdampmode": {
    "CallLine": "call parse_variable(namespace, 'PropagationSpectrumDampMode', default, spectrum%damp)",
    "Default": null,
    "Description": [
      "Decides which damping/filtering is to be applied in order to",
      "calculate spectra by calculating a Fourier transform. The",
      "default is polynomial damping, except when <tt>SpectrumMethod = compressed_sensing</tt>.",
      "In that case the default is none."
    ],
    "LineNumber": 207,
    "Manuals": [],
    "Name": "PropagationSpectrumDampMode",
    "Options": [
      {
        "Description": [
          "No filtering at all."
        ],
        "Name": "none",
        "Value": "0"
      },
      {
        "Description": [
          "Exponential filtering, corresponding to a Lorentzian-shaped spectrum."
        ],
        "Name": "exponential",
        "Value": "1"
      },
      {
        "Description": [
          "Third-order polynomial damping."
        ],
        "Name": "polynomial",
        "Value": "2"
      },
      {
        "Description": [
          "Gaussian damping."
        ],
        "Name": "gaussian",
        "Value": "3"
      }
    ],
    "Section": "Utilities::oct-propagation_spectrum",
    "Sourcefile": "td/spectrum.F90",
    "Testfiles": [
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/05-lithium.05-tdtdm.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "propagationspectrumendtime": {
    "CallLine": "call parse_variable(namespace, 'PropagationSpectrumEndTime', -M_ONE, spectrum%end_time, units_inp%time)",
    "Default": [
      "-1.0",
      "au"
    ],
    "Description": [
      "Processing is done for the given function in a time-window that ends at the",
      "value of this variable. If set to a negative value, the maximum value from",
      "the corresponding multipole file will used."
    ],
    "LineNumber": 261,
    "Manuals": [],
    "Name": "PropagationSpectrumEndTime",
    "Options": [],
    "Section": "Utilities::oct-propagation_spectrum",
    "Sourcefile": "td/spectrum.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "propagationspectrumenergystep": {
    "CallLine": "call parse_variable(namespace, 'PropagationSpectrumEnergyStep', fdefault, spectrum%energy_step, units_inp%energy)",
    "Default": [
      "0.01",
      "eV"
    ],
    "Description": [
      "Sampling rate for the spectrum. If you supply a number equal or smaller than zero, then",
      "the sampling rate will be <math>2 \\pi / T</math>, where <math>T</math> is the total propagation time."
    ],
    "LineNumber": 274,
    "Manuals": [],
    "Name": "PropagationSpectrumEnergyStep",
    "Options": [],
    "Section": "Utilities::oct-propagation_spectrum",
    "Sourcefile": "td/spectrum.F90",
    "Testfiles": [
      "real_time/18-hhg.03-hs.inp",
      "real_time/14-absorption-spinors.04-spectrum.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/12-absorption.06-power_spectrum.inp",
      "real_time/21-scissor.03-spectrum.inp",
      "real_time/12-absorption.04-spectrum.inp",
      "real_time/12-absorption.08-spectrum_exp.inp",
      "real_time/17-absorption-spin_symmetry.03-spectrum.inp",
      "real_time/12-absorption.07-spectrum_cosine.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "propagationspectrummaxenergy": {
    "CallLine": "call parse_variable(namespace, 'PropagationSpectrumMaxEnergy', fdefault, spectrum%max_energy, units_inp%energy)",
    "Default": [
      "20",
      "eV"
    ],
    "Description": [
      "The Fourier transform is calculated for energies smaller than this value."
    ],
    "LineNumber": 299,
    "Manuals": [],
    "Name": "PropagationSpectrumMaxEnergy",
    "Options": [],
    "Section": "Utilities::oct-propagation_spectrum",
    "Sourcefile": "td/spectrum.F90",
    "Testfiles": [
      "real_time/18-hhg.03-hs.inp",
      "real_time/14-absorption-spinors.04-spectrum.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/12-absorption.06-power_spectrum.inp",
      "real_time/12-absorption.05-spectrum_compressed_sensing.inp",
      "real_time/21-scissor.03-spectrum.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/12-absorption.04-spectrum.inp",
      "real_time/12-absorption.08-spectrum_exp.inp",
      "real_time/17-absorption-spin_symmetry.03-spectrum.inp",
      "real_time/12-absorption.07-spectrum_cosine.inp",
      "real_time/14-absorption-spinors.05-spectrum_compressed_sensing.inp",
      "periodic_systems/05-lithium.05-tdtdm.inp",
      "periodic_systems/31-magnon_1d.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "propagationspectrumminenergy": {
    "CallLine": "call parse_variable(namespace, 'PropagationSpectrumMinEnergy', M_ZERO, spectrum%min_energy, units_inp%energy)",
    "Default": [
      "0"
    ],
    "Description": [
      "The Fourier transform is calculated for energies larger than this value."
    ],
    "LineNumber": 285,
    "Manuals": [],
    "Name": "PropagationSpectrumMinEnergy",
    "Options": [],
    "Section": "Utilities::oct-propagation_spectrum",
    "Sourcefile": "td/spectrum.F90",
    "Testfiles": [
      "periodic_systems/05-lithium.05-tdtdm.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "propagationspectrumsigmadiagonalization": {
    "CallLine": "call parse_variable(namespace, 'PropagationSpectrumSigmaDiagonalization', .false., spectrum%sigma_diag)",
    "Default": [
      ".false."
    ],
    "Description": [
      "If <tt>PropagationSpectrumSigmaDiagonalization = yes</tt>, the polarizability tensor is diagonalizied.",
      "This variable is only used if the cross_section_tensor is computed."
    ],
    "LineNumber": 325,
    "Manuals": [],
    "Name": "PropagationSpectrumSigmaDiagonalization",
    "Options": [],
    "Section": "Utilities::oct-propagation_spectrum",
    "Sourcefile": "td/spectrum.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "propagationspectrumstarttime": {
    "CallLine": "call parse_variable(namespace, 'PropagationSpectrumStartTime',  M_ZERO, spectrum%start_time, units_inp%time)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "Processing is done for the given function in a time-window that starts at the",
      "value of this variable."
    ],
    "LineNumber": 249,
    "Manuals": [],
    "Name": "PropagationSpectrumStartTime",
    "Options": [],
    "Section": "Utilities::oct-propagation_spectrum",
    "Sourcefile": "td/spectrum.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "propagationspectrumsymmetrizesigma": {
    "CallLine": "call parse_variable(namespace, 'PropagationSpectrumSymmetrizeSigma', .false., symmetrize)",
    "Default": [
      ".false."
    ],
    "Description": [
      "The polarizablity tensor has to be real and symmetric. Due to numerical accuracy,",
      "that is not extricly conserved when computing it from different time-propations.",
      "If <tt>PropagationSpectrumSymmetrizeSigma = yes</tt>, the polarizability tensor is",
      "symmetrized before its diagonalizied.",
      "This variable is only used if the cross_section_tensor is computed."
    ],
    "LineNumber": 2685,
    "Manuals": [],
    "Name": "PropagationSpectrumSymmetrizeSigma",
    "Options": [],
    "Section": "Utilities::oct-propagation_spectrum",
    "Sourcefile": "td/spectrum.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "propagationspectrumtransform": {
    "CallLine": "call parse_variable(namespace, 'PropagationSpectrumTransform', SPECTRUM_TRANSFORM_SIN, spectrum%transform)",
    "Default": [
      "sine"
    ],
    "Description": [
      "Decides which transform to perform, if <tt>SpectrumMethod = fourier</tt>."
    ],
    "LineNumber": 235,
    "Manuals": [],
    "Name": "PropagationSpectrumTransform",
    "Options": [
      {
        "Description": [
          "Sine transform: <math>\\int dt \\sin(wt) f(t)</math>. Produces the imaginary part of the polarizability."
        ],
        "Name": "sine",
        "Value": "2"
      },
      {
        "Description": [
          "Cosine transform: <math>\\int dt \\cos(wt) f(t)</math>. Produces the real part of the polarizability."
        ],
        "Name": "cosine",
        "Value": "3"
      },
      {
        "Description": [
          "Real exponential transform: <math>\\int dt e^{-wt} f(t)</math>. Produces the real part of the polarizability at imaginary",
          "frequencies, <i>e.g.</i> for Van der Waals <math>C_6</math> coefficients.",
          "This is the only allowed choice for complex scaling."
        ],
        "Name": "laplace",
        "Value": "1"
      }
    ],
    "Section": "Utilities::oct-propagation_spectrum",
    "Sourcefile": "td/spectrum.F90",
    "Testfiles": [
      "real_time/12-absorption.08-spectrum_exp.inp",
      "real_time/12-absorption.07-spectrum_cosine.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "propagationspectrumtype": {
    "CallLine": "call parse_variable(namespace, 'PropagationSpectrumType', SPECTRUM_ABSORPTION, spectrum%spectype)",
    "Default": [
      "AbsorptionSpectrum"
    ],
    "Description": [
      "Type of spectrum to calculate."
    ],
    "LineNumber": 146,
    "Manuals": [],
    "Name": "PropagationSpectrumType",
    "Options": [
      {
        "Description": [
          "Photoabsorption spectrum."
        ],
        "Name": "AbsorptionSpectrum",
        "Value": "1"
      },
      {
        "Description": [
          "Dynamic structure factor (also known as energy-loss function or spectrum)."
        ],
        "Name": "EnergyLossSpectrum",
        "Value": "2"
      },
      {
        "Description": [
          "Power spectrum of the dipole moment."
        ],
        "Name": "DipolePower",
        "Value": "3"
      },
      {
        "Description": [
          "Rotatory strength spectrum."
        ],
        "Name": "RotatoryStrength",
        "Value": "4"
      }
    ],
    "Section": "Utilities::oct-propagation_spectrum",
    "Sourcefile": "td/spectrum.F90",
    "Testfiles": [
      "real_time/12-absorption.06-power_spectrum.inp",
      "real_time/09-angular_momentum.04-rotatory_strength.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "pseudopotentialset": {
    "CallLine": "call parse_variable(namespace, 'PseudopotentialSet', default_val, default_pseudopotential_set_id)",
    "Default": [
      "standard"
    ],
    "Description": [
      "Selects the set of pseudopotentials used by default for species",
      "not defined in the <tt>Species</tt> block.",
      " ",
      "These sets of pseudopotentials come from different",
      "sources. Octopus developers have not validated them. We include",
      "them with the code for convenience of the users, but you are",
      "expected to check the quality and suitability of the",
      "pseudopotential for your application.",
      " "
    ],
    "LineNumber": 299,
    "Manuals": [],
    "Name": "PseudopotentialSet",
    "Options": [
      {
        "Description": [
          "Do not load any pseudopotential by default. All species must be",
          "specified in the Species block."
        ],
        "Name": "none",
        "Value": "0"
      },
      {
        "Description": [
          "The standard set of Octopus that provides LDA pseudopotentials",
          "in the PSF format for some elements: H, Li, C, N, O, Na, Si, S, Ti, Se, Cd."
        ],
        "Name": "standard",
        "Value": "1"
      },
      {
        "Description": [
          "The set of Optimized Norm-Conserving Vanderbilt",
          "PBE pseudopotentials. Ref: M. Schlipf and F. Gygi, <i>Comp. Phys. Commun.</i> <b>196</b>, 36 (2015).",
          "This set provides pseudopotentials for elements up to Z = 83",
          "(Bi), excluding Lanthanides.",
          "Current version of the set is 1.2."
        ],
        "Name": "sg15",
        "Value": "2"
      },
      {
        "Description": [
          "The set of Hartwigsen-Goedecker-Hutter LDA pseudopotentials for elements from H to Rn.",
          "Ref: C. Hartwigsen, S. Goedecker, and J. Hutter, <i>Phys. Rev. B</i> <b>58</b>, 3641 (1998)."
        ],
        "Name": "hgh_lda",
        "Value": "3"
      },
      {
        "Description": [
          "The semicore set of Hartwigsen-Goedecker-Hutter LDA pseudopotentials.",
          "Ref: C. Hartwigsen, S. Goedecker, and J. Hutter, <i>Phys. Rev. B</i> <b>58</b>, 3641 (1998)."
        ],
        "Name": "hgh_lda_sc",
        "Value": "31"
      },
      {
        "Description": [
          "The set of Hamann-Schlueter-Chiang-Vanderbilt (HSCV) potentials",
          "for LDA exchange and correlation downloaded from http://fpmd.ucdavis.edu/potentials/index.htm.",
          "These pseudopotentials were originally intended for the QBox",
          "code. They were generated using the method of Hamann, Schluter",
          "and Chiang. Ref: D. Vanderbilt, <i>Phys. Rev. B</i> <b>32</b>, 8412 (1985).",
          "Warning from the original site: The potentials provided in this",
          "site are distributed without warranty. In most cases,",
          "potentials were not tested. Potentials should be thoroughly",
          "tested before being used in simulations."
        ],
        "Name": "hscv_lda",
        "Value": "4"
      },
      {
        "Description": [
          "PBE version of the HSCV pseudopotentials. Check the",
          "documentation of the option <tt>hscv_lda</tt> for details and warnings."
        ],
        "Name": "hscv_pbe",
        "Value": "5"
      },
      {
        "Description": [
          "PBE version of the pseudopotentials of http://pseudo-dojo.org. Version 0.4."
        ],
        "Name": "pseudodojo_pbe",
        "Value": "100"
      },
      {
        "Description": [
          "LDA pseudopotentials of http://pseudo-dojo.org. Version 0.4."
        ],
        "Name": "pseudodojo_lda",
        "Value": "103"
      },
      {
        "Description": [
          "PBEsol version of the pseudopotentials of http://pseudo-dojo.org. Version 0.3."
        ],
        "Name": "pseudodojo_pbesol",
        "Value": "105"
      }
    ],
    "Section": "System::Species",
    "Sourcefile": "species/species.F90",
    "Testfiles": [
      "linear_response/03-vdw_sternheimer.02-vdw.inp",
      "linear_response/03-vdw_sternheimer.01-ground_state.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/03-magnetic.01-gs-unpolarized.inp",
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/39-adsic.02-polarized.inp",
      "finite_systems_3d/35-slater_x.01-gs.inp",
      "finite_systems_3d/36-kli_x.01-gs.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/41-gpu-bug.01-C.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/09-spinors.01-ground_state.inp",
      "finite_systems_3d/31-acetylene_b3lyp.01-gs.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/39-adsic.01-unpolarized.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "finite_systems_3d/09-spinors.02-rmmdiis.inp",
      "real_time/20-pcm-local-field-absorption.01-gs.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp",
      "real_time/24-adsic_freeze_orbitals.01-gs.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "pseudopotentials/17-hgh_occupations.01-W.inp",
      "pseudopotentials/17-hgh_occupations.02-Au.inp",
      "pseudopotentials/06-carbon_dojo_pbe.01-gs.inp",
      "pseudopotentials/17-hgh_occupations.04-Au_sc.inp",
      "pseudopotentials/17-hgh_occupations.03-W_sc.inp",
      "pseudopotentials/01-sg15-h.01-gs.inp",
      "pseudopotentials/11-isotopes.01-deuterium.inp",
      "pseudopotentials/07-carbon_dojo_lda.01-gs.inp",
      "pseudopotentials/13-U235.01-gs.inp",
      "pseudopotentials/05-carbon_dojo_pbesol.01-gs.inp",
      "pseudopotentials/04-carbon_dojo_psml.01-gs.inp",
      "pseudopotentials/02-cu2_hgh.01_gs.inp",
      "pseudopotentials/02-cu2_hgh.02_gs_current.inp",
      "functionals/18-mgga.01-br89.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/18-mgga.02-br89_oep.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/14-libvdwxc_Be_hcp.01-vdwdfcx.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "functionals/07-sic.02-scdm.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/11-silicon_force.02-nlcc.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/27-Ar.02-kdotp.inp",
      "periodic_systems/13-primitive.03-bcc_iron.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/32-photodoping.01-gs.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/27-Ar.01-gs.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "components/19-hgh_soc.01-3d.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "qpointsgrid": {
    "CallLine": "if (parse_block(namespace, 'QPointsGrid', blk) == 0) then",
    "Default": [
      "KPointsGrid"
    ],
    "Description": [
      "This block allows to define a q-point grid used for the calculation of the Fock operator",
      "with k-points. The <i>q</i>-points are distributed in a uniform grid, as done for the",
      "<tt>KPointsGrid</tt> variable.",
      "See J. Chem Phys. 124, 154709 (2006) for details",
      " ",
      "For each dimension, the number of q point must be a divider of the number of  k point",
      " ",
      "<tt>%QPointsGrid",
      "<br>&nbsp;&nbsp;2 | 2 | 1",
      "<br>%</tt>",
      " ",
      "At the moment, this is not compatible with k-point symmetries.",
      " "
    ],
    "LineNumber": 528,
    "Manuals": [],
    "Name": "QPointsGrid",
    "Options": [],
    "Section": "Mesh::KPoints",
    "Sourcefile": "electrons/kpoints.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "radius": {
    "CallLine": "call parse_variable(namespace, 'Radius', -M_ONE, rsize, units_inp%length)",
    "Default": null,
    "Description": [
      "Defines the radius for <tt>BoxShape</tt> = <tt>sphere</tt>,",
      "<tt>cylinder</tt>, or <tt>minimum</tt>. Must be a positive",
      "number."
    ],
    "LineNumber": 178,
    "Manuals": [],
    "Name": "Radius",
    "Options": [],
    "Section": "Mesh::Simulation Box",
    "Sourcefile": "boxes/box_factory.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_2d/05-spin_precession.01-ground_state.inp",
      "finite_systems_2d/03-helium_atom.02-ground_state.inp",
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/02-fock-darwin.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/02-fock-darwin.02-ground_state.inp",
      "finite_systems_2d/09-magnetic_2d.01-no_field.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/03-helium_atom.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/12-electronic_subsystem_propagators.01-gs.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/16-bomd.01-gs.inp",
      "multisystem/99-carbon_hydrogen.03-td_restart.inp",
      "multisystem/99-carbon_hydrogen.01-gs.inp",
      "multisystem/15-electronic_system_restart.04-td_restart_part2.inp",
      "multisystem/16-bomd.02-td.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/15-electronic_system_restart.01-gs.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "multisystem/99-carbon_hydrogen.02-td.inp",
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/03-vdw_sternheimer.02-vdw.inp",
      "linear_response/02-h2o_pol_lr.04_h2o_susc.inp",
      "linear_response/05-polarizability.02-sternheimer.inp",
      "linear_response/06-vib_modes_fd.01-vib_modes_fd.inp",
      "linear_response/05-polarizability.01-gs.inp",
      "linear_response/08-sternheimer-photons.01-gs.inp",
      "linear_response/08-sternheimer-photons.02-em_resp.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "linear_response/02-h2o_pol_lr.01_h2o_gs.inp",
      "linear_response/01-casida.09-spectrum.inp",
      "linear_response/06-vib_modes_fd.01-ground_state.inp",
      "linear_response/02-h2o_pol_lr.03_h2o_dyn_pol_cmplx.inp",
      "linear_response/04-vib_modes.01-ground_state.inp",
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/05-polarizability.03-finite-diff.inp",
      "linear_response/02-h2o_pol_lr.02_h2o_dyn_pol.inp",
      "linear_response/04-vib_modes.02-vib_modes.inp",
      "linear_response/04-vib_modes.03-vib_modes_restart.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "linear_response/02-h2o_pol_lr.05_h2o_magn_opt.inp",
      "linear_response/01-casida.01-gs.inp",
      "linear_response/03-vdw_sternheimer.01-ground_state.inp",
      "finite_systems_3d/30-local_multipoles.02-multipoles.inp",
      "finite_systems_3d/14-fullerene_unpacked.02-td-unpacked.inp",
      "finite_systems_3d/42-full_potential_anc.04-fr-zora.inp",
      "finite_systems_3d/22-preconditioner.01-none.inp",
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/22-preconditioner.03-jacobi.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/30-local_multipoles.01-gs.inp",
      "finite_systems_3d/06-restart.06-td_calc.inp",
      "finite_systems_3d/05-output.02-gs.inp",
      "finite_systems_3d/16-scfinlcao_std.01-gs.inp",
      "finite_systems_3d/03-magnetic.01-gs-unpolarized.inp",
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/33-cg.02-additional_terms.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/20-eigensolver.01-cg.inp",
      "finite_systems_3d/13-full_potential_hydrogen.02-gs-cg.inp",
      "finite_systems_3d/10-fullerene.01-gs.inp",
      "finite_systems_3d/42-full_potential_anc.02-sc-zora.inp",
      "finite_systems_3d/14-fullerene_unpacked.03-td-packed.inp",
      "finite_systems_3d/18-preconditioner_poisson.01-poisson.inp",
      "finite_systems_3d/24-o2-spin.01-gs.inp",
      "finite_systems_3d/39-adsic.02-polarized.inp",
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "finite_systems_3d/12-forces.03-N2_gs.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/35-slater_x.01-gs.inp",
      "finite_systems_3d/06-restart.05-restart_gs.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/30-local_multipoles.03-multipoles_restart.inp",
      "finite_systems_3d/22-preconditioner.04-multigrid.inp",
      "finite_systems_3d/06-restart.01-gs_mixrho.inp",
      "finite_systems_3d/33-cg.03-cg_direction.inp",
      "finite_systems_3d/23-go-na2.02-simplex.inp",
      "finite_systems_3d/05-output.04-convert-op.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/42-full_potential_anc.01-gs.inp",
      "finite_systems_3d/22-preconditioner.05-multigrid_rmmdiis.inp",
      "finite_systems_3d/36-kli_x.01-gs.inp",
      "finite_systems_3d/06-restart.07-restart_td_calc.inp",
      "finite_systems_3d/23-go-na2.04-fire_restart.inp",
      "finite_systems_3d/20-eigensolver.03-plan.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/05-output.03-convert.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/41-gpu-bug.01-C.inp",
      "finite_systems_3d/28-carbon_big_box.01-ground_state.inp",
      "finite_systems_3d/23-go-na2.03-fire.inp",
      "finite_systems_3d/23-go-na2.01-steep.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/09-spinors.03-rmmdiis_extra_states.inp",
      "finite_systems_3d/42-full_potential_anc.03-sf-zora.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/09-spinors.01-ground_state.inp",
      "finite_systems_3d/23-go-na2.05-constrains.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "finite_systems_3d/20-eigensolver.05-rmmdiis.inp",
      "finite_systems_3d/07-spin_orbit_coupling.02-rkb.inp",
      "finite_systems_3d/06-restart.04-restart_gs_mixvhxc.inp",
      "finite_systems_3d/04-jellium.01-ground_state.inp",
      "finite_systems_3d/31-acetylene_b3lyp.01-gs.inp",
      "finite_systems_3d/32-tdpcm_methane.01-ground_state.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/06-restart.02-restart_gs_mixrho.inp",
      "finite_systems_3d/22-preconditioner.02-filter.inp",
      "finite_systems_3d/12-forces.02-N2_gs.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.03-unocc.inp",
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "finite_systems_3d/33-cg.01-orthogonalize_all.inp",
      "finite_systems_3d/37-sternheimer_polarized.02-em_resp.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "finite_systems_3d/14-fullerene_unpacked.01-gs.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/42-full_potential_anc.05-zora-error.inp",
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/06-restart.03-gs_mixvhxc.inp",
      "finite_systems_3d/39-adsic.01-unpolarized.inp",
      "finite_systems_3d/37-sternheimer_polarized.01-gs.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "finite_systems_3d/12-forces.01-N2_gs.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "finite_systems_3d/09-spinors.02-rmmdiis.inp",
      "real_time/18-hhg.01-gs.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/11-tdmagnetic.02-unocc.inp",
      "real_time/17-absorption-spin_symmetry.01-gs.inp",
      "real_time/10-bomd.02-td.inp",
      "real_time/02-propagators.01-gs.inp",
      "real_time/01-propagators.09-magnus.inp",
      "real_time/20-pcm-local-field-absorption.01-gs.inp",
      "real_time/02-propagators.02-cnsparskit.inp",
      "real_time/08-laser.01-ground_state.inp",
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/16-sparskit.01-gs.inp",
      "real_time/10-bomd.03-td_restart.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/01-propagators.07-caetrs.inp",
      "real_time/12-absorption.01-gs.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/09-angular_momentum.03-td_icl.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/06-caetrs.01-gs.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/14-absorption-spinors.03-td-restart.inp",
      "real_time/21-scissor.02-td.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/09-angular_momentum.01-gs.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/01-propagators.11-cfmagnus4.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/10-bomd.01-gs.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/13-absorption-spin.03-td-restart.inp",
      "real_time/14-absorption-spinors.02-td.inp",
      "real_time/09-angular_momentum.02-td_gipaw.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/01-propagators.08-cn.inp",
      "real_time/15-crank_nicolson.01-gs.inp",
      "real_time/01-propagators.05-etrs_chebyshev.inp",
      "real_time/24-adsic_freeze_orbitals.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/11-tdmagnetic.01-gs.inp",
      "real_time/03-td_self_consistent.01-gs.inp",
      "real_time/01-propagators.06-aetrs.inp",
      "real_time/14-absorption-spinors.01-gs.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/01-propagators.01-gs.inp",
      "real_time/01-propagators.03-etrs_taylor.inp",
      "real_time/03-td_self_consistent.02-etrs.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/01-propagators.02-expmid.inp",
      "real_time/13-absorption-spin.01-gs.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "real_time/01-propagators.10-exprk4.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "real_time/21-scissor.01-gs.inp",
      "real_time/12-absorption.03-td-restart.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "real_time/02-propagators.04-rungekutta4.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "pseudopotentials/17-hgh_occupations.01-W.inp",
      "pseudopotentials/17-hgh_occupations.02-Au.inp",
      "pseudopotentials/06-carbon_dojo_pbe.01-gs.inp",
      "pseudopotentials/16-platinum_psp8.01-gs.inp",
      "pseudopotentials/18-Bi_pseudodojo_fr.01-gs.inp",
      "pseudopotentials/17-hgh_occupations.04-Au_sc.inp",
      "pseudopotentials/11-isotopes.02-tritium.inp",
      "pseudopotentials/17-hgh_occupations.03-W_sc.inp",
      "pseudopotentials/10-helium_upf.02-gs_filter_ts.inp",
      "pseudopotentials/01-sg15-h.01-gs.inp",
      "pseudopotentials/08-carbon_fhi.01-gs.inp",
      "pseudopotentials/11-isotopes.01-deuterium.inp",
      "pseudopotentials/07-carbon_dojo_lda.01-gs.inp",
      "pseudopotentials/03-nlcc.01-Fatom.inp",
      "pseudopotentials/13-U235.01-gs.inp",
      "pseudopotentials/10-helium_upf.03-gs_filter_bsb.inp",
      "pseudopotentials/05-carbon_dojo_pbesol.01-gs.inp",
      "pseudopotentials/04-carbon_dojo_psml.01-gs.inp",
      "pseudopotentials/15-calcium_psp8_sic.01-gs.inp",
      "pseudopotentials/10-helium_upf.01-gs_nofilter.inp",
      "pseudopotentials/09-carbon_cpi.01-gs.inp",
      "pseudopotentials/02-cu2_hgh.01_gs.inp",
      "pseudopotentials/02-cu2_hgh.02_gs_current.inp",
      "pseudopotentials/14-carbon_dojo_psp8.01-gs.inp",
      "pseudopotentials/12-mix_and_match.01-mgo.inp",
      "photo_electron/05-pfft.01-gs.inp",
      "photo_electron/06-2D.01-Na_gs.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/09-flux_3d.01-Na_gs_sph.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/12-spm_3d.01-Na_gs.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp",
      "errors/02-scf_errors.01-rdmft.inp",
      "errors/01-run_mode.01-one_shot.inp",
      "tutorials/01-octopus_basics-getting_started.01-H_atom.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.01-N_atom.inp",
      "tutorials/04-octopus_basics-visualization.01-benzene.inp",
      "tutorials/01-octopus_basics-getting_started.02-H_atom_spin.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.02-methane.inp",
      "tutorials/02-octopus_basics-basic_input_options.01-N_atom.inp",
      "tutorials/01-octopus_basics-getting_started.03-H_atom_independent.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.01-gs.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.02-td.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.03-td_laser.inp",
      "functionals/18-mgga.01-br89.inp",
      "functionals/03-xc.gga_x_lg93.inp",
      "functionals/03-xc.gga_xc_mpwlyp1w.inp",
      "functionals/03-xc.lda_c_pw.inp",
      "functionals/09-vdw_ts_sc.01-gs.inp",
      "functionals/03-xc.exx.inp",
      "functionals/03-xc.gga_x_rpbe.inp",
      "functionals/03-xc.gga_xc_edf1.inp",
      "functionals/03-xc.lda_c_hl.inp",
      "functionals/03-xc.gga_xc_hcth_120.inp",
      "functionals/01-xc_1d.oep_kli.inp",
      "functionals/03-xc.gga_c_pbe_jrgx.inp",
      "functionals/03-xc.gga_xc_hcth_93.inp",
      "functionals/03-xc.gga_c_pbe_sol.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/02-xc_2d.gga_b86_mgc.inp",
      "functionals/03-xc.lda_c_wigner.inp",
      "functionals/03-xc.gga_x_mpbe.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/08-vdw_ts.01-gs.inp",
      "functionals/06-rdmft.03-gs_grid.inp",
      "functionals/03-xc.gga_xc_xlyp.inp",
      "functionals/03-xc.gga_x_am05.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/03-xc.01-gs.inp",
      "functionals/03-xc.gga_x_g96.inp",
      "functionals/03-xc.gga_x_b86.inp",
      "functionals/03-xc.gga_x_pbek1_vdw.inp",
      "functionals/18-mgga.02-br89_oep.inp",
      "functionals/03-xc.gga_xc_pbelyp1w.inp",
      "functionals/13-libvdwxc_h2o.01-vdwdfcx.inp",
      "functionals/03-xc.gga_x_b86_mgc.inp",
      "functionals/01-xc_1d.02-wfs-hf.inp",
      "functionals/03-xc.gga_c_xpbe.inp",
      "functionals/03-xc.pbe0_fock.inp",
      "functionals/03-xc.gga_x_b88.inp",
      "functionals/03-xc.lda_c_ob_pz.inp",
      "functionals/02-xc_2d.gga_b86.inp",
      "functionals/01-xc_1d.01-wfs-lda.inp",
      "functionals/03-xc.gga_x_ft97_b.inp",
      "functionals/03-xc.lda_c_ob_pw.inp",
      "functionals/03-xc.lda_c_pz_mod.inp",
      "functionals/06-rdmft.01-ip.inp",
      "functionals/03-xc.gga_x_optb88_vdw.inp",
      "functionals/03-xc.gga_c_pw91.inp",
      "functionals/04-oep.02-jellium-exx_kli.inp",
      "functionals/03-xc.slater.inp",
      "functionals/04-oep.01-jellium-lsda.inp",
      "functionals/03-xc.lda_xc_teter93.inp",
      "functionals/03-xc.sic_pz.inp",
      "functionals/22-xc_lrx.inp",
      "functionals/03-xc.gga_x_xpbe.inp",
      "functionals/01-xc_1d.lda_csc.inp",
      "functionals/03-xc.pbe0_oep.inp",
      "functionals/03-xc.gga_xc_hcth_147.inp",
      "functionals/03-xc.gga_x_pbe_jsjr.inp",
      "functionals/03-xc.gga_c_lm.inp",
      "functionals/03-xc.gga_x_pbe_r.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/03-xc.lda_c_vbh.inp",
      "functionals/03-xc.gga_x_pbea.inp",
      "functionals/03-xc.lda_x.inp",
      "functionals/03-xc.gga_x_pw91.inp",
      "functionals/03-xc.b3lyp_fock.inp",
      "functionals/03-xc.gga_x_ft97_a.inp",
      "functionals/03-xc.gga_x_pw86.inp",
      "functionals/01-xc_1d.oep_exx.inp",
      "functionals/03-xc.lda_c_rpa.inp",
      "functionals/03-xc.b3lyp_oep.inp",
      "functionals/03-xc.gga_x_dk87_r2.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/03-xc.gga_c_p86.inp",
      "functionals/03-xc.lda_c_vwn_rpa.inp",
      "functionals/03-xc.lda_c_pw_mod.inp",
      "functionals/03-xc.lda_c_vwn.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/03-xc.kli.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "functionals/03-xc.lda_c_pz.inp",
      "functionals/04-oep.03-jellium-full_exx.inp",
      "functionals/03-xc.lda_c_xalpha.inp",
      "functionals/02-xc_2d.lda_amgb.inp",
      "functionals/03-xc.lda_c_gl.inp",
      "functionals/03-xc.gga_x_bayesian.inp",
      "functionals/03-xc.gga_xc_b97_d.inp",
      "functionals/03-xc.gga_c_pbe.inp",
      "functionals/03-xc.gga_x_lb.inp",
      "functionals/02-xc_2d.lda_prm.inp",
      "functionals/03-xc.gga_x_pbe_sol.inp",
      "functionals/03-xc.gga_c_lyp.inp",
      "functionals/03-xc.gga_c_am05.inp",
      "functionals/03-xc.gga_x_mpw91.inp",
      "functionals/03-xc.gga_x_pbe.inp",
      "functionals/03-xc.gga_xc_pbe1w.inp",
      "functionals/02-xc_2d.gga_b88.inp",
      "functionals/03-xc.gga_x_optpbe_vdw.inp",
      "functionals/03-xc.gga_xc_hcth_407.inp",
      "functionals/02-xc_2d.gga_pbe.inp",
      "functionals/07-sic.02-scdm.inp",
      "functionals/03-xc.gga_x_dk87_r1.inp",
      "functionals/03-xc.gga_x_optx.inp",
      "functionals/06-rdmft.02-gs_basis.inp",
      "functionals/11-vdw_d3.01-gs.inp",
      "functionals/03-xc.fbex.inp",
      "functionals/03-xc.gga_x_wc.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "finite_systems_1d/09-morse.02-unocc.inp",
      "finite_systems_1d/02-neon_mpi.03-td_calc-kli_par_states.inp",
      "finite_systems_1d/04-lithium.02-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.03-dummy.inp",
      "finite_systems_1d/09-morse.01-gs.inp",
      "finite_systems_1d/02-neon_mpi.01-ground_state-IP_par_domains.inp",
      "finite_systems_1d/03-He-Hartree-Fock.01-gs.inp",
      "finite_systems_1d/01-hydrogen.02-excited_state.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.01-ground_state.inp",
      "finite_systems_1d/02-neon_mpi.02-ground_state-kli_par_domains.inp",
      "finite_systems_1d/04-lithium.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/05-adw.02-unocc.inp",
      "optimal_control/04-box.01-ground_state.inp",
      "optimal_control/10-current.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.02-unocc.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.01-ground_state.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/06-zbr98.01-ground_state.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/02-sym_doublewell.02-unocc.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/05-adw.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/04-box.02-unocc.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.04-gs-mp.inp",
      "optimal_control/01-asym_doublewell.01-ground_state.inp",
      "optimal_control/03-localtarget.01-gs.inp",
      "optimal_control/09-density+current.01-ground_state.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "components/16-hartree_3d_psolver.02-psolver.inp",
      "components/18-interpolation.01-1d.inp",
      "components/16-hartree_3d_psolver.01-psolver.inp",
      "components/11-hartree_cl.01-fft.inp",
      "components/01-derivatives_1d.02-fortran.inp",
      "components/18-interpolation.03-3d.inp",
      "components/35-helmholtz_decom.05-sphere_small_box_with_surf_corr.inp",
      "components/35-helmholtz_decom.04-cylinder_small_box_with_surf_corr.inp",
      "components/37-current-density.inp",
      "components/06-hartree_3d_isf.01-isf.inp",
      "components/01-derivatives_1d.01.inp",
      "components/02-derivatives_2d.01.inp",
      "components/03-derivatives_3d.01.inp",
      "components/12-hartree_direct_3d.01.inp",
      "components/08-gs.01-cgs_real.inp",
      "components/18-interpolation.02-2d.inp",
      "components/10-hartree_pfft.06-fft-parstates.inp",
      "components/13-hartree_3d_mg.01-multigrid.inp",
      "components/05-hartree_3d_fft.02-fft_corrected.inp",
      "components/05-hartree_3d_fft.01-fft.inp",
      "components/10-hartree_pfft.02-fft_corrected.inp",
      "components/08-gs.05-drcgs_real.inp",
      "components/15-cholesky_parallel.01-real.inp",
      "components/08-gs.03-mgs_real.inp",
      "components/10-hartree_pfft.01-fft.inp",
      "components/29-linear_solver.01-real.inp",
      "components/07-cholesky_serial.01-real.inp",
      "components/04-hartree_3d_cg.01-cg_corrected.inp",
      "components/07-cholesky_serial.03-parindep.inp",
      "components/15-cholesky_parallel.02-complex.inp",
      "components/19-hgh_soc.01-3d.inp",
      "components/08-gs.02-cgs_complex.inp",
      "components/07-cholesky_serial.02-complex.inp",
      "components/08-gs.04-mgs_complex.inp",
      "components/08-gs.06-drcgs_complex.inp",
      "maxwell/14-quadrupole-pot.01-hydrogen-gs.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.01-1D-Helium-ground-state.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp",
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/11-full_delta.01-gs.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/06-laser.03-velocity_gauge.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.01-Na2.inp",
      "lda_u/05-forces.02-Na2_go.inp",
      "lda_u/06-laser.01-gs.inp",
      "lda_u/10-intersite.01-Na2.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "randomvelocitytemp": {
    "CallLine": "call parse_variable(namespace, 'RandomVelocityTemp', M_ZERO, temperature, unit = unit_kelvin)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "If this variable is present, <tt>Octopus</tt> will assign random",
      "velocities to the atoms following a Boltzmann distribution with",
      "temperature given by <tt>RandomVelocityTemp</tt> (in degrees Kelvin).",
      "The seed for the random number generator can be modified by setting",
      "<tt>GSL_RNG_SEED</tt> environment variable."
    ],
    "LineNumber": 359,
    "Manuals": [],
    "Name": "RandomVelocityTemp",
    "Options": [],
    "Section": "System::Velocities",
    "Sourcefile": "ions/ion_dynamics.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "rashbaspinorbitcoupling": {
    "CallLine": "call parse_variable(namespace, 'RashbaSpinOrbitCoupling', M_ZERO, rashba_coupling, units_inp%energy*units_inp%length)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "(Experimental.) For systems described in 2D (electrons confined to 2D in semiconductor structures), one",
      "may add the Bychkov-Rashba spin-orbit coupling term [Bychkov and Rashba, <i>J. Phys. C: Solid",
      "State Phys.</i> <b>17</b>, 6031 (1984)]. This variable determines the strength",
      "of this perturbation, and has dimensions of energy times length."
    ],
    "LineNumber": 291,
    "Manuals": [],
    "Name": "RashbaSpinOrbitCoupling",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/hamiltonian_elec.F90",
    "Testfiles": [
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.02-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/12-spintarget.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "rdmbasis": {
    "CallLine": "call parse_variable(namespace, 'RDMBasis',.true., rdm%do_basis)",
    "Default": [
      "yes"
    ],
    "Description": [
      "If true, all the energy terms and corresponding derivatives involved in RDMFT will",
      "not be calculated on the grid but on the basis of the initial orbitals"
    ],
    "LineNumber": 188,
    "Manuals": [],
    "Name": "RDMBasis",
    "Options": [],
    "Section": "SCF::RDMFT",
    "Sourcefile": "scf/rdmft.F90",
    "Testfiles": [
      "functionals/16-dressed-rdmft.03-rdmft.inp",
      "functionals/06-rdmft.03-gs_grid.inp",
      "functionals/16-dressed-rdmft.02-hf.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "rdmconvener": {
    "CallLine": "call parse_variable(namespace, 'RDMConvEner', 1.0e-7_real64, rdm%conv_ener)",
    "Default": [
      "1e-6",
      "Ha"
    ],
    "Description": [
      "Convergence criterion for stopping the overall minimization of the energy with",
      "respect to occupation numbers and the orbitals. The minimization of the",
      "energy stops when the total energy difference between two subsequent",
      "minimizations of the energy with respect to the occupation numbers and the",
      "orbitals is smaller than this criterion. It is also used to exit the orbital minimization."
    ],
    "LineNumber": 178,
    "Manuals": [],
    "Name": "RDMConvEner",
    "Options": [],
    "Section": "SCF::RDMFT",
    "Sourcefile": "scf/rdmft.F90",
    "Testfiles": [
      "functionals/16-dressed-rdmft.03-rdmft.inp",
      "functionals/06-rdmft.03-gs_grid.inp",
      "functionals/16-dressed-rdmft.02-hf.inp",
      "functionals/06-rdmft.02-gs_basis.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "rdmhartreefock": {
    "CallLine": "call parse_variable(namespace, 'RDMHartreeFock',.false., rdm%hf)",
    "Default": [
      "no"
    ],
    "Description": [
      "If true, the code simulates a HF calculation, by omitting the occ.num. optimization",
      "can be used for test reasons"
    ],
    "LineNumber": 204,
    "Manuals": [],
    "Name": "RDMHartreeFock",
    "Options": [],
    "Section": "SCF::RDMFT",
    "Sourcefile": "scf/rdmft.F90",
    "Testfiles": [
      "functionals/16-dressed-rdmft.02-hf.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "rdmtolerance": {
    "CallLine": "call parse_variable(namespace, 'RDMTolerance', 1.0e-7_real64, rdm%toler)",
    "Default": [
      "1e-7",
      "Ha"
    ],
    "Description": [
      "Convergence criterion for stopping the occupation numbers minimization. Minimization is",
      "stopped when all derivatives of the energy wrt. each occupation number",
      "are smaller than this criterion. The bisection for finding the correct mu that is needed",
      "for the occupation number minimization also stops according to this criterion."
    ],
    "LineNumber": 154,
    "Manuals": [],
    "Name": "RDMTolerance",
    "Options": [],
    "Section": "SCF::RDMFT",
    "Sourcefile": "scf/rdmft.F90",
    "Testfiles": [
      "functionals/16-dressed-rdmft.03-rdmft.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "rdmtolerancefo": {
    "CallLine": "call parse_variable(namespace, 'RDMToleranceFO', 1.0e-4_real64, rdm%tolerFO)",
    "Default": [
      "1e-4",
      "Ha"
    ],
    "Description": [
      "Convergence criterion for stopping the diagonalization of the Fock matrix in the Piris method.",
      "Orbital minimization is stopped when all off-diagonal ellements of the Fock matrix",
      "are smaller than this criterion."
    ],
    "LineNumber": 165,
    "Manuals": [],
    "Name": "RDMToleranceFO",
    "Options": [],
    "Section": "SCF::RDMFT",
    "Sourcefile": "scf/rdmft.F90",
    "Testfiles": [
      "functionals/16-dressed-rdmft.03-rdmft.inp",
      "functionals/16-dressed-rdmft.02-hf.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "recalculategsduringevolution": {
    "CallLine": "call parse_variable(namespace, 'RecalculateGSDuringEvolution', .false., td%recalculate_gs)",
    "Default": [
      "no"
    ],
    "Description": [
      "In order to calculate some information about the system along the",
      "evolution (e.g. projection onto the ground-state KS determinant,",
      "projection of the TDKS spin-orbitals onto the ground-state KS",
      "spin-orbitals), the ground-state KS orbitals are needed. If the",
      "ionic potential changes -- that is, the ions move -- one may want",
      "to recalculate the ground state. You may do this by setting this",
      "variable.",
      " ",
      "The recalculation is not done every time step, but only every",
      "<tt>RestartWriteInterval</tt> time steps."
    ],
    "LineNumber": 309,
    "Manuals": [],
    "Name": "RecalculateGSDuringEvolution",
    "Options": [],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "td/td.F90",
    "Testfiles": [
      "real_time/19-td_move_ions.03-td_restart.inp",
      "real_time/19-td_move_ions.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "reducedcoordinates": {
    "Default": null,
    "Description": [
      "This block gives the atomic coordinates relative to the real",
      "space unit cell. The format is the same as the",
      "<tt>Coordinates</tt> block.",
      " ",
      "Note that in Octopus the origin of coordinates is in the center",
      "of the cell, so the coordinates inside the cell are in the",
      "range [-0.5, 0.5).",
      " ",
      "This block cannot be used with the <tt>minimum</tt> box shape."
    ],
    "Manuals": [],
    "Name": "ReducedCoordinates",
    "Options": [],
    "Section": "System::Coordinates",
    "Sourcefile": "ions/read_coords.F90",
    "Testfiles": [
      "symmetries/05-hexagonal.23-spg165.inp",
      "symmetries/02-monoclinic.05-spg7.inp",
      "symmetries/05-hexagonal.41-spg183.inp",
      "symmetries/02-monoclinic.04-spg6.inp",
      "symmetries/03-orthorombic.14-spg29.inp",
      "symmetries/04-tetragonal.27-spg101.inp",
      "symmetries/06-cubic.29-spg223.inp",
      "symmetries/03-orthorombic.53-spg68.inp",
      "symmetries/04-tetragonal.33-spg107.inp",
      "symmetries/02-monoclinic.07-spg9.inp",
      "symmetries/06-cubic.04-spg198.inp",
      "symmetries/04-tetragonal.51-spg125.inp",
      "symmetries/04-tetragonal.03-spg77.inp",
      "symmetries/03-orthorombic.31-spg46.inp",
      "symmetries/04-tetragonal.08-spg82.inp",
      "symmetries/03-orthorombic.05-spg20.inp",
      "symmetries/04-tetragonal.36-spg110.inp",
      "symmetries/05-hexagonal.15-spg157.inp",
      "symmetries/02-monoclinic.12-spg14.inp",
      "symmetries/03-orthorombic.19-spg34.inp",
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "symmetries/05-hexagonal.28-spg170.inp",
      "symmetries/04-tetragonal.23-spg97.inp",
      "symmetries/04-tetragonal.48-spg122.inp",
      "symmetries/04-tetragonal.21-spg95.inp",
      "symmetries/06-cubic.21-spg215.inp",
      "symmetries/02-monoclinic.09-spg11.inp",
      "symmetries/04-tetragonal.18-spg92.inp",
      "symmetries/04-tetragonal.52-spg126.inp",
      "symmetries/03-orthorombic.55-spg70.inp",
      "symmetries/03-orthorombic.09-spg24.inp",
      "symmetries/04-tetragonal.62-spg136.inp",
      "symmetries/02-monoclinic.08-spg10.inp",
      "symmetries/04-tetragonal.38-spg112.inp",
      "symmetries/04-tetragonal.49-spg123.inp",
      "symmetries/03-orthorombic.20-spg35.inp",
      "symmetries/06-cubic.05-spg199.inp",
      "symmetries/06-cubic.35-spg229.inp",
      "symmetries/02-monoclinic.03-spg5.inp",
      "symmetries/02-monoclinic.06-spg8.inp",
      "symmetries/06-cubic.06-spg200.inp",
      "symmetries/04-tetragonal.57-spg131.inp",
      "symmetries/04-tetragonal.45-spg119.inp",
      "symmetries/05-hexagonal.49-spg191.inp",
      "symmetries/03-orthorombic.26-spg41.inp",
      "symmetries/06-cubic.15-spg209.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/06-cubic.08-spg202.inp",
      "symmetries/04-tetragonal.35-spg109.inp",
      "symmetries/03-orthorombic.07-spg22.inp",
      "symmetries/04-tetragonal.32-spg106.inp",
      "symmetries/04-tetragonal.12-spg86.inp",
      "symmetries/06-cubic.01-spg195.inp",
      "symmetries/05-hexagonal.38-spg180.inp",
      "symmetries/04-tetragonal.01-spg75.inp",
      "symmetries/03-orthorombic.25-spg40.inp",
      "symmetries/04-tetragonal.39-spg113.inp",
      "symmetries/05-hexagonal.02-spg144.inp",
      "symmetries/05-hexagonal.06-spg148.inp",
      "symmetries/06-cubic.32-spg226.inp",
      "symmetries/03-orthorombic.47-spg62.inp",
      "symmetries/05-hexagonal.20-spg162.inp",
      "symmetries/06-cubic.24-spg218.inp",
      "symmetries/06-cubic.30-spg224.inp",
      "symmetries/05-hexagonal.12-spg154.inp",
      "symmetries/05-hexagonal.07-spg149.inp",
      "symmetries/05-hexagonal.27-spg169.inp",
      "symmetries/03-orthorombic.45-spg60.inp",
      "symmetries/05-hexagonal.19-spg161.inp",
      "symmetries/05-hexagonal.16-spg158.inp",
      "symmetries/05-hexagonal.48-spg190.inp",
      "symmetries/06-cubic.09-spg203.inp",
      "symmetries/03-orthorombic.24-spg39.inp",
      "symmetries/03-orthorombic.50-spg65.inp",
      "symmetries/06-cubic.34-spg228.inp",
      "symmetries/05-hexagonal.42-spg184.inp",
      "symmetries/03-orthorombic.23-spg38.inp",
      "symmetries/04-tetragonal.13-spg87.inp",
      "symmetries/06-cubic.02-spg196.inp",
      "symmetries/02-monoclinic.13-spg15.inp",
      "symmetries/05-hexagonal.45-spg187.inp",
      "symmetries/05-hexagonal.22-spg164.inp",
      "symmetries/03-orthorombic.43-spg58.inp",
      "symmetries/03-orthorombic.34-spg49.inp",
      "symmetries/04-tetragonal.47-spg121.inp",
      "symmetries/02-monoclinic.02-spg4.inp",
      "symmetries/03-orthorombic.39-spg54.inp",
      "symmetries/04-tetragonal.17-spg91.inp",
      "symmetries/04-tetragonal.22-spg96.inp",
      "symmetries/05-hexagonal.35-spg177.inp",
      "symmetries/03-orthorombic.13-spg28.inp",
      "symmetries/05-hexagonal.13-spg155.inp",
      "symmetries/03-orthorombic.42-spg57.inp",
      "symmetries/06-cubic.12-spg206.inp",
      "symmetries/02-monoclinic.10-spg12.inp",
      "symmetries/06-cubic.07-spg201.inp",
      "symmetries/03-orthorombic.36-spg51.inp",
      "symmetries/05-hexagonal.44-spg186.inp",
      "symmetries/04-tetragonal.04-spg78.inp",
      "symmetries/05-hexagonal.21-spg163.inp",
      "symmetries/04-tetragonal.02-spg76.inp",
      "symmetries/03-orthorombic.22-spg37.inp",
      "symmetries/05-hexagonal.32-spg174.inp",
      "symmetries/03-orthorombic.35-spg50.inp",
      "symmetries/03-orthorombic.17-spg32.inp",
      "symmetries/05-hexagonal.17-spg159.inp",
      "symmetries/03-orthorombic.04-spg19.inp",
      "symmetries/04-tetragonal.20-spg94.inp",
      "symmetries/06-cubic.20-spg214.inp",
      "symmetries/04-tetragonal.65-spg139.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/03-orthorombic.32-spg47.inp",
      "symmetries/03-orthorombic.02-spg17.inp",
      "symmetries/04-tetragonal.15-spg89.inp",
      "symmetries/03-orthorombic.57-spg72.inp",
      "symmetries/03-orthorombic.15-spg30.inp",
      "symmetries/03-orthorombic.49-spg64.inp",
      "symmetries/06-cubic.11-spg205.inp",
      "symmetries/04-tetragonal.30-spg104.inp",
      "symmetries/04-tetragonal.59-spg133.inp",
      "symmetries/03-orthorombic.54-spg69.inp",
      "symmetries/03-orthorombic.41-spg56.inp",
      "symmetries/06-cubic.19-spg213.inp",
      "symmetries/05-hexagonal.05-spg147.inp",
      "symmetries/04-tetragonal.25-spg99.inp",
      "symmetries/03-orthorombic.58-spg73.inp",
      "symmetries/04-tetragonal.43-spg117.inp",
      "symmetries/01-triclinic.02-spg2.inp",
      "symmetries/04-tetragonal.42-spg116.inp",
      "symmetries/05-hexagonal.50-spg192.inp",
      "symmetries/04-tetragonal.68-spg142.inp",
      "symmetries/04-tetragonal.40-spg114.inp",
      "symmetries/05-hexagonal.34-spg176.inp",
      "symmetries/04-tetragonal.63-spg137.inp",
      "symmetries/06-cubic.31-spg225.inp",
      "symmetries/05-hexagonal.36-spg178.inp",
      "symmetries/05-hexagonal.30-spg172.inp",
      "symmetries/03-orthorombic.48-spg63.inp",
      "symmetries/04-tetragonal.11-spg85.inp",
      "symmetries/05-hexagonal.40-spg182.inp",
      "symmetries/05-hexagonal.11-spg153.inp",
      "symmetries/04-tetragonal.41-spg115.inp",
      "symmetries/01-triclinic.16-spg16.inp",
      "symmetries/04-tetragonal.26-spg100.inp",
      "symmetries/05-hexagonal.24-spg166.inp",
      "symmetries/03-orthorombic.56-spg71.inp",
      "symmetries/06-cubic.16-spg210.inp",
      "symmetries/06-cubic.25-spg219.inp",
      "symmetries/03-orthorombic.51-spg66.inp",
      "symmetries/05-hexagonal.47-spg189.inp",
      "symmetries/04-tetragonal.24-spg98.inp",
      "symmetries/05-hexagonal.51-spg193.inp",
      "symmetries/03-orthorombic.37-spg52.inp",
      "symmetries/05-hexagonal.39-spg181.inp",
      "symmetries/03-orthorombic.27-spg42.inp",
      "symmetries/04-tetragonal.58-spg132.inp",
      "symmetries/04-tetragonal.31-spg105.inp",
      "symmetries/04-tetragonal.06-spg80.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "symmetries/05-hexagonal.10-spg152.inp",
      "symmetries/05-hexagonal.01-spg143.inp",
      "symmetries/05-hexagonal.04-spg146.inp",
      "symmetries/04-tetragonal.19-spg93.inp",
      "symmetries/03-orthorombic.08-spg23.inp",
      "symmetries/07-symmetrization_lda.01-spg2_sym.inp",
      "symmetries/04-tetragonal.29-spg103.inp",
      "symmetries/06-cubic.27-spg221.inp",
      "symmetries/04-tetragonal.56-spg130.inp",
      "symmetries/06-cubic.36-spg230.inp",
      "symmetries/04-tetragonal.55-spg129.inp",
      "symmetries/04-tetragonal.44-spg118.inp",
      "symmetries/04-tetragonal.53-spg127.inp",
      "symmetries/03-orthorombic.11-spg26.inp",
      "symmetries/05-hexagonal.14-spg156.inp",
      "symmetries/06-cubic.33-spg227.inp",
      "symmetries/05-hexagonal.43-spg185.inp",
      "symmetries/03-orthorombic.40-spg55.inp",
      "symmetries/06-cubic.13-spg207.inp",
      "symmetries/06-cubic.03-spg197.inp",
      "symmetries/06-cubic.14-spg208.inp",
      "symmetries/02-monoclinic.11-spg13.inp",
      "symmetries/06-cubic.17-spg211.inp",
      "symmetries/03-orthorombic.30-spg45.inp",
      "symmetries/06-cubic.28-spg222.inp",
      "symmetries/05-hexagonal.46-spg188.inp",
      "symmetries/03-orthorombic.16-spg31.inp",
      "symmetries/06-cubic.23-spg217.inp",
      "symmetries/04-tetragonal.10-spg84.inp",
      "symmetries/06-cubic.18-spg212.inp",
      "symmetries/04-tetragonal.66-spg140.inp",
      "symmetries/04-tetragonal.16-spg90.inp",
      "symmetries/04-tetragonal.61-spg135.inp",
      "symmetries/03-orthorombic.46-spg61.inp",
      "symmetries/01-triclinic.01-spg1.inp",
      "symmetries/03-orthorombic.29-spg44.inp",
      "symmetries/04-tetragonal.67-spg141.inp",
      "symmetries/03-orthorombic.18-spg33.inp",
      "symmetries/05-hexagonal.33-spg175.inp",
      "symmetries/05-hexagonal.25-spg167.inp",
      "symmetries/04-tetragonal.64-spg138.inp",
      "symmetries/03-orthorombic.01-spg16.inp",
      "symmetries/03-orthorombic.21-spg36.inp",
      "symmetries/05-hexagonal.52-spg194.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "symmetries/06-cubic.26-spg220.inp",
      "symmetries/03-orthorombic.52-spg67.inp",
      "symmetries/04-tetragonal.37-spg111.inp",
      "symmetries/04-tetragonal.28-spg102.inp",
      "symmetries/05-hexagonal.26-spg168.inp",
      "symmetries/05-hexagonal.31-spg173.inp",
      "symmetries/03-orthorombic.59-spg74.inp",
      "symmetries/03-orthorombic.33-spg48.inp",
      "symmetries/04-tetragonal.50-spg124.inp",
      "symmetries/05-hexagonal.37-spg179.inp",
      "symmetries/04-tetragonal.60-spg134.inp",
      "symmetries/03-orthorombic.10-spg25.inp",
      "symmetries/05-hexagonal.08-spg150.inp",
      "symmetries/03-orthorombic.03-spg18.inp",
      "symmetries/05-hexagonal.29-spg171.inp",
      "symmetries/04-tetragonal.54-spg128.inp",
      "symmetries/03-orthorombic.44-spg59.inp",
      "symmetries/05-hexagonal.03-spg145.inp",
      "symmetries/05-hexagonal.18-spg160.inp",
      "symmetries/03-orthorombic.06-spg21.inp",
      "symmetries/04-tetragonal.14-spg88.inp",
      "symmetries/04-tetragonal.34-spg108.inp",
      "symmetries/05-hexagonal.09-spg151.inp",
      "symmetries/03-orthorombic.12-spg27.inp",
      "symmetries/03-orthorombic.28-spg43.inp",
      "symmetries/04-tetragonal.46-spg120.inp",
      "symmetries/03-orthorombic.38-spg53.inp",
      "symmetries/02-monoclinic.01-spg3.inp",
      "symmetries/06-cubic.22-spg216.inp",
      "symmetries/06-cubic.10-spg204.inp",
      "symmetries/04-tetragonal.07-spg81.inp",
      "symmetries/04-tetragonal.09-spg83.inp",
      "symmetries/04-tetragonal.05-spg79.inp",
      "tutorials/06-octopus_basics-periodic_systems.02-silicon_converged.inp",
      "tutorials/06-octopus_basics-periodic_systems.01-silicon.inp",
      "tutorials/06-octopus_basics-periodic_systems.03-bandstructure.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "functionals/12-vdw_solid_c6.01-gs_diamond.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/04-silicon.02-kdotp.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/22-berry.02-cubic_Si.inp",
      "periodic_systems/11-silicon_force.01-gs.inp",
      "periodic_systems/11-silicon_force.02-nlcc.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/27-Ar.02-kdotp.inp",
      "periodic_systems/13-primitive.03-bcc_iron.inp",
      "periodic_systems/26-Na.01-gs.inp",
      "periodic_systems/22-berry.01-cubic_Si_gs.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/15-bandstructure.04-wannier90_output.inp",
      "periodic_systems/19-unfolding.03-unocc.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/15-bandstructure.05-wannier90_states.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/15-bandstructure.03-wannier90_setup.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/32-photodoping.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/20-masked_periodic_boundaries.01-graphene.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/27-Ar.01-gs.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "periodic_systems/09-etsf_io.01-gs.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/26-Na.02-kdotp.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/04-silicon.03-emresp.inp",
      "periodic_systems/10-berkeleygw.02-unocc.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/15-bandstructure.02-unocc.inp",
      "periodic_systems/19-unfolding.02-setup.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/13-primitive.01-diamond.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/19-unfolding.04-run.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "components/22-density_calc.01-Si.inp",
      "components/20-dft_u.04-complex_submesh.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/03-derivatives_3d.02-non-orthogonal.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/21-hamiltonian_apply.01-Si.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/03-derivatives_3d.02-non-orthogonal_unpacked.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/09-basis_from_states.01-lda.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "regriddinginterpolationlevel": {
    "CallLine": "call parse_variable(namespace, \"RegriddingInterpolationLevel\", LINEAR, this%interpolation_level)",
    "Default": [
      "regridding_linear"
    ],
    "Description": [
      "Choose the interpolation level for the regridding."
    ],
    "LineNumber": 165,
    "Manuals": [],
    "Name": "RegriddingInterpolationLevel",
    "Options": [
      {
        "Description": [
          "Use a trilinear interpolation. This is implemented similar to restriction and prolongation",
          "operations in multigrid methods. This ensures that both directions are adjoint to each other."
        ],
        "Name": "regridding_linear",
        "Value": "0"
      },
      {
        "Description": [
          "Use the nearest neighbor for the regridding. This is faster than the linear interpolation."
        ],
        "Name": "regridding_nearest_neighbor",
        "Value": "1"
      }
    ],
    "Section": "Mesh",
    "Sourcefile": "grid/regridding.F90",
    "Testfiles": [
      "components/34-regridding.07-spacing-ratio3-nearestneighbor-mixed.inp",
      "components/34-regridding.08-spacing-ratio3-nearestneighbor-parstates.inp",
      "components/34-regridding.09-spacing-ratio3-nearestneighbor-pardomains.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "regriddingrescale": {
    "CallLine": "call parse_variable(namespace, \"RegriddingRescale\", SCALE_NORM2, this%scale_norms)",
    "Default": [
      "scale_norm2"
    ],
    "Description": [
      "Rescale the regridded quantities. Not using a rescaling can lead to bad results if the",
      "ratio of the grid spacings is large."
    ],
    "LineNumber": 180,
    "Manuals": [],
    "Name": "RegriddingRescale",
    "Options": [
      {
        "Description": [
          "Do not rescale the regridded quantities."
        ],
        "Name": "scale_none",
        "Value": "0"
      },
      {
        "Description": [
          "Scale the regridded quantities by the 2-norm of the quantity on the overlapping",
          "region of the grid."
        ],
        "Name": "scale_norm2",
        "Value": "1"
      }
    ],
    "Section": "Mesh",
    "Sourcefile": "grid/regridding.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "regularizationfunction": {
    "CallLine": "call parse_variable(partner%namespace, 'RegularizationFunction', COS2, this%reg_type)",
    "Default": [
      "COS2"
    ],
    "Description": [
      "The current arising from charged point particles must be mapped onto the Maxwell",
      "propagation grid. This requires a smearing or regularization function $\\phi(\\mathbf{r})$ attached to",
      "each particle position $\\mathbf{r}_i$ with user defined cutoff width, $\\sigma$"
    ],
    "LineNumber": 138,
    "Manuals": [],
    "Name": "RegularizationFunction",
    "Options": [
      {
        "Description": [
          "$\\phi(r)=\\text{cos}^2(\\frac{\\pi}{2}\\frac{|\\mathbf{r}-\\mathbf{r}_i|}{\\sigma})$",
          "if $|\\mahtbf{r}-\\mathbf{r}_i|<\\sigma$, and 0 otherwise."
        ],
        "Name": "COS2",
        "Value": "1"
      }
    ],
    "Section": "Maxwell",
    "Sourcefile": "interactions/current_to_mxll_field.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "regularizationfunctionwidth": {
    "CallLine": "call parse_variable(partner%namespace, 'RegularizationFunctionWidth', 2.0_real64, this%reg_width, units_inp%length)",
    "Default": [
      "2"
    ],
    "Description": [
      "The current arising from charged point particles must be mapped onto the Maxwell",
      "propagation grid. This requires a smearing or regularization function $\\phi(\\mathbf{r})$ attached to",
      "each particle position $\\mathbf{r}_i$ with user defined cutoff width, $\\sigma$.",
      "Default 2 bohrradii"
    ],
    "LineNumber": 154,
    "Manuals": [],
    "Name": "RegularizationFunctionWidth",
    "Options": [],
    "Section": "Maxwell",
    "Sourcefile": "interactions/current_to_mxll_field.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "relativisticcorrection": {
    "CallLine": "call parse_variable(namespace, 'RelativisticCorrection', NOREL, ep%reltype)",
    "Default": [
      "non_relativistic"
    ],
    "Description": [
      "The default value means that <i>no</i> relativistic correction is used. To",
      "include spin-orbit coupling turn <tt>RelativisticCorrection</tt> to <tt>spin_orbit</tt>",
      "(this will only work if <tt>SpinComponents</tt> has been set to <tt>non_collinear</tt>, which ensures",
      "the use of spinors)."
    ],
    "LineNumber": 209,
    "Manuals": [],
    "Name": "RelativisticCorrection",
    "Options": [
      {
        "Description": [
          "No relativistic corrections."
        ],
        "Name": "non_relativistic",
        "Value": "0"
      },
      {
        "Description": [
          "Spin-orbit."
        ],
        "Name": "spin_orbit",
        "Value": "1"
      },
      {
        "Description": [
          "scalar relativistic ZORA Hamiltonian"
        ],
        "Name": "scalar_relativistic_zora",
        "Value": "2"
      },
      {
        "Description": [
          "fully relativistic spin-orbit ZORA Hamiltonian",
          "including SR and SO terms"
        ],
        "Name": "fully_relativistic_zora",
        "Value": "3"
      }
    ],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/epot.F90",
    "Testfiles": [
      "finite_systems_3d/42-full_potential_anc.04-fr-zora.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/42-full_potential_anc.02-sc-zora.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/42-full_potential_anc.03-sf-zora.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/07-spin_orbit_coupling.02-rkb.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.03-unocc.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "finite_systems_3d/42-full_potential_anc.05-zora-error.inp",
      "pseudopotentials/18-Bi_pseudodojo_fr.01-gs.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "components/19-hgh_soc.01-3d.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "reorderranks": {
    "CallLine": "call parse_variable(namespace, 'ReorderRanks', .false., mc%reorder_ranks)",
    "Default": [
      "no"
    ],
    "Description": [
      "This variable controls whether the ranks are reorganized to have a more",
      "compact distribution with respect to domain parallelization which needs",
      "to communicate most often. Depending on the system, this can improve",
      "communication speeds."
    ],
    "LineNumber": 207,
    "Manuals": [],
    "Name": "ReorderRanks",
    "Options": [],
    "Section": "Execution::Parallelization",
    "Sourcefile": "basic/multicomm.F90",
    "Testfiles": [
      "real_time/05-time_propagation.04-td_domains_states-reorder_ranks.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "reportmemory": {
    "CallLine": "call parse_variable(global_namespace, 'ReportMemory', .false., conf%report_memory)",
    "Default": [
      "no"
    ],
    "Description": [
      "If true, after each SCF iteration <tt>Octopus</tt> will print",
      "information about the memory the code is using. The quantity",
      "reported is an approximation to the size of the heap and",
      "generally it is a lower bound to the actual memory <tt>Octopus</tt> is",
      "using."
    ],
    "LineNumber": 70,
    "Manuals": [],
    "Name": "ReportMemory",
    "Options": [],
    "Section": "Execution::Debug",
    "Sourcefile": "main/main.F90",
    "Testfiles": [
      "finite_systems_3d/10-fullerene.01-gs.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "responsemethod": {
    "CallLine": "call parse_variable(namespace, 'ResponseMethod', LR, get_resp_method)",
    "Default": [
      "sternheimer"
    ],
    "Description": [
      "Some response properties can be calculated either via",
      "Sternheimer linear response or by using finite",
      "differences. You can use this variable to select how you want",
      "them to be calculated, it applies to <tt>em_resp</tt> and <tt>vib_modes</tt>",
      "calculation modes. By default, the Sternheimer linear-response",
      "technique is used."
    ],
    "LineNumber": 105,
    "Manuals": [],
    "Name": "ResponseMethod",
    "Options": [
      {
        "Description": [
          "The linear response is obtained by solving a self-consistent",
          "Sternheimer equation for the variation of the orbitals. This",
          "is the recommended method."
        ],
        "Name": "sternheimer",
        "Value": "1"
      },
      {
        "Description": [
          "Properties are calculated as a finite-differences derivative of",
          "the energy obtained by several ground-state calculations. This",
          "method, slow and limited only to static response, is kept",
          "mainly because it is simple and useful for testing purposes."
        ],
        "Name": "finite_differences",
        "Value": "2"
      }
    ],
    "Section": "Linear Response",
    "Sourcefile": "main/run.F90",
    "Testfiles": [
      "linear_response/06-vib_modes_fd.01-vib_modes_fd.inp",
      "linear_response/05-polarizability.03-finite-diff.inp",
      "finite_systems_3d/37-sternheimer_polarized.02-em_resp.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "restartfixedoccupations": {
    "CallLine": "call parse_variable(namespace, 'RestartFixedOccupations', .true., st%restart_fixed_occ)",
    "Default": [
      "yes"
    ],
    "Description": [
      "Setting this variable will make the restart proceed as",
      "if the occupations from the previous calculation had been set via the <tt>Occupations</tt> block,",
      "<i>i.e.</i> fixed. Otherwise, occupations will be determined by smearing."
    ],
    "LineNumber": 680,
    "Manuals": [],
    "Name": "RestartFixedOccupations",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/03-vdw_sternheimer.02-vdw.inp",
      "linear_response/02-h2o_pol_lr.04_h2o_susc.inp",
      "linear_response/05-polarizability.02-sternheimer.inp",
      "linear_response/04-vib_modes.02-vib_modes.inp",
      "linear_response/04-vib_modes.03-vib_modes_restart.inp",
      "pseudopotentials/02-cu2_hgh.02_gs_current.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "periodic_systems/06-h2o_pol_lr.02_kdotp.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp",
      "periodic_systems/04-silicon.03-emresp.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "restartoptions": {
    "CallLine": "if (parse_block(namespace, 'RestartOptions', blk) == 0) then",
    "Default": null,
    "Description": [
      "<tt>Octopus</tt> usually stores binary information, such as the wavefunctions, to be used",
      "in subsequent calculations. The most common example is the ground-state states",
      "that are used to start a time-dependent calculation. This variable allows to control",
      "where this information is written to or read from. The format of this block is the following:",
      "for each line, the first column indicates the type of data, the second column indicates",
      "the path to the directory that should be used to read and write that restart information, and the",
      "third column, which is optional, allows one to set some flags to modify the way how the data",
      "is read or written. For example, if you are running a time-dependent calculation, you can",
      "indicate where <tt>Octopus</tt> can find the ground-state information in the following way:",
      " ",
      "<tt>%RestartOptions",
      "<br>&nbsp;&nbsp;restart_gs | \"gs_restart\"",
      "<br>&nbsp;&nbsp;restart_td | \"td_restart\"",
      "<br>%</tt>",
      " ",
      "The second line of the above example also tells <tt>Octopus</tt> that the time-dependent restart data",
      "should be read from and written to the \"td_restart\" directory.",
      " ",
      "In case you want to change the path of all the restart directories, you can use the <tt>restart_all</tt> option.",
      "When using the <tt>restart_all</tt> option, it is still possible to have a different restart directory for specific",
      "data types. For example, when including the following block in your input file:",
      " ",
      "<tt>%RestartOptions",
      "<br>&nbsp;&nbsp;restart_all | \"my_restart\"",
      "<br>&nbsp;&nbsp;restart_td&nbsp;  | \"td_restart\"",
      "<br>%</tt>",
      " ",
      "the time-dependent restart information will be stored in the \"td_restart\" directory, while all the remaining",
      "restart information will be stored in the \"my_restart\" directory.",
      " ",
      "By default, the name of the \"restart_all\" directory is set to \"restart\".",
      " ",
      "Some <tt>CalculationMode</tt>s also take into account specific flags set in the third column of the <tt>RestartOptions</tt>",
      "block. These are used to determine if some specific part of the restart data is to be taken into account",
      "or not when reading the restart information. For example, when restarting a ground-state calculation, one can",
      "set the <tt>restart_rho</tt> flags, so that the density used is not built from the saved wavefunctions, but is",
      "instead read from the restart directory. In this case, the block should look like this:",
      " ",
      "<tt>%RestartOptions",
      "<br>&nbsp;&nbsp;restart_gs | \"restart\" | restart_rho",
      "<br>%</tt>",
      " ",
      "A list of available flags is given below, but note that the code might ignore some of them, which will happen if they",
      "are not available for that particular calculation, or might assume some of them always present, which will happen",
      "in case they are mandatory.",
      " ",
      "Finally, note that all the restart information of a given data type is always stored in a subdirectory of the",
      "specified path. The name of this subdirectory is fixed and cannot be changed. For example, ground-state information",
      "will always be stored in a subdirectory named \"gs\". This makes it safe in most situations to use the same path for",
      "all the data types. The name of these subdirectories is indicated in the description of the data types below.",
      " ",
      "Currently, the available restart data types and flags are the following:"
    ],
    "LineNumber": 380,
    "Manuals": [],
    "Name": "RestartOptions",
    "Options": [
      {
        "Description": [
          "(data type)",
          "Option to globally change the path of all the restart information."
        ],
        "Name": "restart_all",
        "Value": "0"
      },
      {
        "Description": [
          "(data type)",
          "The data resulting from a ground-state calculation.",
          "This information is stored under the \"gs\" subdirectory."
        ],
        "Name": "restart_gs",
        "Value": "1"
      },
      {
        "Description": [
          "(data type)",
          "The data resulting from an unoccupied states calculation. This information also corresponds to a ground state and",
          "can be used as such, so it is stored under the same subdirectory as the one of restart_gs."
        ],
        "Name": "restart_unocc",
        "Value": "2"
      },
      {
        "Description": [
          "(data type)",
          "The data resulting from a real-time time-dependent calculation.",
          "This information is stored under the \"td\" subdirectory."
        ],
        "Name": "restart_td",
        "Value": "3"
      },
      {
        "Description": [
          "(data type)",
          "The data resulting from the calculation of the electromagnetic response using the Sternheimer approach.",
          "This information is stored under the \"em_resp\" subdirectory."
        ],
        "Name": "restart_em_resp",
        "Value": "4"
      },
      {
        "Description": [
          "(data type)",
          "The data resulting from the calculation of the electromagnetic response using finite-differences.",
          "This information is stored under the \"em_resp_fd\" subdirectory."
        ],
        "Name": "restart_em_resp_fd",
        "Value": "5"
      },
      {
        "Description": [
          "(data type)",
          "The data resulting from the calculation of effective masses by k.p perturbation theory.",
          "This information is stored under the \"kdotp\" subdirectory."
        ],
        "Name": "restart_kdotp",
        "Value": "6"
      },
      {
        "Description": [
          "(data type)",
          "The data resulting from the calculation of vibrational modes.",
          "This information is stored under the \"vib_modes\" subdirectory."
        ],
        "Name": "restart_vib_modes",
        "Value": "7"
      },
      {
        "Description": [
          "(data type)",
          "The data resulting from the calculation of van der Waals coefficients.",
          "This information is stored under the \"vdw\" subdirectory."
        ],
        "Name": "restart_vdw",
        "Value": "8"
      },
      {
        "Description": [
          "(data type)",
          "The data resulting from a Casida calculation.",
          "This information is stored under the \"casida\" subdirectory."
        ],
        "Name": "restart_casida",
        "Value": "9"
      },
      {
        "Description": [
          "(data type)",
          "The data for optimal control calculations.",
          "This information is stored under the \"opt-control\" subdirectory."
        ],
        "Name": "restart_oct",
        "Value": "10"
      },
      {
        "Description": [
          "(data type)",
          "The data for the mesh partitioning.",
          "This information is stored under the \"partition\" subdirectory."
        ],
        "Name": "restart_partition",
        "Value": "11"
      },
      {
        "Description": [
          "(data type)",
          "The ground-state to be used with the td_occup and populations options of <tt>TDOutput</tt>.",
          "This information should be a ground state, so the \"gs\" subdirectory is used."
        ],
        "Name": "restart_proj",
        "Value": "12"
      },
      {
        "Description": [
          "(flag)",
          "Read the electronic states. (not yet implemented)"
        ],
        "Name": "restart_states",
        "Value": "1"
      },
      {
        "Description": [
          "(flag)",
          "Read the electronic density."
        ],
        "Name": "restart_rho",
        "Value": "2"
      },
      {
        "Description": [
          "(flag)",
          "Read the Hartree and XC potentials."
        ],
        "Name": "restart_vhxc",
        "Value": "4"
      },
      {
        "Description": [
          "(flag)",
          "Read the SCF mixing information."
        ],
        "Name": "restart_mix",
        "Value": "8"
      },
      {
        "Description": [
          "(flag)",
          "This flag allows to selectively skip the reading and writting of specific restart information."
        ],
        "Name": "restart_skip",
        "Value": "16"
      }
    ],
    "Section": "Execution::IO",
    "Sourcefile": "grid/restart.F90",
    "Testfiles": [
      "multisystem/12-electronic_subsystem_propagators.01-gs.inp",
      "multisystem/16-bomd.01-gs.inp",
      "multisystem/15-electronic_system_restart.01-gs.inp",
      "finite_systems_3d/34-walltime.02-restart_gs.inp",
      "finite_systems_3d/34-walltime.04-restart_td.inp",
      "finite_systems_3d/06-restart.04-restart_gs_mixvhxc.inp",
      "finite_systems_3d/06-restart.02-restart_gs_mixrho.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/09-basis_from_states.03-intersite.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "restartreorderoccs": {
    "CallLine": "call parse_variable(namespace, 'RestartReorderOccs', .false., st%restart_reorder_occs)",
    "Default": [
      "no"
    ],
    "Description": [
      "Consider doing a ground-state calculation, and then restarting with new occupations set",
      "with the <tt>Occupations</tt> block, in an attempt to populate the orbitals of the original",
      "calculation. However, the eigenvalues may reorder as the density changes, in which case the",
      "occupations will now be referring to different orbitals. Setting this variable to yes will",
      "try to solve this issue when the restart data is being read, by reordering the occupations",
      "according to the order of the expectation values of the restart wavefunctions."
    ],
    "LineNumber": 873,
    "Manuals": [],
    "Name": "RestartReorderOccs",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "restartwalltimeperiod": {
    "CallLine": "call parse_variable(global_namespace, 'RestartWallTimePeriod', 120.0_real64, restart_alarm_time)",
    "Default": [
      "120"
    ],
    "Description": [
      "Period Time (in minutes) at which the restart file will be written.",
      "If a finite time (in minutes) is specified, the code will write the restart file every period."
    ],
    "LineNumber": 116,
    "Manuals": [],
    "Name": "RestartWallTimePeriod",
    "Options": [],
    "Section": "Execution::IO",
    "Sourcefile": "basic/walltimer.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "restartwrite": {
    "CallLine": "call parse_variable(namespace, 'RestartWrite', .true., restart_write)",
    "Default": [
      "true"
    ],
    "Description": [
      "If this variable is set to no, restart information is not",
      "written. Note that some run modes will ignore this",
      "option and write some restart information anyway."
    ],
    "LineNumber": 468,
    "Manuals": [],
    "Name": "RestartWrite",
    "Options": [],
    "Section": "Execution::IO",
    "Sourcefile": "grid/restart.F90",
    "Testfiles": [
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "multisystem/17-lasers.01-length_gauge.inp",
      "multisystem/07-lorentz-force.02-charged_particle_in_static_efield.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "functionals/03-xc.gga_x_lg93.inp",
      "functionals/03-xc.gga_xc_mpwlyp1w.inp",
      "functionals/03-xc.lda_c_pw.inp",
      "functionals/03-xc.gga_x_rpbe.inp",
      "functionals/03-xc.gga_xc_edf1.inp",
      "functionals/03-xc.lda_c_hl.inp",
      "functionals/03-xc.gga_xc_hcth_120.inp",
      "functionals/03-xc.gga_c_pbe_jrgx.inp",
      "functionals/03-xc.gga_xc_hcth_93.inp",
      "functionals/03-xc.gga_c_pbe_sol.inp",
      "functionals/03-xc.mvorb_hse06_fock.inp",
      "functionals/02-xc_2d.gga_b86_mgc.inp",
      "functionals/03-xc.lda_c_wigner.inp",
      "functionals/03-xc.gga_x_mpbe.inp",
      "functionals/03-xc.gga_xc_xlyp.inp",
      "functionals/03-xc.gga_x_am05.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/03-xc.gga_x_g96.inp",
      "functionals/03-xc.gga_x_b86.inp",
      "functionals/03-xc.gga_x_pbek1_vdw.inp",
      "functionals/03-xc.gga_xc_pbelyp1w.inp",
      "functionals/03-xc.gga_x_b86_mgc.inp",
      "functionals/01-xc_1d.02-wfs-hf.inp",
      "functionals/03-xc.gga_c_xpbe.inp",
      "functionals/03-xc.pbe0_fock.inp",
      "functionals/03-xc.gga_x_b88.inp",
      "functionals/03-xc.lda_c_ob_pz.inp",
      "functionals/02-xc_2d.gga_b86.inp",
      "functionals/03-xc.gga_x_ft97_b.inp",
      "functionals/03-xc.lda_c_ob_pw.inp",
      "functionals/03-xc.lda_c_pz_mod.inp",
      "functionals/03-xc.gga_x_optb88_vdw.inp",
      "functionals/03-xc.gga_c_pw91.inp",
      "functionals/16-dressed-rdmft.02-hf.inp",
      "functionals/03-xc.slater.inp",
      "functionals/03-xc.lda_xc_teter93.inp",
      "functionals/03-xc.sic_pz.inp",
      "functionals/22-xc_lrx.inp",
      "functionals/03-xc.gga_x_xpbe.inp",
      "functionals/01-xc_1d.lda_csc.inp",
      "functionals/03-xc.pbe0_oep.inp",
      "functionals/03-xc.gga_xc_hcth_147.inp",
      "functionals/03-xc.gga_x_pbe_jsjr.inp",
      "functionals/03-xc.gga_c_lm.inp",
      "functionals/03-xc.gga_x_pbe_r.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/03-xc.lda_c_vbh.inp",
      "functionals/03-xc.gga_x_pbea.inp",
      "functionals/03-xc.lda_x.inp",
      "functionals/03-xc.gga_x_pw91.inp",
      "functionals/03-xc.gga_x_ft97_a.inp",
      "functionals/03-xc.gga_x_pw86.inp",
      "functionals/03-xc.lda_c_rpa.inp",
      "functionals/03-xc.gga_x_dk87_r2.inp",
      "functionals/03-xc.gga_c_p86.inp",
      "functionals/03-xc.lda_c_vwn_rpa.inp",
      "functionals/03-xc.lda_c_pw_mod.inp",
      "functionals/03-xc.lda_c_vwn.inp",
      "functionals/03-xc.lda_c_pz.inp",
      "functionals/03-xc.lda_c_xalpha.inp",
      "functionals/02-xc_2d.lda_amgb.inp",
      "functionals/03-xc.lda_c_gl.inp",
      "functionals/03-xc.gga_x_bayesian.inp",
      "functionals/03-xc.gga_xc_b97_d.inp",
      "functionals/03-xc.gga_c_pbe.inp",
      "functionals/03-xc.gga_x_lb.inp",
      "functionals/02-xc_2d.lda_prm.inp",
      "functionals/03-xc.gga_x_pbe_sol.inp",
      "functionals/03-xc.gga_c_lyp.inp",
      "functionals/03-xc.gga_c_am05.inp",
      "functionals/03-xc.gga_x_mpw91.inp",
      "functionals/03-xc.gga_x_pbe.inp",
      "functionals/03-xc.gga_xc_pbe1w.inp",
      "functionals/02-xc_2d.gga_b88.inp",
      "functionals/03-xc.gga_x_optpbe_vdw.inp",
      "functionals/03-xc.gga_xc_hcth_407.inp",
      "functionals/03-xc.gga_x_dk87_r1.inp",
      "functionals/03-xc.gga_x_optx.inp",
      "functionals/03-xc.gga_x_wc.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "restartwriteinterval": {
    "CallLine": "call parse_variable(namespace, 'RestartWriteInterval', 50, outp%restart_write_interval)",
    "Default": [
      "50"
    ],
    "Description": [
      "Restart data is written when the iteration number is a multiple",
      "of the <tt>RestartWriteInterval</tt> variable. For",
      "time-dependent runs this includes the update of the output",
      "controlled by the <tt>TDOutput</tt> variable. (Other output is",
      "controlled by <tt>OutputInterval</tt>.)"
    ],
    "LineNumber": 356,
    "Manuals": [],
    "Name": "RestartWriteInterval",
    "Options": [],
    "Section": "Execution::IO",
    "Sourcefile": "output/output.F90",
    "Testfiles": [
      "finite_systems_3d/34-walltime.03-td_walltime.inp",
      "real_time/19-td_move_ions.03-td_restart.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/19-td_move_ions.02-td.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/19-unfolding.03-unocc.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/21-magnon.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "restartwritetime": {
    "CallLine": "call parse_variable(global_namespace, 'RestartWriteTime', 5.0_real64, write_time)",
    "Default": [
      "5"
    ],
    "Description": [
      "The RestartWriteTime (in minutes) will be subtracted from the WallTime to allow time for writing the restart file.",
      "In huge calculations, this value should be increased."
    ],
    "LineNumber": 104,
    "Manuals": [],
    "Name": "RestartWriteTime",
    "Options": [],
    "Section": "Execution::IO",
    "Sourcefile": "basic/walltimer.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "rootsolver": {
    "CallLine": "call parse_variable(namespace, 'RootSolver', ROOT_NEWTON, rs%solver_type)",
    "Default": [
      "root_newton"
    ],
    "Description": [
      "Specifies what kind of root solver will be used."
    ],
    "LineNumber": 97,
    "Manuals": [],
    "Name": "RootSolver",
    "Options": [
      {
        "Description": [
          "Newton method."
        ],
        "Name": "root_newton",
        "Value": "3"
      }
    ],
    "Section": "Math::RootSolver",
    "Sourcefile": "math/root_solver.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "rootsolverabstolerance": {
    "CallLine": "call parse_variable(namespace, 'RootSolverAbsTolerance', 1e-10_real64, rs%abs_tolerance)",
    "Default": [
      "1e-10"
    ],
    "Description": [
      "Relative tolerance for the root-finding process."
    ],
    "LineNumber": 128,
    "Manuals": [],
    "Name": "RootSolverAbsTolerance",
    "Options": [],
    "Section": "Math::RootSolver",
    "Sourcefile": "math/root_solver.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "rootsolvermaxiter": {
    "CallLine": "call parse_variable(namespace, 'RootSolverMaxIter', 500, rs%maxiter)",
    "Default": [
      "500"
    ],
    "Description": [
      "In case of an iterative root solver, this variable determines the maximum number",
      "of iteration steps."
    ],
    "LineNumber": 110,
    "Manuals": [],
    "Name": "RootSolverMaxIter",
    "Options": [],
    "Section": "Math::RootSolver",
    "Sourcefile": "math/root_solver.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "rootsolverreltolerance": {
    "CallLine": "call parse_variable(namespace, 'RootSolverRelTolerance', 1e-10_real64, rs%rel_tolerance)",
    "Default": [
      "1e-10"
    ],
    "Description": [
      "Relative tolerance for the root-finding process."
    ],
    "LineNumber": 119,
    "Manuals": [],
    "Name": "RootSolverRelTolerance",
    "Options": [],
    "Section": "Math::RootSolver",
    "Sourcefile": "math/root_solver.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "scalapackcompatible": {
    "CallLine": "call parse_variable(namespace, 'ScaLAPACKCompatible', default_scalapack_compatible, st%scalapack_compatible)",
    "Default": null,
    "Description": [
      "Whether to use a layout for states parallelization which is compatible with ScaLAPACK.",
      "The default is yes for <tt>CalculationMode = gs, unocc, go</tt> without k-point parallelization,",
      "and no otherwise. (Setting to other than default is experimental.)",
      "The value must be yes if any ScaLAPACK routines are called in the course of the run;",
      "it must be set by hand for <tt>td</tt> with <tt>TDDynamics = bo</tt>.",
      "This variable has no effect unless you are using states parallelization and have linked ScaLAPACK.",
      "Note: currently, use of ScaLAPACK is not compatible with task parallelization (<i>i.e.</i> slaves)."
    ],
    "LineNumber": 1856,
    "Manuals": [],
    "Name": "ScaLAPACKCompatible",
    "Options": [],
    "Section": "Execution::Parallelization",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "multisystem/16-bomd.02-td.inp",
      "real_time/10-bomd.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "scctolerance": {
    "CallLine": "call parse_variable(namespace, 'SccTolerance', 1e-9_real64, this%scc_tolerance)",
    "Default": null,
    "Description": [
      "Self-consistent-charges convergence tolerance. Once this",
      "tolerance has been achieved the SCC cycle will stop."
    ],
    "LineNumber": 298,
    "Manuals": [],
    "Name": "SccTolerance",
    "Options": [],
    "Section": "DFTBPlusInterface",
    "Sourcefile": "dftbplus/dftb.F90",
    "Testfiles": [
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "multisystem/10-dftbplus_verlet.01-water.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "scdmforpzsic": {
    "CallLine": "call parse_variable(namespace, 'SCDMforPZSIC', .false., oep%scdm_for_pzsic)",
    "Default": [
      ".false."
    ],
    "Description": [
      "If set to .true., the code will use the SCDM method to Wannierize the orbitals before",
      "computing the orbital-dependent SIC correction"
    ],
    "LineNumber": 244,
    "Manuals": [],
    "Name": "SCDMforPZSIC",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "electrons/xc_oep.F90",
    "Testfiles": [
      "functionals/07-sic.02-scdm.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "scdmmu": {
    "CallLine": "call parse_variable(global_namespace, 'SCDMmu', M_HUGE, scdm_mu)",
    "Default": null,
    "Description": [
      "Energy range up to which states are considered for SCDM."
    ],
    "LineNumber": 223,
    "Manuals": [],
    "Name": "SCDMmu",
    "Options": [],
    "Section": "Utilities::oct-wannier90",
    "Sourcefile": "utils/wannier90_interface.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "scdmsigma": {
    "CallLine": "call parse_variable(global_namespace, 'SCDMsigma', 0.2_real64, scdm_sigma)",
    "Default": [
      "0.2"
    ],
    "Description": [
      "Broadening of SCDM smearing function."
    ],
    "LineNumber": 215,
    "Manuals": [],
    "Name": "SCDMsigma",
    "Options": [],
    "Section": "Utilities::oct-wannier90",
    "Sourcefile": "utils/wannier90_interface.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "scfcalculatedipole": {
    "CallLine": "call parse_variable(namespace, 'SCFCalculateDipole', .not. space%is_periodic(), scf%calc_dipole)",
    "Default": null,
    "Description": [
      "This variable controls whether the dipole is calculated at the",
      "end of a self-consistent iteration. For finite systems the",
      "default is yes. For periodic systems the default is no, unless",
      "an electric field is being applied in a periodic direction.",
      "The single-point Berry`s phase approximation is used for",
      "periodic directions. Ref:",
      "E Yaschenko, L Fu, L Resca, and R Resta, <i>Phys. Rev. B</i> <b>58</b>, 1222-1229 (1998)."
    ],
    "LineNumber": 401,
    "Manuals": [],
    "Name": "SCFCalculateDipole",
    "Options": [],
    "Section": "SCF",
    "Sourcefile": "scf/scf.F90",
    "Testfiles": [
      "periodic_systems/06-h2o_pol_lr.01_gs.inp",
      "periodic_systems/08-benzene_supercell.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "scfcalculateforces": {
    "CallLine": "call parse_variable(namespace, 'SCFCalculateForces', .not. ions%only_user_def, scf%calc_force)",
    "Default": null,
    "Description": [
      "This variable controls whether the forces on the ions are",
      "calculated at the end of a self-consistent iteration. The",
      "default is yes, unless the system only has user-defined",
      "species."
    ],
    "LineNumber": 363,
    "Manuals": [],
    "Name": "SCFCalculateForces",
    "Options": [],
    "Section": "SCF",
    "Sourcefile": "scf/scf.F90",
    "Testfiles": [
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/09-magnetic_2d.01-no_field.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "finite_systems_3d/03-magnetic.01-gs-unpolarized.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/42-full_potential_anc.05-zora-error.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "pseudopotentials/02-cu2_hgh.02_gs_current.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "maxwell/14-quadrupole-pot.01-hydrogen-gs.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/08-loewdin.02-intersite.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "scfcalculatepartialcharges": {
    "CallLine": "call parse_variable(namespace, 'SCFCalculatePartialCharges', .false., scf%calc_partial_charges)",
    "Default": [
      "no"
    ],
    "Description": [
      "(Experimental) This variable controls whether partial charges",
      "are calculated at the end of a self-consistent iteration."
    ],
    "LineNumber": 412,
    "Manuals": [],
    "Name": "SCFCalculatePartialCharges",
    "Options": [],
    "Section": "SCF",
    "Sourcefile": "scf/scf.F90",
    "Testfiles": [
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/30-local_multipoles.01-gs.inp",
      "finite_systems_3d/16-scfinlcao_std.01-gs.inp",
      "finite_systems_3d/33-cg.02-additional_terms.inp",
      "finite_systems_3d/20-eigensolver.01-cg.inp",
      "finite_systems_3d/10-fullerene.01-gs.inp",
      "finite_systems_3d/24-o2-spin.01-gs.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/33-cg.03-cg_direction.inp",
      "finite_systems_3d/20-eigensolver.03-plan.inp",
      "finite_systems_3d/20-eigensolver.05-rmmdiis.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "finite_systems_3d/33-cg.01-orthogonalize_all.inp",
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "symmetries/07-symmetrization_lda.01-spg2_sym.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "functionals/10-vdw_d3_dna.01-gs_novdw.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "scfcalculatestress": {
    "CallLine": "call parse_variable(namespace, 'SCFCalculateStress', .false. , scf%calc_stress)",
    "Default": null,
    "Description": [
      "This variable controls whether the stress on the lattice is",
      "calculated at the end of a self-consistent iteration. The",
      "default is no."
    ],
    "LineNumber": 387,
    "Manuals": [],
    "Name": "SCFCalculateStress",
    "Options": [],
    "Section": "SCF",
    "Sourcefile": "scf/scf.F90",
    "Testfiles": [
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "scfinlcao": {
    "CallLine": "call parse_variable(namespace, 'SCFinLCAO', .false., scf%lcao_restricted)",
    "Default": [
      "no"
    ],
    "Description": [
      "Performs the SCF cycle with the calculation restricted to the LCAO subspace.",
      "This may be useful for systems with convergence problems (first do a",
      "calculation within the LCAO subspace, then restart from that point for",
      "an unrestricted calculation)."
    ],
    "LineNumber": 341,
    "Manuals": [],
    "Name": "SCFinLCAO",
    "Options": [],
    "Section": "SCF",
    "Sourcefile": "scf/scf.F90",
    "Testfiles": [
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/16-scfinlcao_std.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "siccorrection": {
    "CallLine": "call parse_variable(namespace, 'SICCorrection', SIC_NONE, sic%level)",
    "Default": [
      "sic_none"
    ],
    "Description": [
      "This variable controls which form of self-interaction correction to use. Note that",
      "this correction will be applied to the functional chosen by <tt>XCFunctional</tt>."
    ],
    "LineNumber": 106,
    "Manuals": [],
    "Name": "SICCorrection",
    "Options": [
      {
        "Description": [
          "No self-interaction correction."
        ],
        "Name": "sic_none",
        "Value": "1"
      },
      {
        "Description": [
          "Perdew-Zunger SIC, handled by the OEP technique.",
          "J. P. Perdew and Alex Zunger, Phys. Rev. B 23, 5048 (1981)",
          "Extension to the spinor case follows Tancogne-Dejean et al., J. Chem. Phys. 159, 224110 (2023)"
        ],
        "Name": "sic_pz",
        "Value": "2"
      },
      {
        "Description": [
          "Amaldi correction term. Not implemeneted for spinors.",
          "E. Fermi and E. Amaldi, Mem. Reale Accad. Italia 6, 119 (1934)"
        ],
        "Name": "sic_amaldi",
        "Value": "3"
      },
      {
        "Description": [
          "Average-density SIC.",
          "C. Legrand <i>et al.</i>, <i>J. Phys. B</i> <b>35</b>, 1115 (2002).",
          "Extension to the spinor case follows Tancogne-Dejean et al., J. Chem. Phys. 159, 224110 (2023)"
        ],
        "Name": "sic_adsic",
        "Value": "4"
      }
    ],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "electrons/xc_sic.F90",
    "Testfiles": [
      "finite_systems_3d/39-adsic.02-polarized.inp",
      "finite_systems_3d/39-adsic.01-unpolarized.inp",
      "real_time/24-adsic_freeze_orbitals.01-gs.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "pseudopotentials/15-calcium_psp8_sic.01-gs.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/09-flux_3d.03-Na_gs_cub.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/09-flux_3d.01-Na_gs_sph.inp",
      "photo_electron/12-spm_3d.01-Na_gs.inp",
      "functionals/03-xc.sic_pz.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/07-sic.02-scdm.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "skipsorbitals": {
    "CallLine": "call parse_variable(namespace, 'SkipSOrbitals', .true., this%skipSOrbitals)",
    "Default": [
      "no"
    ],
    "Description": [
      "If set to yes, Octopus will determine the effective U for all atomic orbitals",
      "from the peusopotential but s orbitals. Only available with ACBN0 functional."
    ],
    "LineNumber": 296,
    "Manuals": [],
    "Name": "SkipSOrbitals",
    "Options": [],
    "Section": "Hamiltonian::DFT+U",
    "Sourcefile": "hamiltonian/lda_u.F90",
    "Testfiles": [
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/11-full_delta.01-gs.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "slakodir": {
    "CallLine": "call parse_variable(namespace, 'SlakoDir', './', slako_dir)",
    "Default": [
      "\"./\""
    ],
    "Description": [
      "Folder containing the Slako files"
    ],
    "LineNumber": 245,
    "Manuals": [],
    "Name": "SlakoDir",
    "Options": [],
    "Section": "Execution::IO",
    "Sourcefile": "dftbplus/dftb.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "smearing": {
    "CallLine": "call parse_variable(namespace, 'Smearing', 0.1_real64 / (M_TWO * P_Ry), this%dsmear, units_inp%energy)",
    "Default": [
      "0.1",
      "eV"
    ],
    "Description": [
      "If <tt>Occupations</tt> is not set, <tt>Smearing</tt> is the",
      "smearing width used in the <tt>SmearingFunction</tt> to distribute the electrons",
      "among the existing states."
    ],
    "LineNumber": 145,
    "Manuals": [],
    "Name": "Smearing",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/smear.F90",
    "Testfiles": [
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/09-magnetic_2d.01-no_field.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "linear_response/05-polarizability.02-sternheimer.inp",
      "linear_response/05-polarizability.01-gs.inp",
      "linear_response/05-polarizability.03-finite-diff.inp",
      "finite_systems_3d/03-magnetic.01-gs-unpolarized.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "pseudopotentials/16-platinum_psp8.01-gs.inp",
      "pseudopotentials/02-cu2_hgh.01_gs.inp",
      "pseudopotentials/02-cu2_hgh.02_gs_current.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/13-primitive.03-bcc_iron.inp",
      "periodic_systems/26-Na.01-gs.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/32-photodoping.01-gs.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/20-masked_periodic_boundaries.01-graphene.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/26-Na.02-kdotp.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/09-basis_from_states.01-lda.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "smearingfunction": {
    "CallLine": "call parse_variable(namespace, 'SmearingFunction', SMEAR_SEMICONDUCTOR, this%method)",
    "Default": [
      "semiconducting"
    ],
    "Description": [
      "This is the function used to smear the electronic occupations.",
      "It is ignored if the <tt>Occupations</tt> block is set."
    ],
    "LineNumber": 129,
    "Manuals": [],
    "Name": "SmearingFunction",
    "Options": [
      {
        "Description": [
          "Semiconducting occupations, <i>i.e.</i> the lowest lying states are occupied",
          "until no more electrons are left."
        ],
        "Name": "semiconducting",
        "Value": "1"
      },
      {
        "Description": [
          "Simple Fermi-Dirac distribution. In this case, <tt>Smearing</tt> has",
          "the meaning of an electronic temperature. DN Mermin, <i>Phys. Rev.</i> <b>137</b>, A1441 (1965)."
        ],
        "Name": "fermi_dirac",
        "Value": "2"
      },
      {
        "Description": [
          "N Marzari, D Vanderbilt, A De Vita, and MC Payne, <i>Phys. Rev. Lett.</i> <b>82</b>, 3296 (1999)."
        ],
        "Name": "cold_smearing",
        "Value": "3"
      },
      {
        "Description": [
          "M Methfessel and AT Paxton, <i>Phys. Rev. B</i> <b>40</b>, 3616 (1989).",
          "In this case, the variable <tt>SmearingMPOrder</tt> sets the order of the smearing.",
          "Occupations may be negative."
        ],
        "Name": "methfessel_paxton",
        "Value": "4"
      },
      {
        "Description": [
          "Nearly identical to Gaussian smearing.",
          "JM Holender, MJ Gillan, MC Payne, and AD Simpson, <i>Phys. Rev. B</i> <b>52</b>, 967 (1995)."
        ],
        "Name": "spline_smearing",
        "Value": "5"
      }
    ],
    "Section": "States",
    "Sourcefile": "states/smear.F90",
    "Testfiles": [
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/09-magnetic_2d.01-no_field.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "linear_response/05-polarizability.02-sternheimer.inp",
      "linear_response/05-polarizability.01-gs.inp",
      "linear_response/05-polarizability.03-finite-diff.inp",
      "finite_systems_3d/03-magnetic.01-gs-unpolarized.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "pseudopotentials/16-platinum_psp8.01-gs.inp",
      "pseudopotentials/02-cu2_hgh.01_gs.inp",
      "pseudopotentials/02-cu2_hgh.02_gs_current.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/13-primitive.03-bcc_iron.inp",
      "periodic_systems/26-Na.01-gs.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/32-photodoping.01-gs.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/20-masked_periodic_boundaries.01-graphene.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/26-Na.02-kdotp.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/13-primitive.02-graphene.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/09-basis_from_states.01-lda.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "smearingmporder": {
    "CallLine": "call parse_variable(namespace, 'SmearingMPOrder', 1, this%MP_n)",
    "Default": [
      "1"
    ],
    "Description": [
      "Sets the order of the Methfessel-Paxton smearing function."
    ],
    "LineNumber": 221,
    "Manuals": [],
    "Name": "SmearingMPOrder",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/smear.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "sostrength": {
    "CallLine": "call parse_variable(namespace, 'SOStrength', M_ONE, ep%so_strength)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "Tuning of the spin-orbit coupling strength: setting this value to zero turns off spin-orbit terms in",
      "the Hamiltonian, and setting it to one corresponds to full spin-orbit."
    ],
    "LineNumber": 233,
    "Manuals": [],
    "Name": "SOStrength",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/epot.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "spacing": {
    "CallLine": "call parse_variable(namespace, 'Spacing', -M_ONE, grid_spacing(1), units_inp%length)",
    "Default": null,
    "Description": [
      "The spacing between the points in the mesh. This controls the",
      "quality of the discretization: smaller spacing gives more",
      "precise results but increased computational cost.",
      " ",
      "When using curvilinear coordinates, this is a canonical spacing",
      "that will be changed locally by the transformation. In periodic",
      "directions, your spacing may be slightly different than what",
      "you request here, since the box size must be an integer",
      "multiple of the spacing.",
      " ",
      "The default value is defined by the image resolution if <tt>BoxShape =",
      "box_image</tt>. Othewise here is no default otherwise.",
      " ",
      "It is possible to have a different spacing in each one of the Cartesian directions",
      "if we define <tt>Spacing</tt> as block of the form",
      " ",
      "<tt>%Spacing",
      "<br>&nbsp;&nbsp;spacing_x | spacing_y | spacing_z",
      "<br>%</tt>"
    ],
    "LineNumber": 154,
    "Manuals": [],
    "Name": "Spacing",
    "Options": [],
    "Section": "Mesh",
    "Sourcefile": "grid/grid.F90",
    "Testfiles": [
      "finite_systems_2d/01-quadratic_box.03-hartree+xc.inp",
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_2d/01-quadratic_box.04-spin_polarized.inp",
      "finite_systems_2d/05-spin_precession.01-ground_state.inp",
      "finite_systems_2d/03-helium_atom.02-ground_state.inp",
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/02-fock-darwin.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/01-quadratic_box.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.02-ground_state.inp",
      "finite_systems_2d/07-user_def_box.01-gs.inp",
      "finite_systems_2d/09-magnetic_2d.01-no_field.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "finite_systems_2d/01-quadratic_box.02-hartree.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/03-helium_atom.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/12-electronic_subsystem_propagators.01-gs.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/16-bomd.01-gs.inp",
      "multisystem/99-carbon_hydrogen.03-td_restart.inp",
      "multisystem/99-carbon_hydrogen.01-gs.inp",
      "multisystem/15-electronic_system_restart.04-td_restart_part2.inp",
      "multisystem/16-bomd.02-td.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/15-electronic_system_restart.01-gs.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "multisystem/99-carbon_hydrogen.02-td.inp",
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/03-vdw_sternheimer.02-vdw.inp",
      "linear_response/02-h2o_pol_lr.04_h2o_susc.inp",
      "linear_response/05-polarizability.02-sternheimer.inp",
      "linear_response/06-vib_modes_fd.01-vib_modes_fd.inp",
      "linear_response/05-polarizability.01-gs.inp",
      "linear_response/08-sternheimer-photons.01-gs.inp",
      "linear_response/08-sternheimer-photons.02-em_resp.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "linear_response/02-h2o_pol_lr.01_h2o_gs.inp",
      "linear_response/01-casida.09-spectrum.inp",
      "linear_response/06-vib_modes_fd.01-ground_state.inp",
      "linear_response/02-h2o_pol_lr.03_h2o_dyn_pol_cmplx.inp",
      "linear_response/04-vib_modes.01-ground_state.inp",
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/05-polarizability.03-finite-diff.inp",
      "linear_response/02-h2o_pol_lr.02_h2o_dyn_pol.inp",
      "linear_response/04-vib_modes.02-vib_modes.inp",
      "linear_response/04-vib_modes.03-vib_modes_restart.inp",
      "linear_response/07-casida-photons.06-spectrum.inp",
      "linear_response/07-casida-photons.01-gs.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/02-h2o_pol_lr.05_h2o_magn_opt.inp",
      "linear_response/01-casida.01-gs.inp",
      "linear_response/07-casida-photons.02-photons.inp",
      "linear_response/03-vdw_sternheimer.01-ground_state.inp",
      "linear_response/07-casida-photons.04-elpa.inp",
      "finite_systems_3d/30-local_multipoles.02-multipoles.inp",
      "finite_systems_3d/14-fullerene_unpacked.02-td-unpacked.inp",
      "finite_systems_3d/42-full_potential_anc.04-fr-zora.inp",
      "finite_systems_3d/22-preconditioner.01-none.inp",
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/22-preconditioner.03-jacobi.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/30-local_multipoles.01-gs.inp",
      "finite_systems_3d/06-restart.06-td_calc.inp",
      "finite_systems_3d/05-output.02-gs.inp",
      "finite_systems_3d/16-scfinlcao_std.01-gs.inp",
      "finite_systems_3d/03-magnetic.01-gs-unpolarized.inp",
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/33-cg.02-additional_terms.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/20-eigensolver.01-cg.inp",
      "finite_systems_3d/13-full_potential_hydrogen.02-gs-cg.inp",
      "finite_systems_3d/10-fullerene.01-gs.inp",
      "finite_systems_3d/42-full_potential_anc.02-sc-zora.inp",
      "finite_systems_3d/14-fullerene_unpacked.03-td-packed.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/18-preconditioner_poisson.01-poisson.inp",
      "finite_systems_3d/24-o2-spin.01-gs.inp",
      "finite_systems_3d/39-adsic.02-polarized.inp",
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "finite_systems_3d/12-forces.03-N2_gs.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/35-slater_x.01-gs.inp",
      "finite_systems_3d/06-restart.05-restart_gs.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/30-local_multipoles.03-multipoles_restart.inp",
      "finite_systems_3d/22-preconditioner.04-multigrid.inp",
      "finite_systems_3d/06-restart.01-gs_mixrho.inp",
      "finite_systems_3d/33-cg.03-cg_direction.inp",
      "finite_systems_3d/23-go-na2.02-simplex.inp",
      "finite_systems_3d/05-output.04-convert-op.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/42-full_potential_anc.01-gs.inp",
      "finite_systems_3d/22-preconditioner.05-multigrid_rmmdiis.inp",
      "finite_systems_3d/36-kli_x.01-gs.inp",
      "finite_systems_3d/06-restart.07-restart_td_calc.inp",
      "finite_systems_3d/23-go-na2.04-fire_restart.inp",
      "finite_systems_3d/20-eigensolver.03-plan.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/05-output.03-convert.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/41-gpu-bug.01-C.inp",
      "finite_systems_3d/28-carbon_big_box.01-ground_state.inp",
      "finite_systems_3d/23-go-na2.03-fire.inp",
      "finite_systems_3d/23-go-na2.01-steep.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/09-spinors.03-rmmdiis_extra_states.inp",
      "finite_systems_3d/42-full_potential_anc.03-sf-zora.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/09-spinors.01-ground_state.inp",
      "finite_systems_3d/23-go-na2.05-constrains.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "finite_systems_3d/20-eigensolver.05-rmmdiis.inp",
      "finite_systems_3d/07-spin_orbit_coupling.02-rkb.inp",
      "finite_systems_3d/06-restart.04-restart_gs_mixvhxc.inp",
      "finite_systems_3d/04-jellium.01-ground_state.inp",
      "finite_systems_3d/31-acetylene_b3lyp.01-gs.inp",
      "finite_systems_3d/32-tdpcm_methane.01-ground_state.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/06-restart.02-restart_gs_mixrho.inp",
      "finite_systems_3d/22-preconditioner.02-filter.inp",
      "finite_systems_3d/12-forces.02-N2_gs.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.03-unocc.inp",
      "finite_systems_3d/02-curvilinear_coordinates.01-gygi.inp",
      "finite_systems_3d/33-cg.01-orthogonalize_all.inp",
      "finite_systems_3d/37-sternheimer_polarized.02-em_resp.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "finite_systems_3d/14-fullerene_unpacked.01-gs.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/42-full_potential_anc.05-zora-error.inp",
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/06-restart.03-gs_mixvhxc.inp",
      "finite_systems_3d/39-adsic.01-unpolarized.inp",
      "finite_systems_3d/37-sternheimer_polarized.01-gs.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "finite_systems_3d/12-forces.01-N2_gs.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "finite_systems_3d/09-spinors.02-rmmdiis.inp",
      "real_time/18-hhg.01-gs.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/11-tdmagnetic.02-unocc.inp",
      "real_time/17-absorption-spin_symmetry.01-gs.inp",
      "real_time/10-bomd.02-td.inp",
      "real_time/02-propagators.01-gs.inp",
      "real_time/01-propagators.09-magnus.inp",
      "real_time/20-pcm-local-field-absorption.01-gs.inp",
      "real_time/02-propagators.02-cnsparskit.inp",
      "real_time/08-laser.01-ground_state.inp",
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/16-sparskit.01-gs.inp",
      "real_time/10-bomd.03-td_restart.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/01-propagators.07-caetrs.inp",
      "real_time/12-absorption.01-gs.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/09-angular_momentum.03-td_icl.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/06-caetrs.01-gs.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/14-absorption-spinors.03-td-restart.inp",
      "real_time/21-scissor.02-td.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/09-angular_momentum.01-gs.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/01-propagators.11-cfmagnus4.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/10-bomd.01-gs.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/13-absorption-spin.03-td-restart.inp",
      "real_time/14-absorption-spinors.02-td.inp",
      "real_time/09-angular_momentum.02-td_gipaw.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/01-propagators.08-cn.inp",
      "real_time/15-crank_nicolson.01-gs.inp",
      "real_time/01-propagators.05-etrs_chebyshev.inp",
      "real_time/24-adsic_freeze_orbitals.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/11-tdmagnetic.01-gs.inp",
      "real_time/03-td_self_consistent.01-gs.inp",
      "real_time/01-propagators.06-aetrs.inp",
      "real_time/14-absorption-spinors.01-gs.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/01-propagators.01-gs.inp",
      "real_time/01-propagators.03-etrs_taylor.inp",
      "real_time/03-td_self_consistent.02-etrs.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/01-propagators.02-expmid.inp",
      "real_time/13-absorption-spin.01-gs.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "real_time/01-propagators.10-exprk4.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "real_time/21-scissor.01-gs.inp",
      "real_time/12-absorption.03-td-restart.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "real_time/02-propagators.04-rungekutta4.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "pseudopotentials/17-hgh_occupations.01-W.inp",
      "pseudopotentials/17-hgh_occupations.02-Au.inp",
      "pseudopotentials/06-carbon_dojo_pbe.01-gs.inp",
      "pseudopotentials/16-platinum_psp8.01-gs.inp",
      "pseudopotentials/18-Bi_pseudodojo_fr.01-gs.inp",
      "pseudopotentials/17-hgh_occupations.04-Au_sc.inp",
      "pseudopotentials/11-isotopes.02-tritium.inp",
      "pseudopotentials/17-hgh_occupations.03-W_sc.inp",
      "pseudopotentials/10-helium_upf.02-gs_filter_ts.inp",
      "pseudopotentials/01-sg15-h.01-gs.inp",
      "pseudopotentials/08-carbon_fhi.01-gs.inp",
      "pseudopotentials/11-isotopes.01-deuterium.inp",
      "pseudopotentials/07-carbon_dojo_lda.01-gs.inp",
      "pseudopotentials/03-nlcc.01-Fatom.inp",
      "pseudopotentials/13-U235.01-gs.inp",
      "pseudopotentials/10-helium_upf.03-gs_filter_bsb.inp",
      "pseudopotentials/05-carbon_dojo_pbesol.01-gs.inp",
      "pseudopotentials/04-carbon_dojo_psml.01-gs.inp",
      "pseudopotentials/15-calcium_psp8_sic.01-gs.inp",
      "pseudopotentials/10-helium_upf.01-gs_nofilter.inp",
      "pseudopotentials/09-carbon_cpi.01-gs.inp",
      "pseudopotentials/02-cu2_hgh.01_gs.inp",
      "pseudopotentials/02-cu2_hgh.02_gs_current.inp",
      "pseudopotentials/14-carbon_dojo_psp8.01-gs.inp",
      "pseudopotentials/12-mix_and_match.01-mgo.inp",
      "symmetries/05-hexagonal.23-spg165.inp",
      "symmetries/02-monoclinic.05-spg7.inp",
      "symmetries/05-hexagonal.41-spg183.inp",
      "symmetries/02-monoclinic.04-spg6.inp",
      "symmetries/03-orthorombic.14-spg29.inp",
      "symmetries/04-tetragonal.27-spg101.inp",
      "symmetries/06-cubic.29-spg223.inp",
      "symmetries/03-orthorombic.53-spg68.inp",
      "symmetries/04-tetragonal.33-spg107.inp",
      "symmetries/02-monoclinic.07-spg9.inp",
      "symmetries/06-cubic.04-spg198.inp",
      "symmetries/04-tetragonal.51-spg125.inp",
      "symmetries/04-tetragonal.03-spg77.inp",
      "symmetries/03-orthorombic.31-spg46.inp",
      "symmetries/04-tetragonal.08-spg82.inp",
      "symmetries/03-orthorombic.05-spg20.inp",
      "symmetries/04-tetragonal.36-spg110.inp",
      "symmetries/05-hexagonal.15-spg157.inp",
      "symmetries/02-monoclinic.12-spg14.inp",
      "symmetries/03-orthorombic.19-spg34.inp",
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "symmetries/05-hexagonal.28-spg170.inp",
      "symmetries/04-tetragonal.23-spg97.inp",
      "symmetries/04-tetragonal.48-spg122.inp",
      "symmetries/04-tetragonal.21-spg95.inp",
      "symmetries/06-cubic.21-spg215.inp",
      "symmetries/02-monoclinic.09-spg11.inp",
      "symmetries/04-tetragonal.18-spg92.inp",
      "symmetries/04-tetragonal.52-spg126.inp",
      "symmetries/03-orthorombic.55-spg70.inp",
      "symmetries/03-orthorombic.09-spg24.inp",
      "symmetries/04-tetragonal.62-spg136.inp",
      "symmetries/02-monoclinic.08-spg10.inp",
      "symmetries/04-tetragonal.38-spg112.inp",
      "symmetries/04-tetragonal.49-spg123.inp",
      "symmetries/03-orthorombic.20-spg35.inp",
      "symmetries/06-cubic.05-spg199.inp",
      "symmetries/06-cubic.35-spg229.inp",
      "symmetries/02-monoclinic.03-spg5.inp",
      "symmetries/02-monoclinic.06-spg8.inp",
      "symmetries/06-cubic.06-spg200.inp",
      "symmetries/04-tetragonal.57-spg131.inp",
      "symmetries/04-tetragonal.45-spg119.inp",
      "symmetries/05-hexagonal.49-spg191.inp",
      "symmetries/03-orthorombic.26-spg41.inp",
      "symmetries/06-cubic.15-spg209.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/06-cubic.08-spg202.inp",
      "symmetries/04-tetragonal.35-spg109.inp",
      "symmetries/03-orthorombic.07-spg22.inp",
      "symmetries/04-tetragonal.32-spg106.inp",
      "symmetries/04-tetragonal.12-spg86.inp",
      "symmetries/06-cubic.01-spg195.inp",
      "symmetries/05-hexagonal.38-spg180.inp",
      "symmetries/04-tetragonal.01-spg75.inp",
      "symmetries/03-orthorombic.25-spg40.inp",
      "symmetries/04-tetragonal.39-spg113.inp",
      "symmetries/05-hexagonal.02-spg144.inp",
      "symmetries/05-hexagonal.06-spg148.inp",
      "symmetries/06-cubic.32-spg226.inp",
      "symmetries/03-orthorombic.47-spg62.inp",
      "symmetries/05-hexagonal.20-spg162.inp",
      "symmetries/06-cubic.24-spg218.inp",
      "symmetries/06-cubic.30-spg224.inp",
      "symmetries/05-hexagonal.12-spg154.inp",
      "symmetries/05-hexagonal.07-spg149.inp",
      "symmetries/05-hexagonal.27-spg169.inp",
      "symmetries/03-orthorombic.45-spg60.inp",
      "symmetries/05-hexagonal.19-spg161.inp",
      "symmetries/05-hexagonal.16-spg158.inp",
      "symmetries/05-hexagonal.48-spg190.inp",
      "symmetries/06-cubic.09-spg203.inp",
      "symmetries/03-orthorombic.24-spg39.inp",
      "symmetries/03-orthorombic.50-spg65.inp",
      "symmetries/06-cubic.34-spg228.inp",
      "symmetries/05-hexagonal.42-spg184.inp",
      "symmetries/03-orthorombic.23-spg38.inp",
      "symmetries/04-tetragonal.13-spg87.inp",
      "symmetries/06-cubic.02-spg196.inp",
      "symmetries/02-monoclinic.13-spg15.inp",
      "symmetries/05-hexagonal.45-spg187.inp",
      "symmetries/05-hexagonal.22-spg164.inp",
      "symmetries/03-orthorombic.43-spg58.inp",
      "symmetries/03-orthorombic.34-spg49.inp",
      "symmetries/04-tetragonal.47-spg121.inp",
      "symmetries/02-monoclinic.02-spg4.inp",
      "symmetries/03-orthorombic.39-spg54.inp",
      "symmetries/04-tetragonal.17-spg91.inp",
      "symmetries/04-tetragonal.22-spg96.inp",
      "symmetries/05-hexagonal.35-spg177.inp",
      "symmetries/03-orthorombic.13-spg28.inp",
      "symmetries/05-hexagonal.13-spg155.inp",
      "symmetries/03-orthorombic.42-spg57.inp",
      "symmetries/06-cubic.12-spg206.inp",
      "symmetries/02-monoclinic.10-spg12.inp",
      "symmetries/06-cubic.07-spg201.inp",
      "symmetries/03-orthorombic.36-spg51.inp",
      "symmetries/05-hexagonal.44-spg186.inp",
      "symmetries/04-tetragonal.04-spg78.inp",
      "symmetries/05-hexagonal.21-spg163.inp",
      "symmetries/04-tetragonal.02-spg76.inp",
      "symmetries/03-orthorombic.22-spg37.inp",
      "symmetries/05-hexagonal.32-spg174.inp",
      "symmetries/03-orthorombic.35-spg50.inp",
      "symmetries/03-orthorombic.17-spg32.inp",
      "symmetries/05-hexagonal.17-spg159.inp",
      "symmetries/03-orthorombic.04-spg19.inp",
      "symmetries/04-tetragonal.20-spg94.inp",
      "symmetries/06-cubic.20-spg214.inp",
      "symmetries/04-tetragonal.65-spg139.inp",
      "symmetries/07-symmetrization_lda.03-spg75_sym.inp",
      "symmetries/03-orthorombic.32-spg47.inp",
      "symmetries/03-orthorombic.02-spg17.inp",
      "symmetries/04-tetragonal.15-spg89.inp",
      "symmetries/03-orthorombic.57-spg72.inp",
      "symmetries/03-orthorombic.15-spg30.inp",
      "symmetries/03-orthorombic.49-spg64.inp",
      "symmetries/06-cubic.11-spg205.inp",
      "symmetries/04-tetragonal.30-spg104.inp",
      "symmetries/04-tetragonal.59-spg133.inp",
      "symmetries/03-orthorombic.54-spg69.inp",
      "symmetries/03-orthorombic.41-spg56.inp",
      "symmetries/06-cubic.19-spg213.inp",
      "symmetries/05-hexagonal.05-spg147.inp",
      "symmetries/04-tetragonal.25-spg99.inp",
      "symmetries/03-orthorombic.58-spg73.inp",
      "symmetries/04-tetragonal.43-spg117.inp",
      "symmetries/01-triclinic.02-spg2.inp",
      "symmetries/04-tetragonal.42-spg116.inp",
      "symmetries/05-hexagonal.50-spg192.inp",
      "symmetries/04-tetragonal.68-spg142.inp",
      "symmetries/04-tetragonal.40-spg114.inp",
      "symmetries/05-hexagonal.34-spg176.inp",
      "symmetries/04-tetragonal.63-spg137.inp",
      "symmetries/06-cubic.31-spg225.inp",
      "symmetries/05-hexagonal.36-spg178.inp",
      "symmetries/05-hexagonal.30-spg172.inp",
      "symmetries/03-orthorombic.48-spg63.inp",
      "symmetries/04-tetragonal.11-spg85.inp",
      "symmetries/05-hexagonal.40-spg182.inp",
      "symmetries/05-hexagonal.11-spg153.inp",
      "symmetries/04-tetragonal.41-spg115.inp",
      "symmetries/01-triclinic.16-spg16.inp",
      "symmetries/04-tetragonal.26-spg100.inp",
      "symmetries/05-hexagonal.24-spg166.inp",
      "symmetries/03-orthorombic.56-spg71.inp",
      "symmetries/06-cubic.16-spg210.inp",
      "symmetries/06-cubic.25-spg219.inp",
      "symmetries/03-orthorombic.51-spg66.inp",
      "symmetries/05-hexagonal.47-spg189.inp",
      "symmetries/04-tetragonal.24-spg98.inp",
      "symmetries/05-hexagonal.51-spg193.inp",
      "symmetries/03-orthorombic.37-spg52.inp",
      "symmetries/05-hexagonal.39-spg181.inp",
      "symmetries/03-orthorombic.27-spg42.inp",
      "symmetries/04-tetragonal.58-spg132.inp",
      "symmetries/04-tetragonal.31-spg105.inp",
      "symmetries/04-tetragonal.06-spg80.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "symmetries/05-hexagonal.10-spg152.inp",
      "symmetries/05-hexagonal.01-spg143.inp",
      "symmetries/05-hexagonal.04-spg146.inp",
      "symmetries/04-tetragonal.19-spg93.inp",
      "symmetries/03-orthorombic.08-spg23.inp",
      "symmetries/07-symmetrization_lda.01-spg2_sym.inp",
      "symmetries/04-tetragonal.29-spg103.inp",
      "symmetries/06-cubic.27-spg221.inp",
      "symmetries/04-tetragonal.56-spg130.inp",
      "symmetries/06-cubic.36-spg230.inp",
      "symmetries/04-tetragonal.55-spg129.inp",
      "symmetries/04-tetragonal.44-spg118.inp",
      "symmetries/04-tetragonal.53-spg127.inp",
      "symmetries/03-orthorombic.11-spg26.inp",
      "symmetries/05-hexagonal.14-spg156.inp",
      "symmetries/06-cubic.33-spg227.inp",
      "symmetries/05-hexagonal.43-spg185.inp",
      "symmetries/03-orthorombic.40-spg55.inp",
      "symmetries/06-cubic.13-spg207.inp",
      "symmetries/06-cubic.03-spg197.inp",
      "symmetries/06-cubic.14-spg208.inp",
      "symmetries/02-monoclinic.11-spg13.inp",
      "symmetries/06-cubic.17-spg211.inp",
      "symmetries/03-orthorombic.30-spg45.inp",
      "symmetries/06-cubic.28-spg222.inp",
      "symmetries/05-hexagonal.46-spg188.inp",
      "symmetries/03-orthorombic.16-spg31.inp",
      "symmetries/06-cubic.23-spg217.inp",
      "symmetries/04-tetragonal.10-spg84.inp",
      "symmetries/06-cubic.18-spg212.inp",
      "symmetries/04-tetragonal.66-spg140.inp",
      "symmetries/04-tetragonal.16-spg90.inp",
      "symmetries/04-tetragonal.61-spg135.inp",
      "symmetries/03-orthorombic.46-spg61.inp",
      "symmetries/01-triclinic.01-spg1.inp",
      "symmetries/03-orthorombic.29-spg44.inp",
      "symmetries/04-tetragonal.67-spg141.inp",
      "symmetries/03-orthorombic.18-spg33.inp",
      "symmetries/05-hexagonal.33-spg175.inp",
      "symmetries/05-hexagonal.25-spg167.inp",
      "symmetries/04-tetragonal.64-spg138.inp",
      "symmetries/03-orthorombic.01-spg16.inp",
      "symmetries/03-orthorombic.21-spg36.inp",
      "symmetries/05-hexagonal.52-spg194.inp",
      "symmetries/07-symmetrization_lda.02-spg16_sym.inp",
      "symmetries/06-cubic.26-spg220.inp",
      "symmetries/03-orthorombic.52-spg67.inp",
      "symmetries/04-tetragonal.37-spg111.inp",
      "symmetries/04-tetragonal.28-spg102.inp",
      "symmetries/05-hexagonal.26-spg168.inp",
      "symmetries/05-hexagonal.31-spg173.inp",
      "symmetries/03-orthorombic.59-spg74.inp",
      "symmetries/03-orthorombic.33-spg48.inp",
      "symmetries/04-tetragonal.50-spg124.inp",
      "symmetries/05-hexagonal.37-spg179.inp",
      "symmetries/04-tetragonal.60-spg134.inp",
      "symmetries/03-orthorombic.10-spg25.inp",
      "symmetries/05-hexagonal.08-spg150.inp",
      "symmetries/03-orthorombic.03-spg18.inp",
      "symmetries/05-hexagonal.29-spg171.inp",
      "symmetries/04-tetragonal.54-spg128.inp",
      "symmetries/03-orthorombic.44-spg59.inp",
      "symmetries/05-hexagonal.03-spg145.inp",
      "symmetries/05-hexagonal.18-spg160.inp",
      "symmetries/03-orthorombic.06-spg21.inp",
      "symmetries/04-tetragonal.14-spg88.inp",
      "symmetries/04-tetragonal.34-spg108.inp",
      "symmetries/05-hexagonal.09-spg151.inp",
      "symmetries/03-orthorombic.12-spg27.inp",
      "symmetries/03-orthorombic.28-spg43.inp",
      "symmetries/04-tetragonal.46-spg120.inp",
      "symmetries/03-orthorombic.38-spg53.inp",
      "symmetries/02-monoclinic.01-spg3.inp",
      "symmetries/06-cubic.22-spg216.inp",
      "symmetries/06-cubic.10-spg204.inp",
      "symmetries/04-tetragonal.07-spg81.inp",
      "symmetries/04-tetragonal.09-spg83.inp",
      "symmetries/04-tetragonal.05-spg79.inp",
      "photo_electron/05-pfft.01-gs.inp",
      "photo_electron/06-2D.01-Na_gs.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/09-flux_3d.03-Na_gs_cub.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/09-flux_3d.01-Na_gs_sph.inp",
      "photo_electron/13-arpes_2d.01-gs.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "photo_electron/12-spm_3d.01-Na_gs.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp",
      "errors/02-scf_errors.01-rdmft.inp",
      "errors/01-run_mode.01-one_shot.inp",
      "tutorials/06-octopus_basics-periodic_systems.02-silicon_converged.inp",
      "tutorials/01-octopus_basics-getting_started.01-H_atom.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.01-N_atom.inp",
      "tutorials/04-octopus_basics-visualization.01-benzene.inp",
      "tutorials/01-octopus_basics-getting_started.02-H_atom_spin.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.02-methane.inp",
      "tutorials/02-octopus_basics-basic_input_options.01-N_atom.inp",
      "tutorials/06-octopus_basics-periodic_systems.01-silicon.inp",
      "tutorials/01-octopus_basics-getting_started.03-H_atom_independent.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.01-gs.inp",
      "tutorials/06-octopus_basics-periodic_systems.03-bandstructure.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.02-td.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.03-td_laser.inp",
      "functionals/18-mgga.01-br89.inp",
      "functionals/03-xc.gga_x_lg93.inp",
      "functionals/03-xc.gga_xc_mpwlyp1w.inp",
      "functionals/03-xc.lda_c_pw.inp",
      "functionals/09-vdw_ts_sc.01-gs.inp",
      "functionals/03-xc.exx.inp",
      "functionals/03-xc.gga_x_rpbe.inp",
      "functionals/03-xc.gga_xc_edf1.inp",
      "functionals/03-xc.lda_c_hl.inp",
      "functionals/03-xc.gga_xc_hcth_120.inp",
      "functionals/01-xc_1d.oep_kli.inp",
      "functionals/03-xc.gga_c_pbe_jrgx.inp",
      "functionals/03-xc.gga_xc_hcth_93.inp",
      "functionals/03-xc.gga_c_pbe_sol.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/03-xc.mvorb_hse06_fock.inp",
      "functionals/02-xc_2d.gga_b86_mgc.inp",
      "functionals/03-xc.lda_c_wigner.inp",
      "functionals/16-dressed-rdmft.03-rdmft.inp",
      "functionals/03-xc.gga_x_mpbe.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/05-ks_inversion.03-inversion.inp",
      "functionals/08-vdw_ts.01-gs.inp",
      "functionals/06-rdmft.03-gs_grid.inp",
      "functionals/03-xc.gga_xc_xlyp.inp",
      "functionals/03-xc.gga_x_am05.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/03-xc.01-gs.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/03-xc.gga_x_g96.inp",
      "functionals/03-xc.gga_x_b86.inp",
      "functionals/03-xc.gga_x_pbek1_vdw.inp",
      "functionals/18-mgga.02-br89_oep.inp",
      "functionals/03-xc.gga_xc_pbelyp1w.inp",
      "functionals/13-libvdwxc_h2o.01-vdwdfcx.inp",
      "functionals/03-xc.gga_x_b86_mgc.inp",
      "functionals/10-vdw_d3_dna.01-gs_novdw.inp",
      "functionals/01-xc_1d.02-wfs-hf.inp",
      "functionals/03-xc.gga_c_xpbe.inp",
      "functionals/03-xc.pbe0_fock.inp",
      "functionals/03-xc.gga_x_b88.inp",
      "functionals/03-xc.lda_c_ob_pz.inp",
      "functionals/02-xc_2d.gga_b86.inp",
      "functionals/01-xc_1d.01-wfs-lda.inp",
      "functionals/03-xc.gga_x_ft97_b.inp",
      "functionals/03-xc.lda_c_ob_pw.inp",
      "functionals/03-xc.lda_c_pz_mod.inp",
      "functionals/06-rdmft.01-ip.inp",
      "functionals/05-ks_inversion.02-two_particle.inp",
      "functionals/03-xc.gga_x_optb88_vdw.inp",
      "functionals/03-xc.gga_c_pw91.inp",
      "functionals/04-oep.02-jellium-exx_kli.inp",
      "functionals/16-dressed-rdmft.02-hf.inp",
      "functionals/03-xc.slater.inp",
      "functionals/04-oep.01-jellium-lsda.inp",
      "functionals/03-xc.lda_xc_teter93.inp",
      "functionals/03-xc.sic_pz.inp",
      "functionals/22-xc_lrx.inp",
      "functionals/03-xc.gga_x_xpbe.inp",
      "functionals/01-xc_1d.lda_csc.inp",
      "functionals/03-xc.pbe0_oep.inp",
      "functionals/03-xc.gga_xc_hcth_147.inp",
      "functionals/03-xc.gga_x_pbe_jsjr.inp",
      "functionals/03-xc.gga_c_lm.inp",
      "functionals/03-xc.gga_x_pbe_r.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/03-xc.lda_c_vbh.inp",
      "functionals/03-xc.gga_x_pbea.inp",
      "functionals/03-xc.lda_x.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/03-xc.gga_x_pw91.inp",
      "functionals/03-xc.b3lyp_fock.inp",
      "functionals/03-xc.gga_x_ft97_a.inp",
      "functionals/03-xc.gga_x_pw86.inp",
      "functionals/01-xc_1d.oep_exx.inp",
      "functionals/03-xc.lda_c_rpa.inp",
      "functionals/03-xc.b3lyp_oep.inp",
      "functionals/03-xc.gga_x_dk87_r2.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/03-xc.gga_c_p86.inp",
      "functionals/03-xc.lda_c_vwn_rpa.inp",
      "functionals/05-ks_inversion.01-target_density.inp",
      "functionals/03-xc.lda_c_pw_mod.inp",
      "functionals/03-xc.lda_c_vwn.inp",
      "functionals/14-libvdwxc_Be_hcp.01-vdwdfcx.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/10-vdw_d3_dna.02-gs_d3.inp",
      "functionals/03-xc.kli.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "functionals/03-xc.lda_c_pz.inp",
      "functionals/04-oep.03-jellium-full_exx.inp",
      "functionals/03-xc.lda_c_xalpha.inp",
      "functionals/02-xc_2d.lda_amgb.inp",
      "functionals/03-xc.lda_c_gl.inp",
      "functionals/03-xc.gga_x_bayesian.inp",
      "functionals/03-xc.gga_xc_b97_d.inp",
      "functionals/03-xc.gga_c_pbe.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/03-xc.gga_x_lb.inp",
      "functionals/02-xc_2d.lda_prm.inp",
      "functionals/03-xc.gga_x_pbe_sol.inp",
      "functionals/16-dressed-rdmft.01-ip.inp",
      "functionals/03-xc.gga_c_lyp.inp",
      "functionals/03-xc.gga_c_am05.inp",
      "functionals/03-xc.gga_x_mpw91.inp",
      "functionals/03-xc.gga_x_pbe.inp",
      "functionals/03-xc.gga_xc_pbe1w.inp",
      "functionals/02-xc_2d.gga_b88.inp",
      "functionals/03-xc.gga_x_optpbe_vdw.inp",
      "functionals/03-xc.gga_xc_hcth_407.inp",
      "functionals/02-xc_2d.gga_pbe.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "functionals/07-sic.02-scdm.inp",
      "functionals/03-xc.gga_x_dk87_r1.inp",
      "functionals/03-xc.gga_x_optx.inp",
      "functionals/12-vdw_solid_c6.01-gs_diamond.inp",
      "functionals/06-rdmft.02-gs_basis.inp",
      "functionals/11-vdw_d3.01-gs.inp",
      "functionals/03-xc.fbex.inp",
      "functionals/03-xc.gga_x_wc.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/04-silicon.02-kdotp.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/22-berry.02-cubic_Si.inp",
      "periodic_systems/11-silicon_force.01-gs.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/11-silicon_force.02-nlcc.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/18-TiO2.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.02_kdotp.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/27-Ar.02-kdotp.inp",
      "periodic_systems/13-primitive.03-bcc_iron.inp",
      "periodic_systems/05-lithium.05-tdtdm.inp",
      "periodic_systems/26-Na.01-gs.inp",
      "periodic_systems/22-berry.01-cubic_Si_gs.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/06-h2o_pol_lr.03_emresp.inp",
      "periodic_systems/01-free_electrons.02-unocc.inp",
      "periodic_systems/15-bandstructure.04-wannier90_output.inp",
      "periodic_systems/06-h2o_pol_lr.01_gs.inp",
      "periodic_systems/19-unfolding.03-unocc.inp",
      "periodic_systems/15-bandstructure.01-gs.inp",
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/15-bandstructure.05-wannier90_states.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/01-free_electrons.01-ground_state.inp",
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/15-bandstructure.03-wannier90_setup.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/02-cosine_potential.02-unocc.inp",
      "periodic_systems/06-h2o_pol_lr.05_emresp_susc.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/05-lithium.01-gs.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "periodic_systems/32-photodoping.01-gs.inp",
      "periodic_systems/07-mgga.02-tb09_gs_nosymm.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/27-Ar.01-gs.inp",
      "periodic_systems/24-hartree_fock_1D.01-gs.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "periodic_systems/31-magnon_1d.01-gs.inp",
      "periodic_systems/09-etsf_io.01-gs.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/26-Na.02-kdotp.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/06-h2o_pol_lr.04_emresp_mo.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/03-sodium_chain.03-ground_state_disp.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/04-silicon.03-emresp.inp",
      "periodic_systems/10-berkeleygw.02-unocc.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/15-bandstructure.02-unocc.inp",
      "periodic_systems/23-hybrids.01-ace.inp",
      "periodic_systems/19-unfolding.02-setup.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/17-aluminium.01-gs.inp",
      "periodic_systems/13-primitive.01-diamond.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/19-unfolding.04-run.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/08-benzene_supercell.01-gs.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "periodic_systems/02-cosine_potential.01-ground_state.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp",
      "finite_systems_1d/09-morse.02-unocc.inp",
      "finite_systems_1d/02-neon_mpi.03-td_calc-kli_par_states.inp",
      "finite_systems_1d/04-lithium.02-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.03-dummy.inp",
      "finite_systems_1d/09-morse.01-gs.inp",
      "finite_systems_1d/02-neon_mpi.01-ground_state-IP_par_domains.inp",
      "finite_systems_1d/03-He-Hartree-Fock.01-gs.inp",
      "finite_systems_1d/01-hydrogen.02-excited_state.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.01-ground_state.inp",
      "finite_systems_1d/02-neon_mpi.02-ground_state-kli_par_domains.inp",
      "finite_systems_1d/04-lithium.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/05-adw.02-unocc.inp",
      "optimal_control/04-box.01-ground_state.inp",
      "optimal_control/10-current.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.02-unocc.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.01-ground_state.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/06-zbr98.01-ground_state.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/02-sym_doublewell.02-unocc.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/05-adw.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/04-box.02-unocc.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.04-gs-mp.inp",
      "optimal_control/01-asym_doublewell.01-ground_state.inp",
      "optimal_control/03-localtarget.01-gs.inp",
      "optimal_control/09-density+current.01-ground_state.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp",
      "components/22-density_calc.01-Si.inp",
      "components/16-hartree_3d_psolver.02-psolver.inp",
      "components/34-regridding.01-samespacing-mixed.inp",
      "components/20-dft_u.04-complex_submesh.inp",
      "components/26-batch_ops.02-jellium-complex.inp",
      "components/05-hartree_3d_fft.04-3d_3d_periodic.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/35-helmholtz_decom.01-large_box_no_surf_corr.inp",
      "components/26-batch_ops.03-jellium-spinor.inp",
      "components/18-interpolation.01-1d.inp",
      "components/34-regridding.02-samespacing-parstates.inp",
      "components/10-hartree_pfft.03-3d_1d_periodic.inp",
      "components/03-derivatives_3d.02-non-orthogonal.inp",
      "components/16-hartree_3d_psolver.01-psolver.inp",
      "components/11-hartree_cl.01-fft.inp",
      "components/01-derivatives_1d.02-fortran.inp",
      "components/26-batch_ops.01-jellium.inp",
      "components/18-interpolation.03-3d.inp",
      "components/10-hartree_pfft.05-3d_2d_periodic.inp",
      "components/35-helmholtz_decom.05-sphere_small_box_with_surf_corr.inp",
      "components/35-helmholtz_decom.04-cylinder_small_box_with_surf_corr.inp",
      "components/37-current-density.inp",
      "components/06-hartree_3d_isf.01-isf.inp",
      "components/01-derivatives_1d.01.inp",
      "components/02-derivatives_2d.01.inp",
      "components/03-derivatives_3d.01.inp",
      "components/12-hartree_direct_3d.01.inp",
      "components/08-gs.01-cgs_real.inp",
      "components/18-interpolation.02-2d.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/21-hamiltonian_apply.01-Si.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/34-regridding.03-samespacing-pardomains.inp",
      "components/25-subspace.01-jellium.inp",
      "components/10-hartree_pfft.06-fft-parstates.inp",
      "components/24-boundaries.01-jellium.inp",
      "components/13-hartree_3d_mg.01-multigrid.inp",
      "components/10-hartree_pfft.04-3d_3d_periodic.inp",
      "components/05-hartree_3d_fft.02-fft_corrected.inp",
      "components/05-hartree_3d_fft.01-fft.inp",
      "components/35-helmholtz_decom.03-parallelepiped_small_box_with_surf_corr.inp",
      "components/10-hartree_pfft.02-fft_corrected.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/08-gs.05-drcgs_real.inp",
      "components/15-cholesky_parallel.01-real.inp",
      "components/08-gs.03-mgs_real.inp",
      "components/10-hartree_pfft.01-fft.inp",
      "components/29-linear_solver.01-real.inp",
      "components/07-cholesky_serial.01-real.inp",
      "components/04-hartree_3d_cg.01-cg_corrected.inp",
      "components/36-maxwell_vector_potential.inp",
      "components/03-derivatives_3d.02-non-orthogonal_unpacked.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/07-cholesky_serial.03-parindep.inp",
      "components/15-cholesky_parallel.02-complex.inp",
      "components/35-helmholtz_decom.02-small_box_no_surf_corr.inp",
      "components/31-grid_interpolation.01.inp",
      "components/05-hartree_3d_fft.03-3d_1d_periodic.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "components/19-hgh_soc.01-3d.inp",
      "components/08-gs.02-cgs_complex.inp",
      "components/07-cholesky_serial.02-complex.inp",
      "components/08-gs.04-mgs_complex.inp",
      "components/05-hartree_3d_fft.05-3d_2d_periodic.inp",
      "components/23-exponential_apply.01-jellium.inp",
      "components/08-gs.06-drcgs_complex.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/14-quadrupole-pot.01-hydrogen-gs.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.01-1D-Helium-ground-state.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.01-benzene-gs.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/09-basis_from_states.01-lda.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/11-full_delta.01-gs.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/06-laser.03-velocity_gauge.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.01-Na2.inp",
      "lda_u/05-forces.02-Na2_go.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/06-laser.01-gs.inp",
      "lda_u/10-intersite.01-Na2.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "sparskitabstolerance": {
    "CallLine": "call parse_variable(namespace, 'SPARSKITAbsTolerance', 1e-10_real64, sk%abs_tolerance)",
    "Default": [
      "1e-10"
    ],
    "Description": [
      "Some SPARSKIT solvers use an absolute tolerance as a stopping criterion",
      "for the iterative solution process. This variable can be used to",
      "specify the tolerance."
    ],
    "LineNumber": 233,
    "Manuals": [],
    "Name": "SPARSKITAbsTolerance",
    "Options": [],
    "Section": "Math::SPARSKIT",
    "Sourcefile": "math/sparskit.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "sparskititerout": {
    "CallLine": "call parse_variable(namespace, 'SPARSKITIterOut', -1, sk%iter_out)",
    "Default": [
      "-1"
    ],
    "Description": [
      "Determines how often status info of the solver is printed.",
      "If <= 0, will never be printed."
    ],
    "LineNumber": 211,
    "Manuals": [],
    "Name": "SPARSKITIterOut",
    "Options": [],
    "Section": "Math::SPARSKIT",
    "Sourcefile": "math/sparskit.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "sparskitkrylovsubspacesize": {
    "CallLine": "call parse_variable(namespace, 'SPARSKITKrylovSubspaceSize', 15, sk%krylov_size)",
    "Default": [
      "15"
    ],
    "Description": [
      "Some of the SPARSKIT solvers are Krylov subspace methods.",
      "This variable determines what size the solver will use",
      "for the subspace."
    ],
    "LineNumber": 188,
    "Manuals": [],
    "Name": "SPARSKITKrylovSubspaceSize",
    "Options": [],
    "Section": "Math::SPARSKIT",
    "Sourcefile": "math/sparskit.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "sparskitmaxiter": {
    "CallLine": "call parse_variable(namespace, 'SPARSKITMaxIter', 5000, sk%maxiter)",
    "Default": [
      "50000"
    ],
    "Description": [
      "This variable controls the maximum number of iteration steps that",
      "will be performed by the (iterative) linear solver."
    ],
    "LineNumber": 201,
    "Manuals": [],
    "Name": "SPARSKITMaxIter",
    "Options": [],
    "Section": "Math::SPARSKIT",
    "Sourcefile": "math/sparskit.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "sparskitreltolerance": {
    "CallLine": "call parse_variable(namespace, 'SPARSKITRelTolerance', 1e-8_real64, sk%rel_tolerance)",
    "Default": [
      "1e-8"
    ],
    "Description": [
      "Some SPARSKIT solvers use a relative tolerance as a stopping criterion",
      "for the iterative solution process. This variable can be used to",
      "specify the tolerance."
    ],
    "LineNumber": 222,
    "Manuals": [],
    "Name": "SPARSKITRelTolerance",
    "Options": [],
    "Section": "Math::SPARSKIT",
    "Sourcefile": "math/sparskit.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "sparskitsolver": {
    "CallLine": "call parse_variable(namespace, 'SPARSKITSolver', SK_BCG, sk%solver_type)",
    "Default": [
      "sk_bcg"
    ],
    "Description": [
      "Specifies what kind of linear solver will be used."
    ],
    "LineNumber": 174,
    "Manuals": [],
    "Name": "SPARSKITSolver",
    "Options": [
      {
        "Description": [
          "Conjugate Gradient Method"
        ],
        "Name": "sk_cg",
        "Value": "1"
      },
      {
        "Description": [
          "Conjugate Gradient Method (Normal Residual equation)"
        ],
        "Name": "sk_cgnr",
        "Value": "2"
      },
      {
        "Description": [
          "Bi-Conjugate Gradient Method"
        ],
        "Name": "sk_bcg",
        "Value": "3"
      },
      {
        "Description": [
          "BCG with partial pivoting"
        ],
        "Name": "sk_dbcg",
        "Value": "4"
      },
      {
        "Description": [
          "BCG stabilized"
        ],
        "Name": "sk_bcgstab",
        "Value": "5"
      },
      {
        "Description": [
          "Transpose-Free Quasi-Minimum Residual method"
        ],
        "Name": "sk_tfqmr",
        "Value": "6"
      },
      {
        "Description": [
          "Full Orthogonalization Method"
        ],
        "Name": "sk_fom",
        "Value": "7"
      },
      {
        "Description": [
          "Generalized Minimum Residual method"
        ],
        "Name": "sk_gmres",
        "Value": "8"
      },
      {
        "Description": [
          "Flexible version of Generalized Minimum Residual method"
        ],
        "Name": "sk_fgmres",
        "Value": "9"
      },
      {
        "Description": [
          "Direct versions of the Quasi-Generalized Minimum Residual method"
        ],
        "Name": "sk_dqgmres",
        "Value": "10"
      }
    ],
    "Section": "Math::SPARSKIT",
    "Sourcefile": "math/sparskit.F90",
    "Testfiles": [
      "real_time/02-propagators.02-cnsparskit.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/02-propagators.04-rungekutta4.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "sparskitverbosesolver": {
    "CallLine": "call parse_variable(namespace, 'SPARSKITVerboseSolver', .false., sk%verbose)",
    "Default": [
      "no"
    ],
    "Description": [
      "When set to yes, the SPARSKIT solver will write more detailed output."
    ],
    "LineNumber": 242,
    "Manuals": [],
    "Name": "SPARSKITVerboseSolver",
    "Options": [],
    "Section": "Math::SPARSKIT",
    "Sourcefile": "math/sparskit.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "species": {
    "CallLine": "if (parse_block(namespace, 'Species', blk) == 0) then",
    "Default": null,
    "Description": [
      "A species is by definition either an \"ion\" (nucleus + core electrons) described",
      "through a pseudopotential, or a model potential.",
      " ",
      "Note that some sets of pseudopotentials are distributed with",
      "the code. To use these pseudopotentials, you do not need to define them",
      "explicitly in the <tt>Species</tt> block, as default parameters",
      "are provided.",
      "You can select the set for default pseudopotentials using the",
      "<tt>PseudopotentialSet</tt> variable.",
      " ",
      "Additional pseudopotentials can be downloaded from the <a",
      "href='http://octopus-code.org/wiki/Pseudopotentials'>",
      "octopus homepage</a> or from other sources. Supported norm-conserving pseudopotential formats are",
      "detected by the file extension: UPF (<tt>.upf</tt>), PSF (SIESTA, <tt>.psf</tt>), FHI (ABINIT 6, <tt>.fhi</tt>),",
      "CPI (Fritz-Haber, <tt>.cpi</tt>), QSO (quantum-simulation.org, for Qbox, <tt>.xml</tt>),",
      "HGH (Hartwigsen-Goedecker-Hutter, <tt>.hgh</tt>).",
      "PSPIO format can also be used via <tt>species_pspio</tt> if that library is linked.",
      "Note: pseudopotentials may only be used in 3D.",
      " ",
      "Note that not all pseudopotential format are supporting spin-orbit coupling (SOC).",
      "At the moment, only HGH, UPF1 and UPF2 formats are supporting SOC.",
      "Some fully-relativistic pseudopotentials can still be used, but only without SOC.",
      " ",
      "The format of this block is the following: The first field is a",
      "string that defines the name of the species. The second field",
      "defines the type of species (the valid options are detailed",
      "below).",
      " ",
      "Then a list of parameters follows. The parameters are specified",
      "by a first field with the parameter name and the field that",
      "follows with the value of the parameter. Some parameters are",
      "specific to a certain species while others are accepted by all",
      "species. These are <tt>mass</tt>, <tt>max_spacing</tt>, and <tt>min_radius</tt>.",
      " ",
      "These are examples of possible species:",
      " ",
      "<tt>%Species",
      "<br>&nbsp;&nbsp;'O'       | species_pseudo         | file | 'O.psf' | lmax |  1 | lloc | 1",
      "<br>&nbsp;&nbsp;'H'       | species_pseudo         | file | '../H.hgh'",
      "<br>&nbsp;&nbsp;'Xe'      | species_pseudo         | set | pseudojo_pbe_stringent",
      "<br>&nbsp;&nbsp;'C'       | species_pseudo         | file | \"carbon.xml\"",
      "<br>&nbsp;&nbsp;'jlm'     | species_jellium        | jellium_radius | 5.0",
      "<br>&nbsp;&nbsp;'rho'     | species_charge_density | density_formula | \"exp(-r/a)\" | mass | 17.0 | valence | 6",
      "<br>&nbsp;&nbsp;'udf'     | species_user_defined   | potential_formula | \"1/2*r^2\" | valence | 8",
      "<br>&nbsp;&nbsp;'He_all'  | species_full_delta",
      "<br>&nbsp;&nbsp;'H_all'   | species_full_gaussian  |  gaussian_width |  0.2",
      "<br>&nbsp;&nbsp;'Li1D'    | species_soft_coulomb   |  softening | 1.5 | valence | 3",
      "<br>&nbsp;&nbsp;'H_all'   | species_full_anc       |  anc_a | 4",
      "<br>%</tt>"
    ],
    "LineNumber": 596,
    "Manuals": [],
    "Name": "Species",
    "Options": [
      {
        "Description": [
          "The species is a pseudopotential. How to get the",
          "pseudopotential can be specified by the <tt>file</tt> or",
          "the <tt>set</tt> parameters. If both are missing, the",
          "pseudopotential will be taken from the <tt>PseudopotentialSet</tt>",
          "specified for the run, this is useful if you want to change",
          "some parameters of the pseudo, like the <tt>mass</tt>.",
          " ",
          "The optional parameters for this type of species are",
          "<tt>lmax</tt>, that defines the maximum angular momentum",
          "component to be used, and <tt>lloc</tt>, that defines the",
          "angular momentum to be considered as local. When these",
          "parameters are not set, the value for lmax is the maximum",
          "angular component from the pseudopotential file. The default",
          "value for <tt>lloc</tt> is taken from the pseudopotential if",
          "available, if not, it is set to 0. Note that, depending on the",
          "type of pseudopotential, it might not be possible to select",
          "<tt>lmax</tt> and <tt>lloc</tt>, if that is the case the",
          "parameters will be ignored.",
          " "
        ],
        "Name": "species_pseudo",
        "Value": "-7"
      },
      {
        "Description": [
          "(experimental) Alternative method to read pseudopotentials",
          "using the PSPIO library. This species uses the same parameters",
          "as <tt>species_pseudo</tt>."
        ],
        "Name": "species_pspio",
        "Value": "-110"
      },
      {
        "Description": [
          "Species with user-defined potential. The potential for the",
          "species is defined by the formula given by the <tt>potential_formula</tt>",
          "parameter.",
          "The",
          "<tt>valence</tt> parameter determines the number of electrons",
          "associated with the species. By default, a valence of 0 is assumed."
        ],
        "Name": "species_user_defined",
        "Value": "-123"
      },
      {
        "Description": [
          "The potential for this species is created from the distribution",
          "of charge given by the <tt>density_formula</tt> parameter.",
          "The",
          "<tt>valence</tt> parameter determines the number of electrons",
          "associated with the species. By default, a valence of 0 is assumed."
        ],
        "Name": "species_charge_density",
        "Value": "-125"
      },
      {
        "Description": [],
        "Name": "species_point",
        "Value": "-3"
      },
      {
        "Description": [
          "Jellium sphere.",
          "The charge associated with this species must be given by the <tt>valence</tt> parameter."
        ],
        "Name": "species_jellium",
        "Value": "-3"
      },
      {
        "Description": [
          "A slab of jellium that extends across the simulation box in the",
          "<i>xy</i>-plane. The dimension along the <i>z</i> direction is",
          "determined by the required parameter <tt>thickness</tt>.",
          "The charge associated with this species must be given by the <tt>valence</tt> parameter."
        ],
        "Name": "species_jellium_slab",
        "Value": "-4"
      },
      {
        "Description": [
          "Full atomic potential represented by a delta charge",
          "distribution. The atom will be displaced to the nearest grid",
          "point. The atomic number is determined from the name of the species."
        ],
        "Name": "species_full_delta",
        "Value": "-127"
      },
      {
        "Description": [
          "Analytical norm-conserving regulized Coulomb potential from",
          "[Gygi J. Chem. Theory Comput. 2023, 19, 1300\u22121309]."
        ],
        "Name": "species_full_anc",
        "Value": "-130"
      },
      {
        "Description": [
          "A full-potential atom is defined by a Gaussian accumulation of",
          "positive charge (distorted if curvilinear coordinates are",
          "used), in the form:",
          " ",
          "<math>q(r) = z \\beta \\exp[ - (\\vec{r}-\\vec{r_0})^2 / (\\sqrt{2} \\delta \\sigma) ] </math>",
          " ",
          "<math>\\beta</math> is chosen in order to maintain proper",
          "normalization (the integral of <math>q</math> should sum up to",
          "<math>z</math>). <math>\\delta</math> is the grid spacing (the",
          "grid spacing in the first dimension, to be precise).",
          "<math>\\vec{r_0}</math> is calculated in such a way that the the",
          "first moment of <math>q(r)/z</math> is equal to the atomic",
          "position. For a precise description, see N. A. Modine,",
          "<i>Phys. Rev. B</i> <b>55</b>, 10289 (1997). The width of the",
          "Gaussian is set by parameter <tt>gaussian_width</tt>. The",
          "atomic number is determined from the name of the species."
        ],
        "Name": "species_full_gaussian",
        "Value": "-124"
      },
      {
        "Description": [
          "The potential is read from a file. Accepted file formats, detected by extension: obf, ncdf and csv.",
          "The",
          "<tt>valence</tt> parameter determines the number of electrons",
          "associated with the species. By default, a valence of 0 is assumed."
        ],
        "Name": "species_from_file",
        "Value": "-126"
      },
      {
        "Description": [
          "The potential is a soft-Coulomb function, <i>i.e.</i> a function in the form:",
          " ",
          "<math>v(r) = - z_{val} / \\sqrt{a^2 + r^2}</math>",
          " ",
          "The value of <i>a</i> should be given by the mandatory <tt>softening</tt> parameter.",
          "The charge associated with this species must be given by the <tt>valence</tt> parameter."
        ],
        "Name": "species_soft_coulomb",
        "Value": "-128"
      },
      {
        "Description": [
          "The parameter is the name of a volume block specifying the shape of the jellium."
        ],
        "Name": "species_jellium_charge_density",
        "Value": "-129"
      },
      {
        "Description": [
          "The maximum angular-momentum channel that will be used for the pseudopotential."
        ],
        "Name": "lmax",
        "Value": "-10003"
      },
      {
        "Description": [
          "The angular-momentum channel of the pseudopotential to be considered local."
        ],
        "Name": "lloc",
        "Value": "-10004"
      },
      {
        "Description": [
          "The mass of the species in atomic mass units, <i>i.e.</i> the mass of a proton is",
          "roughly one. It is set automatically for pseudopotentials from the",
          "<a href=http://www.nist.gov/pml/data/comp.cfm>NIST values</a>.",
          "For other species, the default is 1.0."
        ],
        "Name": "mass",
        "Value": "-10005"
      },
      {
        "Description": [
          "The number of electrons of the species. It is set automatically from the name of the species.",
          "if it correspond to the name in the periodic table. If not specified and if the name",
          "does not match an atom name, a value of 0 is assumed."
        ],
        "Name": "valence",
        "Value": "-10006"
      },
      {
        "Description": [
          "The radius of the sphere for <tt>species_jellium</tt>. If this value is not specified,",
          "the default of 0.5 bohr is used."
        ],
        "Name": "jellium_radius",
        "Value": "-10007"
      },
      {
        "Description": [
          "For a <tt>species_pseudo</tt>, get the pseudopotential from a",
          "particular set. This flag must be followed with one of the",
          "valid values for the variable <tt>PseudopotentialSet</tt>."
        ],
        "Name": "set",
        "Value": "-10017"
      },
      {
        "Description": [
          "The width of the Gaussian (in units of spacing) used to represent",
          "the nuclear charge for <tt>species_full_gaussian</tt>. If not present,",
          "the default is 0.6."
        ],
        "Name": "gaussian_width",
        "Value": "-10008"
      },
      {
        "Description": [
          "The softening parameter <i>a</i> for <tt>species_soft_coulomb</tt> in units of length."
        ],
        "Name": "softening",
        "Value": "-10009"
      },
      {
        "Description": [
          "The path for the file that describes the species."
        ],
        "Name": "file",
        "Value": "-10010"
      },
      {
        "Description": [
          "Obsolete. Use the <tt>set</tt> option of the <tt>PseudopotentialSet</tt> variable instead."
        ],
        "Name": "db_file",
        "Value": "-10011"
      },
      {
        "Description": [
          "Mathematical expression that defines the potential for <tt>species_user_defined</tt>. You can use",
          "any of the <i>x</i>, <i>y</i>, <i>z</i> or <i>r</i> variables."
        ],
        "Name": "potential_formula",
        "Value": "-10012"
      },
      {
        "Description": [
          "Mathematical expression that defines the charge density for <tt>species_charge_density</tt>. You can use",
          "any of the <i>x</i>, <i>y</i>, <i>z</i> or <i>r</i> variables."
        ],
        "Name": "density_formula",
        "Value": "-10013"
      },
      {
        "Description": [
          "The thickness of the slab for species_jellium_slab. Must be positive."
        ],
        "Name": "thickness",
        "Value": "-10014"
      },
      {
        "Description": [
          "The van der Waals radius that will be used for this species."
        ],
        "Name": "vdw_radius",
        "Value": "-10015"
      },
      {
        "Description": [
          "Name of a volume block"
        ],
        "Name": "volume",
        "Value": "-10016"
      },
      {
        "Description": [
          "The angular-momentum for which the effective U will be applied."
        ],
        "Name": "hubbard_l",
        "Value": "-10018"
      },
      {
        "Description": [
          "The effective U that will be used for the DFT+U calculations."
        ],
        "Name": "hubbard_u",
        "Value": "-10019"
      },
      {
        "Description": [
          "The value of j (hubbard_l-1/2 or hubbard_l+1/2) on which the effective U is applied."
        ],
        "Name": "hubbard_j",
        "Value": "-10020"
      },
      {
        "Description": [
          "The strength of the potential constraining the occupations of the localized subspace",
          "as defined in PRB 71, 035105 (2005)"
        ],
        "Name": "hubbard_alpha",
        "Value": "-10021"
      },
      {
        "Description": [
          "The value of the parameter a of the ANC potential, as defined in [Gygi, JCTC 2023, 19, 1300\u22121309].",
          "This parameter has the unit of inverse length and determines the range of regularization."
        ],
        "Name": "anc_a",
        "Value": "-10022"
      }
    ],
    "Section": "System::Species",
    "Sourcefile": "species/species.F90",
    "Testfiles": [
      "finite_systems_2d/01-quadratic_box.03-hartree+xc.inp",
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_2d/01-quadratic_box.04-spin_polarized.inp",
      "finite_systems_2d/05-spin_precession.01-ground_state.inp",
      "finite_systems_2d/03-helium_atom.02-ground_state.inp",
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/02-fock-darwin.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/01-quadratic_box.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.02-ground_state.inp",
      "finite_systems_2d/07-user_def_box.01-gs.inp",
      "finite_systems_2d/09-magnetic_2d.01-no_field.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "finite_systems_2d/01-quadratic_box.02-hartree.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/03-helium_atom.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "finite_systems_2d/06-gdlib.01-gs.inp",
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/12-electronic_subsystem_propagators.01-gs.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/15-electronic_system_restart.04-td_restart_part2.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/15-electronic_system_restart.01-gs.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/08-sternheimer-photons.01-gs.inp",
      "linear_response/08-sternheimer-photons.02-em_resp.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/07-casida-photons.05-elpa-parother.inp",
      "linear_response/07-casida-photons.06-spectrum.inp",
      "linear_response/07-casida-photons.01-gs.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "linear_response/07-casida-photons.03-scalapack.inp",
      "linear_response/01-casida.01-gs.inp",
      "linear_response/07-casida-photons.02-photons.inp",
      "linear_response/07-casida-photons.04-elpa.inp",
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/16-scfinlcao_std.01-gs.inp",
      "finite_systems_3d/13-full_potential_hydrogen.02-gs-cg.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/07-spin_orbit_coupling.02-rkb.inp",
      "finite_systems_3d/04-jellium.01-ground_state.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.03-unocc.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "real_time/18-hhg.01-gs.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/11-tdmagnetic.02-unocc.inp",
      "real_time/02-propagators.01-gs.inp",
      "real_time/01-propagators.09-magnus.inp",
      "real_time/02-propagators.02-cnsparskit.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/01-propagators.07-caetrs.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/01-propagators.11-cfmagnus4.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/01-propagators.08-cn.inp",
      "real_time/01-propagators.05-etrs_chebyshev.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/11-tdmagnetic.01-gs.inp",
      "real_time/03-td_self_consistent.01-gs.inp",
      "real_time/01-propagators.06-aetrs.inp",
      "real_time/01-propagators.01-gs.inp",
      "real_time/01-propagators.03-etrs_taylor.inp",
      "real_time/03-td_self_consistent.02-etrs.inp",
      "real_time/01-propagators.02-expmid.inp",
      "real_time/01-propagators.10-exprk4.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/02-propagators.04-rungekutta4.inp",
      "pseudopotentials/16-platinum_psp8.01-gs.inp",
      "pseudopotentials/18-Bi_pseudodojo_fr.01-gs.inp",
      "pseudopotentials/11-isotopes.02-tritium.inp",
      "pseudopotentials/10-helium_upf.02-gs_filter_ts.inp",
      "pseudopotentials/08-carbon_fhi.01-gs.inp",
      "pseudopotentials/03-nlcc.01-Fatom.inp",
      "pseudopotentials/13-U235.01-gs.inp",
      "pseudopotentials/10-helium_upf.03-gs_filter_bsb.inp",
      "pseudopotentials/04-carbon_dojo_psml.01-gs.inp",
      "pseudopotentials/15-calcium_psp8_sic.01-gs.inp",
      "pseudopotentials/10-helium_upf.01-gs_nofilter.inp",
      "pseudopotentials/09-carbon_cpi.01-gs.inp",
      "pseudopotentials/14-carbon_dojo_psp8.01-gs.inp",
      "pseudopotentials/12-mix_and_match.01-mgo.inp",
      "photo_electron/06-2D.01-Na_gs.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/13-arpes_2d.01-gs.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.01-N_atom.inp",
      "tutorials/02-octopus_basics-basic_input_options.01-N_atom.inp",
      "functionals/01-xc_1d.oep_kli.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/02-xc_2d.gga_b86_mgc.inp",
      "functionals/16-dressed-rdmft.03-rdmft.inp",
      "functionals/05-ks_inversion.03-inversion.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/01-xc_1d.02-wfs-hf.inp",
      "functionals/02-xc_2d.gga_b86.inp",
      "functionals/01-xc_1d.01-wfs-lda.inp",
      "functionals/05-ks_inversion.02-two_particle.inp",
      "functionals/04-oep.02-jellium-exx_kli.inp",
      "functionals/16-dressed-rdmft.02-hf.inp",
      "functionals/04-oep.01-jellium-lsda.inp",
      "functionals/01-xc_1d.lda_csc.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/01-xc_1d.oep_exx.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/05-ks_inversion.01-target_density.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "functionals/04-oep.03-jellium-full_exx.inp",
      "functionals/02-xc_2d.lda_amgb.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/02-xc_2d.lda_prm.inp",
      "functionals/16-dressed-rdmft.01-ip.inp",
      "functionals/02-xc_2d.gga_b88.inp",
      "functionals/02-xc_2d.gga_pbe.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/05-lithium.04-dielectric_function.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/05-lithium.05-tdtdm.inp",
      "periodic_systems/01-free_electrons.02-unocc.inp",
      "periodic_systems/01-free_electrons.01-ground_state.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/02-cosine_potential.02-unocc.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/05-lithium.01-gs.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/24-hartree_fock_1D.01-gs.inp",
      "periodic_systems/31-magnon_1d.01-gs.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/03-sodium_chain.03-ground_state_disp.inp",
      "periodic_systems/23-hybrids.01-ace.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "periodic_systems/02-cosine_potential.01-ground_state.inp",
      "finite_systems_1d/09-morse.02-unocc.inp",
      "finite_systems_1d/02-neon_mpi.03-td_calc-kli_par_states.inp",
      "finite_systems_1d/04-lithium.02-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.03-dummy.inp",
      "finite_systems_1d/09-morse.01-gs.inp",
      "finite_systems_1d/02-neon_mpi.01-ground_state-IP_par_domains.inp",
      "finite_systems_1d/03-He-Hartree-Fock.01-gs.inp",
      "finite_systems_1d/01-hydrogen.02-excited_state.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.01-ground_state.inp",
      "finite_systems_1d/02-neon_mpi.02-ground_state-kli_par_domains.inp",
      "finite_systems_1d/04-lithium.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/05-adw.02-unocc.inp",
      "optimal_control/04-box.01-ground_state.inp",
      "optimal_control/10-current.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.02-unocc.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.01-ground_state.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/06-zbr98.01-ground_state.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/02-sym_doublewell.02-unocc.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/05-adw.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/04-box.02-unocc.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.04-gs-mp.inp",
      "optimal_control/01-asym_doublewell.01-ground_state.inp",
      "optimal_control/03-localtarget.01-gs.inp",
      "optimal_control/09-density+current.01-ground_state.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp",
      "components/20-dft_u.04-complex_submesh.inp",
      "components/26-batch_ops.02-jellium-complex.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/26-batch_ops.03-jellium-spinor.inp",
      "components/18-interpolation.01-1d.inp",
      "components/01-derivatives_1d.02-fortran.inp",
      "components/26-batch_ops.01-jellium.inp",
      "components/37-current-density.inp",
      "components/01-derivatives_1d.01.inp",
      "components/02-derivatives_2d.01.inp",
      "components/18-interpolation.02-2d.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/25-subspace.01-jellium.inp",
      "components/24-boundaries.01-jellium.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/29-linear_solver.01-real.inp",
      "components/36-maxwell_vector_potential.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "components/23-exponential_apply.01-jellium.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.01-1D-Helium-ground-state.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/09-basis_from_states.01-lda.inp",
      "lda_u/09-basis_from_states.02-acbn0.inp",
      "lda_u/11-full_delta.01-gs.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/09-basis_from_states.03-intersite.inp",
      "lda_u/06-laser.03-velocity_gauge.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/05-forces.03-Na2_go_ACBN0.inp",
      "lda_u/05-forces.01-Na2.inp",
      "lda_u/05-forces.02-Na2_go.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/06-laser.01-gs.inp",
      "lda_u/10-intersite.01-Na2.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "speciesprojectorspherethreshold": {
    "CallLine": "call parse_variable(namespace, 'SpeciesProjectorSphereThreshold', 0.001_real64, ps%projectors_sphere_threshold)",
    "Default": [
      "0.001"
    ],
    "Description": [
      "The pseudopotentials may be composed of a local part, and a linear combination of nonlocal",
      "operators. These nonlocal projectors have \"projector\" form, <math> \\left| v \\right> \\left< v \\right| </math>",
      "(or, more generally speaking, <math> \\left| u \\right> \\left< v \\right| </math>).",
      "These projectors are localized in real space -- that is, the function <math>v</math>",
      "has a finite support around the nucleus. This region where the projectors are localized should",
      "be small or else the computation time required to operate with them will be very large.",
      " ",
      "In practice, this localization is fixed by requiring the definition of the projectors to be",
      "contained in a sphere of a certain radius. This radius is computed by making sure that the",
      "absolute value of the projector functions, at points outside the localization sphere, is",
      "below a certain threshold. This threshold is set by <tt>SpeciesProjectorSphereThreshold</tt>."
    ],
    "LineNumber": 204,
    "Manuals": [],
    "Name": "SpeciesProjectorSphereThreshold",
    "Options": [],
    "Section": "System::Species",
    "Sourcefile": "species/ps.F90",
    "Testfiles": [
      "finite_systems_3d/41-gpu-bug.01-C.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/21-magnon.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "speciestimedependent": {
    "CallLine": "call parse_variable(ions%namespace, 'SpeciesTimeDependent', .false., ions%species_time_dependent)",
    "Default": [
      "no"
    ],
    "Description": [
      "When this variable is set, the potential defined in the block <tt>Species</tt> is calculated",
      "and applied to the Hamiltonian at each time step. You must have at least one <tt>species_user_defined</tt>",
      "type of species to use this."
    ],
    "LineNumber": 383,
    "Manuals": [],
    "Name": "SpeciesTimeDependent",
    "Options": [],
    "Section": "System::Species",
    "Sourcefile": "ions/ions.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "spectrummethod": {
    "CallLine": "call parse_variable(namespace, 'SpectrumMethod', SPECTRUM_FOURIER, spectrum%method)",
    "Default": [
      "fourier"
    ],
    "Description": [
      "Decides which method is used to obtain the spectrum."
    ],
    "LineNumber": 164,
    "Manuals": [],
    "Name": "SpectrumMethod",
    "Options": [
      {
        "Description": [
          "The standard Fourier transform. Further specified by <tt>PropagationSpectrumTransform</tt>."
        ],
        "Name": "fourier",
        "Value": "1"
      },
      {
        "Description": [
          "(Experimental) Uses the compressed sensing technique."
        ],
        "Name": "compressed_sensing",
        "Value": "2"
      }
    ],
    "Section": "Utilities::oct-propagation_spectrum",
    "Sourcefile": "td/spectrum.F90",
    "Testfiles": [
      "real_time/12-absorption.05-spectrum_compressed_sensing.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/14-absorption-spinors.05-spectrum_compressed_sensing.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "spectrumsignalnoise": {
    "CallLine": "call parse_variable(namespace, 'SpectrumSignalNoise', 0.0_real64, spectrum%noise)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "For compressed sensing, the signal to process, the",
      "time-dependent dipole in this case, is assumed to have some",
      "noise that is given by this dimensionless quantity."
    ],
    "LineNumber": 182,
    "Manuals": [],
    "Name": "SpectrumSignalNoise",
    "Options": [],
    "Section": "Utilities::oct-propagation_spectrum",
    "Sourcefile": "td/spectrum.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "speedoflightfactor": {
    "CallLine": "call parse_variable(namespace, 'SpeedOfLightFactor', M_ONE, hm%c_factor)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "Fictitous factor to modify the speed of light in vacuum.",
      "Note: the proper way to handle linear media with a certain refractive index",
      "is by the user of the linear_medium system."
    ],
    "LineNumber": 227,
    "Manuals": [],
    "Name": "SpeedOfLightFactor",
    "Options": [],
    "Section": "Maxwell",
    "Sourcefile": "maxwell/hamiltonian_mxll.F90",
    "Testfiles": [
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "spincomponents": {
    "CallLine": "call parse_variable(namespace, 'SpinComponents', UNPOLARIZED, this%ispin)",
    "Default": [
      "unpolarized"
    ],
    "Description": [
      "The calculations may be done in three different ways: spin-restricted (TD)DFT (<i>i.e.</i>, doubly",
      "occupied \"closed shells\"), spin-unrestricted or \"spin-polarized\" (TD)DFT (<i>i.e.</i> we have two",
      "electronic systems, one with spin up and one with spin down), or making use of two-component",
      "spinors."
    ],
    "LineNumber": 89,
    "Manuals": [],
    "Name": "SpinComponents",
    "Options": [
      {
        "Description": [
          "Spin-restricted calculations."
        ],
        "Name": "unpolarized",
        "Value": "1"
      },
      {
        "Description": [],
        "Name": "polarized",
        "Value": "2"
      },
      {
        "Description": [
          "(Synonym <tt>polarized</tt>.) Spin-unrestricted, also known as spin-DFT, SDFT. This mode will double the number of",
          "wavefunctions necessary for a spin-unpolarized calculation."
        ],
        "Name": "spin_polarized",
        "Value": "2"
      },
      {
        "Description": [],
        "Name": "non_collinear",
        "Value": "3"
      },
      {
        "Description": [
          "(Synonym: <tt>non_collinear</tt>.) The spin-orbitals are two-component spinors. This effectively allows the spin-density to",
          "be oriented non-collinearly: <i>i.e.</i> the magnetization vector is allowed to take different",
          "directions at different points. This vector is always in 3D regardless of <tt>Dimensions</tt>."
        ],
        "Name": "spinors",
        "Value": "3"
      }
    ],
    "Section": "States",
    "Sourcefile": "electrons/electron_space.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_2d/01-quadratic_box.04-spin_polarized.inp",
      "finite_systems_2d/05-spin_precession.01-ground_state.inp",
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/02-fock-darwin.02-ground_state.inp",
      "finite_systems_2d/09-magnetic_2d.01-no_field.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "multisystem/99-carbon_hydrogen.03-td_restart.inp",
      "multisystem/99-carbon_hydrogen.01-gs.inp",
      "multisystem/99-carbon_hydrogen.02-td.inp",
      "finite_systems_3d/42-full_potential_anc.04-fr-zora.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/06-restart.06-td_calc.inp",
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/24-o2-spin.01-gs.inp",
      "finite_systems_3d/39-adsic.02-polarized.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/35-slater_x.01-gs.inp",
      "finite_systems_3d/06-restart.05-restart_gs.inp",
      "finite_systems_3d/06-restart.01-gs_mixrho.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/36-kli_x.01-gs.inp",
      "finite_systems_3d/06-restart.07-restart_td_calc.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/28-carbon_big_box.01-ground_state.inp",
      "finite_systems_3d/09-spinors.03-rmmdiis_extra_states.inp",
      "finite_systems_3d/42-full_potential_anc.03-sf-zora.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/09-spinors.01-ground_state.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "finite_systems_3d/07-spin_orbit_coupling.02-rkb.inp",
      "finite_systems_3d/06-restart.04-restart_gs_mixvhxc.inp",
      "finite_systems_3d/06-restart.02-restart_gs_mixrho.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.03-unocc.inp",
      "finite_systems_3d/37-sternheimer_polarized.02-em_resp.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/42-full_potential_anc.05-zora-error.inp",
      "finite_systems_3d/06-restart.03-gs_mixvhxc.inp",
      "finite_systems_3d/37-sternheimer_polarized.01-gs.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "finite_systems_3d/09-spinors.02-rmmdiis.inp",
      "real_time/17-absorption-spin_symmetry.01-gs.inp",
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/14-absorption-spinors.03-td-restart.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/13-absorption-spin.03-td-restart.inp",
      "real_time/14-absorption-spinors.02-td.inp",
      "real_time/14-absorption-spinors.01-gs.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/13-absorption-spin.01-gs.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "pseudopotentials/17-hgh_occupations.01-W.inp",
      "pseudopotentials/06-carbon_dojo_pbe.01-gs.inp",
      "pseudopotentials/18-Bi_pseudodojo_fr.01-gs.inp",
      "pseudopotentials/08-carbon_fhi.01-gs.inp",
      "pseudopotentials/07-carbon_dojo_lda.01-gs.inp",
      "pseudopotentials/03-nlcc.01-Fatom.inp",
      "pseudopotentials/05-carbon_dojo_pbesol.01-gs.inp",
      "pseudopotentials/04-carbon_dojo_psml.01-gs.inp",
      "pseudopotentials/09-carbon_cpi.01-gs.inp",
      "pseudopotentials/14-carbon_dojo_psp8.01-gs.inp",
      "tutorials/01-octopus_basics-getting_started.02-H_atom_spin.inp",
      "functionals/03-xc.gga_x_lg93.inp",
      "functionals/03-xc.gga_xc_mpwlyp1w.inp",
      "functionals/03-xc.lda_c_pw.inp",
      "functionals/03-xc.exx.inp",
      "functionals/03-xc.gga_x_rpbe.inp",
      "functionals/03-xc.gga_xc_edf1.inp",
      "functionals/03-xc.lda_c_hl.inp",
      "functionals/03-xc.gga_xc_hcth_120.inp",
      "functionals/01-xc_1d.oep_kli.inp",
      "functionals/03-xc.gga_c_pbe_jrgx.inp",
      "functionals/03-xc.gga_xc_hcth_93.inp",
      "functionals/03-xc.gga_c_pbe_sol.inp",
      "functionals/03-xc.mvorb_hse06_fock.inp",
      "functionals/02-xc_2d.gga_b86_mgc.inp",
      "functionals/03-xc.lda_c_wigner.inp",
      "functionals/03-xc.gga_x_mpbe.inp",
      "functionals/03-xc.gga_xc_xlyp.inp",
      "functionals/03-xc.gga_x_am05.inp",
      "functionals/03-xc.01-gs.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/03-xc.gga_x_g96.inp",
      "functionals/03-xc.gga_x_b86.inp",
      "functionals/03-xc.gga_x_pbek1_vdw.inp",
      "functionals/03-xc.gga_xc_pbelyp1w.inp",
      "functionals/03-xc.gga_x_b86_mgc.inp",
      "functionals/01-xc_1d.02-wfs-hf.inp",
      "functionals/03-xc.gga_c_xpbe.inp",
      "functionals/03-xc.pbe0_fock.inp",
      "functionals/03-xc.gga_x_b88.inp",
      "functionals/03-xc.lda_c_ob_pz.inp",
      "functionals/02-xc_2d.gga_b86.inp",
      "functionals/01-xc_1d.01-wfs-lda.inp",
      "functionals/03-xc.gga_x_ft97_b.inp",
      "functionals/03-xc.lda_c_ob_pw.inp",
      "functionals/03-xc.lda_c_pz_mod.inp",
      "functionals/03-xc.gga_x_optb88_vdw.inp",
      "functionals/03-xc.gga_c_pw91.inp",
      "functionals/03-xc.slater.inp",
      "functionals/03-xc.lda_xc_teter93.inp",
      "functionals/03-xc.sic_pz.inp",
      "functionals/03-xc.gga_x_xpbe.inp",
      "functionals/01-xc_1d.lda_csc.inp",
      "functionals/03-xc.pbe0_oep.inp",
      "functionals/03-xc.gga_xc_hcth_147.inp",
      "functionals/03-xc.gga_x_pbe_jsjr.inp",
      "functionals/03-xc.gga_c_lm.inp",
      "functionals/03-xc.gga_x_pbe_r.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/03-xc.lda_c_vbh.inp",
      "functionals/03-xc.gga_x_pbea.inp",
      "functionals/03-xc.lda_x.inp",
      "functionals/03-xc.gga_x_pw91.inp",
      "functionals/03-xc.b3lyp_fock.inp",
      "functionals/03-xc.gga_x_ft97_a.inp",
      "functionals/03-xc.gga_x_pw86.inp",
      "functionals/01-xc_1d.oep_exx.inp",
      "functionals/03-xc.lda_c_rpa.inp",
      "functionals/03-xc.b3lyp_oep.inp",
      "functionals/03-xc.gga_x_dk87_r2.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/03-xc.gga_c_p86.inp",
      "functionals/03-xc.lda_c_vwn_rpa.inp",
      "functionals/03-xc.lda_c_pw_mod.inp",
      "functionals/03-xc.lda_c_vwn.inp",
      "functionals/03-xc.kli.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "functionals/03-xc.lda_c_pz.inp",
      "functionals/03-xc.lda_c_xalpha.inp",
      "functionals/02-xc_2d.lda_amgb.inp",
      "functionals/03-xc.lda_c_gl.inp",
      "functionals/03-xc.gga_x_bayesian.inp",
      "functionals/03-xc.gga_xc_b97_d.inp",
      "functionals/03-xc.gga_c_pbe.inp",
      "functionals/03-xc.gga_x_lb.inp",
      "functionals/03-xc.gga_x_pbe_sol.inp",
      "functionals/03-xc.gga_c_lyp.inp",
      "functionals/03-xc.gga_c_am05.inp",
      "functionals/03-xc.gga_x_mpw91.inp",
      "functionals/03-xc.gga_x_pbe.inp",
      "functionals/03-xc.gga_xc_pbe1w.inp",
      "functionals/02-xc_2d.gga_b88.inp",
      "functionals/03-xc.gga_x_optpbe_vdw.inp",
      "functionals/03-xc.gga_xc_hcth_407.inp",
      "functionals/02-xc_2d.gga_pbe.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "functionals/03-xc.gga_x_dk87_r1.inp",
      "functionals/03-xc.gga_x_optx.inp",
      "functionals/03-xc.fbex.inp",
      "functionals/03-xc.gga_x_wc.inp",
      "periodic_systems/21-magnon.01-gs.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/29-soc_solids.01-gs.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/31-magnon_1d.01-gs.inp",
      "periodic_systems/25-Fe_polarized.03-unocc.inp",
      "periodic_systems/25-Fe_polarized.01-gs.inp",
      "finite_systems_1d/04-lithium.02-absorbing_boundaries.inp",
      "finite_systems_1d/04-lithium.01-ground_state.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "components/20-dft_u.04-complex_submesh.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/26-batch_ops.03-jellium-spinor.inp",
      "components/37-current-density.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "components/19-hgh_soc.01-3d.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp",
      "lda_u/07-noncollinear.02-acbn0.inp",
      "lda_u/01-nio.02-unocc.inp",
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/02-ACBN0.01-nio.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp",
      "lda_u/12-intersite_spinors.01-Na2_gs.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp",
      "lda_u/07-noncollinear.01-U5-gs.inp",
      "lda_u/01-nio.01-U5-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "spiralboundarycondition": {
    "CallLine": "call parse_variable(namespace, 'SpiralBoundaryCondition', .false., this%spiralBC)",
    "Default": [
      "no"
    ],
    "Description": [
      "(Experimental) If set to yes, Octopus will apply spin-spiral boundary conditions.",
      "The momentum of the spin spiral is defined by the variable",
      "<tt>TDMomentumTransfer</tt>"
    ],
    "LineNumber": 164,
    "Manuals": [],
    "Name": "SpiralBoundaryCondition",
    "Options": [],
    "Section": "Mesh",
    "Sourcefile": "grid/boundaries.F90",
    "Testfiles": [
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/21-magnon.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "statesblocksize": {
    "CallLine": "call parse_variable(namespace, 'StatesBlockSize', default, st%block_size)",
    "Default": null,
    "Description": [
      "Some routines work over blocks of eigenfunctions, which",
      "generally improves performance at the expense of increased",
      "memory consumption. This variable selects the size of the",
      "blocks to be used. If GPUs are used, the default is 32;",
      "otherwise it is 4."
    ],
    "LineNumber": 485,
    "Manuals": [],
    "Name": "StatesBlockSize",
    "Options": [],
    "Section": "Execution::Optimization",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "finite_systems_3d/14-fullerene_unpacked.02-td-unpacked.inp",
      "finite_systems_3d/14-fullerene_unpacked.03-td-packed.inp",
      "finite_systems_3d/15-fullerene_stdlcao.01-gs.inp",
      "finite_systems_3d/14-fullerene_unpacked.01-gs.inp",
      "components/26-batch_ops.03-jellium-spinor.inp",
      "components/03-derivatives_3d.02-non-orthogonal.inp",
      "components/03-derivatives_3d.01.inp",
      "components/03-derivatives_3d.02-non-orthogonal_unpacked.inp",
      "components/19-hgh_soc.01-3d.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "statescldevicememory": {
    "CallLine": "call parse_variable(namespace, 'StatesCLDeviceMemory', -512.0_real64, st%cl_states_mem)",
    "Default": [
      "-512"
    ],
    "Description": [
      "This variable selects the amount of OpenCL device memory that",
      "will be used by Octopus to store the states.",
      " ",
      "A positive number smaller than 1 indicates a fraction of the total",
      "device memory. A number larger than one indicates an absolute",
      "amount of memory in megabytes. A negative number indicates an",
      "amount of memory in megabytes that would be subtracted from",
      "the total device memory."
    ],
    "LineNumber": 1355,
    "Manuals": [],
    "Name": "StatesCLDeviceMemory",
    "Options": [],
    "Section": "Execution::Optimization",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "statesorthogonalization": {
    "CallLine": "call parse_variable(namespace, 'StatesOrthogonalization', default, st%orth_method)",
    "Default": null,
    "Description": [
      "The full orthogonalization method used by some",
      "eigensolvers. The default is <tt>cholesky_serial</tt>, except with state",
      "parallelization, the default is <tt>cholesky_parallel</tt>."
    ],
    "LineNumber": 1334,
    "Manuals": [],
    "Name": "StatesOrthogonalization",
    "Options": [
      {
        "Description": [
          "Cholesky decomposition implemented using",
          "BLAS/LAPACK. Can be used with domain parallelization but not",
          "state parallelization."
        ],
        "Name": "cholesky_serial",
        "Value": "1"
      },
      {
        "Description": [
          "Cholesky decomposition implemented using",
          "ScaLAPACK. Compatible with states parallelization."
        ],
        "Name": "cholesky_parallel",
        "Value": "2"
      },
      {
        "Description": [
          "Classical Gram-Schmidt (CGS) orthogonalization.",
          "Can be used with domain parallelization but not state parallelization.",
          "The algorithm is defined in Giraud et al., Computers and Mathematics with Applications 50, 1069 (2005)."
        ],
        "Name": "cgs",
        "Value": "3"
      },
      {
        "Description": [
          "Modified Gram-Schmidt (MGS) orthogonalization.",
          "Can be used with domain parallelization but not state parallelization.",
          "The algorithm is defined in Giraud et al., Computers and Mathematics with Applications 50, 1069 (2005)."
        ],
        "Name": "mgs",
        "Value": "4"
      },
      {
        "Description": [
          "Classical Gram-Schmidt orthogonalization with double-step reorthogonalization.",
          "Can be used with domain parallelization but not state parallelization.",
          "The algorithm is taken from Giraud et al., Computers and Mathematics with Applications 50, 1069 (2005).",
          "According to this reference, this is much more precise than CGS or MGS algorithms. The MGS version seems not to improve much the stability and would require more communications over the domains."
        ],
        "Name": "drcgs",
        "Value": "5"
      }
    ],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "components/08-gs.01-cgs_real.inp",
      "components/08-gs.05-drcgs_real.inp",
      "components/15-cholesky_parallel.01-real.inp",
      "components/08-gs.03-mgs_real.inp",
      "components/07-cholesky_serial.01-real.inp",
      "components/07-cholesky_serial.03-parindep.inp",
      "components/15-cholesky_parallel.02-complex.inp",
      "components/08-gs.02-cgs_complex.inp",
      "components/07-cholesky_serial.02-complex.inp",
      "components/08-gs.04-mgs_complex.inp",
      "components/08-gs.06-drcgs_complex.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "statespack": {
    "CallLine": "call parse_variable(namespace, 'StatesPack', .true., st%pack_states)",
    "Default": null,
    "Description": [
      "When set to yes, states are stored in packed mode, which improves",
      "performance considerably. Not all parts of the code will profit from",
      "this, but should nevertheless work regardless of how the states are",
      "stored.",
      " ",
      "If GPUs are used and this variable is set to yes, Octopus",
      "will store the wave-functions in device (GPU) memory. If",
      "there is not enough memory to store all the wave-functions,",
      "execution will stop with an error.",
      " ",
      "See also the related <tt>HamiltonianApplyPacked</tt> variable.",
      " ",
      "The default is yes."
    ],
    "LineNumber": 1292,
    "Manuals": [],
    "Name": "StatesPack",
    "Options": [],
    "Section": "Execution::Optimization",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "finite_systems_3d/14-fullerene_unpacked.02-td-unpacked.inp",
      "finite_systems_3d/14-fullerene_unpacked.03-td-packed.inp",
      "finite_systems_3d/14-fullerene_unpacked.01-gs.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/12-absorption.01-gs.inp",
      "real_time/12-absorption.03-td-restart.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "components/26-batch_ops.01-jellium.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/03-derivatives_3d.02-non-orthogonal_unpacked.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "statesrandomization": {
    "CallLine": "call parse_variable(namespace, 'StatesRandomization', PAR_INDEPENDENT, st%randomization)",
    "Default": [
      "par_independent"
    ],
    "Description": [
      "The randomization of states can be done in two ways:",
      "i) a parallelisation independent way (default), where the random states are identical,",
      "irrespectively of the number of tasks and",
      "ii) a parallelisation dependent way, which can prevent linear dependency",
      "to occur for large systems."
    ],
    "LineNumber": 544,
    "Manuals": [],
    "Name": "StatesRandomization",
    "Options": [
      {
        "Description": [
          "Parallelisation-independent randomization of states."
        ],
        "Name": "par_independent",
        "Value": "1"
      },
      {
        "Description": [
          "The randomization depends on the number of taks used in the calculation."
        ],
        "Name": "par_dependent",
        "Value": "2"
      }
    ],
    "Section": "States",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "components/07-cholesky_serial.01-real.inp",
      "components/07-cholesky_serial.03-parindep.inp",
      "components/07-cholesky_serial.02-complex.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "staticelectricfield": {
    "CallLine": "if (parse_block(namespace, 'StaticElectricField', blk) == 0) then",
    "Default": [
      "0"
    ],
    "Description": [
      "A static constant electric field may be added to the usual Hamiltonian,",
      "by setting the block <tt>StaticElectricField</tt>.",
      "The three possible components of the block (which should only have one",
      "line) are the three components of the electric field vector.",
      "It can be applied in a periodic direction of a large supercell via",
      "the single-point Berry phase."
    ],
    "LineNumber": 520,
    "Manuals": [],
    "Name": "StaticElectricField",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "interactions/external_potential.F90",
    "Testfiles": [
      "multisystem/07-lorentz-force.02-charged_particle_in_static_efield.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "periodic_systems/22-berry.02-cubic_Si.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "staticexternalpotentials": {
    "CallLine": "if (parse_block(namespace, 'StaticExternalPotentials', blk) == 0) then",
    "Default": null,
    "Description": [
      "An static external potential is a model potential added to the local potential of the Hamiltonian",
      " ",
      "The format of this block is the following:",
      "The first field defines the type of species (the valid options are detailed",
      "below).",
      " ",
      "Then a list of parameters follows. The parameters are specified",
      "by a first field with the parameter name and the field that",
      "follows with the value of the parameter. Some parameters are",
      "specific to a certain species while others are accepted by all",
      "species. These are <tt>mass</tt>, <tt>max_spacing</tt>, and <tt>min_radius</tt>.",
      " ",
      "These are examples of possible species:",
      " ",
      "<tt>%ExternalPotential",
      "<br>&nbsp;&nbsp; potential_user_defined | potential_formula | \"1/2*r^2\"",
      "<br>%</tt>"
    ],
    "LineNumber": 402,
    "Manuals": [],
    "Name": "StaticExternalPotentials",
    "Options": [
      {
        "Description": [
          "The potential is read from a file. Accepted file formats, detected by extension: obf, ncdf and csv."
        ],
        "Name": "potential_from_file",
        "Value": "-202"
      },
      {
        "Description": [
          "Species with user-defined potential. The potential for the",
          "species is defined by the formula given by the <tt>potential_formula</tt>",
          "parameter."
        ],
        "Name": "potential_user_defined",
        "Value": "-201"
      },
      {
        "Description": [
          "The potential for this species is created from the distribution",
          "of charge given by the <tt>density_formula</tt> parameter."
        ],
        "Name": "potential_charge_density",
        "Value": "-203"
      },
      {
        "Description": [
          "The path for the file that describes the species."
        ],
        "Name": "file",
        "Value": "-10010"
      },
      {
        "Description": [
          "Mathematical expression that defines the potential for <tt>species_user_defined</tt>. You can use",
          "any of the <i>x</i>, <i>y</i>, <i>z</i> or <i>r</i> variables."
        ],
        "Name": "potential_formula",
        "Value": "-10012"
      },
      {
        "Description": [
          "Mathematical expression that defines the charge density for <tt>species_charge_density</tt>. You can use",
          "any of the <i>x</i>, <i>y</i>, <i>z</i> or <i>r</i> variables."
        ],
        "Name": "density_formula",
        "Value": "-10013"
      }
    ],
    "Section": "System",
    "Sourcefile": "interactions/external_potential.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "staticmagneticfield": {
    "CallLine": "if (parse_block(namespace, 'StaticMagneticField', blk) == 0) then",
    "Default": null,
    "Description": [
      "A static constant magnetic field may be added to the usual Hamiltonian,",
      "by setting the block <tt>StaticMagneticField</tt>.",
      "The three possible components of the block (which should only have one",
      "line) are the three components of the magnetic field vector. Note that",
      "if you are running the code in 1D mode, this will not work, and if you",
      "are running the code in 2D mode the magnetic field will have to be in",
      "the <i>z</i>-direction, so that the first two columns should be zero.",
      "Possible in periodic system only in these cases: 2D system, 1D periodic,",
      "with <tt>StaticMagneticField2DGauge = linear_y</tt>;",
      "3D system, 1D periodic, field is zero in <i>y</i>- and <i>z</i>-directions (given",
      "currently implemented gauges).",
      " ",
      "The magnetic field should always be entered in atomic units, regardless",
      "of the <tt>Units</tt> variable. Note that we use the \"Gaussian\" system",
      "meaning 1 au[B] = <math> 2.350517568\\times 10^9</math> Gauss, which corresponds to",
      "<math>2.3505175678\\times 10^5</math> Tesla."
    ],
    "LineNumber": 446,
    "Manuals": [],
    "Name": "StaticMagneticField",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "interactions/external_potential.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/02-fock-darwin.01-ground_state.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "finite_systems_3d/03-magnetic.01-gs-unpolarized.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/03-magnetic.05-gs-spinors.inp",
      "finite_systems_3d/03-magnetic.03-gs-polarized.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/42-full_potential_anc.05-zora-error.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "real_time/11-tdmagnetic.02-unocc.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/11-tdmagnetic.01-gs.inp",
      "pseudopotentials/02-cu2_hgh.02_gs_current.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "maxwell/14-quadrupole-pot.01-hydrogen-gs.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "staticmagneticfield2dgauge": {
    "CallLine": "call parse_variable(namespace, 'StaticMagneticField2DGauge', 0, pot%gauge_2d)",
    "Default": [
      "linear_xy"
    ],
    "Description": [
      "The gauge of the static vector potential <math>A</math> when a magnetic field",
      "<math>B = \\left( 0, 0, B_z \\right)</math> is applied to a 2D-system."
    ],
    "LineNumber": 465,
    "Manuals": [],
    "Name": "StaticMagneticField2DGauge",
    "Options": [
      {
        "Description": [
          "Linear gauge with <math>A = \\frac{1}{2c} \\left( -y, x \\right) B_z</math>. (Cannot be used for periodic systems.)"
        ],
        "Name": "linear_xy",
        "Value": "0"
      },
      {
        "Description": [
          "Linear gauge with <math>A = \\frac{1}{c} \\left( -y, 0 \\right) B_z</math>. Can be used for <tt>PeriodicDimensions = 1</tt>",
          "but not <tt>PeriodicDimensions = 2</tt>."
        ],
        "Name": "linear_y",
        "Value": "1"
      }
    ],
    "Section": "Hamiltonian",
    "Sourcefile": "interactions/external_potential.F90",
    "Testfiles": [
      "finite_systems_2d/09-magnetic_2d.02-gs_gauge_xy.inp",
      "finite_systems_2d/09-magnetic_2d.03-gs_gauge_y.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "stderr": {
    "CallLine": "call parse_variable(global_namespace, 'stderr', '-', filename)",
    "Default": [
      "\"-\""
    ],
    "Description": [
      "The standard error by default goes to, well, to standard error. This can",
      "be changed by setting this variable: if you give it a name (other than \"-\")",
      "the output stream is printed in that file instead."
    ],
    "LineNumber": 121,
    "Manuals": [],
    "Name": "stderr",
    "Options": [],
    "Section": "Execution::IO",
    "Sourcefile": "basic/io.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "stdout": {
    "CallLine": "call parse_variable(global_namespace, 'stdout', '-', filename)",
    "Default": [
      "\"-\""
    ],
    "Description": [
      "The standard output by default goes to, well, to standard output. This can",
      "be changed by setting this variable: if you give it a name (other than \"-\")",
      "the output stream is printed in that file instead."
    ],
    "LineNumber": 105,
    "Manuals": [],
    "Name": "stdout",
    "Options": [],
    "Section": "Execution::IO",
    "Sourcefile": "basic/io.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "subspacediagonalization": {
    "CallLine": "call parse_variable(namespace, 'SubspaceDiagonalization', default, this%method)",
    "Default": [
      "standard"
    ],
    "Description": [
      "Selects the method to perform subspace diagonalization. The",
      "default is <tt>standard</tt>, unless states parallelization is used,",
      "when the default is <tt>scalapack</tt>.",
      "Note that this variable is not parsed in the case of the evolution eigensolver."
    ],
    "LineNumber": 114,
    "Manuals": [],
    "Name": "SubspaceDiagonalization",
    "Options": [
      {
        "Description": [
          "No subspace diagonalization. WARNING: this will generally give incorrect results."
        ],
        "Name": "none",
        "Value": "0"
      },
      {
        "Description": [
          "The standard routine. Can be used with domain parallelization but not",
          "state parallelization."
        ],
        "Name": "standard",
        "Value": "1"
      },
      {
        "Description": [
          "State-parallelized version using ScaLAPACK. (Requires that",
          "Octopus was compiled with ScaLAPACK support.)"
        ],
        "Name": "scalapack",
        "Value": "3"
      }
    ],
    "Section": "SCF::Eigensolver",
    "Sourcefile": "electrons/subspace.F90",
    "Testfiles": [
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "supercelldimensions": {
    "CallLine": "if (parse_block(sys%namespace, 'SupercellDimensions', blk) == 0) then",
    "Default": [
      "KPointsGrid"
    ],
    "Description": [
      "This block allows to specify the size of the supercell used to plot excitonic wavefunctions.",
      "If not specified, the code uses the number of k-points for defining the size of the supercell."
    ],
    "LineNumber": 337,
    "Manuals": [],
    "Name": "SupercellDimensions",
    "Options": [],
    "Section": "Utilities::oct-tdtdm",
    "Sourcefile": "utils/tdtdm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "surfacecorrection": {
    "CallLine": "call parse_variable(namespace, 'SurfaceCorrection', .false., this%compute_surface_correction)",
    "Default": [
      "no"
    ],
    "Description": [
      "Compute the surface correction for Helmholtz decomposition?"
    ],
    "LineNumber": 192,
    "Manuals": [],
    "Name": "SurfaceCorrection",
    "Options": [],
    "Section": "Calculation Modes::Test",
    "Sourcefile": "math/helmholtz_decomposition.F90",
    "Testfiles": [
      "components/35-helmholtz_decom.01-large_box_no_surf_corr.inp",
      "components/35-helmholtz_decom.05-sphere_small_box_with_surf_corr.inp",
      "components/35-helmholtz_decom.04-cylinder_small_box_with_surf_corr.inp",
      "components/35-helmholtz_decom.03-parallelepiped_small_box_with_surf_corr.inp",
      "components/35-helmholtz_decom.02-small_box_no_surf_corr.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "symmetriescompute": {
    "CallLine": "call parse_variable(namespace, 'SymmetriesCompute', def_sym_comp, this%symmetries_compute)",
    "Default": null,
    "Description": [
      "If disabled, <tt>Octopus</tt> will not compute",
      "nor print the symmetries.",
      " ",
      "By default, symmetries are computed when running in 3",
      "dimensions for systems with less than 100 atoms.",
      "For periodic systems, the default is always true, irrespective of the number of atoms."
    ],
    "LineNumber": 151,
    "Manuals": [],
    "Name": "SymmetriesCompute",
    "Options": [],
    "Section": "Execution::Symmetries",
    "Sourcefile": "ions/symmetries.F90",
    "Testfiles": [
      "linear_response/07-casida-photons.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "symmetriestolerance": {
    "CallLine": "call parse_variable(namespace, 'SymmetriesTolerance', default_symprec, symprec)",
    "Default": null,
    "Description": [
      "For periodic systems, this variable controls the tolerance used by the symmetry finder",
      "(spglib) to find the spacegroup and symmetries of the crystal."
    ],
    "LineNumber": 160,
    "Manuals": [],
    "Name": "SymmetriesTolerance",
    "Options": [],
    "Section": "Execution::Symmetries",
    "Sourcefile": "ions/symmetries.F90",
    "Testfiles": [
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "symmetrizedensity": {
    "CallLine": "call parse_variable(namespace, 'SymmetrizeDensity', kpoints%use_symmetries, st%symmetrize_density)",
    "Default": [
      "no"
    ],
    "Description": [
      "When enabled the density is symmetrized. Currently, this can",
      "only be done for periodic systems. (Experimental.)"
    ],
    "LineNumber": 591,
    "Manuals": [],
    "Name": "SymmetrizeDensity",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "periodic_systems/04-silicon.02-kdotp.inp",
      "periodic_systems/11-silicon_force.01-gs.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/10-berkeleygw.01-gs.inp",
      "periodic_systems/19-unfolding.03-unocc.inp",
      "periodic_systems/04-silicon.01-gs.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/30-stress.05-output_scf.inp",
      "periodic_systems/04-silicon.05-emresp_magn.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/19-unfolding.01-gs.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/11-silicon_force.03-nosym.inp",
      "periodic_systems/04-silicon.03-emresp.inp",
      "periodic_systems/30-stress.02-gamma_point.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/30-stress.04-kpoint_sym.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/30-stress.03-par_kpoints.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "symmetrizedynamicalmatrix": {
    "CallLine": "call parse_variable(sys%namespace, 'SymmetrizeDynamicalMatrix', .true., symmetrize)",
    "Default": [
      "true"
    ],
    "Description": [
      "If set to true, all entries of the dynamical matrix will be calculated and then",
      "the matrix will be symmetrized to enforce <math>D_{ij} = D_{ji}</math>. If set to false,",
      "only the upper half of the matrix will be calculated."
    ],
    "LineNumber": 165,
    "Manuals": [],
    "Name": "SymmetrizeDynamicalMatrix",
    "Options": [],
    "Section": "Linear Response::Vibrational Modes",
    "Sourcefile": "sternheimer/phonons_lr.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "symmetrybreakdir": {
    "CallLine": "if (parse_block(namespace, 'SymmetryBreakDir', blk) == 0) then",
    "Default": null,
    "Description": [
      "This variable specifies a direction in which the symmetry of",
      "the system will be broken. This is useful for generating <i>k</i>-point",
      "grids when an external perturbation is applied."
    ],
    "LineNumber": 305,
    "Manuals": [],
    "Name": "SymmetryBreakDir",
    "Options": [],
    "Section": "Mesh::Simulation Box",
    "Sourcefile": "ions/symmetries.F90",
    "Testfiles": [
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/14-silicon_shifts.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "systems": {
    "Default": null,
    "Description": [
      "List of systems that will be treated in the calculation.",
      "The first column should be a string containing the system name.",
      "The second column should be the system type. See below for a list of",
      "available system types."
    ],
    "Manuals": [],
    "Name": "Systems",
    "Options": [
      {
        "Description": [
          "An electronic system. (not fully implemented yet)"
        ],
        "Name": "electronic",
        "Value": "1"
      },
      {
        "Description": [
          "A maxwell system."
        ],
        "Name": "maxwell",
        "Value": "2"
      },
      {
        "Description": [
          "A classical particle. Used for testing purposes only."
        ],
        "Name": "classical_particle",
        "Value": "3"
      },
      {
        "Description": [
          "A charged classical particle."
        ],
        "Name": "charged_particle",
        "Value": "4"
      },
      {
        "Description": [
          "A DFTB+ system"
        ],
        "Name": "dftbplus",
        "Value": "5"
      },
      {
        "Description": [
          "A linear medium for classical electrodynamics."
        ],
        "Name": "linear_medium",
        "Value": "6"
      },
      {
        "Description": [
          "A matter system containing electrons and classical ions."
        ],
        "Name": "matter",
        "Value": "7"
      },
      {
        "Description": [
          "(Experimental) A dispersive medium for classical electrodynamics."
        ],
        "Name": "dispersive_medium",
        "Value": "8"
      },
      {
        "Description": [
          "A system containing other systems."
        ],
        "Name": "multisystem",
        "Value": "9"
      }
    ],
    "Section": "System",
    "Sourcefile": "main/system_factory.F90",
    "Testfiles": [
      "multisystem/05-propagation_beeman.02-three_body.inp",
      "multisystem/06-propagation_expmid.02-three_body.inp",
      "multisystem/09-illegal_system_names.04-white_space.inp",
      "multisystem/03-interactions_creation.03-case3.inp",
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/13-restart_verlet.01-restart-run-part1.inp",
      "multisystem/03-interactions_creation.01-case1.inp",
      "multisystem/05-propagation_beeman.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.01-two_body.inp",
      "multisystem/09-illegal_system_names.02-empty.inp",
      "multisystem/03-interactions_creation.02-case2.inp",
      "multisystem/14-lennard-jones.01-classical-particles-N2.inp",
      "multisystem/18-incompatible_timing.01-run.inp",
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/01-nested_systems.02-three_levels.inp",
      "multisystem/01-nested_systems.01-two_levels.inp",
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/06-propagation_expmid.05-two_body_verlet_half.inp",
      "multisystem/09-illegal_system_names.01-duplicated.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "multisystem/04-propagation_verlet.02-three_body.inp",
      "multisystem/10-dftbplus_verlet.01-water.inp",
      "multisystem/99-carbon_hydrogen.03-td_restart.inp",
      "multisystem/99-carbon_hydrogen.01-gs.inp",
      "multisystem/15-electronic_system_restart.04-td_restart_part2.inp",
      "multisystem/06-propagation_expmid.01-two_body.inp",
      "multisystem/08-coulomb_force.01-classical_helium.inp",
      "multisystem/01-nested_systems.03-four_levels.inp",
      "multisystem/09-illegal_system_names.03-illegal_character.inp",
      "multisystem/03-interactions_creation.04-case4.inp",
      "multisystem/13-restart_verlet.03-full-run.inp",
      "multisystem/16-bomd.02-td.inp",
      "multisystem/17-lasers.01-length_gauge.inp",
      "multisystem/06-propagation_expmid.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.04-three_body_different_time_steps.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/06-propagation_expmid.06-two_body_verlet.inp",
      "multisystem/05-propagation_beeman.03-two_body_different_time_steps.inp",
      "multisystem/07-lorentz-force.02-charged_particle_in_static_efield.inp",
      "multisystem/13-restart_verlet.02-restart-run-part2.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "multisystem/04-propagation_verlet.03-two_body_different_time_steps.inp",
      "multisystem/99-carbon_hydrogen.02-td.inp",
      "multisystem/05-propagation_beeman.01-two_body.inp",
      "multisystem/02-interaction_graph.01-three_body.inp",
      "multisystem/06-propagation_expmid.03-two_body_different_time_steps.inp",
      "components/34-regridding.01-samespacing-mixed.inp",
      "components/34-regridding.02-samespacing-parstates.inp",
      "components/34-regridding.07-spacing-ratio3-nearestneighbor-mixed.inp",
      "components/34-regridding.08-spacing-ratio3-nearestneighbor-parstates.inp",
      "components/34-regridding.03-samespacing-pardomains.inp",
      "components/34-regridding.05-spacing-ratio3-parstates.inp",
      "components/34-regridding.06-spacing-ratio3-pardomains.inp",
      "components/34-regridding.09-spacing-ratio3-nearestneighbor-pardomains.inp",
      "components/34-regridding.04-spacing-ratio3-mixed.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_restarted.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/12-tddft-currents-to-maxwell.01-benzene-gs.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/01-free-propagation.02-2_pulses_td.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "tddeltakicktime": {
    "CallLine": "call parse_variable(namespace, 'TDDeltaKickTime', M_ZERO, kick%time, units_inp%time)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "The delta-perturbation that can be applied by making use of the <tt>TDDeltaStrength</tt> variable,",
      "can be applied at the time given by this variable. Usually, this time is zero, since one wants",
      "to apply the delta pertubation or \"kick\" at a system at equilibrium, and no other time-dependent",
      "external potential is used. However, one may want to apply a kick on top of a laser field,",
      "for example."
    ],
    "LineNumber": 162,
    "Manuals": [],
    "Name": "TDDeltaKickTime",
    "Options": [],
    "Section": "Time-Dependent::Response",
    "Sourcefile": "hamiltonian/kick.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "tddeltastrength": {
    "CallLine": "call parse_variable(namespace, 'TDDeltaStrength', M_ZERO, kick%delta_strength, units_inp%length**(-1))",
    "Default": [
      "0"
    ],
    "Description": [
      "When no laser is applied, a delta (in time) perturbation with",
      "strength <tt>TDDeltaStrength</tt> can be applied. This is used to",
      "calculate, <i>e.g.</i>, the linear optical spectra. If the ions are",
      "allowed to move, the kick will affect them also.",
      "The electric field is <math>-(\\hbar k / e) \\delta(t)</math> for a dipole with",
      "zero wavevector, where <i>k</i> = <tt>TDDeltaStrength</tt>, which causes",
      "the wavefunctions instantaneously to acquire a phase <math>e^{ikx}</math>.",
      "The unit is inverse length."
    ],
    "LineNumber": 181,
    "Manuals": [],
    "Name": "TDDeltaStrength",
    "Options": [],
    "Section": "Time-Dependent::Response",
    "Sourcefile": "hamiltonian/kick.F90",
    "Testfiles": [
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/99-carbon_hydrogen.03-td_restart.inp",
      "multisystem/15-electronic_system_restart.04-td_restart_part2.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "multisystem/99-carbon_hydrogen.02-td.inp",
      "finite_systems_3d/14-fullerene_unpacked.02-td-unpacked.inp",
      "finite_systems_3d/06-restart.06-td_calc.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/14-fullerene_unpacked.03-td-packed.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/34-walltime.03-td_walltime.inp",
      "finite_systems_3d/34-walltime.04-restart_td.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/01-propagators.09-magnus.inp",
      "real_time/02-propagators.02-cnsparskit.inp",
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/01-propagators.07-caetrs.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/09-angular_momentum.03-td_icl.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/14-absorption-spinors.03-td-restart.inp",
      "real_time/21-scissor.02-td.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/01-propagators.11-cfmagnus4.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/13-absorption-spin.03-td-restart.inp",
      "real_time/14-absorption-spinors.02-td.inp",
      "real_time/09-angular_momentum.02-td_gipaw.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/01-propagators.08-cn.inp",
      "real_time/01-propagators.05-etrs_chebyshev.inp",
      "real_time/01-propagators.06-aetrs.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/01-propagators.03-etrs_taylor.inp",
      "real_time/03-td_self_consistent.02-etrs.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/01-propagators.02-expmid.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "real_time/01-propagators.10-exprk4.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "real_time/12-absorption.03-td-restart.inp",
      "real_time/02-propagators.04-rungekutta4.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "tddeltastrengthmode": {
    "CallLine": "call parse_variable(namespace, 'TDDeltaStrengthMode', KICK_DENSITY_MODE, kick%delta_strength_mode)",
    "Default": [
      "kick_density"
    ],
    "Description": [
      "When calculating the density response via real-time propagation,",
      "one needs to perform an initial kick on the KS system, at",
      "time zero. Depending on what kind of response property one wants to obtain,",
      "this kick may be done in several modes. For use to calculate triplet excitations,",
      "see MJT Oliveira, A Castro, MAL Marques, and A Rubio, <i>J. Nanoscience and Nanotechnology</i> <b>8</b>, 3392 (2008)."
    ],
    "LineNumber": 226,
    "Manuals": [],
    "Name": "TDDeltaStrengthMode",
    "Options": [
      {
        "Description": [
          "The total density of the system is perturbed. This mode is appropriate for",
          "electric dipole response, as for optical absorption."
        ],
        "Name": "kick_density",
        "Value": "0"
      },
      {
        "Description": [
          "The individual spin densities are perturbed oppositely. Note that this mode",
          "is only possible if the run is done in spin-polarized mode, or with spinors.",
          "This mode is appropriate for the paramagnetic dipole response, which can couple",
          "to triplet excitations."
        ],
        "Name": "kick_spin",
        "Value": "1"
      },
      {
        "Description": [
          "A combination of the two above. Note that this mode",
          "is only possible if the run is done in spin-polarized mode, or with spinors.",
          "This mode is intended for use with symmetries to obtain both of the responses",
          "at once, at described in the reference above."
        ],
        "Name": "kick_spin_and_density",
        "Value": "2"
      },
      {
        "Description": [
          "Rotates the magnetization. Only works for spinors.",
          "Can be used in a supercell or my making use of the generalized Bloch theorem.",
          "In the later case (see <tt>SpiralBoundaryConditions</tt>) spin-orbit coupling cannot be used."
        ],
        "Name": "kick_magnon",
        "Value": "3"
      }
    ],
    "Section": "Time-Dependent::Response",
    "Sourcefile": "hamiltonian/kick.F90",
    "Testfiles": [
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/21-magnon.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "tddeltauserdefined": {
    "CallLine": "call parse_variable(namespace, 'TDDeltaUserDefined', '0', kick%user_defined_function)",
    "Default": null,
    "Description": [
      "By default, the kick function will be a dipole. This will change if (1) the variable",
      "<tt>TDDeltaUserDefined</tt> is present in the inp file, or (2) if the block <tt>TDKickFunction</tt>",
      "is present in the <tt>inp</tt> file. If both are present in the <tt>inp</tt> file, the <tt>TDKickFunction</tt>",
      "block will be ignored. The value of <tt>TDDeltaUserDefined</tt> should be a string describing",
      "the function that is going to be used as delta perturbation."
    ],
    "LineNumber": 253,
    "Manuals": [],
    "Name": "TDDeltaUserDefined",
    "Options": [],
    "Section": "Time-Dependent::Response",
    "Sourcefile": "hamiltonian/kick.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "tddynamics": {
    "CallLine": "call parse_variable(namespace, 'TDDynamics', EHRENFEST, td%dynamics)",
    "Default": [
      "ehrenfest"
    ],
    "Description": [
      "Type of dynamics to follow during a time propagation.",
      "For BO, you must set <tt>MoveIons = yes</tt>."
    ],
    "LineNumber": 286,
    "Manuals": [],
    "Name": "TDDynamics",
    "Options": [
      {
        "Description": [
          "Ehrenfest dynamics."
        ],
        "Name": "ehrenfest",
        "Value": "1"
      },
      {
        "Description": [
          "Born-Oppenheimer (Experimental)."
        ],
        "Name": "bo",
        "Value": "2"
      }
    ],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "td/td.F90",
    "Testfiles": [
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "real_time/10-bomd.02-td.inp",
      "real_time/10-bomd.03-td_restart.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdeasyaxis": {
    "CallLine": "if (parse_block(namespace, 'TDEasyAxis', blk) == 0) then",
    "Default": null,
    "Description": [
      "For magnon kicks only.",
      "This variable defines the direction of the easy axis of the crystal.",
      "The magnetization is kicked in the plane transverse to this vector"
    ],
    "LineNumber": 535,
    "Manuals": [],
    "Name": "TDEasyAxis",
    "Options": [],
    "Section": "Time-Dependent::Response::Dipole",
    "Sourcefile": "hamiltonian/kick.F90",
    "Testfiles": [
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/21-magnon.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "tdenergyupdateiter": {
    "CallLine": "call parse_variable(namespace, 'TDEnergyUpdateIter', default, td%energy_update_iter)",
    "Default": null,
    "Description": [
      "This variable controls after how many iterations Octopus",
      "updates the total energy during a time-propagation run. For",
      "iterations where the energy is not updated, the last calculated",
      "value is reported. If you set this variable to 1, the energy",
      "will be calculated in each step."
    ],
    "LineNumber": 348,
    "Manuals": [],
    "Name": "TDEnergyUpdateIter",
    "Options": [],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "td/td.F90",
    "Testfiles": [
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/99-carbon_hydrogen.03-td_restart.inp",
      "multisystem/15-electronic_system_restart.04-td_restart_part2.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "multisystem/99-carbon_hydrogen.02-td.inp",
      "finite_systems_3d/14-fullerene_unpacked.02-td-unpacked.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/14-fullerene_unpacked.03-td-packed.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/05-time_propagation.04-td_domains_states-reorder_ranks.inp",
      "real_time/01-propagators.09-magnus.inp",
      "real_time/02-propagators.02-cnsparskit.inp",
      "real_time/05-time_propagation.06-td_fast_md.inp",
      "real_time/01-propagators.07-caetrs.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/09-angular_momentum.03-td_icl.inp",
      "real_time/05-time_propagation.03-td_domains_states.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/01-propagators.11-cfmagnus4.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/09-angular_momentum.02-td_gipaw.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/01-propagators.08-cn.inp",
      "real_time/01-propagators.05-etrs_chebyshev.inp",
      "real_time/01-propagators.06-aetrs.inp",
      "real_time/01-propagators.03-etrs_taylor.inp",
      "real_time/03-td_self_consistent.02-etrs.inp",
      "real_time/01-propagators.02-expmid.inp",
      "real_time/05-time_propagation.02-td_domains.inp",
      "real_time/01-propagators.10-exprk4.inp",
      "real_time/02-propagators.04-rungekutta4.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/08-velocities.01-ground_state.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdexcitedstatestoproject": {
    "CallLine": "if (parse_block(namespace, 'TDExcitedStatesToProject', blk) == 0) then",
    "Default": null,
    "Description": [
      "<b>[WARNING: This is a *very* experimental feature]</b>",
      "To be used with <tt>TDOutput = populations</tt>.",
      "The population of the excited states",
      "(as defined by <Phi_I|Phi(t)> where |Phi(t)> is the many-body time-dependent state at",
      "time <i>t</i>, and |Phi_I> is the excited state of interest) can be approximated -- it is not clear",
      "how well -- by substituting for those real many-body states the time-dependent Kohn-Sham",
      "determinant and some modification of the Kohn-Sham ground-state determinant (<i>e.g.</i>,",
      "a simple HOMO-LUMO substitution, or the Casida ansatz for excited states in linear-response",
      "theory. If you set <tt>TDOutput</tt> to contain <tt>populations</tt>, you may ask for these approximated",
      "populations for a number of excited states, which will be described in the files specified",
      "in this block: each line should be the name of a file that contains one excited state.",
      " ",
      "This file structure is the one written by the casida run mode, in the files in the directory <tt>*_excitations</tt>.",
      "The file describes the \"promotions\" from occupied",
      "to unoccupied levels that change the initial Slater determinant",
      "structure specified in ground_state. These promotions are a set",
      "of electron-hole pairs. Each line in the file, after an optional header, has four",
      "columns:",
      " ",
      "<i>i  a  <math>\\sigma</math> weight</i>",
      " ",
      "where <i>i</i> should be an occupied state, <i>a</i> an unoccupied one, and <math>\\sigma</math>",
      "the spin of the corresponding orbital. This pair is then associated with a",
      "creation-annihilation pair <math>a^{\\dagger}_{a,\\sigma} a_{i,\\sigma}</math>, so that the",
      "excited state will be a linear combination in the form:",
      " ",
      "<math>\\left|{\\rm ExcitedState}\\right> =",
      "\\sum weight(i,a,\\sigma) a^{\\dagger}_{a,\\sigma} a_{i,\\sigma} \\left|{\\rm GroundState}\\right></math>",
      " ",
      "where <i>weight</i> is the number in the fourth column.",
      "These weights should be normalized to one; otherwise the routine",
      "will normalize them, and write a warning."
    ],
    "LineNumber": 691,
    "Manuals": [],
    "Name": "TDExcitedStatesToProject",
    "Options": [],
    "Section": "Time-Dependent::TD Output",
    "Sourcefile": "td/td_write.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "tdexponentialmethod": {
    "CallLine": "call parse_variable(namespace, 'TDExponentialMethod', EXP_TAYLOR, te%exp_method)",
    "Default": [
      "taylor"
    ],
    "Description": [
      "Method used to numerically calculate the exponential of the Hamiltonian,",
      "a core part of the full algorithm used to approximate the evolution",
      "operator, specified through the variable <tt>TDPropagator</tt>.",
      "In the case of using the Magnus method, described below, the action of the exponential",
      "of the Magnus operator is also calculated through the algorithm specified",
      "by this variable."
    ],
    "LineNumber": 134,
    "Manuals": [],
    "Name": "TDExponentialMethod",
    "Options": [
      {
        "Description": [
          "Allows for larger time-steps.",
          "However, the larger the time-step, the longer the computational time per time-step.",
          "In certain cases, if the time-step is too large, the code will emit a warning",
          "whenever it considers that the evolution may not be properly proceeding --",
          "the Lanczos process did not converge. The method consists in a Krylov",
          "subspace approximation of the action of the exponential",
          "(see M. Hochbruck and C. Lubich, <i>SIAM J. Numer. Anal.</i> <b>34</b>, 1911 (1997) for details).",
          "Two more variables control the performance of the method: the maximum dimension",
          "of this subspace (controlled by variable <tt>TDExpOrder</tt>), and",
          "the stopping criterion (controlled by variable <tt>TDLanczosTol</tt>).",
          "The smaller the stopping criterion, the more precisely the exponential",
          "is calculated, but also the larger the dimension of the Arnoldi",
          "subspace. If the maximum dimension allowed by <tt>TDExpOrder</tt> is not",
          "enough to meet the criterion, the above-mentioned warning is emitted."
        ],
        "Name": "lanczos",
        "Value": "2"
      },
      {
        "Description": [
          "This method amounts to a straightforward application of the definition of",
          "the exponential of an operator, in terms of its Taylor expansion.",
          " ",
          "<math>\\exp_{\\rm STD} (-i\\delta t H) = \\sum_{i=0}^{k} {(-i\\delta t)^i\\over{i!}} H^i.</math>",
          " ",
          "The order <i>k</i> is determined by variable <tt>TDExpOrder</tt>.",
          "Some numerical considerations from <a href=http://www.phys.washington.edu/~bertsch/num3.ps>",
          "Jeff Giansiracusa and George F. Bertsch</a>",
          "suggest the 4th order as especially suitable and stable."
        ],
        "Name": "taylor",
        "Value": "3"
      },
      {
        "Description": [
          "In principle, the Chebyshev expansion",
          "of the exponential represents it more accurately than the canonical or standard expansion.",
          "As in the latter case, <tt>TDExpOrder</tt> determines the order of the expansion.",
          " ",
          "There exists a closed analytic form for the coefficients of the exponential in terms",
          "of Chebyshev polynomials:",
          " ",
          "<math>\\exp_{\\rm CHEB} \\left( -i\\delta t H \\right) = \\sum_{k=0}^{\\infty} (2-\\delta_{k0})(-i)^{k}J_k(\\delta t) T_k(H),</math>",
          " ",
          "where <math>J_k</math> are the Bessel functions of the first kind, and H has to be previously",
          "scaled to <math>[-1,1]</math>.",
          "See H. Tal-Ezer and R. Kosloff, <i>J. Chem. Phys.</i> <b>81</b>,",
          "3967 (1984); R. Kosloff, <i>Annu. Rev. Phys. Chem.</i> <b>45</b>, 145 (1994);",
          "C. W. Clenshaw, <i>MTAC</i> <b>9</b>, 118 (1955)."
        ],
        "Name": "chebyshev",
        "Value": "4"
      }
    ],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "electrons/exponential.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/01-propagators.05-etrs_chebyshev.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/06-laser.03-velocity_gauge.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdexporder": {
    "CallLine": "call parse_variable(namespace, 'TDExpOrder', DEFAULT__TDEXPORDER, te%exp_order)",
    "Default": [
      "4"
    ],
    "Description": [
      "For <tt>TDExponentialMethod</tt> = <tt>standard</tt> or <tt>chebyshev</tt>,",
      "the order to which the exponential is expanded. For the Lanczos approximation,",
      "it is the Lanczos-subspace dimension."
    ],
    "LineNumber": 169,
    "Manuals": [],
    "Name": "TDExpOrder",
    "Options": [],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "electrons/exponential.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_3d/40-evo.02-par_states.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/40-evo.01-par_domains.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/06-laser.03-velocity_gauge.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdexternalfields": {
    "CallLine": "if (parse_block(this%namespace, 'TDExternalFields', blk) == 0) then",
    "Default": null,
    "Description": [
      "The block <tt>TDExternalFields</tt> describes the type and shape of time-dependent",
      "external perturbations that are applied to the system, in the form",
      "<math>f(x,y,z) \\cos(\\omega t + \\phi (t)) g(t)</math>, where <math>f(x,y,z)</math> is defined by",
      "by a field type and polarization or a scalar potential, as below; <math>\\omega</math>",
      "is defined by <tt>omega</tt>; <math>g(t)</math> is defined by",
      "<tt>envelope_function_name</tt>; and <math>\\phi(t)</math> is the (time-dependent) phase from <tt>phase</tt>.",
      " ",
      "These perturbations are only applied for time-dependent runs. If",
      "you want the value of the perturbation at time zero to be",
      "applied for time-independent runs, use <tt>TimeZero = yes</tt>.",
      " ",
      "Each line of the block describes an external field; this way you can actually have more",
      "than one laser (<i>e.g.</i> a \"pump\" and a \"probe\").",
      " ",
      "There are two ways to specify <math>f(x,y,z)</math> but both use the same <tt>omega | envelope_function_name [| phase]</tt>",
      "for the time-dependence.",
      "The float <tt>omega</tt> will be the carrier frequency of the",
      "pulse (in energy units). The envelope of the field is a time-dependent function whose definition",
      "must be given in a <tt>TDFunctions</tt> block. <tt>envelope_function_name</tt> is a string (and therefore",
      "it must be surrounded by quotation marks) that must match one of the function names",
      "given in the first column of the <tt>TDFunctions</tt> block.",
      "<tt>phase</tt> is optional and is taken to be zero if not provided, and is also a string specifying",
      "a time-dependent function.",
      " ",
      "(A) type = <tt>electric field, magnetic field, vector_potential</tt>",
      " ",
      "For these cases, the syntax is:",
      " ",
      "<tt>%TDExternalFields",
      "<br>&nbsp;&nbsp; type | nx | ny | nz | omega | envelope_function_name | phase",
      "<br>%</tt>",
      " ",
      "The <tt>vector_potential</tt> option (constant in space) permits us to describe",
      "an electric perturbation in the velocity gauge.",
      "The three (possibly complex) numbers (<tt>nx</tt>, <tt>ny</tt>, <tt>nz</tt>) mark the polarization",
      "direction of the field.",
      "By default, (<tt>nx</tt>, <tt>ny</tt>, <tt>nz</tt>) are defined in Cartesian space.",
      "However, it is possible for solids to define them using the Miller indices.",
      "This can be achieved by defining the block <tt>MillerIndicesBasis</tt>.",
      " ",
      "(B) type = <tt>scalar_potential</tt>",
      " ",
      "<tt>%TDExternalFields",
      "<br>&nbsp;&nbsp; scalar_potential | \"spatial_expression\" | omega | envelope_function_name | phase",
      "<br>%</tt>",
      " ",
      "The scalar potential is any expression of the spatial coordinates given by the string",
      "\"spatial_expression\", allowing a field beyond the dipole approximation.",
      " ",
      "For DFTB runs, only fields of type type = <tt>electric field</tt> are allowed for the moment, and the",
      "<tt>type</tt> keyword is omitted.",
      " ",
      "A NOTE ON UNITS:",
      " ",
      "It is very common to describe the strength of a laser field by its intensity, rather",
      "than using the electric-field amplitude. In atomic units (or, more precisely, in any",
      "Gaussian system of units), the relationship between instantaneous electric field",
      "and intensity is:",
      "<math> I(t) = \\frac{c}{8\\pi} E^2(t) </math>.",
      " ",
      "It is common to read intensities in W/cm<math>^2</math>. The dimensions of intensities are",
      "[W]/(L<math>^2</math>T), where [W] are the dimensions of energy. The relevant conversion factors",
      "are:",
      " ",
      "Hartree / (<math>a_0^2</math> atomic_time) = <math>6.4364086 \\times 10^{15} \\mathrm{W/cm}^2</math>",
      " ",
      "eV / ( &Aring;<math>^2 (\\hbar</math>/eV) ) = <math>2.4341348 \\times 10^{12} \\mathrm{W/cm}^2</math>",
      " ",
      "If, in atomic units, we set the electric-field amplitude to <math>E_0</math>,",
      "then the intensity is:",
      " ",
      "<math> I_0 = 3.51 \\times 10^{16} \\mathrm{W/cm}^2 (E_0^2) </math>",
      " ",
      "If, working with <tt>Units = ev_angstrom</tt>, we set <math>E_0</math>, then the intensity is:",
      " ",
      "<math> I_0 = 1.327 \\times 10^{13} (E_0^2) \\mathrm{W/cm}^2 </math>",
      " "
    ],
    "LineNumber": 248,
    "Manuals": [],
    "Name": "TDExternalFields",
    "Options": [
      {
        "Description": [
          "The external field is an electric field, the usual case when we want to describe a",
          "laser in the length gauge."
        ],
        "Name": "electric_field",
        "Value": "1"
      },
      {
        "Description": [
          "The external field is a (homogeneous) time-dependent magnetic field."
        ],
        "Name": "magnetic_field",
        "Value": "2"
      },
      {
        "Description": [
          "The external field is a time-dependent homogeneous vector potential, which may describe",
          "a laser field in the velocity gauge."
        ],
        "Name": "vector_potential",
        "Value": "3"
      },
      {
        "Description": [
          "The external field is an arbitrary scalar potential, which may describe an",
          "inhomogeneous electrical field."
        ],
        "Name": "scalar_potential",
        "Value": "4"
      }
    ],
    "Section": "Time-Dependent",
    "Sourcefile": "hamiltonian/lasers.F90",
    "Testfiles": [
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "multisystem/17-lasers.01-length_gauge.inp",
      "real_time/18-hhg.01-gs.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/22-td_move_ions_periodic.02-td.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.03-td_laser.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "finite_systems_1d/04-lithium.02-absorbing_boundaries.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/06-laser.03-velocity_gauge.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "tdfloquetdimension": {
    "CallLine": "call parse_variable(namespace, 'TDFloquetDimension',-1,Forder)",
    "Default": [
      "-1"
    ],
    "Description": [
      "Order of Floquet Hamiltonian. If negative number is given, downfolding is performed."
    ],
    "LineNumber": 2732,
    "Manuals": [],
    "Name": "TDFloquetDimension",
    "Options": [],
    "Section": "Time-Dependent::TD Output",
    "Sourcefile": "td/td_write.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdfloquetfrequency": {
    "CallLine": "call parse_variable(namespace, 'TDFloquetFrequency', M_ZERO, omega, units_inp%energy)",
    "Default": [
      "0"
    ],
    "Description": [
      "Frequency for the Floquet analysis, this should be the carrier frequency or integer multiples of it.",
      "Other options will work, but likely be nonsense.",
      " "
    ],
    "LineNumber": 2703,
    "Manuals": [],
    "Name": "TDFloquetFrequency",
    "Options": [],
    "Section": "Time-Dependent::TD Output",
    "Sourcefile": "td/td_write.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "tdfloquetsample": {
    "CallLine": "call parse_variable(namespace, 'TDFloquetSample',20 ,nt)",
    "Default": [
      "20"
    ],
    "Description": [
      "Number of points on which one Floquet cycle is sampled in the time-integral of the Floquet analysis.",
      " "
    ],
    "LineNumber": 2721,
    "Manuals": [],
    "Name": "TDFloquetSample",
    "Options": [],
    "Section": "Time-Dependent::TD Output",
    "Sourcefile": "td/td_write.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdfreezedftuoccupations": {
    "CallLine": "call parse_variable(namespace, 'TDFreezeDFTUOccupations', .false., freeze_occ)",
    "Default": [
      "no"
    ],
    "Description": [
      "The occupation matrices than enters in the DFT+U potential",
      "are not evolved during the time evolution."
    ],
    "LineNumber": 881,
    "Manuals": [],
    "Name": "TDFreezeDFTUOccupations",
    "Options": [],
    "Section": "Time-Dependent",
    "Sourcefile": "td/td.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "tdfreezehxc": {
    "CallLine": "call parse_variable(namespace, 'TDFreezeHXC', .false., freeze_hxc)",
    "Default": [
      "no"
    ],
    "Description": [
      "The electrons are evolved as independent particles feeling the Hartree and",
      "exchange-correlation potentials from the ground-state electronic configuration."
    ],
    "LineNumber": 838,
    "Manuals": [],
    "Name": "TDFreezeHXC",
    "Options": [],
    "Section": "Time-Dependent",
    "Sourcefile": "td/td.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "tdfreezeorbitals": {
    "CallLine": "call parse_variable(namespace, 'TDFreezeOrbitals', 0, td%freeze_orbitals)",
    "Default": [
      "0"
    ],
    "Description": [
      "(Experimental) You have the possibility of \"freezing\" a number of orbitals during a time-propagation.",
      "The Hartree and exchange-correlation potential due to these orbitals (which",
      "will be the lowest-energy ones) will be added during the propagation, but the orbitals",
      "will not be propagated."
    ],
    "LineNumber": 383,
    "Manuals": [],
    "Name": "TDFreezeOrbitals",
    "Options": [
      {
        "Description": [
          "Single-active-electron approximation. This option is only valid for time-dependent",
          "calculations (<tt>CalculationMode = td</tt>). Also, the nuclei should not move.",
          "The idea is that all orbitals except the last one are frozen. The orbitals are to",
          "be read from a previous ground-state calculation. The active orbital is then treated",
          "as independent (whether it contains one electron or two) -- although it will",
          "feel the Hartree and exchange-correlation potentials from the ground-state electronic",
          "configuration.",
          " ",
          "It is almost equivalent to setting <tt>TDFreezeOrbitals = N-1</tt>, where <tt>N</tt> is the number",
          "of orbitals, but not completely."
        ],
        "Name": "sae",
        "Value": "-1"
      }
    ],
    "Section": "Time-Dependent",
    "Sourcefile": "td/td.F90",
    "Testfiles": [
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdfreezeu": {
    "CallLine": "call parse_variable(namespace, 'TDFreezeU', .false., freeze_u)",
    "Default": [
      "no"
    ],
    "Description": [
      "The effective U of DFT+U is not evolved during the time evolution."
    ],
    "LineNumber": 902,
    "Manuals": [],
    "Name": "TDFreezeU",
    "Options": [],
    "Section": "Time-Dependent",
    "Sourcefile": "td/td.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "tdfunctions": {
    "CallLine": "if (parse_block(namespace, 'TDFunctions', blk) /= 0) then",
    "Default": null,
    "Description": [
      "This block specifies the shape of a \"time-dependent function\", such as the",
      "envelope needed when using the <tt>TDExternalFields</tt> block. Each line in the block",
      "specifies one function. The first element of each line will be a string",
      "that defines the name of the function. The second element specifies which type",
      "of function we are using; in the following we provide an example for each of the",
      "possible types:",
      " "
    ],
    "LineNumber": 208,
    "Manuals": [],
    "Name": "TDFunctions",
    "Options": [
      {
        "Description": [
          " ",
          "<tt>%TDFunctions",
          "<br>&nbsp;&nbsp; \"function-name\" | tdf_cw | amplitude",
          "<br>%</tt>",
          " ",
          "The function is just a constant of value <tt>amplitude</tt>: <math> f(t) </math> = amplitude",
          " "
        ],
        "Name": "tdf_cw",
        "Value": "10002"
      },
      {
        "Description": [
          " ",
          "<tt>%TDFunctions",
          "<br>&nbsp;&nbsp; \"function-name\" | tdf_gaussian | amplitude | tau0 | t0",
          "<br>%</tt>",
          " ",
          "The function is a Gaussian, <math> f(t) = F_0 \\exp( - (t-t_0)^2/(2\\tau_0^2) ) </math>,",
          "where <math>F_0</math> = amplitude.",
          " "
        ],
        "Name": "tdf_gaussian",
        "Value": "10003"
      },
      {
        "Description": [
          " ",
          "<tt>%TDFunctions",
          "<br>&nbsp;&nbsp; \"function-name\" | tdf_cosinoidal | amplitude | tau0 | t0",
          "<br>%</tt>",
          " ",
          "<math> f(t) =  F_0 \\cos( \\frac{\\pi}{2} \\frac{t-2\\tau_0-t_0}{\\tau0} )  </math>",
          " ",
          "If <math> | t - t_0 | > \\tau_0 </math>, then <math> f(t) = 0 </math>.",
          " "
        ],
        "Name": "tdf_cosinoidal",
        "Value": "10004"
      },
      {
        "Description": [
          " ",
          "<tt>%TDFunctions",
          "<br>&nbsp;&nbsp; \"function-name\" | tdf_trapezoidal | amplitude | tau0 | t0 | tau1",
          "<br>%</tt>",
          " ",
          "This function is a trapezoidal centered around <tt>t0</tt>. The",
          "shape is determined by <tt>tau0</tt> and <tt>tau1</tt>. The",
          "function ramps linearly for <tt>tau1</tt> time units, stays",
          "constant for <tt>tau0</tt> time units, and then decays to zero",
          "linearly again for <tt>tau1</tt> time units.",
          " "
        ],
        "Name": "tdf_trapezoidal",
        "Value": "10005"
      },
      {
        "Description": [
          " ",
          "<tt>%TDFunctions",
          "<br>&nbsp;&nbsp; \"function-name\" | tdf_from_file | \"filename\"",
          "<br>%</tt>",
          " ",
          "The temporal shape of the function is contained in a file called <tt>filename</tt>. This file",
          "should contain three columns: first column is time, second and third column are the",
          "real part and the imaginary part of the temporal function <i>f</i>(<i>t</i>).",
          " "
        ],
        "Name": "tdf_from_file",
        "Value": "10006"
      },
      {
        "Description": [
          " ",
          "<tt>%TDFunctions",
          "<br>&nbsp;&nbsp; \"function-name\" | tdf_from_expr | \"expression\"",
          "<br>%</tt>",
          " ",
          "The temporal shape of the field is given as an expression (e.g., <tt>cos(2.0*t)</tt>. The",
          "letter <i>t</i> means time, obviously. The expression is used to construct the function <i>f</i>",
          "that defines the field."
        ],
        "Name": "tdf_from_expr",
        "Value": "10008"
      }
    ],
    "Section": "Time-Dependent",
    "Sourcefile": "math/tdfunction.F90",
    "Testfiles": [
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "multisystem/17-lasers.01-length_gauge.inp",
      "real_time/18-hhg.01-gs.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/22-td_move_ions_periodic.02-td.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.03-td_laser.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "finite_systems_1d/04-lithium.02-absorbing_boundaries.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/06-laser.03-velocity_gauge.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "tdglobalforce": {
    "CallLine": "call parse_variable(namespace, 'TDGlobalForce', 'none', function_name)",
    "Default": null,
    "Description": [
      "If this variable is set, a global time-dependent force will be",
      "applied to the ions in the x direction during a time-dependent",
      "run. This variable defines the base name of the force, that",
      "should be defined in the <tt>TDFunctions</tt> block. This force",
      "does not affect the electrons directly."
    ],
    "LineNumber": 287,
    "Manuals": [],
    "Name": "TDGlobalForce",
    "Options": [],
    "Section": "Time-Dependent",
    "Sourcefile": "ions/ions.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "tdionictimescale": {
    "CallLine": "call parse_variable(namespace, 'TDIonicTimeScale', M_ONE, this%ionic_scale)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "This variable defines the factor between the timescale of ionic",
      "and electronic movement. It allows reasonably fast",
      "Born-Oppenheimer molecular-dynamics simulations based on",
      "Ehrenfest dynamics. The value of this variable is equivalent to",
      "the role of <math>\\mu</math> in Car-Parrinello. Increasing it",
      "linearly accelerates the time step of the ion",
      "dynamics, but also increases the deviation of the system from the",
      "Born-Oppenheimer surface. The default is 1, which means that both",
      "timescales are the same. Note that a value different than 1",
      "implies that the electrons will not follow physical behaviour.",
      " ",
      "According to our tests, values around 10 are reasonable, but it",
      "will depend on your system, mainly on the width of the gap.",
      " ",
      "Important: The electronic time step will be the value of",
      "<tt>TDTimeStep</tt> divided by this variable, so if you have determined an",
      "optimal electronic time step (that we can call <i>dte</i>), it is",
      "recommended that you define your time step as:",
      " ",
      "<tt>TDTimeStep</tt> = <i>dte</i> * <tt>TDIonicTimeScale</tt>",
      " ",
      "so you will always use the optimal electronic time step",
      "(<a href=http://arxiv.org/abs/0710.3321>more details</a>)."
    ],
    "LineNumber": 169,
    "Manuals": [],
    "Name": "TDIonicTimeScale",
    "Options": [],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "ions/ion_dynamics.F90",
    "Testfiles": [
      "real_time/05-time_propagation.06-td_fast_md.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "tdkickfunction": {
    "CallLine": "else if (parse_block(namespace, 'TDKickFunction', blk) == 0) then",
    "Default": null,
    "Description": [
      "If the block <tt>TDKickFunction</tt> is present in the input file, and the variable",
      "<tt>TDDeltaUserDefined</tt> is not present in the input file, the kick function to",
      "be applied at time zero of the time-propagation will not be a \"dipole\" function",
      "(<i>i.e.</i> <math>\\phi \\rightarrow e^{ikx} \\phi</math>, but a general multipole in the form <math>r^l Y_{lm}(r)</math>.",
      " ",
      "Each line has three columns: integers <i>l</i> and <i>m</i> that defines the",
      "multipole, and a weight. Any number of lines may be given, and the kick will be the sum of those",
      "multipoles with the given weights.",
      " ",
      "This feature allows calculation of quadrupole, octupole, etc., response functions."
    ],
    "LineNumber": 270,
    "Manuals": [],
    "Name": "TDKickFunction",
    "Options": [],
    "Section": "Time-Dependent::Response",
    "Sourcefile": "hamiltonian/kick.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "tdlanczostol": {
    "CallLine": "call parse_variable(namespace, 'TDLanczosTol', 1e-5_real64, te%lanczos_tol)",
    "Default": [
      "1e-5"
    ],
    "Description": [
      "An internal tolerance variable for the Lanczos method. The smaller, the more",
      "precisely the exponential is calculated, and also the bigger the dimension",
      "of the Krylov subspace needed to perform the algorithm. One should carefully",
      "make sure that this value is not too big, or else the evolution will be",
      "wrong."
    ],
    "LineNumber": 151,
    "Manuals": [],
    "Name": "TDLanczosTol",
    "Options": [],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "electrons/exponential.F90",
    "Testfiles": [
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "tdmaxsteps": {
    "CallLine": "call parse_variable(namespace, 'TDMaxSteps', default, td%max_iter)",
    "Default": [
      "1500"
    ],
    "Description": [
      "Number of time-propagation steps that will be performed. You",
      "cannot use this variable together with <tt>TDPropagationTime</tt>."
    ],
    "LineNumber": 250,
    "Manuals": [],
    "Name": "TDMaxSteps",
    "Options": [],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "td/td.F90",
    "Testfiles": [
      "multisystem/99-carbon_hydrogen.03-td_restart.inp",
      "multisystem/99-carbon_hydrogen.02-td.inp",
      "finite_systems_3d/14-fullerene_unpacked.02-td-unpacked.inp",
      "finite_systems_3d/06-restart.06-td_calc.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/14-fullerene_unpacked.03-td-packed.inp",
      "finite_systems_3d/06-restart.07-restart_td_calc.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/34-walltime.03-td_walltime.inp",
      "finite_systems_3d/34-walltime.04-restart_td.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/10-bomd.02-td.inp",
      "real_time/05-time_propagation.04-td_domains_states-reorder_ranks.inp",
      "real_time/01-propagators.09-magnus.inp",
      "real_time/02-propagators.02-cnsparskit.inp",
      "real_time/05-time_propagation.06-td_fast_md.inp",
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/10-bomd.03-td_restart.inp",
      "real_time/01-propagators.07-caetrs.inp",
      "real_time/19-td_move_ions.03-td_restart.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/09-angular_momentum.03-td_icl.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp",
      "real_time/05-time_propagation.03-td_domains_states.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/14-absorption-spinors.03-td-restart.inp",
      "real_time/21-scissor.02-td.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/01-propagators.11-cfmagnus4.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/13-absorption-spin.03-td-restart.inp",
      "real_time/14-absorption-spinors.02-td.inp",
      "real_time/09-angular_momentum.02-td_gipaw.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/01-propagators.08-cn.inp",
      "real_time/01-propagators.05-etrs_chebyshev.inp",
      "real_time/01-propagators.06-aetrs.inp",
      "real_time/05-time_propagation.05-td_md.inp",
      "real_time/19-td_move_ions.02-td.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/01-propagators.03-etrs_taylor.inp",
      "real_time/03-td_self_consistent.02-etrs.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/01-propagators.02-expmid.inp",
      "real_time/05-time_propagation.02-td_domains.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "real_time/01-propagators.10-exprk4.inp",
      "real_time/22-td_move_ions_periodic.02-td.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "real_time/12-absorption.03-td-restart.inp",
      "real_time/02-propagators.04-rungekutta4.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/02-restart.01-ba.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.02-td.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.03-td_laser.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "finite_systems_1d/02-neon_mpi.03-td_calc-kli_par_states.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdmomentumtransfer": {
    "CallLine": "else if (parse_block(namespace, 'TDMomentumTransfer', blk) == 0) then",
    "Default": null,
    "Description": [
      "Momentum-transfer vector for the calculation of the dynamic structure factor.",
      "When this variable is set, a non-dipole field is applied, and an output file",
      "<tt>ftchd</tt> is created (it contains the Fourier transform of the charge density",
      "at each time). The type of the applied external field can be set by",
      "an optional last number. Possible options are <tt>qexp</tt> (default), <tt>qcos</tt>,",
      "<tt>qsin</tt>, or <tt>qcos+qsin</tt>. In the formulae below,",
      "<math>\\vec{q}</math> is the momentum-transfer vector."
    ],
    "LineNumber": 478,
    "Manuals": [],
    "Name": "TDMomentumTransfer",
    "Options": [
      {
        "Description": [
          "External field is <math>e^{i \\vec{q} \\cdot \\vec{r}}</math>."
        ],
        "Name": "qexp",
        "Value": "1"
      },
      {
        "Description": [
          "External field is <math>\\cos \\left( i \\vec{q} \\cdot \\vec{r} \\right)</math>."
        ],
        "Name": "qcos",
        "Value": "2"
      },
      {
        "Description": [
          "External field is <math>\\sin \\left( i \\vec{q} \\cdot \\vec{r} \\right)</math>."
        ],
        "Name": "qsin",
        "Value": "3"
      },
      {
        "Description": [
          "External field is <math>j_l \\left( \\vec{q} \\cdot \\vec{r} \\right) Y_{lm} \\left(\\vec{r} \\right)</math>.",
          "In this case, the block has to include two extra values (<i>l</i> and <i>m</i>)."
        ],
        "Name": "qbessel",
        "Value": "4"
      }
    ],
    "Section": "Time-Dependent::Response",
    "Sourcefile": "hamiltonian/kick.F90",
    "Testfiles": [
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/21-magnon.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "tdmultiplemomentumtransfer": {
    "CallLine": "if (parse_block(namespace, 'TDMultipleMomentumTransfer', blk) /= 0) then",
    "Default": null,
    "Description": [
      "For magnon kicks only.",
      "A simple way to specify momentum-transfer vectors for the calculation of",
      "the magnetization dynamics. This variable should be used for a supercell.",
      "For each reciprocal lattice vectors, the code will kick the original magnetization",
      "using all the multiples of it.",
      "The syntax reads:",
      " ",
      "<tt>%TDMultipleMomentumTransfer",
      "<br>&nbsp;&nbsp;N_x | N_y | N_z",
      "<br>%</tt>",
      " ",
      "and will include the (2N_x+1)*(2N_y+1)*(2N_z+1) multiples vectors of the reciprocal",
      "lattice vectors of the current cell."
    ],
    "LineNumber": 602,
    "Manuals": [],
    "Name": "TDMultipleMomentumTransfer",
    "Options": [],
    "Section": "Time-Dependent::Response",
    "Sourcefile": "hamiltonian/kick.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "tdmultipolelmax": {
    "CallLine": "call parse_variable(namespace, 'TDMultipoleLmax', 1, writ%lmax)",
    "Default": [
      "1"
    ],
    "Description": [
      "Maximum electric multipole of the density output to the file <tt>td.general/multipoles</tt>",
      "during a time-dependent simulation. Must be non-negative."
    ],
    "LineNumber": 519,
    "Manuals": [],
    "Name": "TDMultipoleLmax",
    "Options": [],
    "Section": "Time-Dependent::TD Output",
    "Sourcefile": "td/td_write.F90",
    "Testfiles": [
      "multisystem/16-bomd.02-td.inp",
      "real_time/10-bomd.02-td.inp",
      "real_time/10-bomd.03-td_restart.inp",
      "real_time/09-angular_momentum.02-td_gipaw.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdoutput": {
    "Default": [
      "multipoles",
      "+",
      "energy",
      "(+",
      "others",
      "depending",
      "on",
      "other",
      "options)"
    ],
    "Description": [
      "Defines what should be output during the time-dependent",
      "simulation. Many of the options can increase the computational",
      "cost of the simulation, so only use the ones that you need. In",
      "most cases the default value is enough, as it is adapted to the",
      "details of the TD run. If the ions are allowed to be moved, additionally",
      "the geometry and the temperature are output. If a laser is",
      "included it will output by default.",
      " ",
      "Note: the output files generated by this option are updated",
      "every <tt>RestartWriteInterval</tt> steps.",
      " ",
      "Example:",
      "<br><br><tt>%TDOutput",
      "<br>&nbsp;&nbsp;multipoles",
      "<br>&nbsp;&nbsp;energy",
      "<br>%<br></tt>",
      " "
    ],
    "Manuals": [],
    "Name": "TDOutput",
    "Options": [
      {
        "Description": [
          "Outputs the (electric) multipole moments of the density to the file <tt>td.general/multipoles</tt>.",
          "This is required to, <i>e.g.</i>, calculate optical absorption spectra of finite systems. The",
          "maximum value of <math>l</math> can be set with the variable <tt>TDMultipoleLmax</tt>."
        ],
        "Name": "multipoles",
        "Value": "1"
      },
      {
        "Description": [
          "Outputs the orbital angular momentum of the system to <tt>td.general/angular</tt>, which can be used to calculate circular",
          "dichroism."
        ],
        "Name": "angular",
        "Value": "2"
      },
      {
        "Description": [
          "(Experimental) Outputs the expectation value of the spin, which can be used to calculate magnetic",
          "circular dichroism."
        ],
        "Name": "spin",
        "Value": "3"
      },
      {
        "Description": [
          "(Experimental) Outputs the projection of the time-dependent",
          "Kohn-Sham Slater determinant onto the ground state (or",
          "approximations to the excited states) to the file",
          "<tt>td.general/populations</tt>. Note that the calculation of",
          "populations is expensive in memory and computer time, so it",
          "should only be used if it is really needed. See <tt>TDExcitedStatesToProject</tt>."
        ],
        "Name": "populations",
        "Value": "4"
      },
      {
        "Description": [
          "If set (and if the atoms are allowed to move), outputs the coordinates, velocities,",
          "and forces of the atoms to the the file <tt>td.general/coordinates</tt>. On by default if <tt>MoveIons = yes</tt>."
        ],
        "Name": "geometry",
        "Value": "5"
      },
      {
        "Description": [
          "When set, outputs the acceleration of the electronic dipole, calculated from the Ehrenfest theorem,",
          "in the file <tt>td.general/acceleration</tt>. This file can then be",
          "processed by the utility <tt>oct-harmonic-spectrum</tt> in order to obtain the harmonic spectrum."
        ],
        "Name": "dipole_acceleration",
        "Value": "6"
      },
      {
        "Description": [
          "If set, outputs the laser field to the file <tt>td.general/laser</tt>.",
          "On by default if <tt>TDExternalFields</tt> is set."
        ],
        "Name": "laser",
        "Value": "7"
      },
      {
        "Description": [
          "If set, <tt>octopus</tt> outputs the different components of the energy",
          "to the file <tt>td.general/energy</tt>. Will be zero except for every <tt>TDEnergyUpdateIter</tt> iterations."
        ],
        "Name": "energy",
        "Value": "8"
      },
      {
        "Description": [
          "(Experimental) If set, outputs the projections of the",
          "time-dependent Kohn-Sham wavefunctions onto the static",
          "(zero-time) wavefunctions to the file",
          "<tt>td.general/projections.XXX</tt>. Only use this option if",
          "you really need it, as it might be computationally expensive. See <tt>TDProjStateStart</tt>.",
          "The output interval of this quantity is controled by the variable <tt>TDOutputComputeInterval</tt>",
          "In case of states parallelization, all the ground-state states are stored by each task."
        ],
        "Name": "td_occup",
        "Value": "9"
      },
      {
        "Description": [
          "If set, outputs the local magnetic moments, integrated in sphere centered around each atom.",
          "The radius of the sphere can be set with <tt>LocalMagneticMomentsSphereRadius</tt>."
        ],
        "Name": "local_mag_moments",
        "Value": "10"
      },
      {
        "Description": [
          "If set, outputs the vector gauge field corresponding to a spatially uniform (but time-dependent)",
          "external electrical potential. This is only useful in a time-dependent periodic run.",
          "On by default if <tt>GaugeVectorField</tt> is set."
        ],
        "Name": "gauge_field",
        "Value": "11"
      },
      {
        "Description": [
          "If set, the ionic temperature at each step is printed. On by default if <tt>MoveIons = yes</tt>."
        ],
        "Name": "temperature",
        "Value": "12"
      },
      {
        "Description": [
          "Write Fourier transform of the electron density to the file <tt>ftchd.X</tt>,",
          "where X depends on the kick (e.g. with sin-shaped perturbation X=sin).",
          "This is needed for calculating the dynamic structure factor.",
          "In the case that the kick mode is qbessel, the written quantity is integral over",
          "density, multiplied by spherical Bessel function times real spherical harmonic.",
          "On by default if <tt>TDMomentumTransfer</tt> is set."
        ],
        "Name": "ftchd",
        "Value": "13"
      },
      {
        "Description": [
          "When set, outputs the dipole velocity, calculated from the Ehrenfest theorem,",
          "in the file <tt>td.general/velocity</tt>. This file can then be",
          "processed by the utility <tt>oct-harmonic-spectrum</tt> in order to obtain the harmonic spectrum."
        ],
        "Name": "dipole_velocity",
        "Value": "14"
      },
      {
        "Description": [
          "Write the KS eigenvalues."
        ],
        "Name": "eigenvalues",
        "Value": "15"
      },
      {
        "Description": [
          "Write the multiple-ionization channels using the KS orbital densities as proposed in",
          "C. Ullrich, Journal of Molecular Structure: THEOCHEM 501, 315 (2000)."
        ],
        "Name": "ionization_channels",
        "Value": "16"
      },
      {
        "Description": [
          "Output the total current (average of the current density over the cell)."
        ],
        "Name": "total_current",
        "Value": "17"
      },
      {
        "Description": [
          "Bader and Hirshfeld partial charges. The output file is called 'td.general/partial_charges'."
        ],
        "Name": "partial_charges",
        "Value": "18"
      },
      {
        "Description": [
          "Project propagated Kohn-Sham states to the states at t=0 given in the directory",
          "restart_proj (see %RestartOptions). This is an alternative to the option",
          "td_occup, with a formating more suitable for k-points and works only in",
          "k- and/or state parallelization"
        ],
        "Name": "td_kpoint_occup",
        "Value": "19"
      },
      {
        "Description": [
          "Compute non-interacting Floquet bandstructure according to further options:",
          "TDFloquetFrequency, TDFloquetSample, TDFloquetDimension.",
          "This is done only once per td-run at t=0.",
          "works only in k- and/or state parallelization"
        ],
        "Name": "td_floquet",
        "Value": "20"
      },
      {
        "Description": [
          "Output the number of excited electrons, based on the projections",
          "of the time evolved wave-functions on the ground-state wave-functions.",
          "The output interval of this quantity is controled by the variable <tt>TDOutputComputeInterval</tt>"
        ],
        "Name": "n_excited_el",
        "Value": "21"
      },
      {
        "Description": [
          "Writes geometries in a separate file."
        ],
        "Name": "coordinates_sep",
        "Value": "22"
      },
      {
        "Description": [
          "Writes velocities in a separate file."
        ],
        "Name": "velocities_sep",
        "Value": "23"
      },
      {
        "Description": [
          "Writes forces in a separate file."
        ],
        "Name": "forces_sep",
        "Value": "24"
      },
      {
        "Description": [
          "Output the total heat current (average of the heat current density over the cell)."
        ],
        "Name": "total_heat_current",
        "Value": "25"
      },
      {
        "Description": [
          "Writes the total magnetization, where the total magnetization is calculated at the momentum",
          "defined by <tt>TDMomentumTransfer</tt>.",
          "This is used to extract the magnon frequency in case of a magnon kick."
        ],
        "Name": "total_magnetization",
        "Value": "26"
      },
      {
        "Description": [
          "Writes photons_q in a separate file."
        ],
        "Name": "photons_q",
        "Value": "27"
      },
      {
        "Description": [
          "Writes total electric field (if coupling is in length_geuge) or vector potential",
          "(if coupling is in velocity_gauge) coming from the interaction with Maxwell systems",
          "(only if Maxwell-TDDFT coupling is in dipole)."
        ],
        "Name": "maxwell_field",
        "Value": "28"
      },
      {
        "Description": [
          "Writes the norm of each Kohn-Sham orbital.",
          "The data is ordered per row as:",
          "Iteration time (state 1 kpoint 1) (state2 kpoint1) ... (state-Nstates kpoint1) (state1 kpoint2) ... (state-Nstates kpoint-nkpt)",
          "noting that the kpoint index will also include the spin index for spin-polarised calculations."
        ],
        "Name": "norm_ks_orbitals",
        "Value": "29"
      }
    ],
    "Section": "Time-Dependent::TD Output",
    "Sourcefile": "td/td_write.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "real_time/05-time_propagation.04-td_domains_states-reorder_ranks.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/09-angular_momentum.03-td_icl.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/05-time_propagation.03-td_domains_states.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/09-angular_momentum.02-td_gipaw.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/22-td_move_ions_periodic.02-td.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.03-td_laser.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/17-aluminium.02-td.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/17-aluminium.03-conductivity.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "finite_systems_1d/04-lithium.02-absorbing_boundaries.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/06-laser.03-velocity_gauge.inp",
      "lda_u/12-intersite_spinors.02-Na2_td.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "tdoutputcomputeinterval": {
    "CallLine": "call parse_variable(namespace, 'TDOutputComputeInterval', 50, writ%compute_interval)",
    "Default": [
      "50"
    ],
    "Description": [
      "The TD output requested are computed",
      "when the iteration number is a multiple of the <tt>TDOutputComputeInterval</tt> variable.",
      "Must be >= 0. If it is 0, then no output is written.",
      "Implemented only for projections and number of excited electrons for the moment."
    ],
    "LineNumber": 713,
    "Manuals": [],
    "Name": "TDOutputComputeInterval",
    "Options": [],
    "Section": "Time-Dependent::TD Output",
    "Sourcefile": "td/td_write.F90",
    "Testfiles": [
      "real_time/05-time_propagation.04-td_domains_states-reorder_ranks.inp",
      "real_time/05-time_propagation.03-td_domains_states.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "finite_systems_1d/09-morse.03-td.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdoutputdftu": {
    "CallLine": "call parse_variable(namespace, 'TDOutputDFTU', default, flags)",
    "Default": [
      "none"
    ],
    "Description": [
      "Defines what should be output during the time-dependent",
      "simulation, related to DFT+U.",
      " ",
      "Note: the output files generated by this option are updated",
      "every <tt>RestartWriteInterval</tt> steps."
    ],
    "LineNumber": 857,
    "Manuals": [],
    "Name": "TDOutputDFTU",
    "Options": [
      {
        "Description": [
          "Writes the effective U for each orbital set as a function of time."
        ],
        "Name": "effective_u",
        "Value": "1"
      }
    ],
    "Section": "Time-Dependent::TD Output",
    "Sourcefile": "td/td_write.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "flag"
  },
  "tdoutputresolvestates": {
    "CallLine": "call parse_variable(namespace, 'TDOutputResolveStates', .false., resolve_states)",
    "Default": [
      "No"
    ],
    "Description": [
      "Defines whether the output should be resolved by states.",
      " ",
      "So far only TDOutput = multipoles is supported.",
      " "
    ],
    "LineNumber": 505,
    "Manuals": [],
    "Name": "TDOutputResolveStates",
    "Options": [],
    "Section": "Time-Dependent::TD Output",
    "Sourcefile": "td/td_write.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "tdphotonictimescale": {
    "CallLine": "call parse_variable(namespace, 'TDPhotonicTimeScale', 1.0_real64, this%mu)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "This variable defines the factor between the timescale of photonic",
      "and electronic movement.",
      "for more details see the documentation of TDIonicTimeScale",
      "If you also use TDIonicTimeScale, we advise to set",
      "TDPhotonicTimeScale = TDIonicTimeScale, in the case the",
      "photon frequency is in a vibrational energy range.",
      "Important: The electronic time step will be the value of",
      "<tt>TDTimeStep</tt> divided by this variable, so if you have determined an",
      "optimal electronic time step (that we can call <i>dte</i>), it is",
      "recommended that you define your time step as:",
      " ",
      "<tt>TDTimeStep</tt> = <i>dte</i> * <tt>TDPhotonicTimeScale</tt>",
      " ",
      "so you will always use the optimal electronic time step",
      "(<a href=http://arxiv.org/abs/0710.3321>more details</a>)."
    ],
    "LineNumber": 272,
    "Manuals": [],
    "Name": "TDPhotonicTimeScale",
    "Options": [],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "photons/photon_mode.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "tdpolarization": {
    "CallLine": "if (parse_block(namespace, 'TDPolarization', blk) == 0) then",
    "Default": null,
    "Description": [
      "The (real) polarization of the delta electric field. Normally",
      "one needs three perpendicular polarization directions to calculate a",
      "spectrum (unless symmetry is used).",
      "The format of the block is:",
      " ",
      "<tt>%TDPolarization",
      "<br>&nbsp;&nbsp;pol1x | pol1y | pol1z",
      "<br>&nbsp;&nbsp;pol2x | pol2y | pol2z",
      "<br>&nbsp;&nbsp;pol3x | pol3y | pol3z",
      "<br>%</tt>",
      " ",
      "<tt>Octopus</tt> uses both this block and the variable",
      "<tt>TDPolarizationDirection</tt> to determine the polarization",
      "vector for the run. For example, if",
      "<tt>TDPolarizationDirection=2</tt> the polarization <tt>(pol2x,",
      "pol2y, pol2z)</tt> would be used.",
      "These directions may not be in periodic directions.",
      " ",
      "The default value for <tt>TDPolarization</tt> is the three",
      "Cartesian unit vectors (1,0,0), (0,1,0), and (0,0,1).",
      " ",
      "Note that the directions do not necessarily need to be perpendicular",
      "when symmetries are used.",
      " ",
      "WARNING: If you want to obtain the cross-section tensor, the",
      "<tt>TDPolarization</tt> block must be exactly the same for the run in",
      "each direction. The direction must be selected by the",
      "<tt>TDPolarizationDirection</tt> variable.",
      " "
    ],
    "LineNumber": 364,
    "Manuals": [],
    "Name": "TDPolarization",
    "Options": [],
    "Section": "Time-Dependent::Response::Dipole",
    "Sourcefile": "hamiltonian/kick.F90",
    "Testfiles": [
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/14-absorption-spinors.03-td-restart.inp",
      "real_time/21-scissor.02-td.inp",
      "real_time/13-absorption-spin.03-td-restart.inp",
      "real_time/14-absorption-spinors.02-td.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "real_time/12-absorption.03-td-restart.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "tdpolarizationdirection": {
    "CallLine": "call parse_variable(namespace, 'TDPolarizationDirection', 0, kick%pol_dir)",
    "Default": null,
    "Description": [
      "When a delta potential is included in a time-dependent run, this",
      "variable defines in which direction the field will be applied",
      "by selecting one of the lines of <tt>TDPolarization</tt>. In a",
      "typical run (without using symmetry), the <tt>TDPolarization</tt> block",
      "would contain the three Cartesian unit vectors (the default",
      "value), and one would make 3 runs varying",
      "<tt>TDPolarization</tt> from 1 to 3.",
      "If one is using symmetry,  <tt>TDPolarization</tt> should run only from 1",
      "to <tt>TDPolarizationEquivAxes</tt>."
    ],
    "LineNumber": 319,
    "Manuals": [],
    "Name": "TDPolarizationDirection",
    "Options": [],
    "Section": "Time-Dependent::Response::Dipole",
    "Sourcefile": "hamiltonian/kick.F90",
    "Testfiles": [
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/99-carbon_hydrogen.03-td_restart.inp",
      "multisystem/15-electronic_system_restart.04-td_restart_part2.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "multisystem/99-carbon_hydrogen.02-td.inp",
      "finite_systems_3d/14-fullerene_unpacked.02-td-unpacked.inp",
      "finite_systems_3d/06-restart.06-td_calc.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/14-fullerene_unpacked.03-td-packed.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/34-walltime.03-td_walltime.inp",
      "finite_systems_3d/34-walltime.04-restart_td.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/01-propagators.09-magnus.inp",
      "real_time/02-propagators.02-cnsparskit.inp",
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/01-propagators.07-caetrs.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/09-angular_momentum.03-td_icl.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/14-absorption-spinors.03-td-restart.inp",
      "real_time/21-scissor.02-td.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/01-propagators.11-cfmagnus4.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/13-absorption-spin.03-td-restart.inp",
      "real_time/14-absorption-spinors.02-td.inp",
      "real_time/09-angular_momentum.02-td_gipaw.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/01-propagators.08-cn.inp",
      "real_time/01-propagators.05-etrs_chebyshev.inp",
      "real_time/01-propagators.06-aetrs.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/01-propagators.03-etrs_taylor.inp",
      "real_time/03-td_self_consistent.02-etrs.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/01-propagators.02-expmid.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "real_time/01-propagators.10-exprk4.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "real_time/12-absorption.03-td-restart.inp",
      "real_time/02-propagators.04-rungekutta4.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdpolarizationequivaxes": {
    "CallLine": "call parse_variable(namespace, 'TDPolarizationEquivAxes', 0, kick%pol_equiv_axes)",
    "Default": [
      "0"
    ],
    "Description": [
      "Defines how many of the <tt>TDPolarization</tt> axes are equivalent. This information is stored in a file and then",
      "used by <tt>oct-propagation_spectrum</tt> to rebuild the full polarizability tensor from just the",
      "first <tt>TDPolarizationEquivAxes</tt> directions. This variable is also used by <tt>CalculationMode = vdw</tt>."
    ],
    "LineNumber": 302,
    "Manuals": [],
    "Name": "TDPolarizationEquivAxes",
    "Options": [],
    "Section": "Time-Dependent::Response::Dipole",
    "Sourcefile": "hamiltonian/kick.F90",
    "Testfiles": [
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/14-absorption-spinors.03-td-restart.inp",
      "real_time/21-scissor.02-td.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/13-absorption-spin.03-td-restart.inp",
      "real_time/14-absorption-spinors.02-td.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "real_time/12-absorption.03-td-restart.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdpolarizationwprime": {
    "CallLine": "if (parse_block(namespace, 'TDPolarizationWprime', blk) == 0) then",
    "Default": null,
    "Description": [
      "This block is needed only when",
      "<tt>TDPolarizationEquivAxes</tt> is set to 3.  In such a case,",
      "the three directions (<i>pol1</i>, <i>pol2</i>, and <i>pol3</i>) defined in",
      "the <tt>TDPolarization</tt> block should be related by symmetry",
      "operations. If <i>A</i> is the symmetry operation that takes you",
      "from <i>pol1</i> to <i>pol2</i>, then <tt>TDPolarizationWprime</tt>",
      "should be set to the direction defined by <i>A</i><math>^{-1}</math><i>pol3</i>.",
      "For more information see MJT Oliveira",
      "<i>et al.</i>, <i>J. Nanoscience and Nanotechnology</i> <b>8</b>,",
      "3392 (2008)."
    ],
    "LineNumber": 406,
    "Manuals": [],
    "Name": "TDPolarizationWprime",
    "Options": [],
    "Section": "Time-Dependent::Response::Dipole",
    "Sourcefile": "hamiltonian/kick.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "tdprojstatestart": {
    "CallLine": "call parse_variable(namespace, 'TDProjStateStart', 1, writ%gs_st%st_start)",
    "Default": [
      "1"
    ],
    "Description": [
      "To be used with <tt>TDOutput = td_occup</tt>. Not available if <tt>TDOutput = populations</tt>.",
      "Only output projections to states above <tt>TDProjStateStart</tt>. Usually one is only interested",
      "in particle-hole projections around the HOMO, so there is no need to calculate (and store)",
      "the projections of all TD states onto all static states. This sets a lower limit. The upper limit",
      "is set by the number of states in the propagation and the number of unoccupied states",
      "available."
    ],
    "LineNumber": 603,
    "Manuals": [],
    "Name": "TDProjStateStart",
    "Options": [],
    "Section": "Time-Dependent::TD Output",
    "Sourcefile": "td/td_write.F90",
    "Testfiles": [
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdpropagationtime": {
    "CallLine": "call parse_variable(namespace, 'TDPropagationTime', -1.0_real64, propagation_time, unit = units_inp%time)",
    "Default": null,
    "Description": [
      "The length of the time propagation. You cannot set this variable",
      "at the same time as <tt>TDMaxSteps</tt>. By default this variable will",
      "not be used.",
      " ",
      "The units for this variable are <math>\\hbar</math>/Hartree (or <math>\\hbar</math>/eV if you",
      "selected <tt>ev_angstrom</tt> as input units). The approximate conversions to",
      "femtoseconds are 1 fs = 41.34 <math>\\hbar</math>/Hartree = 1.52 <math>\\hbar</math>/eV."
    ],
    "LineNumber": 236,
    "Manuals": [],
    "Name": "TDPropagationTime",
    "Options": [],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "td/td.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "multisystem/05-propagation_beeman.02-three_body.inp",
      "multisystem/06-propagation_expmid.02-three_body.inp",
      "multisystem/03-interactions_creation.03-case3.inp",
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/13-restart_verlet.01-restart-run-part1.inp",
      "multisystem/03-interactions_creation.01-case1.inp",
      "multisystem/05-propagation_beeman.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.01-two_body.inp",
      "multisystem/03-interactions_creation.02-case2.inp",
      "multisystem/14-lennard-jones.01-classical-particles-N2.inp",
      "multisystem/18-incompatible_timing.01-run.inp",
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/01-nested_systems.02-three_levels.inp",
      "multisystem/01-nested_systems.01-two_levels.inp",
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/06-propagation_expmid.05-two_body_verlet_half.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "multisystem/04-propagation_verlet.02-three_body.inp",
      "multisystem/10-dftbplus_verlet.01-water.inp",
      "multisystem/15-electronic_system_restart.04-td_restart_part2.inp",
      "multisystem/06-propagation_expmid.01-two_body.inp",
      "multisystem/08-coulomb_force.01-classical_helium.inp",
      "multisystem/01-nested_systems.03-four_levels.inp",
      "multisystem/03-interactions_creation.04-case4.inp",
      "multisystem/13-restart_verlet.03-full-run.inp",
      "multisystem/16-bomd.02-td.inp",
      "multisystem/17-lasers.01-length_gauge.inp",
      "multisystem/06-propagation_expmid.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.04-three_body_different_time_steps.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/06-propagation_expmid.06-two_body_verlet.inp",
      "multisystem/05-propagation_beeman.03-two_body_different_time_steps.inp",
      "multisystem/07-lorentz-force.02-charged_particle_in_static_efield.inp",
      "multisystem/13-restart_verlet.02-restart-run-part2.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "multisystem/04-propagation_verlet.03-two_body_different_time_steps.inp",
      "multisystem/05-propagation_beeman.01-two_body.inp",
      "multisystem/02-interaction_graph.01-three_body.inp",
      "multisystem/06-propagation_expmid.03-two_body_different_time_steps.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "finite_systems_1d/04-lithium.02-absorbing_boundaries.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_restarted.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/01-free-propagation.02-2_pulses_td.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/06-laser.03-velocity_gauge.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "tdpropagator": {
    "CallLine": "call parse_variable(namespace, 'TDPropagator', PROP_ETRS, tr%method)",
    "Default": [
      "etrs"
    ],
    "Description": [
      "This variable determines which algorithm will be used to approximate",
      "the evolution operator <math>U(t+\\delta t, t)</math>. That is, given",
      "<math>\\psi(\\tau)</math> and <math>H(\\tau)</math> for <math>\\tau \\le t</math>,",
      "calculate <math>t+\\delta t</math>. Note that in general the Hamiltonian",
      "is not known at times in the interior of the interval <math>[t,t+\\delta t]</math>.",
      "This is due to the self-consistent nature of the time-dependent Kohn-Sham problem:",
      "the Hamiltonian at a given time <math>\\tau</math> is built from the",
      "\"solution\" wavefunctions at that time.",
      " ",
      "Some methods, however, do require the knowledge of the Hamiltonian at some",
      "point of the interval <math>[t,t+\\delta t]</math>. This problem is solved by making",
      "use of extrapolation: given a number <math>l</math> of time steps previous to time",
      "<math>t</math>, this information is used to build the Hamiltonian at arbitrary times",
      "within <math>[t,t+\\delta t]</math>. To be fully precise, one should then proceed",
      "<i>self-consistently</i>: the obtained Hamiltonian at time <math>t+\\delta t</math>",
      "may then be used to interpolate the Hamiltonian, and repeat the evolution",
      "algorithm with this new information. Whenever iterating the procedure does",
      "not change the solution wavefunctions, the cycle is stopped. In practice,",
      "in <tt>Octopus</tt> we perform a second-order extrapolation without a",
      "self-consistency check, except for the first two iterations, where obviously",
      "the extrapolation is not reliable.",
      " ",
      "The proliferation of methods is certainly excessive. The reason for it is that",
      "the propagation algorithm is currently a topic of active development. We",
      "hope that in the future the optimal schemes are clearly identified. In the",
      "mean time, if you do not feel like testing, use the default choices and",
      "make sure the time step is small enough."
    ],
    "LineNumber": 236,
    "Manuals": [],
    "Name": "TDPropagator",
    "Options": [
      {
        "Description": [
          "The idea is to make use of time-reversal symmetry from the beginning:",
          " ",
          "<math>",
          "\\exp \\left(-i\\delta t H_{n} / 2 \\right)\\psi_n = \\exp \\left(i\\delta t H_{n+1} / 2 \\right)\\psi_{n+1},",
          "</math>",
          " ",
          "and then invert to obtain:",
          " ",
          "<math>",
          "\\psi_{n+1} = \\exp \\left(-i\\delta t H_{n+1} / 2 \\right) \\exp \\left(-i\\delta t H_{n} / 2 \\right)\\psi_{n}.",
          "</math>",
          " ",
          "But we need to know <math>H_{n+1}</math>, which can only be known exactly through the solution",
          "<math>\\psi_{n+1}</math>. What we do is to estimate it by performing a single exponential:",
          "<math>\\psi^{*}_{n+1}=\\exp \\left( -i\\delta t H_{n} \\right) \\psi_n</math>, and then",
          "<math>H_{n+1} = H[\\psi^{*}_{n+1}]</math>. Thus no extrapolation is performed in this case."
        ],
        "Name": "etrs",
        "Value": "2"
      },
      {
        "Description": [
          "Approximated Enforced Time-Reversal Symmetry (AETRS).",
          "A modification of previous method to make it faster.",
          "It is based on extrapolation of the time-dependent potentials. It is faster",
          "by about 40%.",
          "The only difference is the procedure to estimate <math>H_{n+1}</math>: in this case",
          "it is extrapolated via a second-order polynomial by making use of the",
          "Hamiltonian at time <math>t-2\\delta t</math>, <math>t-\\delta t</math> and <math>t</math>."
        ],
        "Name": "aetrs",
        "Value": "3"
      },
      {
        "Description": [
          "(experimental) Corrected Approximated Enforced Time-Reversal",
          "Symmetry (AETRS), this is the previous propagator but including",
          "a correction step to the exponential."
        ],
        "Name": "caetrs",
        "Value": "12"
      },
      {
        "Description": [
          "Exponential Midpoint Rule (EM).",
          "This is maybe the simplest method, but it is very well grounded theoretically:",
          "it is unitary (if the exponential is performed correctly) and preserves",
          "time-reversal symmetry (if the self-consistency problem is dealt with correctly).",
          "It is defined as:",
          "<math>",
          "U_{\\rm EM}(t+\\delta t, t) = \\exp \\left( -i\\delta t H_{t+\\delta t/2}\\right)\\,.",
          "</math>"
        ],
        "Name": "exp_mid",
        "Value": "4"
      },
      {
        "Description": [],
        "Name": "crank_nicholson",
        "Value": "5"
      },
      {
        "Description": [
          "Classical Crank-Nicolson propagator.",
          "<math>",
          "(1 + i\\delta t H_{n+1/2} / 2) \\psi_{n+1} = (1 - i\\delta t H_{n+1/2} / 2) \\psi_{n}",
          "</math>"
        ],
        "Name": "crank_nicolson",
        "Value": "5"
      },
      {
        "Description": [],
        "Name": "crank_nicholson_sparskit",
        "Value": "6"
      },
      {
        "Description": [
          "Classical Crank-Nicolson propagator. Requires the SPARSKIT library.",
          "<math>",
          "(1 + i\\delta t H_{n+1/2} / 2) \\psi_{n+1} = (1 - i\\delta t H_{n+1/2} / 2) \\psi_{n}",
          "</math>"
        ],
        "Name": "crank_nicolson_sparskit",
        "Value": "6"
      },
      {
        "Description": [
          "Magnus Expansion (M4).",
          "This is the most sophisticated approach. It is a fourth-order scheme (a feature",
          "which it shares with the ST scheme; the other schemes are in principle second-order).",
          "It is tailored for making use of very large time steps, or equivalently,",
          "dealing with problem with very high-frequency time-dependence.",
          "It is still in a experimental state; we are not yet sure of when it is",
          "advantageous."
        ],
        "Name": "magnus",
        "Value": "7"
      },
      {
        "Description": [
          "WARNING: EXPERIMENTAL"
        ],
        "Name": "qoct_tddft_propagator",
        "Value": "10"
      },
      {
        "Description": [
          "WARNING: EXPERIMENTAL. Implicit Gauss-Legendre 4th order Runge-Kutta."
        ],
        "Name": "runge_kutta4",
        "Value": "13"
      },
      {
        "Description": [
          "WARNING: EXPERIMENTAL. Implicit 2nd order Runge-Kutta (trapezoidal rule).",
          "Similar, but not identical, to Crank-Nicolson method."
        ],
        "Name": "runge_kutta2",
        "Value": "14"
      },
      {
        "Description": [
          "WARNING: EXPERIMENTAL. Explicit RK4 method."
        ],
        "Name": "expl_runge_kutta4",
        "Value": "15"
      },
      {
        "Description": [
          "WARNING EXPERIMENTAL"
        ],
        "Name": "cfmagnus4",
        "Value": "16"
      }
    ],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "td/propagator_elec.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/01-propagators.09-magnus.inp",
      "real_time/02-propagators.02-cnsparskit.inp",
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/01-propagators.07-caetrs.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/09-angular_momentum.03-td_icl.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/14-absorption-spinors.03-td-restart.inp",
      "real_time/21-scissor.02-td.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/01-propagators.11-cfmagnus4.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/13-absorption-spin.03-td-restart.inp",
      "real_time/14-absorption-spinors.02-td.inp",
      "real_time/09-angular_momentum.02-td_gipaw.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/01-propagators.08-cn.inp",
      "real_time/01-propagators.05-etrs_chebyshev.inp",
      "real_time/01-propagators.06-aetrs.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/01-propagators.03-etrs_taylor.inp",
      "real_time/03-td_self_consistent.02-etrs.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/01-propagators.02-expmid.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "real_time/01-propagators.10-exprk4.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/12-absorption.03-td-restart.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "real_time/02-propagators.04-rungekutta4.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.02-td.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.03-td_laser.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/06-laser.03-velocity_gauge.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdreducedmomentumtransfer": {
    "CallLine": "parse_block(namespace, 'TDReducedMomentumTransfer', blk) == 0) then",
    "Default": null,
    "Description": [
      "The same as TDMomentumTransfer, but the momentum is specified in reduced coordinates.",
      "Only available for magnon kicks at the moment, and only with an exponential kick."
    ],
    "LineNumber": 433,
    "Manuals": [],
    "Name": "TDReducedMomentumTransfer",
    "Options": [],
    "Section": "Time-Dependent::Response",
    "Sourcefile": "hamiltonian/kick.F90",
    "Testfiles": [
      "periodic_systems/31-magnon_1d.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "tdscfthreshold": {
    "CallLine": "call parse_variable(namespace, 'TDSCFThreshold', 1.0e-6_real64, tr%scf_threshold)",
    "Default": [
      "1.0e-6"
    ],
    "Description": [
      "Since the KS propagator is non-linear, each propagation step",
      "should be performed self-consistently.  In practice, for most",
      "purposes this is not necessary, except perhaps in the first",
      "iterations. This variable holds the number of propagation steps",
      "for which the propagation is done self-consistently.",
      " ",
      "The self consistency has to be measured against some accuracy",
      "threshold. This variable controls the value of that threshold."
    ],
    "LineNumber": 383,
    "Manuals": [],
    "Name": "TDSCFThreshold",
    "Options": [],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "td/propagator_elec.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "tdscissor": {
    "CallLine": "call parse_variable(namespace, 'TDScissor', M_ZERO, td%scissor)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "(experimental) If set, a scissor operator will be applied in the",
      "Hamiltonian, shifting the excitation energies by the amount",
      "specified. By default, it is not applied."
    ],
    "LineNumber": 323,
    "Manuals": [],
    "Name": "TDScissor",
    "Options": [],
    "Section": "Time-Dependent",
    "Sourcefile": "td/td.F90",
    "Testfiles": [
      "real_time/21-scissor.02-td.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "tdstepswithselfconsistency": {
    "CallLine": "call parse_variable(namespace, 'TDStepsWithSelfConsistency', 0, tr%scf_propagation_steps)",
    "Default": [
      "0"
    ],
    "Description": [
      "Since the KS propagator is non-linear, each propagation step",
      "should be performed self-consistently.  In practice, for most",
      "purposes this is not necessary, except perhaps in the first",
      "iterations. This variable holds the number of propagation steps",
      "for which the propagation is done self-consistently.",
      " ",
      "The special value <tt>all_steps</tt> forces self-consistency to",
      "be imposed on all propagation steps. A value of 0 means that",
      "self-consistency will not be imposed.  The default is 0."
    ],
    "LineNumber": 355,
    "Manuals": [],
    "Name": "TDStepsWithSelfConsistency",
    "Options": [
      {
        "Description": [
          "Self-consistency is imposed for all propagation steps."
        ],
        "Name": "all_steps",
        "Value": "-1"
      }
    ],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "td/propagator_elec.F90",
    "Testfiles": [
      "real_time/03-td_self_consistent.02-etrs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdsystempropagator": {
    "CallLine": "call parse_variable(system%namespace, 'TDSystemPropagator', PROP_STATIC, prop_type)",
    "Default": [
      "static"
    ],
    "Description": [
      "A variable to set the propagator in the multisystem framework.",
      "This is a temporary solution, and should be replaced by the",
      "TDPropagator variable."
    ],
    "LineNumber": 165,
    "Manuals": [],
    "Name": "TDSystemPropagator",
    "Options": [
      {
        "Description": [
          "(Experimental) Do not propagate the system in time."
        ],
        "Name": "static",
        "Value": "0"
      },
      {
        "Description": [
          "(Experimental) Verlet propagator."
        ],
        "Name": "verlet",
        "Value": "1"
      },
      {
        "Description": [
          "(Experimental) Beeman propagator without predictor-corrector."
        ],
        "Name": "beeman",
        "Value": "2"
      },
      {
        "Description": [
          "(Experimental) Beeman propagator with predictor-corrector scheme."
        ],
        "Name": "beeman_scf",
        "Value": "3"
      },
      {
        "Description": [
          "(Experimental) Exponential midpoint propagator without predictor-corrector."
        ],
        "Name": "exp_mid_2step",
        "Value": "4"
      },
      {
        "Description": [
          "(Experimental) Exponential midpoint propagator with predictor-corrector scheme."
        ],
        "Name": "exp_mid_2step_scf",
        "Value": "5"
      },
      {
        "Description": [
          "(Experimental) Approximate ETRS propagator"
        ],
        "Name": "prop_aetrs",
        "Value": "6"
      },
      {
        "Description": [
          "(Experimental) RK4 propagator"
        ],
        "Name": "prop_rk4",
        "Value": "7"
      },
      {
        "Description": [
          "(Experimental) Exponential midpoint propagator with extrapolation."
        ],
        "Name": "prop_expmid",
        "Value": "8"
      },
      {
        "Description": [
          "(Experimental) Leap frog algorithm"
        ],
        "Name": "prop_leapfrog",
        "Value": "9"
      },
      {
        "Description": [
          "(Experimental) Born-Oppenheimer MD propagator for the matter system."
        ],
        "Name": "prop_bomd",
        "Value": "10"
      }
    ],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "multisystem/propagator_factory.F90",
    "Testfiles": [
      "multisystem/05-propagation_beeman.02-three_body.inp",
      "multisystem/06-propagation_expmid.02-three_body.inp",
      "multisystem/03-interactions_creation.03-case3.inp",
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/13-restart_verlet.01-restart-run-part1.inp",
      "multisystem/03-interactions_creation.01-case1.inp",
      "multisystem/04-propagation_verlet.01-two_body.inp",
      "multisystem/03-interactions_creation.02-case2.inp",
      "multisystem/14-lennard-jones.01-classical-particles-N2.inp",
      "multisystem/18-incompatible_timing.01-run.inp",
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/01-nested_systems.02-three_levels.inp",
      "multisystem/01-nested_systems.01-two_levels.inp",
      "multisystem/04-propagation_verlet.02-three_body.inp",
      "multisystem/10-dftbplus_verlet.01-water.inp",
      "multisystem/15-electronic_system_restart.04-td_restart_part2.inp",
      "multisystem/06-propagation_expmid.01-two_body.inp",
      "multisystem/08-coulomb_force.01-classical_helium.inp",
      "multisystem/01-nested_systems.03-four_levels.inp",
      "multisystem/03-interactions_creation.04-case4.inp",
      "multisystem/13-restart_verlet.03-full-run.inp",
      "multisystem/16-bomd.02-td.inp",
      "multisystem/06-propagation_expmid.04-three_body_different_time_steps.inp",
      "multisystem/04-propagation_verlet.04-three_body_different_time_steps.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/13-restart_verlet.02-restart-run-part2.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "multisystem/04-propagation_verlet.03-two_body_different_time_steps.inp",
      "multisystem/05-propagation_beeman.01-two_body.inp",
      "multisystem/02-interaction_graph.01-three_body.inp",
      "multisystem/06-propagation_expmid.03-two_body_different_time_steps.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_restarted.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/01-free-propagation.02-2_pulses_td.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "tdtdmfrequencies": {
    "CallLine": "if (parse_block(global_namespace, 'TDTDMFrequencies', blk) == 0) then",
    "Default": null,
    "Description": [
      "This block defines for which frequencies the analysis is performed.",
      " ",
      "Each row of the block indicates a frequency."
    ],
    "LineNumber": 129,
    "Manuals": [],
    "Name": "TDTDMFrequencies",
    "Options": [],
    "Section": "Utilities::oct-tdtdm",
    "Sourcefile": "utils/tdtdm.F90",
    "Testfiles": [
      "periodic_systems/05-lithium.05-tdtdm.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "tdtdmholecoordinates": {
    "CallLine": "if(parse_block(global_namespace, 'TDTDMHoleCoordinates', blk) == 0) then",
    "Default": null,
    "Description": [
      "The position of the hole used to compute the TDTDM,",
      "in Cartesian coordinates.",
      "Note that the code will use the closest grid point.",
      " ",
      "The coordinates of the hole are specified in the following way",
      "<tt>%TDTDMHoleCoordinates",
      "<br>&nbsp;&nbsp;hole_x | hole_y | hole_z",
      "<br>%</tt>",
      " ",
      "If TDTDMHoleCoordinates or TDTDMHoleReducedCoordinates are not specified,",
      "the code will use the coordinate of the first atom in the cell."
    ],
    "LineNumber": 623,
    "Manuals": [],
    "Name": "TDTDMHoleCoordinates",
    "Options": [],
    "Section": "Utilities::oct-tdtdm",
    "Sourcefile": "utils/tdtdm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "tdtdmholereducedcoordinates": {
    "CallLine": "if(parse_block(global_namespace, 'TDTDMHoleReducedCoordinates', blk) == 0) then",
    "Default": null,
    "Description": [
      "Same as TDTDMHoleCoordinates, except that coordinates are given in reduced coordinates"
    ],
    "LineNumber": 639,
    "Manuals": [],
    "Name": "TDTDMHoleReducedCoordinates",
    "Options": [],
    "Section": "Utilities::oct-tdtdm",
    "Sourcefile": "utils/tdtdm.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "tdtimestep": {
    "CallLine": "call parse_variable(namespace, 'TDTimeStep', default_dt, td%dt, unit = units_inp%time)",
    "Default": null,
    "Description": [
      "The time-step for the time propagation. For most propagators you",
      "want to use the largest value that is possible without the",
      "evolution becoming unstable.",
      " ",
      "The default value is the maximum value that we have found",
      "empirically that is stable for the spacing <math>h</math>:",
      "<math>dt = 0.0426 - 0.207 h + 0.808 h^2</math>",
      "(from parabolic fit to Fig. 4 of http://dx.doi.org/10.1021/ct800518j,",
      "probably valid for 3D systems only).",
      "However, you might need to adjust this value."
    ],
    "LineNumber": 209,
    "Manuals": [],
    "Name": "TDTimeStep",
    "Options": [],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "td/td.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "multisystem/05-propagation_beeman.02-three_body.inp",
      "multisystem/06-propagation_expmid.02-three_body.inp",
      "multisystem/03-interactions_creation.03-case3.inp",
      "multisystem/15-electronic_system_restart.03-td_restart_part1.inp",
      "multisystem/03-interactions_creation.01-case1.inp",
      "multisystem/04-propagation_verlet.01-two_body.inp",
      "multisystem/03-interactions_creation.02-case2.inp",
      "multisystem/14-lennard-jones.01-classical-particles-N2.inp",
      "multisystem/18-incompatible_timing.01-run.inp",
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "multisystem/15-electronic_system_restart.02-td_full.inp",
      "multisystem/01-nested_systems.02-three_levels.inp",
      "multisystem/01-nested_systems.01-two_levels.inp",
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/04-propagation_verlet.02-three_body.inp",
      "multisystem/10-dftbplus_verlet.01-water.inp",
      "multisystem/99-carbon_hydrogen.03-td_restart.inp",
      "multisystem/15-electronic_system_restart.04-td_restart_part2.inp",
      "multisystem/06-propagation_expmid.01-two_body.inp",
      "multisystem/08-coulomb_force.01-classical_helium.inp",
      "multisystem/01-nested_systems.03-four_levels.inp",
      "multisystem/03-interactions_creation.04-case4.inp",
      "multisystem/16-bomd.02-td.inp",
      "multisystem/17-lasers.01-length_gauge.inp",
      "multisystem/12-electronic_subsystem_propagators.03-aetrs.inp",
      "multisystem/06-propagation_expmid.06-two_body_verlet.inp",
      "multisystem/07-lorentz-force.02-charged_particle_in_static_efield.inp",
      "multisystem/12-electronic_subsystem_propagators.02-expmid.inp",
      "multisystem/99-carbon_hydrogen.02-td.inp",
      "multisystem/05-propagation_beeman.01-two_body.inp",
      "finite_systems_3d/14-fullerene_unpacked.02-td-unpacked.inp",
      "finite_systems_3d/06-restart.06-td_calc.inp",
      "finite_systems_3d/03-magnetic.02-td-unpolarized.inp",
      "finite_systems_3d/14-fullerene_unpacked.03-td-packed.inp",
      "finite_systems_3d/06-restart.07-restart_td_calc.inp",
      "finite_systems_3d/03-magnetic.06-td-spinors.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/03-magnetic.04-td-polarized.inp",
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "real_time/01-propagators.04-etrs_lanczos.inp",
      "real_time/10-bomd.02-td.inp",
      "real_time/05-time_propagation.04-td_domains_states-reorder_ranks.inp",
      "real_time/01-propagators.09-magnus.inp",
      "real_time/02-propagators.02-cnsparskit.inp",
      "real_time/05-time_propagation.06-td_fast_md.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/10-bomd.03-td_restart.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/01-propagators.07-caetrs.inp",
      "real_time/19-td_move_ions.03-td_restart.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/09-angular_momentum.03-td_icl.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/05-time_propagation.03-td_domains_states.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/01-propagators.11-cfmagnus4.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/09-angular_momentum.02-td_gipaw.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/02-propagators.03-rungekutta2.inp",
      "real_time/01-propagators.08-cn.inp",
      "real_time/01-propagators.05-etrs_chebyshev.inp",
      "real_time/01-propagators.06-aetrs.inp",
      "real_time/05-time_propagation.05-td_md.inp",
      "real_time/19-td_move_ions.02-td.inp",
      "real_time/01-propagators.03-etrs_taylor.inp",
      "real_time/03-td_self_consistent.02-etrs.inp",
      "real_time/01-propagators.02-expmid.inp",
      "real_time/05-time_propagation.02-td_domains.inp",
      "real_time/01-propagators.10-exprk4.inp",
      "real_time/22-td_move_ions_periodic.02-td.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/24-adsic_freeze_orbitals.02-td.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "real_time/02-propagators.04-rungekutta4.inp",
      "real_time/06-caetrs.03-kick-tp1.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/09-flux_3d.04-Na_td_cub.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/12-spm_3d.02-Na_td.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/09-flux_3d.02-Na_td_sph.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.02-td.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.03-td_laser.inp",
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp",
      "periodic_systems/14-silicon_shifts.02-td.inp",
      "periodic_systems/21-magnon.03-susceptibility.inp",
      "periodic_systems/05-lithium.03-td-restart.inp",
      "periodic_systems/14-silicon_shifts.04-delayed_kick.inp",
      "periodic_systems/14-silicon_shifts.03-td_parstates.inp",
      "periodic_systems/31-magnon_1d.02-td.inp",
      "periodic_systems/21-magnon.02-td.inp",
      "periodic_systems/05-lithium.02-td.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/07-qoct+tddft.01-ground_state.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/07-qoct+tddft.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_restarted.inp",
      "maxwell/08-restart-maxwell.01-free-propagation_fromscratch.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/01-free-propagation.01-1_pulse_td.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/06-circular-polarization.01-1_puse_circ_pol.inp",
      "maxwell/09-drude-medium-from-file.05-gold-np-envelope-from-expression.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/07-mode-resolved-maxwell-ks-propagation.02-kick-of-the-electronic-subsystem.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.04-gold-np-external-source.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/01-free-propagation.02-2_pulses_td.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp",
      "lda_u/06-laser.02-length_gauge.inp",
      "lda_u/06-laser.03-velocity_gauge.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "temperaturefunction": {
    "CallLine": "call parse_variable(namespace, 'TemperatureFunction', 'temperature', temp_function_name)",
    "Default": [
      "\"temperature\""
    ],
    "Description": [
      "If a thermostat is used, this variable indicates the name of the",
      "function in the <tt>TDFunctions</tt> block that will be used to control the",
      "temperature. The values of the temperature are given in",
      "degrees Kelvin."
    ],
    "LineNumber": 304,
    "Manuals": [],
    "Name": "TemperatureFunction",
    "Options": [],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "ions/ion_dynamics.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "testbatchops": {
    "CallLine": "call parse_variable(namespace, 'TestBatchOps', ops_default, ops)",
    "Default": [
      "ops_axpy",
      "+",
      "ops_scal",
      "+",
      "ops_nrm2"
    ],
    "Description": [
      "Decides which part of the Hamiltonian is applied."
    ],
    "LineNumber": 913,
    "Manuals": [],
    "Name": "TestBatchOps",
    "Options": [
      {
        "Description": [
          "Tests batch_axpy operation"
        ],
        "Name": "ops_axpy",
        "Value": "bit(1)"
      },
      {
        "Description": [
          "Tests batch_scal operation"
        ],
        "Name": "ops_scal",
        "Value": "bit(2)"
      },
      {
        "Description": [
          "Tests batch_nrm2 operation"
        ],
        "Name": "ops_nrm2",
        "Value": "bit(3)"
      },
      {
        "Description": [
          "Tests X(mesh_batch_dotp_matrix)"
        ],
        "Name": "ops_dotp_matrix",
        "Value": "bit(4)"
      },
      {
        "Description": [
          "Tests X(mesh_batch_dotp_self)"
        ],
        "Name": "ops_dotp_self",
        "Value": "bit(5)"
      },
      {
        "Description": [
          "Tests X(mesh_batch_dotp_vector)"
        ],
        "Name": "ops_dotp_vector",
        "Value": "bit(6)"
      }
    ],
    "Section": "Calculation Modes::Test",
    "Sourcefile": "main/test.F90",
    "Testfiles": [
      "components/26-batch_ops.02-jellium-complex.inp",
      "components/26-batch_ops.03-jellium-spinor.inp",
      "components/26-batch_ops.01-jellium.inp"
    ],
    "Tutorials": [],
    "Type": "flag"
  },
  "testhamiltonianapply": {
    "CallLine": "call parse_variable(namespace, 'TestHamiltonianApply', OPTION__TESTHAMILTONIANAPPLY__TERM_ALL, terms)",
    "Default": [
      "term_all"
    ],
    "Description": [
      "Decides which part of the Hamiltonian is applied."
    ],
    "LineNumber": 636,
    "Manuals": [],
    "Name": "TestHamiltonianApply",
    "Options": [
      {
        "Description": [
          "Apply the full Hamiltonian."
        ],
        "Name": "term_all",
        "Value": "0"
      },
      {
        "Description": [
          "Apply only the kinetic operator"
        ],
        "Name": "term_kinetic",
        "Value": "1"
      },
      {
        "Description": [
          "Apply only the local potential."
        ],
        "Name": "term_local_potential",
        "Value": "2"
      },
      {
        "Description": [
          "Apply only the non_local potential."
        ],
        "Name": "term_non_local_potential",
        "Value": "4"
      }
    ],
    "Section": "Calculation Modes::Test",
    "Sourcefile": "main/test.F90",
    "Testfiles": [
      "components/21-hamiltonian_apply.01-Si.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "testmaxblocksize": {
    "CallLine": "call parse_variable(namespace, 'TestMaxBlockSize', 128, param%max_blocksize)",
    "Default": [
      "128"
    ],
    "Description": [
      "Some tests can work with multiple blocksizes, in this case of",
      "range of blocksizes will be tested. This variable sets the lower",
      "bound of that range.",
      " ",
      "Currently this variable is only used by the derivatives test."
    ],
    "LineNumber": 242,
    "Manuals": [],
    "Name": "TestMaxBlockSize",
    "Options": [],
    "Section": "Calculation Modes::Test",
    "Sourcefile": "main/test.F90",
    "Testfiles": [
      "components/03-derivatives_3d.02-non-orthogonal.inp",
      "components/03-derivatives_3d.01.inp",
      "components/03-derivatives_3d.02-non-orthogonal_unpacked.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "testminblocksize": {
    "CallLine": "call parse_variable(namespace, 'TestMinBlockSize', 1, param%min_blocksize)",
    "Default": [
      "1"
    ],
    "Description": [
      "Some tests can work with multiple blocksizes, in this case of",
      "range of blocksizes will be tested. This variable sets the lower",
      "bound of that range.",
      " ",
      "Currently this variable is only used by the derivatives test."
    ],
    "LineNumber": 229,
    "Manuals": [],
    "Name": "TestMinBlockSize",
    "Options": [],
    "Section": "Calculation Modes::Test",
    "Sourcefile": "main/test.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "testmode": {
    "CallLine": "call parse_variable(namespace, 'TestMode', OPTION__TESTMODE__HARTREE, test_mode)",
    "Default": [
      "hartree"
    ],
    "Description": [
      "Decides what kind of test should be performed."
    ],
    "LineNumber": 180,
    "Manuals": [],
    "Name": "TestMode",
    "Options": [
      {
        "Description": [
          "Tests the Poisson solvers used to calculate the Hartree potential."
        ],
        "Name": "hartree",
        "Value": "1"
      },
      {
        "Description": [
          "Tests and benchmarks the implementation of the finite-difference operators, used to calculate derivatives."
        ],
        "Name": "derivatives",
        "Value": "2"
      },
      {
        "Description": [
          "Tests the implementation of the orthogonalization routines."
        ],
        "Name": "orthogonalization",
        "Value": "3"
      },
      {
        "Description": [
          "Test the interpolation routines."
        ],
        "Name": "interpolation",
        "Value": "4"
      },
      {
        "Description": [
          "Tests the ion-ion interaction routines."
        ],
        "Name": "ion_interaction",
        "Value": "5"
      },
      {
        "Description": [
          "Tests the code that applies the nonlocal part of the pseudopotentials",
          "in case of spin-orbit coupling"
        ],
        "Name": "projector",
        "Value": "6"
      },
      {
        "Description": [
          "Tests the DFT+U part of the code for projections on the basis."
        ],
        "Name": "dft_u",
        "Value": "7"
      },
      {
        "Description": [
          "Tests the application of the Hamiltonian, or a part of it"
        ],
        "Name": "hamiltonian_apply",
        "Value": "8"
      },
      {
        "Description": [
          "Calculation of the density."
        ],
        "Name": "density_calc",
        "Value": "9"
      },
      {
        "Description": [
          "Tests the exponential of the Hamiltonian"
        ],
        "Name": "exp_apply",
        "Value": "10"
      },
      {
        "Description": [
          "Tests the boundaries conditions"
        ],
        "Name": "boundaries",
        "Value": "11"
      },
      {
        "Description": [
          "Tests the subspace diagonalization"
        ],
        "Name": "subspace_diag",
        "Value": "12"
      },
      {
        "Description": [
          "Tests the batch operations"
        ],
        "Name": "batch_ops",
        "Value": "13"
      },
      {
        "Description": [
          "Tests for clock"
        ],
        "Name": "clock",
        "Value": "18"
      },
      {
        "Description": [
          "Tests the linear solvers"
        ],
        "Name": "linear_solver",
        "Value": "19"
      },
      {
        "Description": [
          "Tests for cgal interface"
        ],
        "Name": "cgal",
        "Value": "20"
      },
      {
        "Description": [
          "Tests for dense eigensolvers (especially parallel ones)"
        ],
        "Name": "dense_eigensolver",
        "Value": "21"
      },
      {
        "Description": [
          "Tests for grid interpolation and multigrid methods."
        ],
        "Name": "grid_interpolation",
        "Value": "22"
      },
      {
        "Description": [
          "Tests for the integer-integer hash table."
        ],
        "Name": "iihash",
        "Value": "23"
      },
      {
        "Description": [
          "Tests for the string-integer hash table."
        ],
        "Name": "sihash",
        "Value": "24"
      },
      {
        "Description": [
          "Tests for the string-polymorphic hash table."
        ],
        "Name": "sphash",
        "Value": "25"
      },
      {
        "Description": [
          "Tests for the MPI wrappers with large integer displacements."
        ],
        "Name": "mpiwrappers",
        "Value": "26"
      },
      {
        "Description": [
          "Tests the regridding between two different grids."
        ],
        "Name": "regridding",
        "Value": "27"
      },
      {
        "Description": [
          "Test for the Helmholtz decomposition subroutines"
        ],
        "Name": "helmholtz_decomposition",
        "Value": "28"
      },
      {
        "Description": [
          "Tests analytically the vector potential from B field."
        ],
        "Name": "vecpot_analytical",
        "Value": "29"
      },
      {
        "Description": [
          "Tests the different contributions to the total electronic current density"
        ],
        "Name": "current_density",
        "Value": "30"
      }
    ],
    "Section": "Calculation Modes::Test",
    "Sourcefile": "main/test.F90",
    "Testfiles": [
      "components/22-density_calc.01-Si.inp",
      "components/34-regridding.01-samespacing-mixed.inp",
      "components/20-dft_u.04-complex_submesh.inp",
      "components/26-batch_ops.02-jellium-complex.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/35-helmholtz_decom.01-large_box_no_surf_corr.inp",
      "components/26-batch_ops.03-jellium-spinor.inp",
      "components/18-interpolation.01-1d.inp",
      "components/28-cgal.01.inp",
      "components/34-regridding.02-samespacing-parstates.inp",
      "components/34-regridding.07-spacing-ratio3-nearestneighbor-mixed.inp",
      "components/03-derivatives_3d.02-non-orthogonal.inp",
      "components/01-derivatives_1d.02-fortran.inp",
      "components/26-batch_ops.01-jellium.inp",
      "components/18-interpolation.03-3d.inp",
      "components/35-helmholtz_decom.05-sphere_small_box_with_surf_corr.inp",
      "components/35-helmholtz_decom.04-cylinder_small_box_with_surf_corr.inp",
      "components/37-current-density.inp",
      "components/34-regridding.08-spacing-ratio3-nearestneighbor-parstates.inp",
      "components/01-derivatives_1d.01.inp",
      "components/02-derivatives_2d.01.inp",
      "components/03-derivatives_3d.01.inp",
      "components/27-clock.01.inp",
      "components/08-gs.01-cgs_real.inp",
      "components/18-interpolation.02-2d.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/21-hamiltonian_apply.01-Si.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/34-regridding.03-samespacing-pardomains.inp",
      "components/25-subspace.01-jellium.inp",
      "components/24-boundaries.01-jellium.inp",
      "components/33-mpiwrappers.01-wrappers.inp",
      "components/32-hash-tables.03-sphash.inp",
      "components/32-hash-tables.01-iihash.inp",
      "components/35-helmholtz_decom.03-parallelepiped_small_box_with_surf_corr.inp",
      "components/34-regridding.05-spacing-ratio3-parstates.inp",
      "components/30-eigensolver.01.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/08-gs.05-drcgs_real.inp",
      "components/15-cholesky_parallel.01-real.inp",
      "components/34-regridding.06-spacing-ratio3-pardomains.inp",
      "components/08-gs.03-mgs_real.inp",
      "components/29-linear_solver.01-real.inp",
      "components/07-cholesky_serial.01-real.inp",
      "components/36-maxwell_vector_potential.inp",
      "components/03-derivatives_3d.02-non-orthogonal_unpacked.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/07-cholesky_serial.03-parindep.inp",
      "components/15-cholesky_parallel.02-complex.inp",
      "components/35-helmholtz_decom.02-small_box_no_surf_corr.inp",
      "components/31-grid_interpolation.01.inp",
      "components/34-regridding.09-spacing-ratio3-nearestneighbor-pardomains.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "components/19-hgh_soc.01-3d.inp",
      "components/08-gs.02-cgs_complex.inp",
      "components/07-cholesky_serial.02-complex.inp",
      "components/08-gs.04-mgs_complex.inp",
      "components/32-hash-tables.02-sihash.inp",
      "components/34-regridding.04-spacing-ratio3-mixed.inp",
      "components/23-exponential_apply.01-jellium.inp",
      "components/08-gs.06-drcgs_complex.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "testrepetitions": {
    "CallLine": "call parse_variable(namespace, 'TestRepetitions', 1, param%repetitions)",
    "Default": [
      "1"
    ],
    "Description": [
      "This variable controls the behavior of oct-test for performance",
      "benchmarking purposes. It sets the number of times the",
      "computational kernel of a test will be executed, in order to",
      "provide more accurate timings.",
      " ",
      "Currently this variable is used by the <tt>hartree_test</tt>,",
      "<tt>derivatives</tt>, and <tt>projector</tt> tests."
    ],
    "LineNumber": 216,
    "Manuals": [],
    "Name": "TestRepetitions",
    "Options": [],
    "Section": "Calculation Modes::Test",
    "Sourcefile": "main/test.F90",
    "Testfiles": [
      "components/22-density_calc.01-Si.inp",
      "components/20-dft_u.04-complex_submesh.inp",
      "components/26-batch_ops.02-jellium-complex.inp",
      "components/20-dft_u.03-complex_mesh.inp",
      "components/26-batch_ops.03-jellium-spinor.inp",
      "components/03-derivatives_3d.02-non-orthogonal.inp",
      "components/11-hartree_cl.01-fft.inp",
      "components/01-derivatives_1d.02-fortran.inp",
      "components/26-batch_ops.01-jellium.inp",
      "components/01-derivatives_1d.01.inp",
      "components/02-derivatives_2d.01.inp",
      "components/03-derivatives_3d.01.inp",
      "components/20-dft_u.08-complex_submesh_unpacked.inp",
      "components/21-hamiltonian_apply.01-Si.inp",
      "components/20-dft_u.05-real_mesh_unpacked.inp",
      "components/25-subspace.01-jellium.inp",
      "components/24-boundaries.01-jellium.inp",
      "components/20-dft_u.01-real_mesh.inp",
      "components/29-linear_solver.01-real.inp",
      "components/36-maxwell_vector_potential.inp",
      "components/03-derivatives_3d.02-non-orthogonal_unpacked.inp",
      "components/20-dft_u.07-complex_mesh_unpacked.inp",
      "components/20-dft_u.02-real_submesh.inp",
      "components/20-dft_u.06-real_submesh_unpacked.inp",
      "components/19-hgh_soc.01-3d.inp",
      "components/23-exponential_apply.01-jellium.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "testtype": {
    "CallLine": "call parse_variable(namespace, 'TestType', OPTION__TESTTYPE__ALL, param%type)",
    "Default": [
      "all"
    ],
    "Description": [
      "Decides on what type of values the test should be performed."
    ],
    "LineNumber": 197,
    "Manuals": [],
    "Name": "TestType",
    "Options": [
      {
        "Description": [
          "Test for double-precision real functions."
        ],
        "Name": "real",
        "Value": "1"
      },
      {
        "Description": [],
        "Name": "complex",
        "Value": "2"
      },
      {
        "Description": [
          "Tests for double-precision real and complex functions."
        ],
        "Name": "all",
        "Value": "3"
      }
    ],
    "Section": "Calculation Modes::Test",
    "Sourcefile": "main/test.F90",
    "Testfiles": [
      "components/08-gs.01-cgs_real.inp",
      "components/08-gs.05-drcgs_real.inp",
      "components/15-cholesky_parallel.01-real.inp",
      "components/08-gs.03-mgs_real.inp",
      "components/07-cholesky_serial.01-real.inp",
      "components/07-cholesky_serial.03-parindep.inp",
      "components/15-cholesky_parallel.02-complex.inp",
      "components/08-gs.02-cgs_complex.inp",
      "components/07-cholesky_serial.02-complex.inp",
      "components/08-gs.04-mgs_complex.inp",
      "components/08-gs.06-drcgs_complex.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "testvectorpotentialtype": {
    "CallLine": "call parse_variable(namespace, 'TestVectorPotentialType', OPTION__TESTVECTORPOTENTIALTYPE__BOUNDED, nn)",
    "Default": [
      "bounded"
    ],
    "Description": [
      "Select whether bounded or unbounded type will be used for vector potential tests"
    ],
    "LineNumber": 1819,
    "Manuals": [],
    "Name": "TestVectorPotentialType",
    "Options": [
      {
        "Description": [
          "Analytical Vector Potential formulation is bounded by spatial gaussian"
        ],
        "Name": "bounded",
        "Value": "1"
      },
      {
        "Description": [
          "Analytical Vector Potential is not bounded"
        ],
        "Name": "unbounded",
        "Value": "2"
      }
    ],
    "Section": "Calculation Modes::Test",
    "Sourcefile": "main/test.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "theorylevel": {
    "CallLine": "call parse_variable(namespace, 'TheoryLevel', default, ks%theory_level)",
    "Default": null,
    "Description": [
      "The calculations can be run with different \"theory levels\" that",
      "control how electrons are simulated. The default is",
      "<tt>dft</tt>. When hybrid functionals are requested, through",
      "the <tt>XCFunctional</tt> variable, the default is",
      "<tt>hartree_fock</tt>."
    ],
    "LineNumber": 368,
    "Manuals": [],
    "Name": "TheoryLevel",
    "Options": [
      {
        "Description": [
          "Particles will be considered as independent, <i>i.e.</i> as non-interacting.",
          "This mode is mainly used for testing purposes, as the code is usually",
          "much faster with <tt>independent_particles</tt>."
        ],
        "Name": "independent_particles",
        "Value": "2"
      },
      {
        "Description": [
          "Calculation within the Hartree method (experimental). Note that, contrary to popular",
          "belief, the Hartree potential is self-interaction-free. Therefore, this run",
          "mode will not yield the same result as <tt>kohn-sham</tt> without exchange-correlation."
        ],
        "Name": "hartree",
        "Value": "1"
      },
      {
        "Description": [
          "This is the traditional Hartree-Fock scheme. Like the Hartree scheme, it is fully",
          "self-interaction-free."
        ],
        "Name": "hartree_fock",
        "Value": "3"
      },
      {
        "Description": [
          "This is the default density-functional theory scheme. Note that you can also use",
          "hybrid functionals in this scheme, but they will be handled the \"DFT\" way, <i>i.e.</i>,",
          "solving the OEP equation."
        ],
        "Name": "kohn_sham",
        "Value": "4"
      },
      {
        "Description": [
          "This is similar to the <tt>kohn-sham</tt> scheme, except that this allows for nonlocal operators.",
          "This is the default mode to run hybrid functionals, meta-GGA functionals, or DFT+U.",
          "It can be more convenient to use <tt>kohn-sham</tt> DFT within the OEP scheme to get similar (but not the same) results.",
          "Note that within this scheme you can use a correlation functional, or a hybrid",
          "functional (see <tt>XCFunctional</tt>). In the latter case, you will be following the",
          "quantum-chemistry recipe to use hybrids."
        ],
        "Name": "generalized_kohn_sham",
        "Value": "5"
      },
      {
        "Description": [
          "(Experimental) Reduced Density Matrix functional theory."
        ],
        "Name": "rdmft",
        "Value": "7"
      }
    ],
    "Section": "Hamiltonian",
    "Sourcefile": "electrons/v_ks.F90",
    "Testfiles": [
      "finite_systems_2d/05-spin_precession.02-time_propagation.inp",
      "finite_systems_2d/05-spin_precession.01-ground_state.inp",
      "finite_systems_2d/03-helium_atom.02-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.03-ground_state.inp",
      "finite_systems_2d/08-constrain.02-gs_dir.inp",
      "finite_systems_2d/01-quadratic_box.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.02-ground_state.inp",
      "finite_systems_2d/07-user_def_box.01-gs.inp",
      "finite_systems_2d/04-biot_savart.01-gs.inp",
      "finite_systems_2d/08-constrain.01-gs.inp",
      "finite_systems_2d/03-helium_atom.01-ground_state.inp",
      "finite_systems_2d/02-fock-darwin.04-ground_state.inp",
      "finite_systems_2d/08-constrain.03-polarized.inp",
      "finite_systems_2d/06-gdlib.01-gs.inp",
      "finite_systems_3d/42-full_potential_anc.04-fr-zora.inp",
      "finite_systems_3d/13-full_potential_hydrogen.02-gs-cg.inp",
      "finite_systems_3d/42-full_potential_anc.02-sc-zora.inp",
      "finite_systems_3d/13-full_potential_hydrogen.01-gs.inp",
      "finite_systems_3d/42-full_potential_anc.01-gs.inp",
      "finite_systems_3d/42-full_potential_anc.03-sf-zora.inp",
      "finite_systems_3d/42-full_potential_anc.05-zora-error.inp",
      "real_time/18-hhg.01-gs.inp",
      "real_time/11-tdmagnetic.02-unocc.inp",
      "real_time/08-laser.01-ground_state.inp",
      "real_time/08-laser.05-forces.inp",
      "real_time/18-hhg.02-td.inp",
      "real_time/11-tdmagnetic.03-td.inp",
      "real_time/08-laser.02-length_gauge.inp",
      "real_time/08-laser.03-velocity_gauge.inp",
      "real_time/11-tdmagnetic.01-gs.inp",
      "real_time/08-laser.04-velocity_gauge_cheby.inp",
      "symmetries/05-hexagonal.23-spg165.inp",
      "symmetries/02-monoclinic.05-spg7.inp",
      "symmetries/05-hexagonal.41-spg183.inp",
      "symmetries/02-monoclinic.04-spg6.inp",
      "symmetries/03-orthorombic.14-spg29.inp",
      "symmetries/04-tetragonal.27-spg101.inp",
      "symmetries/06-cubic.29-spg223.inp",
      "symmetries/03-orthorombic.53-spg68.inp",
      "symmetries/04-tetragonal.33-spg107.inp",
      "symmetries/02-monoclinic.07-spg9.inp",
      "symmetries/06-cubic.04-spg198.inp",
      "symmetries/04-tetragonal.51-spg125.inp",
      "symmetries/04-tetragonal.03-spg77.inp",
      "symmetries/03-orthorombic.31-spg46.inp",
      "symmetries/04-tetragonal.08-spg82.inp",
      "symmetries/03-orthorombic.05-spg20.inp",
      "symmetries/04-tetragonal.36-spg110.inp",
      "symmetries/05-hexagonal.15-spg157.inp",
      "symmetries/02-monoclinic.12-spg14.inp",
      "symmetries/03-orthorombic.19-spg34.inp",
      "symmetries/05-hexagonal.28-spg170.inp",
      "symmetries/04-tetragonal.23-spg97.inp",
      "symmetries/04-tetragonal.48-spg122.inp",
      "symmetries/04-tetragonal.21-spg95.inp",
      "symmetries/06-cubic.21-spg215.inp",
      "symmetries/02-monoclinic.09-spg11.inp",
      "symmetries/04-tetragonal.18-spg92.inp",
      "symmetries/04-tetragonal.52-spg126.inp",
      "symmetries/03-orthorombic.55-spg70.inp",
      "symmetries/03-orthorombic.09-spg24.inp",
      "symmetries/04-tetragonal.62-spg136.inp",
      "symmetries/02-monoclinic.08-spg10.inp",
      "symmetries/04-tetragonal.38-spg112.inp",
      "symmetries/04-tetragonal.49-spg123.inp",
      "symmetries/03-orthorombic.20-spg35.inp",
      "symmetries/06-cubic.05-spg199.inp",
      "symmetries/06-cubic.35-spg229.inp",
      "symmetries/02-monoclinic.03-spg5.inp",
      "symmetries/02-monoclinic.06-spg8.inp",
      "symmetries/06-cubic.06-spg200.inp",
      "symmetries/04-tetragonal.57-spg131.inp",
      "symmetries/04-tetragonal.45-spg119.inp",
      "symmetries/05-hexagonal.49-spg191.inp",
      "symmetries/03-orthorombic.26-spg41.inp",
      "symmetries/06-cubic.15-spg209.inp",
      "symmetries/06-cubic.08-spg202.inp",
      "symmetries/04-tetragonal.35-spg109.inp",
      "symmetries/03-orthorombic.07-spg22.inp",
      "symmetries/04-tetragonal.32-spg106.inp",
      "symmetries/04-tetragonal.12-spg86.inp",
      "symmetries/06-cubic.01-spg195.inp",
      "symmetries/05-hexagonal.38-spg180.inp",
      "symmetries/04-tetragonal.01-spg75.inp",
      "symmetries/03-orthorombic.25-spg40.inp",
      "symmetries/04-tetragonal.39-spg113.inp",
      "symmetries/05-hexagonal.02-spg144.inp",
      "symmetries/05-hexagonal.06-spg148.inp",
      "symmetries/06-cubic.32-spg226.inp",
      "symmetries/03-orthorombic.47-spg62.inp",
      "symmetries/05-hexagonal.20-spg162.inp",
      "symmetries/06-cubic.24-spg218.inp",
      "symmetries/06-cubic.30-spg224.inp",
      "symmetries/05-hexagonal.12-spg154.inp",
      "symmetries/05-hexagonal.07-spg149.inp",
      "symmetries/05-hexagonal.27-spg169.inp",
      "symmetries/03-orthorombic.45-spg60.inp",
      "symmetries/05-hexagonal.19-spg161.inp",
      "symmetries/05-hexagonal.16-spg158.inp",
      "symmetries/05-hexagonal.48-spg190.inp",
      "symmetries/06-cubic.09-spg203.inp",
      "symmetries/03-orthorombic.24-spg39.inp",
      "symmetries/03-orthorombic.50-spg65.inp",
      "symmetries/06-cubic.34-spg228.inp",
      "symmetries/05-hexagonal.42-spg184.inp",
      "symmetries/03-orthorombic.23-spg38.inp",
      "symmetries/04-tetragonal.13-spg87.inp",
      "symmetries/06-cubic.02-spg196.inp",
      "symmetries/02-monoclinic.13-spg15.inp",
      "symmetries/05-hexagonal.45-spg187.inp",
      "symmetries/05-hexagonal.22-spg164.inp",
      "symmetries/03-orthorombic.43-spg58.inp",
      "symmetries/03-orthorombic.34-spg49.inp",
      "symmetries/04-tetragonal.47-spg121.inp",
      "symmetries/02-monoclinic.02-spg4.inp",
      "symmetries/03-orthorombic.39-spg54.inp",
      "symmetries/04-tetragonal.17-spg91.inp",
      "symmetries/04-tetragonal.22-spg96.inp",
      "symmetries/05-hexagonal.35-spg177.inp",
      "symmetries/03-orthorombic.13-spg28.inp",
      "symmetries/05-hexagonal.13-spg155.inp",
      "symmetries/03-orthorombic.42-spg57.inp",
      "symmetries/06-cubic.12-spg206.inp",
      "symmetries/02-monoclinic.10-spg12.inp",
      "symmetries/06-cubic.07-spg201.inp",
      "symmetries/03-orthorombic.36-spg51.inp",
      "symmetries/05-hexagonal.44-spg186.inp",
      "symmetries/04-tetragonal.04-spg78.inp",
      "symmetries/05-hexagonal.21-spg163.inp",
      "symmetries/04-tetragonal.02-spg76.inp",
      "symmetries/03-orthorombic.22-spg37.inp",
      "symmetries/05-hexagonal.32-spg174.inp",
      "symmetries/03-orthorombic.35-spg50.inp",
      "symmetries/03-orthorombic.17-spg32.inp",
      "symmetries/05-hexagonal.17-spg159.inp",
      "symmetries/03-orthorombic.04-spg19.inp",
      "symmetries/04-tetragonal.20-spg94.inp",
      "symmetries/06-cubic.20-spg214.inp",
      "symmetries/04-tetragonal.65-spg139.inp",
      "symmetries/03-orthorombic.32-spg47.inp",
      "symmetries/03-orthorombic.02-spg17.inp",
      "symmetries/04-tetragonal.15-spg89.inp",
      "symmetries/03-orthorombic.57-spg72.inp",
      "symmetries/03-orthorombic.15-spg30.inp",
      "symmetries/03-orthorombic.49-spg64.inp",
      "symmetries/06-cubic.11-spg205.inp",
      "symmetries/04-tetragonal.30-spg104.inp",
      "symmetries/04-tetragonal.59-spg133.inp",
      "symmetries/03-orthorombic.54-spg69.inp",
      "symmetries/03-orthorombic.41-spg56.inp",
      "symmetries/06-cubic.19-spg213.inp",
      "symmetries/05-hexagonal.05-spg147.inp",
      "symmetries/04-tetragonal.25-spg99.inp",
      "symmetries/03-orthorombic.58-spg73.inp",
      "symmetries/04-tetragonal.43-spg117.inp",
      "symmetries/01-triclinic.02-spg2.inp",
      "symmetries/04-tetragonal.42-spg116.inp",
      "symmetries/05-hexagonal.50-spg192.inp",
      "symmetries/04-tetragonal.68-spg142.inp",
      "symmetries/04-tetragonal.40-spg114.inp",
      "symmetries/05-hexagonal.34-spg176.inp",
      "symmetries/04-tetragonal.63-spg137.inp",
      "symmetries/06-cubic.31-spg225.inp",
      "symmetries/05-hexagonal.36-spg178.inp",
      "symmetries/05-hexagonal.30-spg172.inp",
      "symmetries/03-orthorombic.48-spg63.inp",
      "symmetries/04-tetragonal.11-spg85.inp",
      "symmetries/05-hexagonal.40-spg182.inp",
      "symmetries/05-hexagonal.11-spg153.inp",
      "symmetries/04-tetragonal.41-spg115.inp",
      "symmetries/01-triclinic.16-spg16.inp",
      "symmetries/04-tetragonal.26-spg100.inp",
      "symmetries/05-hexagonal.24-spg166.inp",
      "symmetries/03-orthorombic.56-spg71.inp",
      "symmetries/06-cubic.16-spg210.inp",
      "symmetries/06-cubic.25-spg219.inp",
      "symmetries/03-orthorombic.51-spg66.inp",
      "symmetries/05-hexagonal.47-spg189.inp",
      "symmetries/04-tetragonal.24-spg98.inp",
      "symmetries/05-hexagonal.51-spg193.inp",
      "symmetries/03-orthorombic.37-spg52.inp",
      "symmetries/05-hexagonal.39-spg181.inp",
      "symmetries/03-orthorombic.27-spg42.inp",
      "symmetries/04-tetragonal.58-spg132.inp",
      "symmetries/04-tetragonal.31-spg105.inp",
      "symmetries/04-tetragonal.06-spg80.inp",
      "symmetries/05-hexagonal.10-spg152.inp",
      "symmetries/05-hexagonal.01-spg143.inp",
      "symmetries/05-hexagonal.04-spg146.inp",
      "symmetries/04-tetragonal.19-spg93.inp",
      "symmetries/03-orthorombic.08-spg23.inp",
      "symmetries/04-tetragonal.29-spg103.inp",
      "symmetries/06-cubic.27-spg221.inp",
      "symmetries/04-tetragonal.56-spg130.inp",
      "symmetries/06-cubic.36-spg230.inp",
      "symmetries/04-tetragonal.55-spg129.inp",
      "symmetries/04-tetragonal.44-spg118.inp",
      "symmetries/04-tetragonal.53-spg127.inp",
      "symmetries/03-orthorombic.11-spg26.inp",
      "symmetries/05-hexagonal.14-spg156.inp",
      "symmetries/06-cubic.33-spg227.inp",
      "symmetries/05-hexagonal.43-spg185.inp",
      "symmetries/03-orthorombic.40-spg55.inp",
      "symmetries/06-cubic.13-spg207.inp",
      "symmetries/06-cubic.03-spg197.inp",
      "symmetries/06-cubic.14-spg208.inp",
      "symmetries/02-monoclinic.11-spg13.inp",
      "symmetries/06-cubic.17-spg211.inp",
      "symmetries/03-orthorombic.30-spg45.inp",
      "symmetries/06-cubic.28-spg222.inp",
      "symmetries/05-hexagonal.46-spg188.inp",
      "symmetries/03-orthorombic.16-spg31.inp",
      "symmetries/06-cubic.23-spg217.inp",
      "symmetries/04-tetragonal.10-spg84.inp",
      "symmetries/06-cubic.18-spg212.inp",
      "symmetries/04-tetragonal.66-spg140.inp",
      "symmetries/04-tetragonal.16-spg90.inp",
      "symmetries/04-tetragonal.61-spg135.inp",
      "symmetries/03-orthorombic.46-spg61.inp",
      "symmetries/01-triclinic.01-spg1.inp",
      "symmetries/03-orthorombic.29-spg44.inp",
      "symmetries/04-tetragonal.67-spg141.inp",
      "symmetries/03-orthorombic.18-spg33.inp",
      "symmetries/05-hexagonal.33-spg175.inp",
      "symmetries/05-hexagonal.25-spg167.inp",
      "symmetries/04-tetragonal.64-spg138.inp",
      "symmetries/03-orthorombic.01-spg16.inp",
      "symmetries/03-orthorombic.21-spg36.inp",
      "symmetries/05-hexagonal.52-spg194.inp",
      "symmetries/06-cubic.26-spg220.inp",
      "symmetries/03-orthorombic.52-spg67.inp",
      "symmetries/04-tetragonal.37-spg111.inp",
      "symmetries/04-tetragonal.28-spg102.inp",
      "symmetries/05-hexagonal.26-spg168.inp",
      "symmetries/05-hexagonal.31-spg173.inp",
      "symmetries/03-orthorombic.59-spg74.inp",
      "symmetries/03-orthorombic.33-spg48.inp",
      "symmetries/04-tetragonal.50-spg124.inp",
      "symmetries/05-hexagonal.37-spg179.inp",
      "symmetries/04-tetragonal.60-spg134.inp",
      "symmetries/03-orthorombic.10-spg25.inp",
      "symmetries/05-hexagonal.08-spg150.inp",
      "symmetries/03-orthorombic.03-spg18.inp",
      "symmetries/05-hexagonal.29-spg171.inp",
      "symmetries/04-tetragonal.54-spg128.inp",
      "symmetries/03-orthorombic.44-spg59.inp",
      "symmetries/05-hexagonal.03-spg145.inp",
      "symmetries/05-hexagonal.18-spg160.inp",
      "symmetries/03-orthorombic.06-spg21.inp",
      "symmetries/04-tetragonal.14-spg88.inp",
      "symmetries/04-tetragonal.34-spg108.inp",
      "symmetries/05-hexagonal.09-spg151.inp",
      "symmetries/03-orthorombic.12-spg27.inp",
      "symmetries/03-orthorombic.28-spg43.inp",
      "symmetries/04-tetragonal.46-spg120.inp",
      "symmetries/03-orthorombic.38-spg53.inp",
      "symmetries/02-monoclinic.01-spg3.inp",
      "symmetries/06-cubic.22-spg216.inp",
      "symmetries/06-cubic.10-spg204.inp",
      "symmetries/04-tetragonal.07-spg81.inp",
      "symmetries/04-tetragonal.09-spg83.inp",
      "symmetries/04-tetragonal.05-spg79.inp",
      "photo_electron/05-pfft.01-gs.inp",
      "photo_electron/06-2D.01-Na_gs.inp",
      "photo_electron/06-2D.02-Na_few_cy.inp",
      "photo_electron/05-pfft.03-ba.inp",
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/13-arpes_2d.03-restart.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/13-arpes_2d.04-spectrum.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/05-pfft.02-mask.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/13-arpes_2d.01-gs.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/13-arpes_2d.02-td.inp",
      "photo_electron/02-restart.02-restart_ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp",
      "errors/02-scf_errors.01-rdmft.inp",
      "tutorials/01-octopus_basics-getting_started.03-H_atom_independent.inp",
      "functionals/03-xc.mvorb_hse06_fock.inp",
      "functionals/16-dressed-rdmft.03-rdmft.inp",
      "functionals/06-rdmft.03-gs_grid.inp",
      "functionals/03-xc.01-gs.inp",
      "functionals/18-mgga.02-br89_oep.inp",
      "functionals/01-xc_1d.02-wfs-hf.inp",
      "functionals/03-xc.pbe0_fock.inp",
      "functionals/06-rdmft.01-ip.inp",
      "functionals/16-dressed-rdmft.02-hf.inp",
      "functionals/03-xc.pbe0_oep.inp",
      "functionals/02-xc_2d.01-hartree.inp",
      "functionals/03-xc.b3lyp_oep.inp",
      "functionals/02-xc_2d.02-hf.inp",
      "functionals/16-dressed-rdmft.01-ip.inp",
      "functionals/06-rdmft.02-gs_basis.inp",
      "periodic_systems/01-free_electrons.02-unocc.inp",
      "periodic_systems/01-free_electrons.01-ground_state.inp",
      "periodic_systems/23-hybrids.02-ace_accel.inp",
      "periodic_systems/02-cosine_potential.02-unocc.inp",
      "periodic_systems/24-hartree_fock_1D.01-gs.inp",
      "periodic_systems/23-hybrids.01-ace.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp",
      "periodic_systems/30-stress.01-independent.inp",
      "periodic_systems/02-cosine_potential.01-ground_state.inp",
      "finite_systems_1d/09-morse.02-unocc.inp",
      "finite_systems_1d/01-hydrogen.03-dummy.inp",
      "finite_systems_1d/09-morse.01-gs.inp",
      "finite_systems_1d/02-neon_mpi.01-ground_state-IP_par_domains.inp",
      "finite_systems_1d/03-He-Hartree-Fock.01-gs.inp",
      "finite_systems_1d/01-hydrogen.02-excited_state.inp",
      "finite_systems_1d/09-morse.03-td.inp",
      "finite_systems_1d/01-hydrogen.04-absorbing_boundaries.inp",
      "finite_systems_1d/01-hydrogen.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.03-oct_run.inp",
      "optimal_control/05-adw.02-unocc.inp",
      "optimal_control/05-adw.02-unocc.inp",
      "optimal_control/04-box.01-ground_state.inp",
      "optimal_control/04-box.01-ground_state.inp",
      "optimal_control/10-current.01-ground_state.inp",
      "optimal_control/10-current.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.02-unocc.inp",
      "optimal_control/01-asym_doublewell.02-unocc.inp",
      "optimal_control/04-box.08-oct_long.inp",
      "optimal_control/08-velocities.02-oct.inp",
      "optimal_control/06-zbr98.02-oct.inp",
      "optimal_control/10-current.02-oct.inp",
      "optimal_control/13-box-nlopt.04-lbfgs.inp",
      "optimal_control/09-density+current.03-tdoct.inp",
      "optimal_control/11-classical.03-oct_taylor.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/05-adw.03-filter_fixed.inp",
      "optimal_control/04-box.03-oct_long.inp",
      "optimal_control/11-classical.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.03-oct.inp",
      "optimal_control/13-box-nlopt.03-bobyqa.inp",
      "optimal_control/12-spintarget.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.01-ground_state.inp",
      "optimal_control/02-sym_doublewell.01-ground_state.inp",
      "optimal_control/04-box.06-oct_long.inp",
      "optimal_control/06-zbr98.01-ground_state.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/05-adw.04-filter_indirect.inp",
      "optimal_control/02-sym_doublewell.02-unocc.inp",
      "optimal_control/02-sym_doublewell.02-unocc.inp",
      "optimal_control/04-box.04-oct_long.inp",
      "optimal_control/08-velocities.01-ground_state.inp",
      "optimal_control/05-adw.01-ground_state.inp",
      "optimal_control/05-adw.01-ground_state.inp",
      "optimal_control/11-classical.02-oct.inp",
      "optimal_control/03-localtarget.02-oct.inp",
      "optimal_control/01-asym_doublewell.04-oct_run.inp",
      "optimal_control/04-box.02-unocc.inp",
      "optimal_control/04-box.02-unocc.inp",
      "optimal_control/01-asym_doublewell.05-oct_run.inp",
      "optimal_control/03-localtarget.05-oct-mp.inp",
      "optimal_control/09-density+current.02-oct.inp",
      "optimal_control/04-box.07-oct_long.inp",
      "optimal_control/03-localtarget.04-gs-mp.inp",
      "optimal_control/01-asym_doublewell.01-ground_state.inp",
      "optimal_control/01-asym_doublewell.01-ground_state.inp",
      "optimal_control/03-localtarget.01-gs.inp",
      "optimal_control/03-localtarget.01-gs.inp",
      "optimal_control/09-density+current.01-ground_state.inp",
      "optimal_control/09-density+current.01-ground_state.inp",
      "optimal_control/03-localtarget.03-tdoct.inp",
      "optimal_control/04-box.05-oct_long.inp",
      "optimal_control/12-spintarget.02-oct.inp",
      "modelmb/01-cosh_2e_1d.02-td.inp",
      "modelmb/02-qd_2e_2d.01-gs.inp",
      "modelmb/02-qd_2e_2d.02-td.inp",
      "modelmb/01-cosh_2e_1d.01-gs.inp",
      "maxwell/14-quadrupole-pot.01-hydrogen-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "thermostat": {
    "CallLine": "call parse_variable(namespace, 'Thermostat', THERMO_NONE, this%thermostat)",
    "Default": [
      "none"
    ],
    "Description": [
      "This variable selects the type of thermostat applied to",
      "control the ionic temperature."
    ],
    "LineNumber": 278,
    "Manuals": [],
    "Name": "Thermostat",
    "Options": [
      {
        "Description": [
          "No thermostat is applied. This is the default."
        ],
        "Name": "none",
        "Value": "0"
      },
      {
        "Description": [
          "Velocities are scaled to control the temperature."
        ],
        "Name": "velocity_scaling",
        "Value": "1"
      },
      {
        "Description": [
          "Nose-Hoover thermostat."
        ],
        "Name": "nose_hoover",
        "Value": "2"
      }
    ],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "ions/ion_dynamics.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "thermostatmass": {
    "CallLine": "call parse_variable(namespace, 'ThermostatMass', M_ONE, this%nh(1)%mass)",
    "Default": [
      "1.0"
    ],
    "Description": [
      "This variable sets the fictitious mass for the Nose-Hoover",
      "thermostat."
    ],
    "LineNumber": 325,
    "Manuals": [],
    "Name": "ThermostatMass",
    "Options": [],
    "Section": "Time-Dependent::Propagation",
    "Sourcefile": "ions/ion_dynamics.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "timezero": {
    "CallLine": "call parse_variable(namespace, 'TimeZero', .false., hm%time_zero)",
    "Default": [
      "no"
    ],
    "Description": [
      "(Experimental) If set to yes, the ground state and other time",
      "dependent calculation will assume that they are done at time",
      "zero, so that all time depedent field at that time will be",
      "included."
    ],
    "LineNumber": 479,
    "Manuals": [],
    "Name": "TimeZero",
    "Options": [],
    "Section": "Hamiltonian",
    "Sourcefile": "hamiltonian/hamiltonian_elec.F90",
    "Testfiles": [
      "optimal_control/11-classical.01-ground_state.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "totalstates": {
    "CallLine": "call parse_variable(namespace, 'TotalStates', 0, ntot)",
    "Default": [
      "0"
    ],
    "Description": [
      "This variable sets the total number of states that Octopus will",
      "use. This is normally not necessary since by default Octopus",
      "sets the number of states to the minimum necessary to hold the",
      "electrons present in the system. (This default behavior is",
      "obtained by setting <tt>TotalStates</tt> to 0).",
      " ",
      "If you want to add some unoccupied states, probably it is more convenient to use the variable",
      "<tt>ExtraStates</tt>."
    ],
    "LineNumber": 330,
    "Manuals": [],
    "Name": "TotalStates",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/states_elec.F90",
    "Testfiles": [
      "functionals/10-vdw_d3_dna.02-gs_d3.inp",
      "periodic_systems/08-benzene_supercell.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "transformstates": {
    "Default": [
      "no"
    ],
    "Description": [
      "Before starting the <tt>td</tt> calculation, the initial states (that are",
      "read from the <tt>restart/gs</tt> directory, which should have been",
      "generated in a previous ground-state calculation) can be \"transformed\"",
      "among themselves. The block <tt>TransformStates</tt> gives the transformation matrix",
      "to be used. The number of rows and columns of the matrix should equal the number",
      "of the states present in the time-dependent calculation (the independent",
      "spin and <i>k</i>-point subspaces are all transformed equally); the number of",
      "columns should be equal to the number of states present in the",
      "<tt>restart/gs</tt> directory. This number may be different: for example,",
      "one could have run previously in <tt>unocc</tt> mode in order to obtain unoccupied",
      "Kohn-Sham states, and therefore <tt>restart/gs</tt> will contain more states.",
      "These states can be used in the transformation.",
      " ",
      "Note that the code will not check the orthonormality of the new states!",
      " ",
      "Each line provides the coefficients of the new states, in terms of",
      "the old ones. The coefficients are complex, but the imaginary part will be",
      "ignored for real wavefunctions.",
      "Note: This variable cannot be used when parallel in states."
    ],
    "Manuals": [],
    "Name": "TransformStates",
    "Options": [],
    "Section": "States",
    "Sourcefile": "states/states_elec_restart.F90",
    "Testfiles": [
      "real_time/05-time_propagation.02-td_domains.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "transientabsorptionreference": {
    "CallLine": "call parse_variable(global_namespace, 'TransientAbsorptionReference', '.', ref_filename)",
    "Default": [
      "\".\""
    ],
    "Description": [
      "In case of delayed kick, the calculation of the transient absorption requires",
      "to substract a reference calculation, containing the gauge-field without the kick",
      "This reference must be computed using GaugeFieldPropagate=yes and to have",
      "TDOutput = gauge_field.",
      "This variables defined the directory in which the reference gauge_field field is,",
      "relative to the current folder"
    ],
    "LineNumber": 141,
    "Manuals": [],
    "Name": "TransientAbsorptionReference",
    "Options": [],
    "Section": "Utilities::oct-propagation_spectrum",
    "Sourcefile": "utils/dielectric_function.F90",
    "Testfiles": [
      "periodic_systems/14-silicon_shifts.05-dielectric_function.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "transientmagnetizationreference": {
    "CallLine": "call parse_variable(global_namespace, 'TransientMagnetizationReference', '.', ref_filename)",
    "Default": [
      "\".\""
    ],
    "Description": [
      "In case of delayed kick, the calculation of the transient spin susceptibility requires",
      "to substract a reference calculation, containing dynamics of the magnetization without the kick",
      "This reference must be computed having",
      "TDOutput = total_magnetization.",
      "This variables defined the directory in which the reference total_magnetization file is,",
      "relative to the current folder"
    ],
    "LineNumber": 110,
    "Manuals": [],
    "Name": "TransientMagnetizationReference",
    "Options": [],
    "Section": "Utilities::oct-spin_susceptibility",
    "Sourcefile": "utils/spin_susceptibility.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "transversefieldcalculation": {
    "CallLine": "call parse_variable(namespace, 'TransverseFieldCalculation', TRANSVERSE_FROM_HELMHOLTZ, st%transverse_field_mode)",
    "Default": [
      "no"
    ],
    "Description": [
      "This variable selects the method for the calculation of the transverse field."
    ],
    "LineNumber": 343,
    "Manuals": [],
    "Name": "TransverseFieldCalculation",
    "Options": [
      {
        "Description": [
          "Transverse field calculated from Helmholtz decompisition (unreliable at the moment)."
        ],
        "Name": "helmholtz",
        "Value": "1"
      },
      {
        "Description": [
          "Total field minus longitudinal field."
        ],
        "Name": "total_minus_long",
        "Value": "2"
      }
    ],
    "Section": "Maxwell",
    "Sourcefile": "states/states_mxll.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "unfoldenergystep": {
    "CallLine": "call parse_variable(global_namespace, 'UnfoldEnergyStep', M_ZERO, de)",
    "Default": [
      "0"
    ],
    "Description": [
      "Specifies the energy resolution for the unfolded band structure.",
      "If you specify 0, the resolution will be set to be 1/1000 points between <tt>UnfoldMinEnergy</tt>",
      "and <tt>UnfoldMaxEnergy</tt>"
    ],
    "LineNumber": 349,
    "Manuals": [],
    "Name": "UnfoldEnergyStep",
    "Options": [],
    "Section": "Utilities::oct-unfold",
    "Sourcefile": "utils/unfold.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "unfoldkpointspath": {
    "CallLine": "if (parse_block(global_namespace, 'UnfoldKPointsPath', blk) /= 0) then",
    "Default": null,
    "Description": [
      "Specifies the k-point path for which the unfolding need to be done.",
      "The syntax is identical to <tt>KPointsPath</tt>."
    ],
    "LineNumber": 170,
    "Manuals": [],
    "Name": "UnfoldKPointsPath",
    "Options": [],
    "Section": "Utilities::oct-unfold",
    "Sourcefile": "utils/unfold.F90",
    "Testfiles": [
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/19-unfolding.02-setup.inp",
      "periodic_systems/19-unfolding.04-run.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "unfoldlatticeparameters": {
    "Default": null,
    "Description": [
      "The lattice parameters of the primitive cell, on which unfolding is performed.",
      "See the LatticeParameters variable for a more detailed description."
    ],
    "Manuals": [],
    "Name": "UnfoldLatticeParameters",
    "Options": [],
    "Section": "Utilities::oct-unfold",
    "Sourcefile": "utils/unfold.F90",
    "Testfiles": [
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/19-unfolding.02-setup.inp",
      "periodic_systems/19-unfolding.04-run.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "unfoldlatticevectors": {
    "Default": [
      "simple",
      "cubic"
    ],
    "Description": [
      "Lattice vectors of the primitive cell on which the unfolding is performed.",
      "See the LatticeVectors variable for a more detailed description."
    ],
    "Manuals": [],
    "Name": "UnfoldLatticeVectors",
    "Options": [],
    "Section": "Utilities::oct-unfold",
    "Sourcefile": "utils/unfold.F90",
    "Testfiles": [
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/19-unfolding.02-setup.inp",
      "periodic_systems/19-unfolding.04-run.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "unfoldmaxenergy": {
    "CallLine": "call parse_variable(global_namespace, 'UnfoldMaxEnergy', maxval(st%eigenval(:, :)), eigmax)",
    "Default": null,
    "Description": [
      "Specifies the end of the energy range for the unfolded band structure.",
      "The default value correspond to the largest eigenvalue."
    ],
    "LineNumber": 371,
    "Manuals": [],
    "Name": "UnfoldMaxEnergy",
    "Options": [],
    "Section": "Utilities::oct-unfold",
    "Sourcefile": "utils/unfold.F90",
    "Testfiles": [
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/19-unfolding.04-run.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "unfoldminenergy": {
    "CallLine": "call parse_variable(global_namespace, 'UnfoldMinEnergy', minval(st%eigenval(:, :)), eigmin)",
    "Default": null,
    "Description": [
      "Specifies the start of the energy range for the unfolded band structure.",
      "The default value correspond to the samllest eigenvalue."
    ],
    "LineNumber": 362,
    "Manuals": [],
    "Name": "UnfoldMinEnergy",
    "Options": [],
    "Section": "Utilities::oct-unfold",
    "Sourcefile": "utils/unfold.F90",
    "Testfiles": [
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/19-unfolding.04-run.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "unfoldmode": {
    "CallLine": "call parse_variable(global_namespace, 'UnfoldMode', 0, run_mode)",
    "Default": [
      "none"
    ],
    "Description": [
      "Specifies which stage of the unfolding tool to use"
    ],
    "LineNumber": 140,
    "Manuals": [],
    "Name": "UnfoldMode",
    "Options": [
      {
        "Description": [
          "Writes the list of k-points corresponding to the path specified by <tt>UnfoldKPointPath</tt>.",
          "This list of k-point (unfold_kpt.dat) must be used for an unocc calculation of the supercell,",
          "adding the line \"include 'unfold_kpt.dat'\" to the inp file and removing the KPointGrid information."
        ],
        "Name": "unfold_setup",
        "Value": "bit(1)"
      },
      {
        "Description": [
          "Perform the actual unfolding, based on the states obtained from the previous unocc run."
        ],
        "Name": "unfold_run",
        "Value": "bit(2)"
      }
    ],
    "Section": "Utilities::oct-unfold",
    "Sourcefile": "utils/unfold.F90",
    "Testfiles": [
      "periodic_systems/25-Fe_polarized.04-unfold.inp",
      "periodic_systems/25-Fe_polarized.02-setup.inp",
      "periodic_systems/19-unfolding.02-setup.inp",
      "periodic_systems/19-unfolding.04-run.inp"
    ],
    "Tutorials": [],
    "Type": "flag"
  },
  "units": {
    "Default": [
      "atomic"
    ],
    "Description": [
      "(Virtual) These are the units that can be used in the input file.",
      " "
    ],
    "Manuals": [],
    "Name": "Units",
    "Options": [
      {
        "Description": [],
        "Name": "angstrom",
        "Value": "1.8897261328856432"
      },
      {
        "Description": [],
        "Name": "pm",
        "Value": "0.018897261328856432"
      },
      {
        "Description": [],
        "Name": "picometer",
        "Value": "0.018897261328856432"
      },
      {
        "Description": [],
        "Name": "nm",
        "Value": "18.897261328856432"
      },
      {
        "Description": [],
        "Name": "nanometer",
        "Value": "18.897261328856432"
      },
      {
        "Description": [],
        "Name": "ry",
        "Value": "0.5"
      },
      {
        "Description": [],
        "Name": "rydberg",
        "Value": "0.5"
      },
      {
        "Description": [],
        "Name": "ev",
        "Value": "0.03674932539796232"
      },
      {
        "Description": [],
        "Name": "electronvolt",
        "Value": "0.03674932539796232"
      },
      {
        "Description": [],
        "Name": "invcm",
        "Value": "4.5563353e-06"
      },
      {
        "Description": [],
        "Name": "kelvin",
        "Value": "3.1668105e-06"
      },
      {
        "Description": [],
        "Name": "kjoule_mol",
        "Value": "0.00038087988"
      },
      {
        "Description": [],
        "Name": "kcal_mol",
        "Value": "0.0015936014"
      },
      {
        "Description": [],
        "Name": "as",
        "Value": "0.0413413737896"
      },
      {
        "Description": [],
        "Name": "attosecond",
        "Value": "0.0413413737896"
      },
      {
        "Description": [],
        "Name": "fs",
        "Value": "41.3413737896"
      },
      {
        "Description": [],
        "Name": "femtosecond",
        "Value": "41.3413737896"
      },
      {
        "Description": [],
        "Name": "ps",
        "Value": "41341.3737896"
      },
      {
        "Description": [],
        "Name": "picosecond",
        "Value": "41341.3737896"
      },
      {
        "Description": [],
        "Name": "c",
        "Value": "137.035999139"
      }
    ],
    "Section": "Execution::Units",
    "Sourcefile": "basic/unit_system.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "virtual"
  },
  "unitsoutput": {
    "CallLine": "call parse_variable(namespace, 'UnitsOutput', UNITS_ATOMIC, cc)",
    "Default": [
      "atomic"
    ],
    "Description": [
      "This variable selects the units that Octopus use for output.",
      " ",
      "Atomic units seem to be the preferred system in the atomic and",
      "molecular physics community. Internally, the code works in",
      "atomic units. However, for output, some people like",
      "to use a system based on electron-Volts (eV) for energies",
      "and Angstroms (&Aring;) for length.",
      " ",
      "Normally time units are derived from energy and length units,",
      "so it is measured in <math>\\hbar</math>/Hartree or",
      "<math>\\hbar</math>/eV.",
      " ",
      "Warning 1: All files read on input will also be treated using",
      "these units, including XYZ geometry files.",
      " ",
      "Warning 2: Some values are treated in their most common units,",
      "for example atomic masses (a.m.u.), electron effective masses",
      "(electron mass), vibrational frequencies",
      "(cm<sup>-1</sup>) or temperatures (Kelvin). The unit of charge is always",
      "the electronic charge <i>e</i>.",
      " "
    ],
    "LineNumber": 172,
    "Manuals": [],
    "Name": "UnitsOutput",
    "Options": [
      {
        "Description": [
          "Atomic units."
        ],
        "Name": "atomic",
        "Value": "0"
      },
      {
        "Description": [
          "Electronvolts for energy, Angstroms for length, the rest of the",
          "units are derived from these and <math>\\hbar=1</math>."
        ],
        "Name": "ev_angstrom",
        "Value": "1"
      }
    ],
    "Section": "Execution::Units",
    "Sourcefile": "basic/unit_system.F90",
    "Testfiles": [
      "multisystem/11-dftbplus_ehrenfest.01-benzene.inp",
      "linear_response/05-polarizability.02-sternheimer.inp",
      "linear_response/05-polarizability.01-gs.inp",
      "linear_response/05-polarizability.03-finite-diff.inp",
      "finite_systems_3d/30-local_multipoles.02-multipoles.inp",
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/30-local_multipoles.01-gs.inp",
      "finite_systems_3d/05-output.02-gs.inp",
      "finite_systems_3d/16-scfinlcao_std.01-gs.inp",
      "finite_systems_3d/07-spin_orbit_coupling.01-hgh.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/33-cg.02-additional_terms.inp",
      "finite_systems_3d/20-eigensolver.01-cg.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/05-output.01-gs-set1.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/20-eigensolver.07-chebyshev.inp",
      "finite_systems_3d/30-local_multipoles.03-multipoles_restart.inp",
      "finite_systems_3d/33-cg.03-cg_direction.inp",
      "finite_systems_3d/05-output.04-convert-op.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.01-hgh.inp",
      "finite_systems_3d/20-eigensolver.03-plan.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/05-output.03-convert.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.02-rkb.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "finite_systems_3d/20-eigensolver.05-rmmdiis.inp",
      "finite_systems_3d/07-spin_orbit_coupling.02-rkb.inp",
      "finite_systems_3d/32-tdpcm_methane.01-ground_state.inp",
      "finite_systems_3d/20-eigensolver.04-evolution.inp",
      "finite_systems_3d/20-eigensolver.06-rmmdiis-noscalapack.inp",
      "finite_systems_3d/08-spin_orbit_coupling_full.03-unocc.inp",
      "finite_systems_3d/33-cg.01-orthogonalize_all.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "finite_systems_3d/32-tdpcm_methane.02-td_prop_neq.inp",
      "finite_systems_3d/32-tdpcm_methane.03-td_prop_eom.inp",
      "real_time/19-td_move_ions.01-gs.inp",
      "real_time/17-absorption-spin_symmetry.01-gs.inp",
      "real_time/20-pcm-local-field-absorption.01-gs.inp",
      "real_time/14-absorption-spinors.04-spectrum.inp",
      "real_time/13-absorption-spin.02-td.inp",
      "real_time/12-absorption.02-td.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/19-td_move_ions.03-td_restart.inp",
      "real_time/12-absorption.01-gs.inp",
      "real_time/20-pcm-local-field-absorption.02-td_prop_eom.inp",
      "real_time/13-absorption-spin.07-spectrum_triplet.inp",
      "real_time/14-absorption-spinors.03-td-restart.inp",
      "real_time/13-absorption-spin.04-spectrum.inp",
      "real_time/13-absorption-spin.03-td-restart.inp",
      "real_time/14-absorption-spinors.02-td.inp",
      "real_time/22-td_move_ions_periodic.01-gs.inp",
      "real_time/12-absorption.06-power_spectrum.inp",
      "real_time/12-absorption.05-spectrum_compressed_sensing.inp",
      "real_time/21-scissor.03-spectrum.inp",
      "real_time/14-absorption-spinors.01-gs.inp",
      "real_time/19-td_move_ions.02-td.inp",
      "real_time/13-absorption-spin.05-spectrum_compressed_sensing.inp",
      "real_time/13-absorption-spin.06-td_spinkick.inp",
      "real_time/13-absorption-spin.01-gs.inp",
      "real_time/12-absorption.04-spectrum.inp",
      "real_time/17-absorption-spin_symmetry.02-td.inp",
      "real_time/12-absorption.08-spectrum_exp.inp",
      "real_time/22-td_move_ions_periodic.02-td.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "real_time/17-absorption-spin_symmetry.03-spectrum.inp",
      "real_time/12-absorption.07-spectrum_cosine.inp",
      "real_time/12-absorption.03-td-restart.inp",
      "real_time/14-absorption-spinors.05-spectrum_compressed_sensing.inp",
      "pseudopotentials/06-carbon_dojo_pbe.01-gs.inp",
      "pseudopotentials/08-carbon_fhi.01-gs.inp",
      "pseudopotentials/07-carbon_dojo_lda.01-gs.inp",
      "pseudopotentials/05-carbon_dojo_pbesol.01-gs.inp",
      "pseudopotentials/04-carbon_dojo_psml.01-gs.inp",
      "pseudopotentials/09-carbon_cpi.01-gs.inp",
      "pseudopotentials/14-carbon_dojo_psp8.01-gs.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.01-N_atom.inp",
      "tutorials/04-octopus_basics-visualization.01-benzene.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.02-methane.inp",
      "tutorials/02-octopus_basics-basic_input_options.01-N_atom.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.01-gs.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.02-td.inp",
      "tutorials/07-octopus_basics-time_dependent_propagation.03-td_laser.inp",
      "periodic_systems/16-sodium_chain_cylinder.03-ground_state_disp.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/16-sodium_chain_cylinder.02-unocc.inp",
      "periodic_systems/05-lithium.05-tdtdm.inp",
      "periodic_systems/03-sodium_chain.01-ground_state.inp",
      "periodic_systems/32-photodoping.01-gs.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/24-hartree_fock_1D.01-gs.inp",
      "periodic_systems/03-sodium_chain.04-unocc_disp.inp",
      "periodic_systems/03-sodium_chain.02-unocc.inp",
      "periodic_systems/03-sodium_chain.03-ground_state_disp.inp",
      "periodic_systems/16-sodium_chain_cylinder.01-ground_state.inp",
      "periodic_systems/16-sodium_chain_cylinder.04-unocc_disp.inp",
      "components/06-hartree_3d_isf.01-isf.inp",
      "components/14-center-geom.01-run.inp",
      "lda_u/10-intersite.02-silicon.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "unitsxyzfiles": {
    "CallLine": "call parse_variable(namespace, 'UnitsXYZFiles', OPTION__UNITSXYZFILES__ANGSTROM_UNITS, xyz_units)",
    "Default": [
      "angstrom_units"
    ],
    "Description": [
      "This variable selects in which units I/O of XYZ files should be",
      "performed."
    ],
    "LineNumber": 251,
    "Manuals": [],
    "Name": "UnitsXYZFiles",
    "Options": [
      {
        "Description": [
          "The XYZ will be assumed to be in Bohr atomic units."
        ],
        "Name": "bohr_units",
        "Value": "0"
      },
      {
        "Description": [
          "XYZ files will be assumed to be always in Angstrom,",
          "independently of the units used by Octopus. This ensures",
          "compatibility with most programs, that assume XYZ files have",
          "coordinates in Angstrom."
        ],
        "Name": "angstrom_units",
        "Value": "1"
      }
    ],
    "Section": "Execution::Units",
    "Sourcefile": "basic/unit_system.F90",
    "Testfiles": [
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.01-benzene-gs.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "unoccshowoccstates": {
    "CallLine": "call parse_variable(sys%namespace, 'UnoccShowOccStates', .false., showoccstates)",
    "Default": [
      "false"
    ],
    "Description": [
      "If true, the convergence for the occupied states will be shown too in the output.",
      "This is useful for testing, or if the occupied states fail to converge.",
      "It will be enabled automatically if only occupied states are being calculated."
    ],
    "LineNumber": 116,
    "Manuals": [],
    "Name": "UnoccShowOccStates",
    "Options": [],
    "Section": "Calculation Modes::Unoccupied States",
    "Sourcefile": "scf/unocc.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "unoccusetd": {
    "CallLine": "call parse_variable(sys%namespace, 'UnoccUseTD', .false., read_td_states)",
    "Default": [
      "no"
    ],
    "Description": [
      "If true, Octopus will use the density and states from the restart/td folder to compute",
      "the bandstructure, instead of the restart/gs ones."
    ],
    "LineNumber": 136,
    "Manuals": [],
    "Name": "UnoccUseTD",
    "Options": [],
    "Section": "Calculation Modes::Unoccupied States",
    "Sourcefile": "scf/unocc.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "useallatomicorbitals": {
    "CallLine": "call parse_variable(namespace, 'UseAllAtomicOrbitals', .false., this%useAllOrbitals)",
    "Default": [
      "no"
    ],
    "Description": [
      "If set to yes, Octopus will determine the effective U for all atomic orbitals",
      "from the peusopotential. Only available with ACBN0 functional.",
      "It is strongly recommended to set AOLoewdin=yes when using the option."
    ],
    "LineNumber": 285,
    "Manuals": [],
    "Name": "UseAllAtomicOrbitals",
    "Options": [],
    "Section": "Hamiltonian::DFT+U",
    "Sourcefile": "hamiltonian/lda_u.F90",
    "Testfiles": [
      "lda_u/08-loewdin.01-Si.inp",
      "lda_u/04-ACBN0_isolated.02-H_packed.inp",
      "lda_u/10-intersite.02-silicon.inp",
      "lda_u/11-full_delta.01-gs.inp",
      "lda_u/04-ACBN0_isolated.01-H_unpacked.inp",
      "lda_u/02-ACBN0.02-lif.inp",
      "lda_u/08-loewdin.03-intersite_domains.inp",
      "lda_u/03-ACBN0_restricted.02-lif_unpacked.inp",
      "lda_u/08-loewdin.02-intersite.inp",
      "lda_u/03-ACBN0_restricted.01-lif.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "userdefinedconstantspatialmaxwellfield": {
    "CallLine": "if (parse_block(namespace, 'UserDefinedConstantSpatialMaxwellField', blk) == 0) then",
    "Default": null,
    "Description": [
      "Define parameters of spatially constant field.",
      " ",
      "Example:",
      " ",
      "<tt>%UserDefinedConstantSpatialMaxwellFields",
      "<br>&nbsp;&nbsp;   plane_wave_parser      | E_x | E_y | E_z | B_x | B_y | B_z | \"tdf_function\"",
      "<br>%</tt>",
      " ",
      "This block defines three components of E field, three components of B field, and reference to",
      "the TD function.",
      " "
    ],
    "LineNumber": 1414,
    "Manuals": [],
    "Name": "UserDefinedConstantSpatialMaxwellField",
    "Options": [],
    "Section": "Maxwell",
    "Sourcefile": "maxwell/propagator_mxll.F90",
    "Testfiles": [
      "multisystem/07-lorentz-force.03-charged_particle_illegal_propagator.inp",
      "multisystem/07-lorentz-force.01-charged_particle_coupled_to_maxwell.inp",
      "maxwell/10-current-to-maxwell.01-all-forces-non-self-consistent.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "userdefinedinitialmaxwellstates": {
    "CallLine": "if (parse_block(namespace, 'UserDefinedInitialMaxwellStates', blk) == 0) then",
    "Default": null,
    "Description": [
      "The initial electromagnetic fields can be set by the user",
      "with the <tt>UserDefinedMaxwellStates</tt> block variable.",
      "The electromagnetic fields have to fulfill the",
      "Maxwells equations in vacuum.",
      " ",
      "Example:",
      " ",
      "<tt>%UserDefinedMaxwellStates",
      "<br>&nbsp;&nbsp; formula | 2 | \"magnetic_field\" | \"-1/P_c * sin(x)\"",
      "<br>&nbsp;&nbsp; formula | 3 | \"electric_field\" | \"   sin(x)      \"",
      "<br>%</tt>",
      " ",
      "The second column specifies the component of the dimension of",
      "the electric field and magnetic field. The first column",
      "indicates that column four should be interpreted",
      "as a formula for the corresponding state. P_c is the",
      "speed of light constant.",
      " ",
      "Alternatively, if column one states <tt>file</tt> the",
      "electric field and magnetic field will be read from",
      "the files given in column four.",
      " ",
      "<tt>%UserDefinedMaxwellStates",
      "<br>&nbsp;&nbsp; file | 3 | electric_field | \"/path/to/file_electric_field_of_dimension_3\"",
      "<br>&nbsp;&nbsp; file | 2 | magnetic_field | \"/path/to/file_magnetic_field_of_dimension_2\"",
      "<br>%</tt>",
      " ",
      "The third option to define the initial state inside the box is to extend",
      "the plane waves used as incident waves in the <tt>MaxwellIncidentWaves</tt> block,",
      "as follows:",
      " ",
      "<tt>%UserDefinedMaxwellStates",
      "<br>&nbsp;&nbsp; use_incident_waves",
      "<br>%</tt>",
      " "
    ],
    "LineNumber": 144,
    "Manuals": [],
    "Name": "UserDefinedInitialMaxwellStates",
    "Options": [
      {
        "Description": [
          "Read initial orbital from file.",
          "Accepted file formats: obf, ncdf and csv."
        ],
        "Name": "file",
        "Value": "-10010"
      },
      {
        "Description": [
          "Calculate initial orbital by given analytic expression."
        ],
        "Name": "formula",
        "Value": "1"
      },
      {
        "Description": [
          "Extend the plane waves given in the <tt>MaxwellIncidentWaves</tt> block inside the box."
        ],
        "Name": "use_incident_waves",
        "Value": "2"
      },
      {
        "Description": [
          "This row defines the electric field component of the corresponding dimension"
        ],
        "Name": "electric_field",
        "Value": "1"
      },
      {
        "Description": [
          "This row defines the magnetic field component of the corresponding dimension"
        ],
        "Name": "magnetic_field",
        "Value": "2"
      }
    ],
    "Section": "Maxwell",
    "Sourcefile": "states/states_mxll_restart.F90",
    "Testfiles": [
      "maxwell/11-leapfrog.02-pml_fullrun.inp",
      "maxwell/03-linear-medium.01-cosinoidal_pulse_td.inp",
      "maxwell/11-leapfrog.01-fullrun.inp",
      "maxwell/09-drude-medium-from-file.02-gold-np-part-one.inp",
      "maxwell/03-linear-medium.02-cosinoidal_pulse_td_pml.inp",
      "maxwell/05-plane_waves.01-pulse_pml.inp",
      "maxwell/03-linear-medium.03-cosinoidal_pulse_td_pml_unpacked.inp",
      "maxwell/11-leapfrog.04-pml_medium_restart_part1.inp",
      "maxwell/04-linear-medium-from-file.01-cube_medium_from_file.inp",
      "maxwell/09-drude-medium-from-file.03-gold-np-part-two.inp",
      "maxwell/09-drude-medium-from-file.01-gold-np.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_fromscratch.inp",
      "maxwell/08-restart-maxwell.03-linear-medium_restarted.inp",
      "maxwell/11-leapfrog.05-pml_medium_restart_part2.inp",
      "maxwell/11-leapfrog.03-pml_medium_fullrun.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "userdefinedmaxwellexternalcurrent": {
    "CallLine": "if (parse_block(namespace, 'UserDefinedMaxwellExternalCurrent', blk) == 0) then",
    "Default": null,
    "Description": [
      " ",
      "Example:",
      " ",
      "<tt>%UserDefinedMaxwellExternalCurrent",
      "<br>&nbsp;&nbsp; current_parser      | \"expression_x_dir1\" | \"expression_y_dir1\" | \"expression_z_dir1\"",
      "<br>&nbsp;&nbsp; current_parser      | \"expression_x_dir2\" | \"expression_y_dir2\" | \"expression_z_dir2\"",
      "<br>&nbsp;&nbsp; current_td_function | \"amplitude_j0_x\"    | \"amplitude_j0_y\"    | \"amplitude_j0_z\"    | omega   | envelope_td_function_name | phase",
      "<br>%</tt>",
      " ",
      "Description about UserDefinedMaxwellExternalCurrent follows",
      " "
    ],
    "LineNumber": 122,
    "Manuals": [],
    "Name": "UserDefinedMaxwellExternalCurrent",
    "Options": [
      {
        "Description": [
          "description follows"
        ],
        "Name": "current_parser",
        "Value": "0"
      },
      {
        "Description": [
          "description follows"
        ],
        "Name": "current_td_function",
        "Value": "1"
      }
    ],
    "Section": "Maxwell",
    "Sourcefile": "maxwell/external_densities.F90",
    "Testfiles": [
      "maxwell/08-restart-maxwell.02-external-current-pml_fromscratch.inp",
      "maxwell/02-external-current.01-gaussian_current_pulse.inp",
      "maxwell/02-external-current.02-gaussian_current_pulse_with_pml.inp",
      "maxwell/02-external-current.04-gaussian_current_pml_modified_speed_of_light.inp",
      "maxwell/02-external-current.03-gaussian_current_pulse_with_mask.inp",
      "maxwell/08-restart-maxwell.02-external-current-pml_restarted.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "userdefinedstates": {
    "CallLine": "if (parse_block(namespace, 'UserDefinedStates', blk) == 0) then",
    "Default": null,
    "Description": [
      "Instead of using the ground state as initial state for",
      "time-propagations it might be interesting in some cases",
      "to specify alternate states. Like with user-defined",
      "potentials, this block allows you to specify formulas for",
      "the orbitals at <i>t</i>=0.",
      " ",
      "Example:",
      " ",
      "<tt>%UserDefinedStates",
      "<br>&nbsp;&nbsp; 1 | 1 | 1 | formula | \"exp(-r^2)*exp(-i*0.2*x)\" | normalize_yes",
      "<br>%</tt>",
      " ",
      "The first column specifies the component of the spinor,",
      "the second column the number of the state and the third",
      "contains <i>k</i>-point and spin quantum numbers. Column four",
      "indicates that column five should be interpreted as a formula",
      "for the corresponding orbital.",
      " ",
      "Alternatively, if column four states <tt>file</tt> the state will",
      "be read from the file given in column five.",
      " ",
      "<tt>%UserDefinedStates",
      "<br>&nbsp;&nbsp; 1 | 1 | 1 | file | \"/path/to/file\" | normalize_no",
      "<br>%</tt>",
      " ",
      "Octopus reads first the ground-state orbitals from",
      "the <tt>restart/gs</tt> directory. Only the states that are",
      "specified in the above block will be overwritten with",
      "the given analytic expression for the orbital.",
      " ",
      "The sixth (optional) column indicates whether <tt>Octopus</tt> should renormalize",
      "the orbital. The default (no sixth column given) is to renormalize.",
      " "
    ],
    "LineNumber": 1147,
    "Manuals": [],
    "Name": "UserDefinedStates",
    "Options": [
      {
        "Description": [
          "Read initial orbital from file.",
          "Accepted file formats, detected by extension: obf, ncdf and csv (real only)."
        ],
        "Name": "file",
        "Value": "-10010"
      },
      {
        "Description": [
          "Calculate initial orbital by given analytic expression."
        ],
        "Name": "formula",
        "Value": "1"
      },
      {
        "Description": [
          "Normalize orbitals (default)."
        ],
        "Name": "normalize_yes",
        "Value": "1"
      },
      {
        "Description": [
          "Do not normalize orbitals."
        ],
        "Name": "normalize_no",
        "Value": "0"
      }
    ],
    "Section": "States",
    "Sourcefile": "states/states_elec_restart.F90",
    "Testfiles": [
      "photo_electron/01-h1d_lin.02-ba.inp",
      "photo_electron/04-nfft.01-ba.inp",
      "photo_electron/07-flux_1d.02-h1d_ati.inp",
      "photo_electron/07-flux_1d.01-h1d_lin.inp",
      "photo_electron/03-h1d_ati.01.inp",
      "photo_electron/01-h1d_lin.01-mask.inp",
      "photo_electron/02-restart.01-ba.inp",
      "photo_electron/10-spm_1d.h1d_lin.inp",
      "photo_electron/04-nfft.02-ati.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "vdw_ts_cutoff": {
    "CallLine": "call parse_variable(namespace, 'VDW_TS_cutoff', 10.0_real64, this%cutoff, units_inp%length)",
    "Default": [
      "10.0"
    ],
    "Description": [
      "Set the value of the cutoff (unit of length) for the VDW correction in periodic system",
      "in the Tkatchenko and Scheffler (vdw_ts) scheme only."
    ],
    "LineNumber": 92,
    "Manuals": [],
    "Name": "VDW_TS_cutoff",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/vdw_ts.F90",
    "Testfiles": [
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "functionals/12-vdw_solid_c6.01-gs_diamond.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "vdw_ts_damping": {
    "CallLine": "call parse_variable(namespace, 'VDW_TS_damping', 20.0_real64, this%damping, units_inp%length**(-1))",
    "Default": [
      "20.0"
    ],
    "Description": [
      "Set the value of the damping function (in unit of 1/length) steepness for the VDW correction in the",
      "Tkatchenko-Scheffler scheme. See Equation (12) of Phys. Rev. Lett. 102 073005 (2009)."
    ],
    "LineNumber": 103,
    "Manuals": [],
    "Name": "VDW_TS_damping",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/vdw_ts.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "vdw_ts_sr": {
    "CallLine": "call parse_variable(namespace, 'VDW_TS_sr', 0.94_real64, this%sr)",
    "Default": [
      "0.94"
    ],
    "Description": [
      "Set the value of the sr parameter in the damping function of the VDW correction in the",
      "Tkatchenko-Scheffler scheme. See Equation (12) of Phys. Rev. Lett. 102 073005 (2009).",
      "This parameter depends on the xc functional used.",
      "The default value is 0.94, which holds for PBE. For PBE0, a value of 0.96 should be used."
    ],
    "LineNumber": 115,
    "Manuals": [],
    "Name": "VDW_TS_sr",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/vdw_ts.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "vdwcorrection": {
    "CallLine": "call parse_variable(namespace, 'VDWCorrection', OPTION__VDWCORRECTION__NONE, this%vdw_correction)",
    "Default": [
      "no"
    ],
    "Description": [
      "(Experimental) This variable selects which van der Waals",
      "correction to apply to the correlation functional."
    ],
    "LineNumber": 104,
    "Manuals": [],
    "Name": "VDWCorrection",
    "Options": [
      {
        "Description": [
          "No correction is applied."
        ],
        "Name": "none",
        "Value": "0"
      },
      {
        "Description": [
          "The scheme of Tkatchenko and Scheffler, Phys. Rev. Lett. 102",
          "073005 (2009)."
        ],
        "Name": "vdw_ts",
        "Value": "1"
      },
      {
        "Description": [
          "The DFT-D3 scheme of S. Grimme, J. Antony, S. Ehrlich, and",
          "S. Krieg, J. Chem. Phys. 132, 154104 (2010)."
        ],
        "Name": "vdw_d3",
        "Value": "3"
      }
    ],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/xc_vdw.F90",
    "Testfiles": [
      "functionals/09-vdw_ts_sc.01-gs.inp",
      "functionals/08-vdw_ts.01-gs.inp",
      "functionals/12-vdw_solid_c6.02-gs_graphene.inp",
      "functionals/10-vdw_d3_dna.02-gs_d3.inp",
      "functionals/12-vdw_solid_c6.01-gs_diamond.inp",
      "functionals/11-vdw_d3.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "vdwd3functional": {
    "CallLine": "call parse_variable(namespace, 'VDWD3Functional', d3func_def, d3func)",
    "Default": null,
    "Description": [
      "(Experimental) You can use this variable to override the",
      "parametrization used by the DFT-D3 van deer Waals",
      "correction. Normally you need not set this variable, as the",
      "proper value will be selected by Octopus (if available).",
      " ",
      "This variable takes a string value, the valid values can",
      "be found in the source file 'external_libs/dftd3/core.f90'.",
      "For example you can use:",
      " ",
      "VDWD3Functional = 'pbe'",
      " "
    ],
    "LineNumber": 177,
    "Manuals": [],
    "Name": "VDWD3Functional",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/xc_vdw.F90",
    "Testfiles": [
      "functionals/10-vdw_d3_dna.02-gs_d3.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "vdwnpoints": {
    "CallLine": "call parse_variable(sys%namespace, 'vdWNPoints', 6, gaus_leg_n)",
    "Default": [
      "6"
    ],
    "Description": [
      "How many points to use in the Gauss-Legendre integration to obtain the",
      "van der Waals coefficients."
    ],
    "LineNumber": 175,
    "Manuals": [],
    "Name": "vdWNPoints",
    "Options": [],
    "Section": "Linear Response::Polarizabilities",
    "Sourcefile": "sternheimer/vdw.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "vdwselfconsistent": {
    "CallLine": "call parse_variable(namespace, 'VDWSelfConsistent', .true., this%self_consistent)",
    "Default": [
      "yes"
    ],
    "Description": [
      "This variable controls whether the VDW correction is applied",
      "self-consistently, the default, or just as a correction to",
      "the total energy. This option only works with vdw_ts."
    ],
    "LineNumber": 121,
    "Manuals": [],
    "Name": "VDWSelfConsistent",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/xc_vdw.F90",
    "Testfiles": [
      "functionals/08-vdw_ts.01-gs.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "velocities": {
    "Default": null,
    "Description": [
      "If <tt>XYZVelocities</tt>, <tt>PDBVelocities</tt>, and <tt>XSFVelocities</tt>",
      "are not present, <tt>Octopus</tt> will try to fetch the initial",
      "atomic velocities from this block. If this block is not present, <tt>Octopus</tt>",
      "will set the initial velocities to zero. The format of this block can be",
      "illustrated by this example:",
      " ",
      "<tt>%Velocities",
      "<br>&nbsp;&nbsp;'C'  |      -1.7 | 0.0 | 0.0",
      "<br>&nbsp;&nbsp;'O'  | &nbsp;1.7 | 0.0 | 0.0",
      "<br>%</tt>",
      " ",
      "It describes one carbon and one oxygen moving at the relative",
      "velocity of 3.4 velocity units.",
      " ",
      "Note: It is important for the velocities to maintain the ordering",
      "in which the atoms were defined in the coordinates specifications."
    ],
    "Manuals": [],
    "Name": "Velocities",
    "Options": [],
    "Section": "System::Velocities",
    "Sourcefile": "ions/ion_dynamics.F90",
    "Testfiles": [
      "multisystem/16-bomd.02-td.inp",
      "real_time/10-bomd.02-td.inp",
      "real_time/05-time_propagation.06-td_fast_md.inp",
      "real_time/10-bomd.03-td_restart.inp",
      "real_time/16-sparskit.02-kick.inp",
      "real_time/15-crank_nicolson.05-freeze_sae.inp",
      "real_time/15-crank_nicolson.02-kick.inp",
      "real_time/15-crank_nicolson.04-freeze_states.inp",
      "real_time/06-caetrs.04-kick-tp2.inp",
      "real_time/06-caetrs.02-kick.inp",
      "real_time/15-crank_nicolson.03-freeze_domains.inp",
      "real_time/05-time_propagation.05-td_md.inp",
      "real_time/22-td_move_ions_periodic.02-td.inp",
      "real_time/06-caetrs.03-kick-tp1.inp"
    ],
    "Tutorials": [],
    "Type": "block"
  },
  "vibrationalspectrumtime": {
    "CallLine": "call parse_variable(global_namespace, 'VibrationalSpectrumTime', ntime*deltat, vaftime)",
    "Default": null,
    "Description": [
      "This variable controls the maximum time for the calculation of",
      "the velocity autocorrelation function. The default is the total",
      "propagation time."
    ],
    "LineNumber": 185,
    "Manuals": [],
    "Name": "VibrationalSpectrumTime",
    "Options": [],
    "Section": "Utilities::oct-vibrational_spectrum",
    "Sourcefile": "utils/vibrational.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "vibrationalspectrumtimestepfactor": {
    "CallLine": "call parse_variable(global_namespace, 'VibrationalSpectrumTimeStepFactor', 10, skip)",
    "Default": [
      "10"
    ],
    "Description": [
      "In the calculation of the vibrational spectrum, it is not necessary",
      "to read the velocity at every time step. This variable controls",
      "the integer factor between the simulation time step and the",
      "time step used to calculate the vibrational spectrum."
    ],
    "LineNumber": 79,
    "Manuals": [],
    "Name": "VibrationalSpectrumTimeStepFactor",
    "Options": [],
    "Section": "Utilities::oct-vibrational_spectrum",
    "Sourcefile": "utils/vibrational.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "volume": {
    "Default": "",
    "Description": [
      "Describes a volume in space defined through the addition and substraction of",
      "spheres. The first field is always \"+\" (include points inside the volume) or \"-\"",
      "(exclude points inside the volume)"
    ],
    "Manuals": [],
    "Name": "Volume",
    "Options": [
      {
        "Description": [
          " ",
          "<tt>%Volume",
          "<br>&nbsp;&nbsp; \"+\"/\"-\" | vol_sphere | center_x | center_y | center_z | radius",
          "<br>%</tt>"
        ],
        "Name": "vol_sphere",
        "Value": "10001"
      },
      {
        "Description": [
          " ",
          "<tt>%Volume",
          "<br>&nbsp;&nbsp; \"+\"/\"-\" | vol_slab | thickness",
          "<br>%</tt>",
          " "
        ],
        "Name": "vol_slab",
        "Value": "10002"
      }
    ],
    "Section": "Utilities::",
    "Sourcefile": "grid/volume.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "block"
  },
  "walltime": {
    "CallLine": "call parse_variable(global_namespace, 'Walltime', M_ZERO, alarm_time)",
    "Default": [
      "0"
    ],
    "Description": [
      "Time in minutes before which the restart file will be written. This is to make sure that at least one restart",
      "file can be written before the code might be killed to to exceeding the given CPU time.",
      "If a finite time (in minutes) is specified, the code will write the restart file when the next",
      "iteration (plus the RestartWriteTime) would exceed the given time.",
      "A value less than 1 second (1/60 minutes) will disable the timer."
    ],
    "LineNumber": 93,
    "Manuals": [],
    "Name": "Walltime",
    "Options": [],
    "Section": "Execution::IO",
    "Sourcefile": "basic/walltimer.F90",
    "Testfiles": [
      "finite_systems_3d/34-walltime.03-td_walltime.inp",
      "finite_systems_3d/34-walltime.01-gs_walltime.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "wannier90files": {
    "CallLine": "call parse_variable(global_namespace, 'Wannier90Files', w90_what_default, w90_what)",
    "Default": [
      "w90_mmn",
      "+",
      "w90_amn",
      "+",
      "w90_eig"
    ],
    "Description": [
      "Specifies which files to generate.",
      "Example: <tt>w90_mmn + w90_unk</tt>"
    ],
    "LineNumber": 186,
    "Manuals": [],
    "Name": "Wannier90Files",
    "Options": [
      {
        "Description": [
          "(see Wannier90 documentation)"
        ],
        "Name": "w90_mmn",
        "Value": "bit(1)"
      },
      {
        "Description": [
          "(see Wannier90 documentation)"
        ],
        "Name": "w90_unk",
        "Value": "bit(2)"
      },
      {
        "Description": [
          "(see Wannier90 documentation)"
        ],
        "Name": "w90_amn",
        "Value": "bit(3)"
      },
      {
        "Description": [
          "Eigenvalues. See Wannier90 documentation for more details."
        ],
        "Name": "w90_eig",
        "Value": "bit(4)"
      }
    ],
    "Section": "Utilities::oct-wannier90",
    "Sourcefile": "utils/wannier90_interface.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "flag"
  },
  "wannier90mode": {
    "CallLine": "call parse_variable(global_namespace, 'Wannier90Mode', 0, w90_mode)",
    "Default": [
      "0"
    ],
    "Description": [
      "Specifies which stage of the Wannier90 interface to use"
    ],
    "LineNumber": 162,
    "Manuals": [],
    "Name": "Wannier90Mode",
    "Options": [
      {
        "Description": [
          "Nothing is done."
        ],
        "Name": "none",
        "Value": "0"
      },
      {
        "Description": [
          "Writes parts of the wannier90 input file <tt>w90_prefix.win</tt> corresponding to",
          "the octopus inp file. Importantly it generates the correct form of Monkhorst-Pack mesh",
          "written to the file w90_kpoints that has to be used in a gs calculation of Octopus by",
          "as <tt> include w90_kpoints </tt> instead of the <tt>%KpointsGrid</tt> block."
        ],
        "Name": "w90_setup",
        "Value": "1"
      },
      {
        "Description": [
          "Generates the relevant files for a wannier90 run, specified by the variable <tt>W90_interface_files</tt>.",
          "This needs files previously generated",
          "by <tt>wannier90.x -pp w90 </tt>"
        ],
        "Name": "w90_output",
        "Value": "2"
      },
      {
        "Description": [
          "Parse the output of wannier90 to generate the Wannier states on the real-space grid.",
          "The states will be written in the folder wannier. By default, the states are written as",
          "binary files, similar to the Kohn-Sham states.",
          " ",
          "Not implemented for spinor states."
        ],
        "Name": "w90_wannier",
        "Value": "3"
      }
    ],
    "Section": "Utilities::oct-wannier90",
    "Sourcefile": "utils/wannier90_interface.F90",
    "Testfiles": [
      "periodic_systems/15-bandstructure.04-wannier90_output.inp",
      "periodic_systems/15-bandstructure.05-wannier90_states.inp",
      "periodic_systems/15-bandstructure.03-wannier90_setup.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "wannier90prefix": {
    "CallLine": "call parse_variable(global_namespace, 'Wannier90Prefix', 'w90', w90_prefix)",
    "Default": [
      "w90"
    ],
    "Description": [
      "Prefix for wannier90 files"
    ],
    "LineNumber": 132,
    "Manuals": [],
    "Name": "Wannier90Prefix",
    "Options": [],
    "Section": "Utilities::oct-wannier90",
    "Sourcefile": "utils/wannier90_interface.F90",
    "Testfiles": [
      "periodic_systems/15-bandstructure.04-wannier90_output.inp",
      "periodic_systems/15-bandstructure.05-wannier90_states.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "wannier90usescdm": {
    "CallLine": "call parse_variable(global_namespace, 'Wannier90UseSCDM', .false., w90_scdm)",
    "Default": [
      "no"
    ],
    "Description": [
      "By default oct-wannier90 uses the projection method to generate the .amn file.",
      "By setting this variable to yes, oct-wannier90 will use SCDM method instead."
    ],
    "LineNumber": 206,
    "Manuals": [],
    "Name": "Wannier90UseSCDM",
    "Options": [],
    "Section": "Utilities::oct-wannier90",
    "Sourcefile": "utils/wannier90_interface.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "wannier90usetd": {
    "CallLine": "call parse_variable(global_namespace, 'Wannier90UseTD', .false., read_td_states)",
    "Default": [
      "no"
    ],
    "Description": [
      "By default oct-wannier90 uses the ground-state states to compute the necessary information.",
      "By setting this variable to yes, oct-wannier90 will use the TD states instead."
    ],
    "LineNumber": 196,
    "Manuals": [],
    "Name": "Wannier90UseTD",
    "Options": [],
    "Section": "Utilities::oct-wannier90",
    "Sourcefile": "utils/wannier90_interface.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "workdir": {
    "CallLine": "call parse_variable(global_namespace, 'WorkDir', '.', work_dir)",
    "Default": [
      "\".\""
    ],
    "Description": [
      "By default, all files are written and read from the working directory,",
      "<i>i.e.</i> the directory from which the executable was launched. This behavior can",
      "be changed by setting this variable. If you set <tt>WorkDir</tt> to a name other than \".\",",
      "the following directories are written and read in that directory:",
      "<li>\"casida/\"</li>",
      "<li>\"em_resp_fd/\"</li>",
      "<li>\"em_resp/\"</li>",
      "<li>\"geom/\"</li>",
      "<li>\"kdotp/\"</li>",
      "<li>\"local.general\"</li>",
      "<li>\"pcm/\"</li>",
      "<li>\"profiling/\"</li>",
      "<li>\"restart/\"</li>",
      "<li>\"static/\"</li>",
      "<li>\"td.general/\"</li>",
      "<li>\"vdw/\"</li>",
      "<li>\"vib_modes/\"</li>",
      "Furthermore, some of the debug information (see <tt>Debug</tt>) is also written to <tt>WorkDir</tt> and",
      "the non-absolute paths defined in <tt>OutputIterDir</tt> are relative to <tt>WorkDir</tt>."
    ],
    "LineNumber": 155,
    "Manuals": [],
    "Name": "WorkDir",
    "Options": [],
    "Section": "Execution::IO",
    "Sourcefile": "basic/io.F90",
    "Testfiles": [
      "finite_systems_3d/34-walltime.02-restart_gs.inp",
      "finite_systems_3d/06-restart.06-td_calc.inp",
      "finite_systems_3d/06-restart.05-restart_gs.inp",
      "finite_systems_3d/06-restart.01-gs_mixrho.inp",
      "finite_systems_3d/06-restart.07-restart_td_calc.inp",
      "finite_systems_3d/34-walltime.03-td_walltime.inp",
      "finite_systems_3d/34-walltime.04-restart_td.inp",
      "finite_systems_3d/06-restart.04-restart_gs_mixvhxc.inp",
      "finite_systems_3d/06-restart.02-restart_gs_mixrho.inp",
      "finite_systems_3d/34-walltime.01-gs_walltime.inp",
      "finite_systems_3d/06-restart.03-gs_mixvhxc.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "xalpha": {
    "CallLine": "call parse_variable(namespace, 'Xalpha', M_ONE, parameters(1))",
    "Default": [
      "1.0"
    ],
    "Description": [
      "The parameter of the Slater X<math>\\alpha</math> functional. Applies only for",
      "<tt>XCFunctional = xc_lda_c_xalpha</tt>."
    ],
    "LineNumber": 240,
    "Manuals": [],
    "Name": "Xalpha",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/xc_functional.F90",
    "Testfiles": [
      "functionals/07-sic.01-gs.inp",
      "functionals/07-sic.02-scdm.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "xcdensitycorrection": {
    "CallLine": "call parse_variable(namespace, 'XCDensityCorrection', LR_NONE, xcs%xc_density_correction)",
    "Default": [
      "none"
    ],
    "Description": [
      "This variable controls the long-range correction of the XC",
      "potential using the <a href=http://arxiv.org/abs/1107.4339>XC density representation</a>."
    ],
    "LineNumber": 304,
    "Manuals": [],
    "Name": "XCDensityCorrection",
    "Options": [
      {
        "Description": [
          "No correction is applied."
        ],
        "Name": "none",
        "Value": "0"
      },
      {
        "Description": [
          "The correction is applied to the exchange potential."
        ],
        "Name": "long_range_x",
        "Value": "1"
      }
    ],
    "Section": "Hamiltonian::XC::DensityCorrection",
    "Sourcefile": "hamiltonian/xc.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "xcdensitycorrectioncutoff": {
    "CallLine": "call parse_variable(namespace, 'XCDensityCorrectionCutoff', M_ZERO, xcs%xcd_ncutoff)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "The value of the cutoff applied to the XC density."
    ],
    "LineNumber": 333,
    "Manuals": [],
    "Name": "XCDensityCorrectionCutoff",
    "Options": [],
    "Section": "Hamiltonian::XC::DensityCorrection",
    "Sourcefile": "hamiltonian/xc.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "xcdensitycorrectionminimum": {
    "CallLine": "call parse_variable(namespace, 'XCDensityCorrectionMinimum', .true., xcs%xcd_minimum)",
    "Default": [
      "true"
    ],
    "Description": [
      "When enabled, the cutoff optimization will",
      "return the first minimum of the <math>q_{xc}</math> function if it does",
      "not find a value of -1 (<a href=http://arxiv.org/abs/1107.4339>details</a>).",
      "This is required for atoms or small",
      "molecules, but may cause numerical problems."
    ],
    "LineNumber": 346,
    "Manuals": [],
    "Name": "XCDensityCorrectionMinimum",
    "Options": [],
    "Section": "Hamiltonian::XC::DensityCorrection",
    "Sourcefile": "hamiltonian/xc.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "xcdensitycorrectionnormalize": {
    "CallLine": "call parse_variable(namespace, 'XCDensityCorrectionNormalize', .true., xcs%xcd_normalize)",
    "Default": [
      "true"
    ],
    "Description": [
      "When enabled, the correction will be",
      "normalized to reproduce the exact boundary conditions of",
      "the XC potential."
    ],
    "LineNumber": 357,
    "Manuals": [],
    "Name": "XCDensityCorrectionNormalize",
    "Options": [],
    "Section": "Hamiltonian::XC::DensityCorrection",
    "Sourcefile": "hamiltonian/xc.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "xcdensitycorrectionoptimize": {
    "CallLine": "call parse_variable(namespace, 'XCDensityCorrectionOptimize', .true., xcs%xcd_optimize_cutoff)",
    "Default": [
      "true"
    ],
    "Description": [
      "When enabled, the density cutoff will be",
      "optimized to replicate the boundary conditions of the exact",
      "XC potential. If the variable is set to no, the value of",
      "the cutoff must be given by the <tt>XCDensityCorrectionCutoff</tt>",
      "variable."
    ],
    "LineNumber": 324,
    "Manuals": [],
    "Name": "XCDensityCorrectionOptimize",
    "Options": [],
    "Section": "Hamiltonian::XC::DensityCorrection",
    "Sourcefile": "hamiltonian/xc.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "logical"
  },
  "xcfunctional": {
    "Default": null,
    "Description": [
      "Defines the exchange and correlation functionals to be used,",
      "specified as a sum of an exchange functional and a",
      "correlation functional, or a single exchange-correlation functional",
      "(<i>e.g.</i> <tt>hyb_gga_xc_pbeh</tt>). For more information on the functionals, see",
      "<a href=https://libxc.gitlab.io/functionals/libxc-6.2.2/>",
      "Libxc documentation</a>. The list provided here is from libxc 6.2.2; if you have",
      "linked against a different libxc version, you may have a somewhat different set",
      "of available functionals. Note that kinetic-energy functionals are not supported.",
      " ",
      "The default functional will be selected by Octopus to be consistent",
      "with the pseudopotentials you are using. If you are not using",
      "pseudopotentials, Octopus cannot determine the functional used to",
      "generate the pseudopotential, or the pseudopotential functionals",
      "are inconsistent, Octopus will use the following defaults:",
      " ",
      "<br>1D: <tt>lda_x_1d_soft + lda_c_1d_csc</tt>",
      "<br>2D: <tt>lda_x_2d + lda_c_2d_amgb</tt>",
      "<br>3D: <tt>lda_x + lda_c_pz_mod</tt>"
    ],
    "Manuals": [],
    "Name": "XCFunctional",
    "Options": [
      {
        "Description": [
          "Slater exchange"
        ],
        "Name": "lda_x",
        "Value": "1"
      },
      {
        "Description": [
          "Wigner"
        ],
        "Name": "lda_c_wigner",
        "Value": "2000"
      },
      {
        "Description": [
          "Random Phase Approximation (RPA)"
        ],
        "Name": "lda_c_rpa",
        "Value": "3000"
      },
      {
        "Description": [
          "Hedin & Lundqvist"
        ],
        "Name": "lda_c_hl",
        "Value": "4000"
      },
      {
        "Description": [
          "Gunnarson & Lundqvist"
        ],
        "Name": "lda_c_gl",
        "Value": "5000"
      },
      {
        "Description": [
          "Slater`s Xalpha"
        ],
        "Name": "lda_c_xalpha",
        "Value": "6000"
      },
      {
        "Description": [
          "Vosko, Wilk & Nusair (VWN5)"
        ],
        "Name": "lda_c_vwn",
        "Value": "7000"
      },
      {
        "Description": [
          "Vosko, Wilk & Nusair (VWN5_RPA)"
        ],
        "Name": "lda_c_vwn_rpa",
        "Value": "8000"
      },
      {
        "Description": [
          "Perdew & Zunger"
        ],
        "Name": "lda_c_pz",
        "Value": "9000"
      },
      {
        "Description": [
          "Perdew & Zunger (Modified)"
        ],
        "Name": "lda_c_pz_mod",
        "Value": "10000"
      },
      {
        "Description": [
          "Ortiz & Ballone (PZ parametrization)"
        ],
        "Name": "lda_c_ob_pz",
        "Value": "11000"
      },
      {
        "Description": [
          "Perdew & Wang"
        ],
        "Name": "lda_c_pw",
        "Value": "12000"
      },
      {
        "Description": [
          "Perdew & Wang (modified)"
        ],
        "Name": "lda_c_pw_mod",
        "Value": "13000"
      },
      {
        "Description": [
          "Ortiz & Ballone (PW parametrization)"
        ],
        "Name": "lda_c_ob_pw",
        "Value": "14000"
      },
      {
        "Description": [
          "AMGB (for 2D systems)"
        ],
        "Name": "lda_c_2d_amgb",
        "Value": "15000"
      },
      {
        "Description": [
          "PRM (for 2D systems)"
        ],
        "Name": "lda_c_2d_prm",
        "Value": "16000"
      },
      {
        "Description": [
          "von Barth & Hedin"
        ],
        "Name": "lda_c_vbh",
        "Value": "17000"
      },
      {
        "Description": [
          "Casula, Sorella & Senatore"
        ],
        "Name": "lda_c_1d_csc",
        "Value": "18000"
      },
      {
        "Description": [
          "Slater exchange"
        ],
        "Name": "lda_x_2d",
        "Value": "19"
      },
      {
        "Description": [
          "Teter 93"
        ],
        "Name": "lda_xc_teter93",
        "Value": "20000"
      },
      {
        "Description": [
          "Exchange in 1D for an soft-Coulomb interaction"
        ],
        "Name": "lda_x_1d_soft",
        "Value": "21"
      },
      {
        "Description": [
          "Modified LSD (version 1) of Proynov and Salahub"
        ],
        "Name": "lda_c_ml1",
        "Value": "22000"
      },
      {
        "Description": [
          "Modified LSD (version 2) of Proynov and Salahub"
        ],
        "Name": "lda_c_ml2",
        "Value": "23000"
      },
      {
        "Description": [
          "Gombas"
        ],
        "Name": "lda_c_gombas",
        "Value": "24000"
      },
      {
        "Description": [
          "Perdew & Wang (fit to the RPA energy)"
        ],
        "Name": "lda_c_pw_rpa",
        "Value": "25000"
      },
      {
        "Description": [
          "P-F Loos correlation LDA"
        ],
        "Name": "lda_c_1d_loos",
        "Value": "26000"
      },
      {
        "Description": [
          "Ragot-Cortona"
        ],
        "Name": "lda_c_rc04",
        "Value": "27000"
      },
      {
        "Description": [
          "Vosko, Wilk & Nusair (VWN1)"
        ],
        "Name": "lda_c_vwn_1",
        "Value": "28000"
      },
      {
        "Description": [
          "Vosko, Wilk & Nusair (VWN2)"
        ],
        "Name": "lda_c_vwn_2",
        "Value": "29000"
      },
      {
        "Description": [
          "Vosko, Wilk & Nusair (VWN3)"
        ],
        "Name": "lda_c_vwn_3",
        "Value": "30000"
      },
      {
        "Description": [
          "Vosko, Wilk & Nusair (VWN4)"
        ],
        "Name": "lda_c_vwn_4",
        "Value": "31000"
      },
      {
        "Description": [
          "Minnesota GAM exhange functional"
        ],
        "Name": "gga_x_gam",
        "Value": "32"
      },
      {
        "Description": [
          "Minnesota GAM correlation functional"
        ],
        "Name": "gga_c_gam",
        "Value": "33000"
      },
      {
        "Description": [
          "HCTH-A"
        ],
        "Name": "gga_x_hcth_a",
        "Value": "34"
      },
      {
        "Description": [
          "Engel and Vosko"
        ],
        "Name": "gga_x_ev93",
        "Value": "35"
      },
      {
        "Description": [
          "Dispersionless Density Functional"
        ],
        "Name": "hyb_mgga_x_dldf",
        "Value": "36"
      },
      {
        "Description": [
          "Dispersionless Density Functional"
        ],
        "Name": "mgga_c_dldf",
        "Value": "37000"
      },
      {
        "Description": [
          "Burke, Cancio, Gould, and Pittalis"
        ],
        "Name": "gga_x_bcgp",
        "Value": "38"
      },
      {
        "Description": [
          "acGGA, asymptotically corrected GGA correlation"
        ],
        "Name": "gga_c_acgga",
        "Value": "39000"
      },
      {
        "Description": [
          "lambda_OC2(N) version of PBE"
        ],
        "Name": "gga_x_lambda_oc2_n",
        "Value": "40"
      },
      {
        "Description": [
          "Revised Becke 86 with modified gradient correction"
        ],
        "Name": "gga_x_b86_r",
        "Value": "41"
      },
      {
        "Description": [
          "Zhao, Levy & Parr, Eq. (21)"
        ],
        "Name": "mgga_xc_zlp",
        "Value": "42000"
      },
      {
        "Description": [
          "Zhao, Levy & Parr, Eq. (20)"
        ],
        "Name": "lda_xc_zlp",
        "Value": "43000"
      },
      {
        "Description": [
          "lambda_CH(N) version of PBE"
        ],
        "Name": "gga_x_lambda_ch_n",
        "Value": "44"
      },
      {
        "Description": [
          "lambda_LO(N) version of PBE"
        ],
        "Name": "gga_x_lambda_lo_n",
        "Value": "45"
      },
      {
        "Description": [
          "HJS screened exchange B88 corrected version"
        ],
        "Name": "gga_x_hjs_b88_v2",
        "Value": "46"
      },
      {
        "Description": [
          "Chiodo et al"
        ],
        "Name": "gga_c_q2d",
        "Value": "47000"
      },
      {
        "Description": [
          "Chiodo et al"
        ],
        "Name": "gga_x_q2d",
        "Value": "48"
      },
      {
        "Description": [
          "Reparametrized PBE by del Campo, Gazquez, Trickey & Vela"
        ],
        "Name": "gga_x_pbe_mol",
        "Value": "49"
      },
      {
        "Description": [
          "Armiento & Kuemmel 2013"
        ],
        "Name": "gga_x_ak13",
        "Value": "56"
      },
      {
        "Description": [
          "Berland and Hyldgaard"
        ],
        "Name": "gga_x_lv_rpw86",
        "Value": "58"
      },
      {
        "Description": [
          "PBE revised by Tognetti et al"
        ],
        "Name": "gga_x_pbe_tca",
        "Value": "59"
      },
      {
        "Description": [
          "PBE for hybrid interfaces"
        ],
        "Name": "gga_x_pbeint",
        "Value": "60"
      },
      {
        "Description": [
          "spin-dependent gradient correction to PBEint"
        ],
        "Name": "gga_c_zpbeint",
        "Value": "61000"
      },
      {
        "Description": [
          "PBE for hybrid interfaces"
        ],
        "Name": "gga_c_pbeint",
        "Value": "62000"
      },
      {
        "Description": [
          "spin-dependent gradient correction to PBEsol"
        ],
        "Name": "gga_c_zpbesol",
        "Value": "63000"
      },
      {
        "Description": [
          "oTPSS-D functional of Goerigk and Grimme"
        ],
        "Name": "mgga_xc_otpss_d",
        "Value": "64000"
      },
      {
        "Description": [
          "oPBE-D functional of Goerigk and Grimme"
        ],
        "Name": "gga_xc_opbe_d",
        "Value": "65000"
      },
      {
        "Description": [
          "oPWLYP-D functional of Goerigk and Grimme"
        ],
        "Name": "gga_xc_opwlyp_d",
        "Value": "66000"
      },
      {
        "Description": [
          "oBLYP-D functional of Goerigk and Grimme"
        ],
        "Name": "gga_xc_oblyp_d",
        "Value": "67000"
      },
      {
        "Description": [
          "VMT{8,4} with constraint satisfaction with mu = mu_GE"
        ],
        "Name": "gga_x_vmt84_ge",
        "Value": "68"
      },
      {
        "Description": [
          "VMT{8,4} with constraint satisfaction with mu = mu_PBE"
        ],
        "Name": "gga_x_vmt84_pbe",
        "Value": "69"
      },
      {
        "Description": [
          "Vela, Medel, and Trickey with mu = mu_GE"
        ],
        "Name": "gga_x_vmt_ge",
        "Value": "70"
      },
      {
        "Description": [
          "Vela, Medel, and Trickey with mu = mu_PBE"
        ],
        "Name": "gga_x_vmt_pbe",
        "Value": "71"
      },
      {
        "Description": [
          "Colle and Salvetti"
        ],
        "Name": "mgga_c_cs",
        "Value": "72000"
      },
      {
        "Description": [
          "Minnesota MN12-SX correlation functional"
        ],
        "Name": "mgga_c_mn12_sx",
        "Value": "73000"
      },
      {
        "Description": [
          "Minnesota MN12-L correlation functional"
        ],
        "Name": "mgga_c_mn12_l",
        "Value": "74000"
      },
      {
        "Description": [
          "Minnesota M11-L correlation functional"
        ],
        "Name": "mgga_c_m11_l",
        "Value": "75000"
      },
      {
        "Description": [
          "Minnesota M11 correlation functional"
        ],
        "Name": "mgga_c_m11",
        "Value": "76000"
      },
      {
        "Description": [
          "Minnesota M08-SO correlation functional"
        ],
        "Name": "mgga_c_m08_so",
        "Value": "77000"
      },
      {
        "Description": [
          "Minnesota M08 correlation functional"
        ],
        "Name": "mgga_c_m08_hx",
        "Value": "78000"
      },
      {
        "Description": [
          "Minnesota N12-SX correlation functional"
        ],
        "Name": "gga_c_n12_sx",
        "Value": "79000"
      },
      {
        "Description": [
          "Minnesota N12 correlation functional"
        ],
        "Name": "gga_c_n12",
        "Value": "80000"
      },
      {
        "Description": [
          "Minnesota N12-SX exchange functional"
        ],
        "Name": "hyb_gga_x_n12_sx",
        "Value": "81"
      },
      {
        "Description": [
          "Minnesota N12 exchange functional"
        ],
        "Name": "gga_x_n12",
        "Value": "82"
      },
      {
        "Description": [
          "regularized TPSS correlation"
        ],
        "Name": "gga_c_regtpss",
        "Value": "83000"
      },
      {
        "Description": [
          "one-parameter progressive functional (Xalpha version)"
        ],
        "Name": "gga_c_op_xalpha",
        "Value": "84000"
      },
      {
        "Description": [
          "one-parameter progressive functional (G96 version)"
        ],
        "Name": "gga_c_op_g96",
        "Value": "85000"
      },
      {
        "Description": [
          "one-parameter progressive functional (PBE version)"
        ],
        "Name": "gga_c_op_pbe",
        "Value": "86000"
      },
      {
        "Description": [
          "one-parameter progressive functional (B88 version)"
        ],
        "Name": "gga_c_op_b88",
        "Value": "87000"
      },
      {
        "Description": [
          "Filatov & Thiel correlation"
        ],
        "Name": "gga_c_ft97",
        "Value": "88000"
      },
      {
        "Description": [
          "PBE correlation to be used with the SSB exchange"
        ],
        "Name": "gga_c_spbe",
        "Value": "89000"
      },
      {
        "Description": [
          "Swart, Sola and Bickelhaupt correction to PBE"
        ],
        "Name": "gga_x_ssb_sw",
        "Value": "90"
      },
      {
        "Description": [
          "Swart, Sola and Bickelhaupt"
        ],
        "Name": "gga_x_ssb",
        "Value": "91"
      },
      {
        "Description": [
          "Swart, Sola and Bickelhaupt dispersion"
        ],
        "Name": "gga_x_ssb_d",
        "Value": "92"
      },
      {
        "Description": [
          "HCTH/407+"
        ],
        "Name": "gga_xc_hcth_407p",
        "Value": "93000"
      },
      {
        "Description": [
          "HCTH p=7/6"
        ],
        "Name": "gga_xc_hcth_p76",
        "Value": "94000"
      },
      {
        "Description": [
          "HCTH p=1/4"
        ],
        "Name": "gga_xc_hcth_p14",
        "Value": "95000"
      },
      {
        "Description": [
          "Becke 97 GGA-1"
        ],
        "Name": "gga_xc_b97_gga1",
        "Value": "96000"
      },
      {
        "Description": [
          "HCTH-A"
        ],
        "Name": "gga_c_hcth_a",
        "Value": "97000"
      },
      {
        "Description": [
          "BPCCAC (GRAC for the energy)"
        ],
        "Name": "gga_x_bpccac",
        "Value": "98"
      },
      {
        "Description": [
          "Tognetti, Cortona, Adamo (revised)"
        ],
        "Name": "gga_c_revtca",
        "Value": "99000"
      },
      {
        "Description": [
          "Tognetti, Cortona, Adamo"
        ],
        "Name": "gga_c_tca",
        "Value": "100000"
      },
      {
        "Description": [
          "Perdew, Burke & Ernzerhof"
        ],
        "Name": "gga_x_pbe",
        "Value": "101"
      },
      {
        "Description": [
          "Revised PBE from Zhang & Yang"
        ],
        "Name": "gga_x_pbe_r",
        "Value": "102"
      },
      {
        "Description": [
          "Becke 86"
        ],
        "Name": "gga_x_b86",
        "Value": "103"
      },
      {
        "Description": [
          "Becke 86 with modified gradient correction"
        ],
        "Name": "gga_x_b86_mgc",
        "Value": "105"
      },
      {
        "Description": [
          "Becke 88"
        ],
        "Name": "gga_x_b88",
        "Value": "106"
      },
      {
        "Description": [
          "Gill 96"
        ],
        "Name": "gga_x_g96",
        "Value": "107"
      },
      {
        "Description": [
          "Perdew & Wang 86"
        ],
        "Name": "gga_x_pw86",
        "Value": "108"
      },
      {
        "Description": [
          "Perdew & Wang 91"
        ],
        "Name": "gga_x_pw91",
        "Value": "109"
      },
      {
        "Description": [
          "Handy & Cohen OPTX 01"
        ],
        "Name": "gga_x_optx",
        "Value": "110"
      },
      {
        "Description": [
          "dePristo & Kress 87 version R1"
        ],
        "Name": "gga_x_dk87_r1",
        "Value": "111"
      },
      {
        "Description": [
          "dePristo & Kress 87 version R2"
        ],
        "Name": "gga_x_dk87_r2",
        "Value": "112"
      },
      {
        "Description": [
          "Lacks & Gordon 93"
        ],
        "Name": "gga_x_lg93",
        "Value": "113"
      },
      {
        "Description": [
          "Filatov & Thiel 97 (version A)"
        ],
        "Name": "gga_x_ft97_a",
        "Value": "114"
      },
      {
        "Description": [
          "Filatov & Thiel 97 (version B)"
        ],
        "Name": "gga_x_ft97_b",
        "Value": "115"
      },
      {
        "Description": [
          "Perdew, Burke & Ernzerhof SOL"
        ],
        "Name": "gga_x_pbe_sol",
        "Value": "116"
      },
      {
        "Description": [
          "Hammer, Hansen, and Norskov"
        ],
        "Name": "gga_x_rpbe",
        "Value": "117"
      },
      {
        "Description": [
          "Wu & Cohen"
        ],
        "Name": "gga_x_wc",
        "Value": "118"
      },
      {
        "Description": [
          "mPW91 of Adamo & Barone"
        ],
        "Name": "gga_x_mpw91",
        "Value": "119"
      },
      {
        "Description": [
          "Armiento & Mattsson 05"
        ],
        "Name": "gga_x_am05",
        "Value": "120"
      },
      {
        "Description": [
          "Madsen 07"
        ],
        "Name": "gga_x_pbea",
        "Value": "121"
      },
      {
        "Description": [
          "Adamo & Barone modification to PBE"
        ],
        "Name": "gga_x_mpbe",
        "Value": "122"
      },
      {
        "Description": [
          "Extended PBE by Xu & Goddard III"
        ],
        "Name": "gga_x_xpbe",
        "Value": "123"
      },
      {
        "Description": [
          "Becke 86 with modified gradient correction for 2D"
        ],
        "Name": "gga_x_2d_b86_mgc",
        "Value": "124"
      },
      {
        "Description": [
          "Bayesian best fit for the enhancement factor"
        ],
        "Name": "gga_x_bayesian",
        "Value": "125"
      },
      {
        "Description": [
          "Reparametrized PBE by Pedroza, Silva & Capelle"
        ],
        "Name": "gga_x_pbe_jsjr",
        "Value": "126"
      },
      {
        "Description": [
          "Becke 88 in 2D"
        ],
        "Name": "gga_x_2d_b88",
        "Value": "127"
      },
      {
        "Description": [
          "Becke 86 in 2D"
        ],
        "Name": "gga_x_2d_b86",
        "Value": "128"
      },
      {
        "Description": [
          "Perdew, Burke & Ernzerhof in 2D"
        ],
        "Name": "gga_x_2d_pbe",
        "Value": "129"
      },
      {
        "Description": [
          "Perdew, Burke & Ernzerhof"
        ],
        "Name": "gga_c_pbe",
        "Value": "130000"
      },
      {
        "Description": [
          "Lee, Yang & Parr"
        ],
        "Name": "gga_c_lyp",
        "Value": "131000"
      },
      {
        "Description": [
          "Perdew 86"
        ],
        "Name": "gga_c_p86",
        "Value": "132000"
      },
      {
        "Description": [
          "Perdew, Burke & Ernzerhof SOL"
        ],
        "Name": "gga_c_pbe_sol",
        "Value": "133000"
      },
      {
        "Description": [
          "Perdew & Wang 91"
        ],
        "Name": "gga_c_pw91",
        "Value": "134000"
      },
      {
        "Description": [
          "Armiento & Mattsson 05"
        ],
        "Name": "gga_c_am05",
        "Value": "135000"
      },
      {
        "Description": [
          "Extended PBE by Xu & Goddard III"
        ],
        "Name": "gga_c_xpbe",
        "Value": "136000"
      },
      {
        "Description": [
          "Langreth & Mehl"
        ],
        "Name": "gga_c_lm",
        "Value": "137000"
      },
      {
        "Description": [
          "Reparametrized PBE by Pedroza, Silva & Capelle"
        ],
        "Name": "gga_c_pbe_jrgx",
        "Value": "138000"
      },
      {
        "Description": [
          "opt-Becke 88 for vdW"
        ],
        "Name": "gga_x_optb88_vdw",
        "Value": "139"
      },
      {
        "Description": [
          "Reparametrized PBE for vdW"
        ],
        "Name": "gga_x_pbek1_vdw",
        "Value": "140"
      },
      {
        "Description": [
          "Reparametrized PBE for vdW"
        ],
        "Name": "gga_x_optpbe_vdw",
        "Value": "141"
      },
      {
        "Description": [
          "Regularized PBE"
        ],
        "Name": "gga_x_rge2",
        "Value": "142"
      },
      {
        "Description": [
          "Regularized PBE"
        ],
        "Name": "gga_c_rge2",
        "Value": "143000"
      },
      {
        "Description": [
          "Refitted Perdew & Wang 86"
        ],
        "Name": "gga_x_rpw86",
        "Value": "144"
      },
      {
        "Description": [
          "Exchange part of Keal and Tozer version 1"
        ],
        "Name": "gga_x_kt1",
        "Value": "145"
      },
      {
        "Description": [
          "Keal and Tozer, version 2"
        ],
        "Name": "gga_xc_kt2",
        "Value": "146000"
      },
      {
        "Description": [
          "Wilson & Levy"
        ],
        "Name": "gga_c_wl",
        "Value": "147000"
      },
      {
        "Description": [
          "Wilson & Ivanov"
        ],
        "Name": "gga_c_wi",
        "Value": "148000"
      },
      {
        "Description": [
          "Modified Becke 88 for proton transfer"
        ],
        "Name": "gga_x_mb88",
        "Value": "149"
      },
      {
        "Description": [
          "Second-order generalized gradient approximation"
        ],
        "Name": "gga_x_sogga",
        "Value": "150"
      },
      {
        "Description": [
          "Second-order generalized gradient approximation 2011"
        ],
        "Name": "gga_x_sogga11",
        "Value": "151"
      },
      {
        "Description": [
          "Second-order generalized gradient approximation 2011"
        ],
        "Name": "gga_c_sogga11",
        "Value": "152000"
      },
      {
        "Description": [
          "Wilson & Ivanov initial version"
        ],
        "Name": "gga_c_wi0",
        "Value": "153000"
      },
      {
        "Description": [
          "Tozer and Handy v. 1"
        ],
        "Name": "gga_xc_th1",
        "Value": "154000"
      },
      {
        "Description": [
          "Tozer and Handy v. 2"
        ],
        "Name": "gga_xc_th2",
        "Value": "155000"
      },
      {
        "Description": [
          "Tozer and Handy v. 3"
        ],
        "Name": "gga_xc_th3",
        "Value": "156000"
      },
      {
        "Description": [
          "Tozer and Handy v. 4"
        ],
        "Name": "gga_xc_th4",
        "Value": "157000"
      },
      {
        "Description": [
          "C09x to be used with the VdW of Rutgers-Chalmers"
        ],
        "Name": "gga_x_c09x",
        "Value": "158"
      },
      {
        "Description": [
          "To be used with HYB_GGA_X_SOGGA11_X"
        ],
        "Name": "gga_c_sogga11_x",
        "Value": "159000"
      },
      {
        "Description": [
          "van Leeuwen & Baerends"
        ],
        "Name": "gga_x_lb",
        "Value": "160"
      },
      {
        "Description": [
          "HCTH/93"
        ],
        "Name": "gga_xc_hcth_93",
        "Value": "161000"
      },
      {
        "Description": [
          "HCTH/120"
        ],
        "Name": "gga_xc_hcth_120",
        "Value": "162000"
      },
      {
        "Description": [
          "HCTH/147"
        ],
        "Name": "gga_xc_hcth_147",
        "Value": "163000"
      },
      {
        "Description": [
          "HCTH/407"
        ],
        "Name": "gga_xc_hcth_407",
        "Value": "164000"
      },
      {
        "Description": [
          "EDF1"
        ],
        "Name": "gga_xc_edf1",
        "Value": "165000"
      },
      {
        "Description": [
          "XLYP"
        ],
        "Name": "gga_xc_xlyp",
        "Value": "166000"
      },
      {
        "Description": [
          "Keal and Tozer, version 1"
        ],
        "Name": "gga_xc_kt1",
        "Value": "167000"
      },
      {
        "Description": [
          "lsPBE, a PW91-like modification of PBE exchange"
        ],
        "Name": "gga_x_lspbe",
        "Value": "168"
      },
      {
        "Description": [
          "lsRPBE, a PW91-like modification of RPBE"
        ],
        "Name": "gga_x_lsrpbe",
        "Value": "169"
      },
      {
        "Description": [
          "Becke 97-D"
        ],
        "Name": "gga_xc_b97_d",
        "Value": "170000"
      },
      {
        "Description": [
          "Becke 86 reoptimized for use with vdW functional of Dion et al"
        ],
        "Name": "gga_x_optb86b_vdw",
        "Value": "171"
      },
      {
        "Description": [
          "Revised Minnesota M11 correlation functional"
        ],
        "Name": "mgga_c_revm11",
        "Value": "172000"
      },
      {
        "Description": [
          "PBE1W"
        ],
        "Name": "gga_xc_pbe1w",
        "Value": "173000"
      },
      {
        "Description": [
          "mPWLYP1w"
        ],
        "Name": "gga_xc_mpwlyp1w",
        "Value": "174000"
      },
      {
        "Description": [
          "PBELYP1W"
        ],
        "Name": "gga_xc_pbelyp1w",
        "Value": "175000"
      },
      {
        "Description": [
          "acGGA+, asymptotically corrected GGA correlation+"
        ],
        "Name": "gga_c_acggap",
        "Value": "176000"
      },
      {
        "Description": [
          "LDA hybrid exchange (LDA0)"
        ],
        "Name": "hyb_lda_xc_lda0",
        "Value": "177000"
      },
      {
        "Description": [
          "CAM version of LDA0"
        ],
        "Name": "hyb_lda_xc_cam_lda0",
        "Value": "178000"
      },
      {
        "Description": [
          "Becke 88 reoptimized with the 6-311G** basis set"
        ],
        "Name": "gga_x_b88_6311g",
        "Value": "179"
      },
      {
        "Description": [
          "Nearly correct asymptotic potential"
        ],
        "Name": "gga_x_ncap",
        "Value": "180"
      },
      {
        "Description": [
          "NCAP exchange + P86 correlation"
        ],
        "Name": "gga_xc_ncap",
        "Value": "181000"
      },
      {
        "Description": [
          "van Leeuwen & Baerends modified"
        ],
        "Name": "gga_x_lbm",
        "Value": "182"
      },
      {
        "Description": [
          "Exchange form based on Ou-Yang and Levy v.2"
        ],
        "Name": "gga_x_ol2",
        "Value": "183"
      },
      {
        "Description": [
          "mu fixed from the semiclassical neutral atom"
        ],
        "Name": "gga_x_apbe",
        "Value": "184"
      },
      {
        "Description": [
          "mu fixed from the semiclassical neutral atom"
        ],
        "Name": "gga_c_apbe",
        "Value": "186000"
      },
      {
        "Description": [
          "Haas, Tran, Blaha, and Schwarz"
        ],
        "Name": "gga_x_htbs",
        "Value": "191"
      },
      {
        "Description": [
          "Constantin et al based on the Airy gas"
        ],
        "Name": "gga_x_airy",
        "Value": "192"
      },
      {
        "Description": [
          "Local Airy Gas"
        ],
        "Name": "gga_x_lag",
        "Value": "193"
      },
      {
        "Description": [
          "Functional for organometallic chemistry"
        ],
        "Name": "gga_xc_mohlyp",
        "Value": "194000"
      },
      {
        "Description": [
          "Functional for barrier heights"
        ],
        "Name": "gga_xc_mohlyp2",
        "Value": "195000"
      },
      {
        "Description": [
          "Tozer and Handy v. FL"
        ],
        "Name": "gga_xc_th_fl",
        "Value": "196000"
      },
      {
        "Description": [
          "Tozer and Handy v. FC"
        ],
        "Name": "gga_xc_th_fc",
        "Value": "197000"
      },
      {
        "Description": [
          "Tozer and Handy v. FCFO"
        ],
        "Name": "gga_xc_th_fcfo",
        "Value": "198000"
      },
      {
        "Description": [
          "Tozer and Handy v. FCO"
        ],
        "Name": "gga_xc_th_fco",
        "Value": "199000"
      },
      {
        "Description": [
          "Optimized correlation functional of Cohen and Handy"
        ],
        "Name": "gga_c_optc",
        "Value": "200000"
      },
      {
        "Description": [
          "Local tau approximation"
        ],
        "Name": "mgga_x_lta",
        "Value": "201"
      },
      {
        "Description": [
          "Tao, Perdew, Staroverov & Scuseria"
        ],
        "Name": "mgga_x_tpss",
        "Value": "202"
      },
      {
        "Description": [
          "Minnesota M06-L exchange functional"
        ],
        "Name": "mgga_x_m06_l",
        "Value": "203"
      },
      {
        "Description": [
          "GVT4 (X part of VSXC)"
        ],
        "Name": "mgga_x_gvt4",
        "Value": "204"
      },
      {
        "Description": [
          "tau-HCTH from Boese and Handy"
        ],
        "Name": "mgga_x_tau_hcth",
        "Value": "205"
      },
      {
        "Description": [
          "Becke-Roussel 89, gamma = 0.8"
        ],
        "Name": "mgga_x_br89",
        "Value": "206"
      },
      {
        "Description": [
          "Becke & Johnson 06"
        ],
        "Name": "mgga_x_bj06",
        "Value": "207"
      },
      {
        "Description": [
          "Tran & Blaha 09"
        ],
        "Name": "mgga_x_tb09",
        "Value": "208"
      },
      {
        "Description": [
          "Rasanen, Pittalis & Proetto 09"
        ],
        "Name": "mgga_x_rpp09",
        "Value": "209"
      },
      {
        "Description": [
          "Pittalis-Rasanen-Helbig-Gross 2007"
        ],
        "Name": "mgga_x_2d_prhg07",
        "Value": "210"
      },
      {
        "Description": [
          "PRHG07 with Pittalis-Rasanen-Proetto 2010 correction"
        ],
        "Name": "mgga_x_2d_prhg07_prp10",
        "Value": "211"
      },
      {
        "Description": [
          "revised Tao, Perdew, Staroverov & Scuseria"
        ],
        "Name": "mgga_x_revtpss",
        "Value": "212"
      },
      {
        "Description": [
          "Perdew, Kurth, Zupan, and Blaha"
        ],
        "Name": "mgga_x_pkzb",
        "Value": "213"
      },
      {
        "Description": [
          "Becke-Roussel 89, gamma = 1.0"
        ],
        "Name": "mgga_x_br89_1",
        "Value": "214"
      },
      {
        "Description": [
          "Engel, Chevary, Macdonald and Vosko"
        ],
        "Name": "gga_x_ecmv92",
        "Value": "215"
      },
      {
        "Description": [
          "Perdew, Burke & Ernzerhof based on VWN correlation"
        ],
        "Name": "gga_c_pbe_vwn",
        "Value": "216000"
      },
      {
        "Description": [
          "Perdew 86 with more accurate value for ftilde"
        ],
        "Name": "gga_c_p86_ft",
        "Value": "217000"
      },
      {
        "Description": [
          "MS exchange of Sun, Xiao, and Ruzsinszky"
        ],
        "Name": "mgga_x_ms0",
        "Value": "221"
      },
      {
        "Description": [
          "MS1 exchange of Sun, et al"
        ],
        "Name": "mgga_x_ms1",
        "Value": "222"
      },
      {
        "Description": [
          "MS2 exchange of Sun, et al"
        ],
        "Name": "mgga_x_ms2",
        "Value": "223"
      },
      {
        "Description": [
          "MS2 hybrid exchange of Sun, et al"
        ],
        "Name": "hyb_mgga_x_ms2h",
        "Value": "224"
      },
      {
        "Description": [
          "Tsuneda and Hirao"
        ],
        "Name": "mgga_x_th",
        "Value": "225"
      },
      {
        "Description": [
          "Minnesota M11-L exchange functional"
        ],
        "Name": "mgga_x_m11_l",
        "Value": "226"
      },
      {
        "Description": [
          "Minnesota MN12-L exchange functional"
        ],
        "Name": "mgga_x_mn12_l",
        "Value": "227"
      },
      {
        "Description": [
          "MS2 exchange of Sun, et al with revised value for c"
        ],
        "Name": "mgga_x_ms2_rev",
        "Value": "228"
      },
      {
        "Description": [
          "Cancio and Chou 2006"
        ],
        "Name": "mgga_xc_cc06",
        "Value": "229000"
      },
      {
        "Description": [
          "Exchange for accurate virtual orbital energies"
        ],
        "Name": "mgga_x_mk00",
        "Value": "230"
      },
      {
        "Description": [
          "Tao, Perdew, Staroverov & Scuseria"
        ],
        "Name": "mgga_c_tpss",
        "Value": "231000"
      },
      {
        "Description": [
          "VSXC (correlation part)"
        ],
        "Name": "mgga_c_vsxc",
        "Value": "232000"
      },
      {
        "Description": [
          "Minnesota M06-L correlation functional"
        ],
        "Name": "mgga_c_m06_l",
        "Value": "233000"
      },
      {
        "Description": [
          "Minnesota M06-HF correlation functional"
        ],
        "Name": "mgga_c_m06_hf",
        "Value": "234000"
      },
      {
        "Description": [
          "Minnesota M06 correlation functional"
        ],
        "Name": "mgga_c_m06",
        "Value": "235000"
      },
      {
        "Description": [
          "Minnesota M06-2X correlation functional"
        ],
        "Name": "mgga_c_m06_2x",
        "Value": "236000"
      },
      {
        "Description": [
          "Minnesota M05 correlation functional"
        ],
        "Name": "mgga_c_m05",
        "Value": "237000"
      },
      {
        "Description": [
          "Minnesota M05-2X correlation functional"
        ],
        "Name": "mgga_c_m05_2x",
        "Value": "238000"
      },
      {
        "Description": [
          "Perdew, Kurth, Zupan, and Blaha"
        ],
        "Name": "mgga_c_pkzb",
        "Value": "239000"
      },
      {
        "Description": [
          "Becke correlation 95"
        ],
        "Name": "mgga_c_bc95",
        "Value": "240000"
      },
      {
        "Description": [
          "revised TPSS correlation"
        ],
        "Name": "mgga_c_revtpss",
        "Value": "241000"
      },
      {
        "Description": [
          "TPSSLYP1W"
        ],
        "Name": "mgga_xc_tpsslyp1w",
        "Value": "242000"
      },
      {
        "Description": [
          "Exchange for accurate virtual orbital energies (v. B)"
        ],
        "Name": "mgga_x_mk00b",
        "Value": "243"
      },
      {
        "Description": [
          "functional with balanced localization"
        ],
        "Name": "mgga_x_bloc",
        "Value": "244"
      },
      {
        "Description": [
          "Modified Tao, Perdew, Staroverov & Scuseria"
        ],
        "Name": "mgga_x_modtpss",
        "Value": "245"
      },
      {
        "Description": [
          "Semilocal dynamical correlation"
        ],
        "Name": "gga_c_pbeloc",
        "Value": "246000"
      },
      {
        "Description": [
          "Semilocal dynamical correlation"
        ],
        "Name": "mgga_c_tpssloc",
        "Value": "247000"
      },
      {
        "Description": [
          "Minnesota MN12-SX hybrid exchange functional"
        ],
        "Name": "hyb_mgga_x_mn12_sx",
        "Value": "248"
      },
      {
        "Description": [
          "mBEEF exchange"
        ],
        "Name": "mgga_x_mbeef",
        "Value": "249"
      },
      {
        "Description": [
          "mBEEF-vdW exchange"
        ],
        "Name": "mgga_x_mbeefvdw",
        "Value": "250"
      },
      {
        "Description": [
          "Tao and Mo 2016 correlation"
        ],
        "Name": "mgga_c_tm",
        "Value": "251000"
      },
      {
        "Description": [
          "Perdew 86 based on VWN5 correlation"
        ],
        "Name": "gga_c_p86vwn",
        "Value": "252000"
      },
      {
        "Description": [
          "Perdew 86 based on VWN5 correlation, with more accurate value for ftilde"
        ],
        "Name": "gga_c_p86vwn_ft",
        "Value": "253000"
      },
      {
        "Description": [
          "B97M-V exchange-correlation functional"
        ],
        "Name": "mgga_xc_b97m_v",
        "Value": "254000"
      },
      {
        "Description": [
          "Vydrov and Van Voorhis"
        ],
        "Name": "gga_xc_vv10",
        "Value": "255000"
      },
      {
        "Description": [
          "Jemmer-Knowles meta-GGA exchange"
        ],
        "Name": "mgga_x_jk",
        "Value": "256"
      },
      {
        "Description": [
          "MVS exchange of Sun, Perdew, and Ruzsinszky"
        ],
        "Name": "mgga_x_mvs",
        "Value": "257"
      },
      {
        "Description": [
          "PBE for formation energies"
        ],
        "Name": "gga_c_pbefe",
        "Value": "258000"
      },
      {
        "Description": [
          "Karasiev, Sjostrom, Dufty & Trickey"
        ],
        "Name": "lda_xc_ksdt",
        "Value": "259000"
      },
      {
        "Description": [
          "Minnesota MN15-L exchange functional"
        ],
        "Name": "mgga_x_mn15_l",
        "Value": "260"
      },
      {
        "Description": [
          "Minnesota MN15-L correlation functional"
        ],
        "Name": "mgga_c_mn15_l",
        "Value": "261000"
      },
      {
        "Description": [
          "one-parameter progressive functional (PW91 version)"
        ],
        "Name": "gga_c_op_pw91",
        "Value": "262000"
      },
      {
        "Description": [
          "SCAN exchange of Sun, Ruzsinszky, and Perdew"
        ],
        "Name": "mgga_x_scan",
        "Value": "263"
      },
      {
        "Description": [
          "SCAN hybrid exchange (SCAN0)"
        ],
        "Name": "hyb_mgga_x_scan0",
        "Value": "264"
      },
      {
        "Description": [
          "PBE for formation energies"
        ],
        "Name": "gga_x_pbefe",
        "Value": "265"
      },
      {
        "Description": [
          "version of B97 by Cohen and Handy"
        ],
        "Name": "hyb_gga_xc_b97_1p",
        "Value": "266000"
      },
      {
        "Description": [
          "SCAN correlation of Sun, Ruzsinszky, and Perdew"
        ],
        "Name": "mgga_c_scan",
        "Value": "267000"
      },
      {
        "Description": [
          "Minnesota MN15 hybrid exchange functional"
        ],
        "Name": "hyb_mgga_x_mn15",
        "Value": "268"
      },
      {
        "Description": [
          "Minnesota MN15 correlation functional"
        ],
        "Name": "mgga_c_mn15",
        "Value": "269000"
      },
      {
        "Description": [
          "Correct Asymptotic Potential"
        ],
        "Name": "gga_x_cap",
        "Value": "270"
      },
      {
        "Description": [
          "Non-empirical (excogitated) B88 functional of Becke and Elliott"
        ],
        "Name": "gga_x_eb88",
        "Value": "271"
      },
      {
        "Description": [
          "Reparametrized PBE by del Campo, Gazquez, Trickey & Vela"
        ],
        "Name": "gga_c_pbe_mol",
        "Value": "272000"
      },
      {
        "Description": [
          "PBEmol0"
        ],
        "Name": "hyb_gga_xc_pbe_mol0",
        "Value": "273000"
      },
      {
        "Description": [
          "PBEsol0"
        ],
        "Name": "hyb_gga_xc_pbe_sol0",
        "Value": "274000"
      },
      {
        "Description": [
          "PBEbeta0"
        ],
        "Name": "hyb_gga_xc_pbeb0",
        "Value": "275000"
      },
      {
        "Description": [
          "PBEmolbeta0"
        ],
        "Name": "hyb_gga_xc_pbe_molb0",
        "Value": "276000"
      },
      {
        "Description": [
          "Boese-Martin for kinetics"
        ],
        "Name": "hyb_mgga_x_bmk",
        "Value": "279"
      },
      {
        "Description": [
          "Boese-Martin correlation for kinetics"
        ],
        "Name": "gga_c_bmk",
        "Value": "280000"
      },
      {
        "Description": [
          "correlation part of tau-hcth"
        ],
        "Name": "gga_c_tau_hcth",
        "Value": "281000"
      },
      {
        "Description": [
          "Hybrid version of tau-HCTH"
        ],
        "Name": "hyb_mgga_x_tau_hcth",
        "Value": "282"
      },
      {
        "Description": [
          "correlation part of hyb-tau-hcth"
        ],
        "Name": "gga_c_hyb_tau_hcth",
        "Value": "283000"
      },
      {
        "Description": [
          "Becke 2000"
        ],
        "Name": "mgga_x_b00",
        "Value": "284"
      },
      {
        "Description": [
          "BEEF-vdW exchange"
        ],
        "Name": "gga_x_beefvdw",
        "Value": "285"
      },
      {
        "Description": [
          "BEEF-vdW exchange-correlation"
        ],
        "Name": "gga_xc_beefvdw",
        "Value": "286000"
      },
      {
        "Description": [
          "Chachiyo simple 2 parameter correlation"
        ],
        "Name": "lda_c_chachiyo",
        "Value": "287000"
      },
      {
        "Description": [
          "high local exchange 2017"
        ],
        "Name": "mgga_xc_hle17",
        "Value": "288000"
      },
      {
        "Description": [
          "Liu-Parr correlation"
        ],
        "Name": "lda_c_lp96",
        "Value": "289000"
      },
      {
        "Description": [
          "PBE50"
        ],
        "Name": "hyb_gga_xc_pbe50",
        "Value": "290000"
      },
      {
        "Description": [
          "Gradient-regulated connection-based correction for the PBE exchange"
        ],
        "Name": "gga_x_pbetrans",
        "Value": "291"
      },
      {
        "Description": [
          "SCAN + rVV10 correlation"
        ],
        "Name": "mgga_c_scan_rvv10",
        "Value": "292000"
      },
      {
        "Description": [
          "Minnesota revM06-L exchange functional"
        ],
        "Name": "mgga_x_revm06_l",
        "Value": "293"
      },
      {
        "Description": [
          "Minnesota revM06-L correlation functional"
        ],
        "Name": "mgga_c_revm06_l",
        "Value": "294000"
      },
      {
        "Description": [
          "Minnesota M08-HX hybrid exchange functional"
        ],
        "Name": "hyb_mgga_x_m08_hx",
        "Value": "295"
      },
      {
        "Description": [
          "Minnesota M08-SO hybrid exchange functional"
        ],
        "Name": "hyb_mgga_x_m08_so",
        "Value": "296"
      },
      {
        "Description": [
          "Minnesota M11 hybrid exchange functional"
        ],
        "Name": "hyb_mgga_x_m11",
        "Value": "297"
      },
      {
        "Description": [
          "Chachiyo exchange"
        ],
        "Name": "gga_x_chachiyo",
        "Value": "298"
      },
      {
        "Description": [
          "TPSS for surface adsorption"
        ],
        "Name": "mgga_x_rtpss",
        "Value": "299"
      },
      {
        "Description": [
          "MS2beta exchange of Furness and Sun"
        ],
        "Name": "mgga_x_ms2b",
        "Value": "300"
      },
      {
        "Description": [
          "MS2beta* exchange of Furness and Sun"
        ],
        "Name": "mgga_x_ms2bs",
        "Value": "301"
      },
      {
        "Description": [
          "MVSbeta exchange by Furness and Sun"
        ],
        "Name": "mgga_x_mvsb",
        "Value": "302"
      },
      {
        "Description": [
          "MVSbeta* exchange by Furness and Sun"
        ],
        "Name": "mgga_x_mvsbs",
        "Value": "303"
      },
      {
        "Description": [
          "Revised Minnesota M11 hybrid exchange functional"
        ],
        "Name": "hyb_mgga_x_revm11",
        "Value": "304"
      },
      {
        "Description": [
          "Revised Minnesota M06 hybrid exchange functional"
        ],
        "Name": "hyb_mgga_x_revm06",
        "Value": "305"
      },
      {
        "Description": [
          "Revised Minnesota M06 correlation functional"
        ],
        "Name": "mgga_c_revm06",
        "Value": "306000"
      },
      {
        "Description": [
          "Chachiyo simple 2 parameter correlation with modified spin scaling"
        ],
        "Name": "lda_c_chachiyo_mod",
        "Value": "307000"
      },
      {
        "Description": [
          "Karasiev reparameterization of Chachiyo"
        ],
        "Name": "lda_c_karasiev_mod",
        "Value": "308000"
      },
      {
        "Description": [
          "Chachiyo simple GGA correlation"
        ],
        "Name": "gga_c_chachiyo",
        "Value": "309000"
      },
      {
        "Description": [
          "Minnesota M06-SX short-range hybrid exchange functional"
        ],
        "Name": "hyb_mgga_x_m06_sx",
        "Value": "310"
      },
      {
        "Description": [
          "Minnesota M06-SX correlation functional"
        ],
        "Name": "mgga_c_m06_sx",
        "Value": "311000"
      },
      {
        "Description": [
          "Revised Swart, Sola and Bickelhaupt dispersion"
        ],
        "Name": "gga_x_revssb_d",
        "Value": "312"
      },
      {
        "Description": [
          "ccDF: coupled-cluster motivated density functional"
        ],
        "Name": "gga_c_ccdf",
        "Value": "313000"
      },
      {
        "Description": [
          "HF + LYP correlation"
        ],
        "Name": "hyb_gga_xc_hflyp",
        "Value": "314000"
      },
      {
        "Description": [
          "B3P86, NWChem version"
        ],
        "Name": "hyb_gga_xc_b3p86_nwchem",
        "Value": "315000"
      },
      {
        "Description": [
          "PW91, alternate version with more digits"
        ],
        "Name": "gga_x_pw91_mod",
        "Value": "316"
      },
      {
        "Description": [
          "Xie, Wu, and Zhao interpolation ansatz without fitting parameters"
        ],
        "Name": "lda_c_w20",
        "Value": "317000"
      },
      {
        "Description": [
          "Corrected KSDT by Karasiev, Dufty and Trickey"
        ],
        "Name": "lda_xc_corrksdt",
        "Value": "318000"
      },
      {
        "Description": [
          "Filatov and Thiel 1998 meta-GGA exchange"
        ],
        "Name": "mgga_x_ft98",
        "Value": "319"
      },
      {
        "Description": [
          "Perdew, Burke & Ernzerhof with less precise value for beta"
        ],
        "Name": "gga_x_pbe_mod",
        "Value": "320"
      },
      {
        "Description": [
          "Perdew, Burke & Ernzerhof with parameter values used in Gaussian"
        ],
        "Name": "gga_x_pbe_gaussian",
        "Value": "321"
      },
      {
        "Description": [
          "Perdew, Burke & Ernzerhof with parameters from Gaussian"
        ],
        "Name": "gga_c_pbe_gaussian",
        "Value": "322000"
      },
      {
        "Description": [
          "Tao, Perdew, Staroverov & Scuseria with parameters from Gaussian"
        ],
        "Name": "mgga_c_tpss_gaussian",
        "Value": "323000"
      },
      {
        "Description": [
          "Nearly correct asymptotic potential revised"
        ],
        "Name": "gga_x_ncapr",
        "Value": "324"
      },
      {
        "Description": [
          "relPBE0 a.k.a. relPBE: PBE0 refitted for actinide compounds"
        ],
        "Name": "hyb_gga_xc_relpbe0",
        "Value": "325000"
      },
      {
        "Description": [
          "Becke 97-3c by Grimme et. al."
        ],
        "Name": "gga_xc_b97_3c",
        "Value": "327000"
      },
      {
        "Description": [
          "Self-interaction corrected correlation functional by Schmidt et al"
        ],
        "Name": "mgga_c_cc",
        "Value": "387000"
      },
      {
        "Description": [
          "Iso-orbital corrected LDA correlation by Lebeda et al"
        ],
        "Name": "mgga_c_ccalda",
        "Value": "388000"
      },
      {
        "Description": [
          "BR3P86 hybrid meta-GGA from Neumann and Handy"
        ],
        "Name": "hyb_mgga_xc_br3p86",
        "Value": "389000"
      },
      {
        "Description": [
          "CASE21: Constrained And Smoothed semi-Empirical 2021 functional"
        ],
        "Name": "hyb_gga_xc_case21",
        "Value": "390000"
      },
      {
        "Description": [
          "Revised regTM correlation by Jana et al"
        ],
        "Name": "mgga_c_rregtm",
        "Value": "391000"
      },
      {
        "Description": [
          "PBE-2X: PBE0 with 56% exact exchange"
        ],
        "Name": "hyb_gga_xc_pbe_2x",
        "Value": "392000"
      },
      {
        "Description": [
          "PBE38: PBE0 with 3/8 = 37.5% exact exchange"
        ],
        "Name": "hyb_gga_xc_pbe38",
        "Value": "393000"
      },
      {
        "Description": [
          "B3LYP with VWN functional 3 instead of RPA"
        ],
        "Name": "hyb_gga_xc_b3lyp3",
        "Value": "394000"
      },
      {
        "Description": [
          "CAM-O3LYP"
        ],
        "Name": "hyb_gga_xc_cam_o3lyp",
        "Value": "395000"
      },
      {
        "Description": [
          "TPSS0 with 25% exact exchange"
        ],
        "Name": "hyb_mgga_xc_tpss0",
        "Value": "396000"
      },
      {
        "Description": [
          "Becke 1994 meta-GGA correlation"
        ],
        "Name": "mgga_c_b94",
        "Value": "397000"
      },
      {
        "Description": [
          "Becke 1994 hybrid meta-GGA"
        ],
        "Name": "hyb_mgga_xc_b94_hyb",
        "Value": "398000"
      },
      {
        "Description": [
          "wB97X-D3 range-separated functional"
        ],
        "Name": "hyb_gga_xc_wb97x_d3",
        "Value": "399000"
      },
      {
        "Description": [
          "LC version of BLYP"
        ],
        "Name": "hyb_gga_xc_lc_blyp",
        "Value": "400000"
      },
      {
        "Description": [
          "The original (ACM, B3PW91) hybrid of Becke"
        ],
        "Name": "hyb_gga_xc_b3pw91",
        "Value": "401000"
      },
      {
        "Description": [
          "B3LYP"
        ],
        "Name": "hyb_gga_xc_b3lyp",
        "Value": "402000"
      },
      {
        "Description": [
          "B3P86"
        ],
        "Name": "hyb_gga_xc_b3p86",
        "Value": "403000"
      },
      {
        "Description": [
          "O3LYP"
        ],
        "Name": "hyb_gga_xc_o3lyp",
        "Value": "404000"
      },
      {
        "Description": [
          "mPW1K"
        ],
        "Name": "hyb_gga_xc_mpw1k",
        "Value": "405000"
      },
      {
        "Description": [
          "PBEH (PBE0)"
        ],
        "Name": "hyb_gga_xc_pbeh",
        "Value": "406000"
      },
      {
        "Description": [
          "Becke 97"
        ],
        "Name": "hyb_gga_xc_b97",
        "Value": "407000"
      },
      {
        "Description": [
          "Becke 97-1"
        ],
        "Name": "hyb_gga_xc_b97_1",
        "Value": "408000"
      },
      {
        "Description": [
          "APF hybrid functional"
        ],
        "Name": "hyb_gga_xc_apf",
        "Value": "409000"
      },
      {
        "Description": [
          "Becke 97-2"
        ],
        "Name": "hyb_gga_xc_b97_2",
        "Value": "410000"
      },
      {
        "Description": [
          "X3LYP"
        ],
        "Name": "hyb_gga_xc_x3lyp",
        "Value": "411000"
      },
      {
        "Description": [
          "B1WC"
        ],
        "Name": "hyb_gga_xc_b1wc",
        "Value": "412000"
      },
      {
        "Description": [
          "Boese-Martin for Kinetics"
        ],
        "Name": "hyb_gga_xc_b97_k",
        "Value": "413000"
      },
      {
        "Description": [
          "Becke 97-3"
        ],
        "Name": "hyb_gga_xc_b97_3",
        "Value": "414000"
      },
      {
        "Description": [
          "MPW3PW of Adamo & Barone"
        ],
        "Name": "hyb_gga_xc_mpw3pw",
        "Value": "415000"
      },
      {
        "Description": [
          "B1LYP"
        ],
        "Name": "hyb_gga_xc_b1lyp",
        "Value": "416000"
      },
      {
        "Description": [
          "B1PW91"
        ],
        "Name": "hyb_gga_xc_b1pw91",
        "Value": "417000"
      },
      {
        "Description": [
          "mPW1PW"
        ],
        "Name": "hyb_gga_xc_mpw1pw",
        "Value": "418000"
      },
      {
        "Description": [
          "MPW3LYP"
        ],
        "Name": "hyb_gga_xc_mpw3lyp",
        "Value": "419000"
      },
      {
        "Description": [
          "SB98 (1a)"
        ],
        "Name": "hyb_gga_xc_sb98_1a",
        "Value": "420000"
      },
      {
        "Description": [
          "SB98 (1b)"
        ],
        "Name": "hyb_gga_xc_sb98_1b",
        "Value": "421000"
      },
      {
        "Description": [
          "SB98 (1c)"
        ],
        "Name": "hyb_gga_xc_sb98_1c",
        "Value": "422000"
      },
      {
        "Description": [
          "SB98 (2a)"
        ],
        "Name": "hyb_gga_xc_sb98_2a",
        "Value": "423000"
      },
      {
        "Description": [
          "SB98 (2b)"
        ],
        "Name": "hyb_gga_xc_sb98_2b",
        "Value": "424000"
      },
      {
        "Description": [
          "SB98 (2c)"
        ],
        "Name": "hyb_gga_xc_sb98_2c",
        "Value": "425000"
      },
      {
        "Description": [
          "Hybrid based on SOGGA11 form"
        ],
        "Name": "hyb_gga_x_sogga11_x",
        "Value": "426"
      },
      {
        "Description": [
          "HSE03"
        ],
        "Name": "hyb_gga_xc_hse03",
        "Value": "427000"
      },
      {
        "Description": [
          "HSE06"
        ],
        "Name": "hyb_gga_xc_hse06",
        "Value": "428000"
      },
      {
        "Description": [
          "HJS hybrid screened exchange PBE version"
        ],
        "Name": "hyb_gga_xc_hjs_pbe",
        "Value": "429000"
      },
      {
        "Description": [
          "HJS hybrid screened exchange PBE_SOL version"
        ],
        "Name": "hyb_gga_xc_hjs_pbe_sol",
        "Value": "430000"
      },
      {
        "Description": [
          "HJS hybrid screened exchange B88 version"
        ],
        "Name": "hyb_gga_xc_hjs_b88",
        "Value": "431000"
      },
      {
        "Description": [
          "HJS hybrid screened exchange B97x version"
        ],
        "Name": "hyb_gga_xc_hjs_b97x",
        "Value": "432000"
      },
      {
        "Description": [
          "CAM version of B3LYP"
        ],
        "Name": "hyb_gga_xc_cam_b3lyp",
        "Value": "433000"
      },
      {
        "Description": [
          "CAM version of B3LYP, tuned for excitations and properties"
        ],
        "Name": "hyb_gga_xc_tuned_cam_b3lyp",
        "Value": "434000"
      },
      {
        "Description": [
          "BHandH i.e. BHLYP"
        ],
        "Name": "hyb_gga_xc_bhandh",
        "Value": "435000"
      },
      {
        "Description": [
          "BHandHLYP"
        ],
        "Name": "hyb_gga_xc_bhandhlyp",
        "Value": "436000"
      },
      {
        "Description": [
          "B3LYP with RC04 LDA"
        ],
        "Name": "hyb_gga_xc_mb3lyp_rc04",
        "Value": "437000"
      },
      {
        "Description": [
          "Minnesota M05 hybrid exchange functional"
        ],
        "Name": "hyb_mgga_x_m05",
        "Value": "438"
      },
      {
        "Description": [
          "Minnesota M05-2X hybrid exchange functional"
        ],
        "Name": "hyb_mgga_x_m05_2x",
        "Value": "439"
      },
      {
        "Description": [
          "Mixture of B88 with BC95 (B1B95)"
        ],
        "Name": "hyb_mgga_xc_b88b95",
        "Value": "440000"
      },
      {
        "Description": [
          "Mixture of B86 with BC95"
        ],
        "Name": "hyb_mgga_xc_b86b95",
        "Value": "441000"
      },
      {
        "Description": [
          "Mixture of PW86 with BC95"
        ],
        "Name": "hyb_mgga_xc_pw86b95",
        "Value": "442000"
      },
      {
        "Description": [
          "Mixture of B88 with BC95 from Zhao and Truhlar"
        ],
        "Name": "hyb_mgga_xc_bb1k",
        "Value": "443000"
      },
      {
        "Description": [
          "Minnesota M06-HF hybrid exchange functional"
        ],
        "Name": "hyb_mgga_x_m06_hf",
        "Value": "444"
      },
      {
        "Description": [
          "Mixture of mPW91 with BC95 from Zhao and Truhlar"
        ],
        "Name": "hyb_mgga_xc_mpw1b95",
        "Value": "445000"
      },
      {
        "Description": [
          "Mixture of mPW91 with BC95 for kinetics"
        ],
        "Name": "hyb_mgga_xc_mpwb1k",
        "Value": "446000"
      },
      {
        "Description": [
          "Mixture of X with BC95"
        ],
        "Name": "hyb_mgga_xc_x1b95",
        "Value": "447000"
      },
      {
        "Description": [
          "Mixture of X with BC95 for kinetics"
        ],
        "Name": "hyb_mgga_xc_xb1k",
        "Value": "448000"
      },
      {
        "Description": [
          "Minnesota M06 hybrid exchange functional"
        ],
        "Name": "hyb_mgga_x_m06",
        "Value": "449"
      },
      {
        "Description": [
          "Minnesota M06-2X hybrid exchange functional"
        ],
        "Name": "hyb_mgga_x_m06_2x",
        "Value": "450"
      },
      {
        "Description": [
          "Mixture of PW91 with BC95 from Zhao and Truhlar"
        ],
        "Name": "hyb_mgga_xc_pw6b95",
        "Value": "451000"
      },
      {
        "Description": [
          "Mixture of PW91 with BC95 from Zhao and Truhlar for kinetics"
        ],
        "Name": "hyb_mgga_xc_pwb6k",
        "Value": "452000"
      },
      {
        "Description": [
          "MPW with 1 par. for metals/LYP"
        ],
        "Name": "hyb_gga_xc_mpwlyp1m",
        "Value": "453000"
      },
      {
        "Description": [
          "Revised B3LYP"
        ],
        "Name": "hyb_gga_xc_revb3lyp",
        "Value": "454000"
      },
      {
        "Description": [
          "CAMY version of BLYP"
        ],
        "Name": "hyb_gga_xc_camy_blyp",
        "Value": "455000"
      },
      {
        "Description": [
          "PBE0-1/3"
        ],
        "Name": "hyb_gga_xc_pbe0_13",
        "Value": "456000"
      },
      {
        "Description": [
          "TPSSh"
        ],
        "Name": "hyb_mgga_xc_tpssh",
        "Value": "457000"
      },
      {
        "Description": [
          "revTPSSh"
        ],
        "Name": "hyb_mgga_xc_revtpssh",
        "Value": "458000"
      },
      {
        "Description": [
          "B3LYP*"
        ],
        "Name": "hyb_gga_xc_b3lyps",
        "Value": "459000"
      },
      {
        "Description": [
          "Global hybrid for vertical ionization potentials"
        ],
        "Name": "hyb_gga_xc_qtp17",
        "Value": "460000"
      },
      {
        "Description": [
          "B3LYP-MCM1"
        ],
        "Name": "hyb_gga_xc_b3lyp_mcm1",
        "Value": "461000"
      },
      {
        "Description": [
          "B3LYP-MCM2"
        ],
        "Name": "hyb_gga_xc_b3lyp_mcm2",
        "Value": "462000"
      },
      {
        "Description": [
          "wB97 range-separated functional"
        ],
        "Name": "hyb_gga_xc_wb97",
        "Value": "463000"
      },
      {
        "Description": [
          "wB97X range-separated functional"
        ],
        "Name": "hyb_gga_xc_wb97x",
        "Value": "464000"
      },
      {
        "Description": [
          "Long-range corrected short-range hybrid PBE (LRC-wPBEh) by Rohrdanz, Martins and Herbert"
        ],
        "Name": "hyb_gga_xc_lrc_wpbeh",
        "Value": "465000"
      },
      {
        "Description": [
          "wB97X-V range-separated functional"
        ],
        "Name": "hyb_gga_xc_wb97x_v",
        "Value": "466000"
      },
      {
        "Description": [
          "LCY version of PBE"
        ],
        "Name": "hyb_gga_xc_lcy_pbe",
        "Value": "467000"
      },
      {
        "Description": [
          "LCY version of BLYP"
        ],
        "Name": "hyb_gga_xc_lcy_blyp",
        "Value": "468000"
      },
      {
        "Description": [
          "Vydrov and Van Voorhis"
        ],
        "Name": "hyb_gga_xc_lc_vv10",
        "Value": "469000"
      },
      {
        "Description": [
          "CAMY version of B3LYP"
        ],
        "Name": "hyb_gga_xc_camy_b3lyp",
        "Value": "470000"
      },
      {
        "Description": [
          "wB97X-D range-separated functional"
        ],
        "Name": "hyb_gga_xc_wb97x_d",
        "Value": "471000"
      },
      {
        "Description": [
          "hPBEint"
        ],
        "Name": "hyb_gga_xc_hpbeint",
        "Value": "472000"
      },
      {
        "Description": [
          "Long-range corrected PBE (LRC-wPBE) by Rohrdanz, Martins and Herbert"
        ],
        "Name": "hyb_gga_xc_lrc_wpbe",
        "Value": "473000"
      },
      {
        "Description": [
          "MVSh hybrid exchange functional"
        ],
        "Name": "hyb_mgga_x_mvsh",
        "Value": "474"
      },
      {
        "Description": [
          "B3LYP with VWN functional 5 instead of RPA"
        ],
        "Name": "hyb_gga_xc_b3lyp5",
        "Value": "475000"
      },
      {
        "Description": [
          "EDF2"
        ],
        "Name": "hyb_gga_xc_edf2",
        "Value": "476000"
      },
      {
        "Description": [
          "Correct Asymptotic Potential hybrid"
        ],
        "Name": "hyb_gga_xc_cap0",
        "Value": "477000"
      },
      {
        "Description": [
          "Long-range corrected PBE (LC-wPBE) by Vydrov and Scuseria"
        ],
        "Name": "hyb_gga_xc_lc_wpbe",
        "Value": "478000"
      },
      {
        "Description": [
          "HSE12"
        ],
        "Name": "hyb_gga_xc_hse12",
        "Value": "479000"
      },
      {
        "Description": [
          "HSE12 (short-range version)"
        ],
        "Name": "hyb_gga_xc_hse12s",
        "Value": "480000"
      },
      {
        "Description": [
          "HSEsol"
        ],
        "Name": "hyb_gga_xc_hse_sol",
        "Value": "481000"
      },
      {
        "Description": [
          "CAM-B3LYP retuned using ionization potentials of water"
        ],
        "Name": "hyb_gga_xc_cam_qtp_01",
        "Value": "482000"
      },
      {
        "Description": [
          "mPW1LYP"
        ],
        "Name": "hyb_gga_xc_mpw1lyp",
        "Value": "483000"
      },
      {
        "Description": [
          "mPW1PBE"
        ],
        "Name": "hyb_gga_xc_mpw1pbe",
        "Value": "484000"
      },
      {
        "Description": [
          "Kang-Musgrave hybrid"
        ],
        "Name": "hyb_gga_xc_kmlyp",
        "Value": "485000"
      },
      {
        "Description": [
          "Long-range corrected PBE (LC-wPBE) by Weintraub, Henderson and Scuseria"
        ],
        "Name": "hyb_gga_xc_lc_wpbe_whs",
        "Value": "486000"
      },
      {
        "Description": [
          "Long-range corrected short-range hybrid PBE (LC-wPBE) by Weintraub, Henderson and Scuseria"
        ],
        "Name": "hyb_gga_xc_lc_wpbeh_whs",
        "Value": "487000"
      },
      {
        "Description": [
          "Long-range corrected PBE (LC-wPBE) by Weintraub, Henderson and Scuseria"
        ],
        "Name": "hyb_gga_xc_lc_wpbe08_whs",
        "Value": "488000"
      },
      {
        "Description": [
          "Long-range corrected PBE (LC-wPBE) by Weintraub, Henderson and Scuseria"
        ],
        "Name": "hyb_gga_xc_lc_wpbesol_whs",
        "Value": "489000"
      },
      {
        "Description": [
          "CAM-B3LYP retuned using ionization potentials of water"
        ],
        "Name": "hyb_gga_xc_cam_qtp_00",
        "Value": "490000"
      },
      {
        "Description": [
          "CAM-B3LYP retuned using ionization potentials of water"
        ],
        "Name": "hyb_gga_xc_cam_qtp_02",
        "Value": "491000"
      },
      {
        "Description": [
          "CAM-B3LYP retuned using ionization potentials of water"
        ],
        "Name": "hyb_gga_xc_lc_qtp",
        "Value": "492000"
      },
      {
        "Description": [
          "Regularized SCAN exchange by Bartok and Yates"
        ],
        "Name": "mgga_x_rscan",
        "Value": "493"
      },
      {
        "Description": [
          "Regularized SCAN correlation by Bartok and Yates"
        ],
        "Name": "mgga_c_rscan",
        "Value": "494000"
      },
      {
        "Description": [
          "Swart 2012 GGA exchange"
        ],
        "Name": "gga_x_s12g",
        "Value": "495"
      },
      {
        "Description": [
          "Swart 2012 hybrid exchange"
        ],
        "Name": "hyb_gga_x_s12h",
        "Value": "496"
      },
      {
        "Description": [
          "Re-regularized SCAN exchange by Furness et al"
        ],
        "Name": "mgga_x_r2scan",
        "Value": "497"
      },
      {
        "Description": [
          "Re-regularized SCAN correlation by Furness et al"
        ],
        "Name": "mgga_c_r2scan",
        "Value": "498000"
      },
      {
        "Description": [
          "BLYP35"
        ],
        "Name": "hyb_gga_xc_blyp35",
        "Value": "499000"
      },
      {
        "Description": [
          "short-range part of the PBE (default w=0 gives PBEh)"
        ],
        "Name": "gga_x_wpbeh",
        "Value": "524"
      },
      {
        "Description": [
          "HJS screened exchange PBE version"
        ],
        "Name": "gga_x_hjs_pbe",
        "Value": "525"
      },
      {
        "Description": [
          "HJS screened exchange PBE_SOL version"
        ],
        "Name": "gga_x_hjs_pbe_sol",
        "Value": "526"
      },
      {
        "Description": [
          "HJS screened exchange B88 version"
        ],
        "Name": "gga_x_hjs_b88",
        "Value": "527"
      },
      {
        "Description": [
          "HJS screened exchange B97x version"
        ],
        "Name": "gga_x_hjs_b97x",
        "Value": "528"
      },
      {
        "Description": [
          "Short-range recipe for B88 functional - erf"
        ],
        "Name": "gga_x_ityh",
        "Value": "529"
      },
      {
        "Description": [
          "Short-range recipe for B88 functional - Yukawa"
        ],
        "Name": "gga_x_sfat",
        "Value": "530"
      },
      {
        "Description": [
          "wB97M-V exchange-correlation functional"
        ],
        "Name": "hyb_mgga_xc_wb97m_v",
        "Value": "531000"
      },
      {
        "Description": [
          "Slater exchange with relativistic corrections"
        ],
        "Name": "lda_x_rel",
        "Value": "532"
      },
      {
        "Description": [
          "Semiclassical GGA at fourth order"
        ],
        "Name": "gga_x_sg4",
        "Value": "533"
      },
      {
        "Description": [
          "Semiclassical GGA at fourth order"
        ],
        "Name": "gga_c_sg4",
        "Value": "534000"
      },
      {
        "Description": [
          "Gilbert and Gill 1999"
        ],
        "Name": "gga_x_gg99",
        "Value": "535"
      },
      {
        "Description": [
          "LDA constructed from slab-like systems of 1 electron"
        ],
        "Name": "lda_xc_1d_ehwlrg_1",
        "Value": "536000"
      },
      {
        "Description": [
          "LDA constructed from slab-like systems of 2 electrons"
        ],
        "Name": "lda_xc_1d_ehwlrg_2",
        "Value": "537000"
      },
      {
        "Description": [
          "LDA constructed from slab-like systems of 3 electrons"
        ],
        "Name": "lda_xc_1d_ehwlrg_3",
        "Value": "538000"
      },
      {
        "Description": [
          "PBE power"
        ],
        "Name": "gga_x_pbepow",
        "Value": "539"
      },
      {
        "Description": [
          "Tao and Mo 2016 exchange"
        ],
        "Name": "mgga_x_tm",
        "Value": "540"
      },
      {
        "Description": [
          "meta-GGA version of VT{8,4} GGA"
        ],
        "Name": "mgga_x_vt84",
        "Value": "541"
      },
      {
        "Description": [
          "TPSS with correct surface asymptotics"
        ],
        "Name": "mgga_x_sa_tpss",
        "Value": "542"
      },
      {
        "Description": [
          "Gilbert and Gill 1999 (mixed)"
        ],
        "Name": "gga_x_kgg99",
        "Value": "544"
      },
      {
        "Description": [
          "high local exchange 2016"
        ],
        "Name": "gga_xc_hle16",
        "Value": "545000"
      },
      {
        "Description": [
          "Short-range LDA exchange with error function kernel (erfc)"
        ],
        "Name": "lda_x_erf",
        "Value": "546"
      },
      {
        "Description": [
          "Lee-Parr reparametrization A"
        ],
        "Name": "lda_xc_lp_a",
        "Value": "547000"
      },
      {
        "Description": [
          "Lee-Parr reparametrization B"
        ],
        "Name": "lda_xc_lp_b",
        "Value": "548000"
      },
      {
        "Description": [
          "Rae self-energy corrected exchange"
        ],
        "Name": "lda_x_rae",
        "Value": "549"
      },
      {
        "Description": [
          "McWeeny 76"
        ],
        "Name": "lda_c_mcweeny",
        "Value": "551000"
      },
      {
        "Description": [
          "Brual & Rothstein 78"
        ],
        "Name": "lda_c_br78",
        "Value": "552000"
      },
      {
        "Description": [
          "GGA component of SCAN"
        ],
        "Name": "gga_c_scan_e0",
        "Value": "553000"
      },
      {
        "Description": [
          "Proynov and Kong 2009"
        ],
        "Name": "lda_c_pk09",
        "Value": "554000"
      },
      {
        "Description": [
          "GapC"
        ],
        "Name": "gga_c_gapc",
        "Value": "555000"
      },
      {
        "Description": [
          "Gaploc"
        ],
        "Name": "gga_c_gaploc",
        "Value": "556000"
      },
      {
        "Description": [
          "another spin-dependent correction to PBEint"
        ],
        "Name": "gga_c_zvpbeint",
        "Value": "557000"
      },
      {
        "Description": [
          "another spin-dependent correction to PBEsol"
        ],
        "Name": "gga_c_zvpbesol",
        "Value": "558000"
      },
      {
        "Description": [
          "Takkar and McCarthy reparametrization"
        ],
        "Name": "gga_c_tm_lyp",
        "Value": "559000"
      },
      {
        "Description": [
          "Thakkar and McCarthy reparametrization"
        ],
        "Name": "gga_c_tm_pbe",
        "Value": "560000"
      },
      {
        "Description": [
          "Wilson 94 (Eq. 25)"
        ],
        "Name": "gga_c_w94",
        "Value": "561000"
      },
      {
        "Description": [
          "Krieger, Chen, Iafrate, and Savin"
        ],
        "Name": "mgga_c_kcis",
        "Value": "562000"
      },
      {
        "Description": [
          "Hybrid based on KCIS"
        ],
        "Name": "hyb_mgga_xc_b0kcis",
        "Value": "563000"
      },
      {
        "Description": [
          "Lee & Parr, Eq. (56)"
        ],
        "Name": "mgga_xc_lp90",
        "Value": "564000"
      },
      {
        "Description": [
          "A dynamical correlation functional"
        ],
        "Name": "gga_c_cs1",
        "Value": "565000"
      },
      {
        "Description": [
          "MPW1KCIS for barrier heights"
        ],
        "Name": "hyb_mgga_xc_mpw1kcis",
        "Value": "566000"
      },
      {
        "Description": [
          "MPWKCIS1K for barrier heights"
        ],
        "Name": "hyb_mgga_xc_mpwkcis1k",
        "Value": "567000"
      },
      {
        "Description": [
          "PBE1KCIS for binding energies"
        ],
        "Name": "hyb_mgga_xc_pbe1kcis",
        "Value": "568000"
      },
      {
        "Description": [
          "TPSS1KCIS for thermochemistry and kinetics"
        ],
        "Name": "hyb_mgga_xc_tpss1kcis",
        "Value": "569000"
      },
      {
        "Description": [
          "Becke 88 reoptimized to be used with tau1"
        ],
        "Name": "gga_x_b88m",
        "Value": "570"
      },
      {
        "Description": [
          "Meta-GGA correlation by Becke"
        ],
        "Name": "mgga_c_b88",
        "Value": "571000"
      },
      {
        "Description": [
          "B5050LYP"
        ],
        "Name": "hyb_gga_xc_b5050lyp",
        "Value": "572000"
      },
      {
        "Description": [
          "Wigner with corresponding LYP parameters"
        ],
        "Name": "lda_c_ow_lyp",
        "Value": "573000"
      },
      {
        "Description": [
          "Optimized Wigner"
        ],
        "Name": "lda_c_ow",
        "Value": "574000"
      },
      {
        "Description": [
          "GX functional of Loos"
        ],
        "Name": "mgga_x_gx",
        "Value": "575"
      },
      {
        "Description": [
          "PBE-GX functional of Loos"
        ],
        "Name": "mgga_x_pbe_gx",
        "Value": "576"
      },
      {
        "Description": [
          "Groth, Dornheim, Sjostrom, Malone, Foulkes, Bonitz"
        ],
        "Name": "lda_xc_gdsmfb",
        "Value": "577000"
      },
      {
        "Description": [
          "Gordon and Kim 1972"
        ],
        "Name": "lda_c_gk72",
        "Value": "578000"
      },
      {
        "Description": [
          "Karasiev reparameterization of Chachiyo"
        ],
        "Name": "lda_c_karasiev",
        "Value": "579000"
      },
      {
        "Description": [
          "revised SCAN"
        ],
        "Name": "mgga_x_revscan",
        "Value": "581"
      },
      {
        "Description": [
          "revised SCAN"
        ],
        "Name": "mgga_c_revscan",
        "Value": "582000"
      },
      {
        "Description": [
          "revised SCAN hybrid exchange (SCAN0)"
        ],
        "Name": "hyb_mgga_x_revscan0",
        "Value": "583"
      },
      {
        "Description": [
          "SCAN + VV10 correlation"
        ],
        "Name": "mgga_c_scan_vv10",
        "Value": "584000"
      },
      {
        "Description": [
          "REVSCAN + VV10 correlation"
        ],
        "Name": "mgga_c_revscan_vv10",
        "Value": "585000"
      },
      {
        "Description": [
          "Becke-Roussel 89 with an explicit inversion of x(y), gamma = 0.8"
        ],
        "Name": "mgga_x_br89_explicit",
        "Value": "586"
      },
      {
        "Description": [
          "Keal and Tozer, version 3"
        ],
        "Name": "gga_xc_kt3",
        "Value": "587000"
      },
      {
        "Description": [
          "Baer and Neuhauser, gamma=1"
        ],
        "Name": "hyb_lda_xc_bn05",
        "Value": "588000"
      },
      {
        "Description": [
          "Livshits and Baer, empirical functional also used for IP tuning"
        ],
        "Name": "hyb_gga_xc_lb07",
        "Value": "589000"
      },
      {
        "Description": [
          "Long-range LDA correlation functional"
        ],
        "Name": "lda_c_pmgb06",
        "Value": "590000"
      },
      {
        "Description": [
          "Becke 98"
        ],
        "Name": "hyb_mgga_xc_b98",
        "Value": "598000"
      },
      {
        "Description": [
          "Neural network LDA from Tozer et al"
        ],
        "Name": "lda_xc_tih",
        "Value": "599000"
      },
      {
        "Description": [
          "Exchange in 1D for an exponentially screened interaction"
        ],
        "Name": "lda_x_1d_exponential",
        "Value": "600"
      },
      {
        "Description": [
          "Short-range recipe for PBE functional - Yukawa"
        ],
        "Name": "gga_x_sfat_pbe",
        "Value": "601"
      },
      {
        "Description": [
          "Becke-Roussel 89 with an explicit inversion of x(y), gamma = 1.0"
        ],
        "Name": "mgga_x_br89_explicit_1",
        "Value": "602"
      },
      {
        "Description": [
          "Regularized TPSS"
        ],
        "Name": "mgga_x_regtpss",
        "Value": "603"
      },
      {
        "Description": [
          "Functional derivative recovered from the stray LB94 potential"
        ],
        "Name": "gga_x_fd_lb94",
        "Value": "604"
      },
      {
        "Description": [
          "Revised FD_LB94"
        ],
        "Name": "gga_x_fd_revlb94",
        "Value": "605"
      },
      {
        "Description": [
          "PBEloc variation with enhanced compatibility with exact exchange"
        ],
        "Name": "gga_c_zvpbeloc",
        "Value": "606000"
      },
      {
        "Description": [
          "Hybrid based on APBE"
        ],
        "Name": "hyb_gga_xc_apbe0",
        "Value": "607000"
      },
      {
        "Description": [
          "Hybrid based in APBE and zvPBEloc"
        ],
        "Name": "hyb_gga_xc_hapbe",
        "Value": "608000"
      },
      {
        "Description": [
          "JS17 meta-GGA for 2D"
        ],
        "Name": "mgga_x_2d_js17",
        "Value": "609"
      },
      {
        "Description": [
          "Similar to CAM-B3LYP, but trying to reduce the many-electron self-interaction"
        ],
        "Name": "hyb_gga_xc_rcam_b3lyp",
        "Value": "610000"
      },
      {
        "Description": [
          "hybrid fitted to carbon NMR shifts"
        ],
        "Name": "hyb_gga_xc_wc04",
        "Value": "611000"
      },
      {
        "Description": [
          "hybrid fitted to proton NMR shifts"
        ],
        "Name": "hyb_gga_xc_wp04",
        "Value": "612000"
      },
      {
        "Description": [
          "CAM version of B3LYP, tuned for TDDFT"
        ],
        "Name": "hyb_gga_xc_camh_b3lyp",
        "Value": "614000"
      },
      {
        "Description": [
          "Long-range corrected short-range hybrid PBE (whPBE0) by Shao et al"
        ],
        "Name": "hyb_gga_xc_whpbe0",
        "Value": "615000"
      },
      {
        "Description": [
          "Short-range recipe for OPTX functional"
        ],
        "Name": "gga_x_ityh_optx",
        "Value": "622"
      },
      {
        "Description": [
          "Short-range recipe for PBE functional"
        ],
        "Name": "gga_x_ityh_pbe",
        "Value": "623"
      },
      {
        "Description": [
          "Short-range LYP by Ai, Fang, and Su"
        ],
        "Name": "gga_c_lypr",
        "Value": "624000"
      },
      {
        "Description": [
          "LC version of BLYP for electron affinities"
        ],
        "Name": "hyb_gga_xc_lc_blyp_ea",
        "Value": "625000"
      },
      {
        "Description": [
          "Regularized Tao and Mo exchange"
        ],
        "Name": "mgga_x_regtm",
        "Value": "626"
      },
      {
        "Description": [
          "LC version of B88"
        ],
        "Name": "hyb_gga_xc_lc_bop",
        "Value": "636000"
      },
      {
        "Description": [
          "LC version of PBE"
        ],
        "Name": "hyb_gga_xc_lc_pbeop",
        "Value": "637000"
      },
      {
        "Description": [
          "Krieger, Chen, and Kurth"
        ],
        "Name": "mgga_c_kcisk",
        "Value": "638000"
      },
      {
        "Description": [
          "LC version of BLYP with correlation only in the short range"
        ],
        "Name": "hyb_gga_xc_lc_blypr",
        "Value": "639000"
      },
      {
        "Description": [
          "Modified CAM-B3LYP by Day, Nguyen and Pachter"
        ],
        "Name": "hyb_gga_xc_mcam_b3lyp",
        "Value": "640000"
      },
      {
        "Description": [
          "Short-range LDA exchange with Yukawa attenuation"
        ],
        "Name": "lda_x_yukawa",
        "Value": "641"
      },
      {
        "Description": [
          "Re-regularized SCAN correlation with larger value for eta"
        ],
        "Name": "mgga_c_r2scan01",
        "Value": "642000"
      },
      {
        "Description": [
          "Revised correlation energy for MGGAC exchange functional"
        ],
        "Name": "mgga_c_rmggac",
        "Value": "643000"
      },
      {
        "Description": [
          "MCML exchange"
        ],
        "Name": "mgga_x_mcml",
        "Value": "644"
      },
      {
        "Description": [
          "Re-regularized SCAN exchange by Furness et al with larger value for eta"
        ],
        "Name": "mgga_x_r2scan01",
        "Value": "645"
      },
      {
        "Description": [
          "Swart 2012 range-separated hybrid GGA exchange"
        ],
        "Name": "hyb_gga_x_cam_s12g",
        "Value": "646"
      },
      {
        "Description": [
          "Swart 2012 range-separated hybrid GGA exchange"
        ],
        "Name": "hyb_gga_x_cam_s12h",
        "Value": "647"
      },
      {
        "Description": [
          "r++SCAN: rSCAN with uniform density limit and coordinate scaling behavior"
        ],
        "Name": "mgga_x_rppscan",
        "Value": "648"
      },
      {
        "Description": [
          "r++SCAN: rSCAN with uniform density limit and coordinate scaling behavior"
        ],
        "Name": "mgga_c_rppscan",
        "Value": "649000"
      },
      {
        "Description": [
          "r$^{4}$SCAN, a functional that satisfies the same exact constraints that SCAN does"
        ],
        "Name": "mgga_x_r4scan",
        "Value": "650"
      },
      {
        "Description": [
          "Exchange part of VCML-rVV10 by Trepte and Voss"
        ],
        "Name": "mgga_x_vcml",
        "Value": "651"
      },
      {
        "Description": [
          "VCML-rVV10 by Trepte and Voss"
        ],
        "Name": "mgga_xc_vcml_rvv10",
        "Value": "652000"
      },
      {
        "Description": [
          "Google Accelerated Science 22"
        ],
        "Name": "hyb_mgga_xc_gas22",
        "Value": "658000"
      },
      {
        "Description": [
          "r2SCANh: r2SCAN hybrid like TPSSh with 10% exact exchange"
        ],
        "Name": "hyb_mgga_xc_r2scanh",
        "Value": "659000"
      },
      {
        "Description": [
          "r2SCAN0: r2SCAN hybrid like PBE0 with 25% exact exchange"
        ],
        "Name": "hyb_mgga_xc_r2scan0",
        "Value": "660000"
      },
      {
        "Description": [
          "r2SCAN50: r2SCAN hybrid like PBE50 with 50% exact exchange"
        ],
        "Name": "hyb_mgga_xc_r2scan50",
        "Value": "661000"
      },
      {
        "Description": [
          "CAM hybrid screened exchange PBE version"
        ],
        "Name": "hyb_gga_xc_cam_pbeh",
        "Value": "681000"
      },
      {
        "Description": [
          "CAMY hybrid screened exchange PBE version"
        ],
        "Name": "hyb_gga_xc_camy_pbeh",
        "Value": "682000"
      },
      {
        "Description": [
          "Ruggeri, Rios, and Alavi unrestricted fit"
        ],
        "Name": "lda_c_upw92",
        "Value": "683000"
      },
      {
        "Description": [
          "Ruggeri, Rios, and Alavi restricted fit"
        ],
        "Name": "lda_c_rpw92",
        "Value": "684000"
      },
      {
        "Description": [
          "LDA-type exchange with tau-dependent potential"
        ],
        "Name": "mgga_x_tlda",
        "Value": "685"
      },
      {
        "Description": [
          "Tao 2001"
        ],
        "Name": "mgga_x_edmgga",
        "Value": "686"
      },
      {
        "Description": [
          "Generalized density-matrix with a=1/2"
        ],
        "Name": "mgga_x_gdme_nv",
        "Value": "687"
      },
      {
        "Description": [
          "Reparametrized local-density approximation"
        ],
        "Name": "mgga_x_rlda",
        "Value": "688"
      },
      {
        "Description": [
          "Generalized density-matrix with a=0"
        ],
        "Name": "mgga_x_gdme_0",
        "Value": "689"
      },
      {
        "Description": [
          "Generalized density-matrix with a=0.00638"
        ],
        "Name": "mgga_x_gdme_kos",
        "Value": "690"
      },
      {
        "Description": [
          "Varied-terms (VT) mGGA of Koehl, Odom, and Scuseria"
        ],
        "Name": "mgga_x_gdme_vt",
        "Value": "691"
      },
      {
        "Description": [
          "simple local model for Slater potential"
        ],
        "Name": "lda_x_sloc",
        "Value": "692"
      },
      {
        "Description": [
          "revised Tao and Mo 2016 exchange"
        ],
        "Name": "mgga_x_revtm",
        "Value": "693"
      },
      {
        "Description": [
          "revised Tao and Mo 2016 exchange"
        ],
        "Name": "mgga_c_revtm",
        "Value": "694000"
      },
      {
        "Description": [
          "EDMGGA hybrid"
        ],
        "Name": "hyb_mgga_xc_edmggah",
        "Value": "695000"
      },
      {
        "Description": [
          "Modified Becke-Roussel for band gaps - cuspless hole"
        ],
        "Name": "mgga_x_mbrxc_bg",
        "Value": "696"
      },
      {
        "Description": [
          "Modified Becke-Roussel for band gaps - hydrogen hole"
        ],
        "Name": "mgga_x_mbrxh_bg",
        "Value": "697"
      },
      {
        "Description": [
          "Half-and-half meta-LDAized LDA exchange by Lehtola and Marques"
        ],
        "Name": "mgga_x_hlta",
        "Value": "698"
      },
      {
        "Description": [
          "Half-and-half meta-LDAized PW correlation by Lehtola and Marques"
        ],
        "Name": "mgga_c_hltapw",
        "Value": "699000"
      },
      {
        "Description": [
          "Deorbitalized SCAN (SCAN-L) exchange"
        ],
        "Name": "mgga_x_scanl",
        "Value": "700"
      },
      {
        "Description": [
          "Deorbitalized revised SCAN (revSCAN-L) exchange"
        ],
        "Name": "mgga_x_revscanl",
        "Value": "701"
      },
      {
        "Description": [
          "Deorbitalized SCAN (SCAN-L) correlation"
        ],
        "Name": "mgga_c_scanl",
        "Value": "702000"
      },
      {
        "Description": [
          "SCAN-L + rVV10 correlation"
        ],
        "Name": "mgga_c_scanl_rvv10",
        "Value": "703000"
      },
      {
        "Description": [
          "SCAN-L + VV10 correlation"
        ],
        "Name": "mgga_c_scanl_vv10",
        "Value": "704000"
      },
      {
        "Description": [
          "Jana and Samal 2018, screened range-separated TM exchange"
        ],
        "Name": "hyb_mgga_x_js18",
        "Value": "705"
      },
      {
        "Description": [
          "Patra, Jana and Samal 2018, screened range-separated TM exchange"
        ],
        "Name": "hyb_mgga_x_pjs18",
        "Value": "706"
      },
      {
        "Description": [
          "TASK exchange of Aschebrock and Kuemmel"
        ],
        "Name": "mgga_x_task",
        "Value": "707"
      },
      {
        "Description": [
          "MGGAC exchange of Patra et al"
        ],
        "Name": "mgga_x_mggac",
        "Value": "711"
      },
      {
        "Description": [
          "beta fitted to LC20 to be used with MGGAC"
        ],
        "Name": "gga_c_mggac",
        "Value": "712000"
      },
      {
        "Description": [
          "modified Becke-Roussel by Patra et al"
        ],
        "Name": "mgga_x_mbr",
        "Value": "716"
      },
      {
        "Description": [
          "Deorbitalized re-regularized SCAN (r2SCAN-L) exchange"
        ],
        "Name": "mgga_x_r2scanl",
        "Value": "718"
      },
      {
        "Description": [
          "Deorbitalized re-regularized SCAN (r2SCAN-L) correlation"
        ],
        "Name": "mgga_c_r2scanl",
        "Value": "719000"
      },
      {
        "Description": [
          "Long-range corrected TM-LYP by Jana et al"
        ],
        "Name": "hyb_mgga_xc_lc_tmlyp",
        "Value": "720000"
      },
      {
        "Description": [
          "modified TASK exchange"
        ],
        "Name": "mgga_x_mtask",
        "Value": "724"
      },
      {
        "Description": [
          "Functional for quasi-1D systems"
        ],
        "Name": "gga_x_q1d",
        "Value": "734"
      },
      {
        "Description": [
          "KTBM learned exchange - 0"
        ],
        "Name": "mgga_x_ktbm_0",
        "Value": "735"
      },
      {
        "Description": [
          "KTBM learned exchange - 1"
        ],
        "Name": "mgga_x_ktbm_1",
        "Value": "736"
      },
      {
        "Description": [
          "KTBM learned exchange - 2"
        ],
        "Name": "mgga_x_ktbm_2",
        "Value": "737"
      },
      {
        "Description": [
          "KTBM learned exchange - 3"
        ],
        "Name": "mgga_x_ktbm_3",
        "Value": "738"
      },
      {
        "Description": [
          "KTBM learned exchange - 4"
        ],
        "Name": "mgga_x_ktbm_4",
        "Value": "739"
      },
      {
        "Description": [
          "KTBM learned exchange - 5"
        ],
        "Name": "mgga_x_ktbm_5",
        "Value": "740"
      },
      {
        "Description": [
          "KTBM learned exchange - 6"
        ],
        "Name": "mgga_x_ktbm_6",
        "Value": "741"
      },
      {
        "Description": [
          "KTBM learned exchange - 7"
        ],
        "Name": "mgga_x_ktbm_7",
        "Value": "742"
      },
      {
        "Description": [
          "KTBM learned exchange - 8"
        ],
        "Name": "mgga_x_ktbm_8",
        "Value": "743"
      },
      {
        "Description": [
          "KTBM learned exchange - 9"
        ],
        "Name": "mgga_x_ktbm_9",
        "Value": "744"
      },
      {
        "Description": [
          "KTBM learned exchange - 10"
        ],
        "Name": "mgga_x_ktbm_10",
        "Value": "745"
      },
      {
        "Description": [
          "KTBM learned exchange - 11"
        ],
        "Name": "mgga_x_ktbm_11",
        "Value": "746"
      },
      {
        "Description": [
          "KTBM learned exchange - 12"
        ],
        "Name": "mgga_x_ktbm_12",
        "Value": "747"
      },
      {
        "Description": [
          "KTBM learned exchange - 13"
        ],
        "Name": "mgga_x_ktbm_13",
        "Value": "748"
      },
      {
        "Description": [
          "KTBM learned exchange - 14"
        ],
        "Name": "mgga_x_ktbm_14",
        "Value": "749"
      },
      {
        "Description": [
          "KTBM learned exchange - 15"
        ],
        "Name": "mgga_x_ktbm_15",
        "Value": "750"
      },
      {
        "Description": [
          "KTBM learned exchange - 16"
        ],
        "Name": "mgga_x_ktbm_16",
        "Value": "751"
      },
      {
        "Description": [
          "KTBM learned exchange - 17"
        ],
        "Name": "mgga_x_ktbm_17",
        "Value": "752"
      },
      {
        "Description": [
          "KTBM learned exchange - 18"
        ],
        "Name": "mgga_x_ktbm_18",
        "Value": "753"
      },
      {
        "Description": [
          "KTBM learned exchange - 19"
        ],
        "Name": "mgga_x_ktbm_19",
        "Value": "754"
      },
      {
        "Description": [
          "KTBM learned exchange - 20"
        ],
        "Name": "mgga_x_ktbm_20",
        "Value": "755"
      },
      {
        "Description": [
          "KTBM learned exchange - 21"
        ],
        "Name": "mgga_x_ktbm_21",
        "Value": "756"
      },
      {
        "Description": [
          "KTBM learned exchange - 22"
        ],
        "Name": "mgga_x_ktbm_22",
        "Value": "757"
      },
      {
        "Description": [
          "KTBM learned exchange - 23"
        ],
        "Name": "mgga_x_ktbm_23",
        "Value": "758"
      },
      {
        "Description": [
          "KTBM learned exchange - 24"
        ],
        "Name": "mgga_x_ktbm_24",
        "Value": "759"
      },
      {
        "Description": [
          "KTBM learned exchange - GAP"
        ],
        "Name": "mgga_x_ktbm_gap",
        "Value": "760"
      },
      {
        "Description": [
          "OEP: Exact exchange (not from libxc)."
        ],
        "Name": "oep_x",
        "Value": "901"
      },
      {
        "Description": [
          "Slater approximation to the exact exchange (not from libxc)."
        ],
        "Name": "slater_x",
        "Value": "902"
      },
      {
        "Description": [
          "Exchange functional based on the force balance equation (not from libxc)."
        ],
        "Name": "fbe_x",
        "Value": "903"
      },
      {
        "Description": [
          "Inversion of KS potential (not from libxc)."
        ],
        "Name": "ks_inversion",
        "Value": "904"
      },
      {
        "Description": [
          "RDMFT Mueller functional (not from libxc)."
        ],
        "Name": "rdmft_xc_m",
        "Value": "905"
      },
      {
        "Description": [
          "Half-Hartree exchange for two electrons (supports complex scaling) (not from libxc).",
          "Defined by <math>v_{xc}(r) = v_H(r) / 2</math>."
        ],
        "Name": "xc_half_hartree",
        "Value": "917"
      },
      {
        "Description": [
          "Density-based mixing parameter of HSE06 (not from libxc)."
        ],
        "Name": "hyb_gga_xc_mvorb_hse06",
        "Value": "921000"
      },
      {
        "Description": [
          "Density-based mixing parameter of PBEH (not from libxc).",
          "At the moment this is not supported for libxc >= 4.0."
        ],
        "Name": "hyb_gga_xc_mvorb_pbeh",
        "Value": "922000"
      },
      {
        "Description": [
          "van der Waals density functional vdW-DF correlation from libvdwxc (not from libxc).  Use with gga_x_pbe_r."
        ],
        "Name": "vdw_c_vdwdf",
        "Value": "918000"
      },
      {
        "Description": [
          "van der Waals density functional vdW-DF2 correlation from libvdwxc (not from libxc).  Use with gga_x_rpw86."
        ],
        "Name": "vdw_c_vdwdf2",
        "Value": "919000"
      },
      {
        "Description": [
          "van der Waals density functional vdW-DF-cx correlation from libvdwxc (not from libxc).  Use with gga_x_lv_rpw86."
        ],
        "Name": "vdw_c_vdwdfcx",
        "Value": "920000"
      },
      {
        "Description": [
          "Exchange and correlation set to zero (not from libxc)."
        ],
        "Name": "none",
        "Value": "0"
      }
    ],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/functionals_list.F90",
    "Testfiles": [
      "finite_systems_2d/01-quadratic_box.03-hartree+xc.inp",
      "finite_systems_2d/01-quadratic_box.04-spin_polarized.inp",
      "finite_systems_2d/01-quadratic_box.02-hartree.inp",
      "linear_response/01-casida.02-vib_modes.inp",
      "linear_response/01-casida.03-unocc.inp",
      "linear_response/01-casida.04-unocc_restart.inp",
      "linear_response/01-casida.09-spectrum.inp",
      "linear_response/01-casida.06-casida_scalapack.inp",
      "linear_response/01-casida.05-casida.inp",
      "linear_response/01-casida.07-casida_elpa.inp",
      "linear_response/01-casida.08-casida_restart.inp",
      "linear_response/01-casida.01-gs.inp",
      "finite_systems_3d/17-scfinlcao_alt.01-gs.inp",
      "finite_systems_3d/16-scfinlcao_std.01-gs.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.03-ground_state-n60-poisson.inp",
      "finite_systems_3d/38-carbon_atom_cgal_box.01-gs.inp",
      "finite_systems_3d/01-carbon_atom.03-static_field.inp",
      "finite_systems_3d/35-slater_x.01-gs.inp",
      "finite_systems_3d/36-kli_x.01-gs.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.04-ground_state-n240.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.01-ground_state-n60.inp",
      "finite_systems_3d/41-gpu-bug.01-C.inp",
      "finite_systems_3d/29-pcm_chlorine_anion.02-td_prop-n60.inp",
      "finite_systems_3d/01-carbon_atom.01-psf_l0.inp",
      "finite_systems_3d/01-carbon_atom.04-smear.inp",
      "finite_systems_3d/04-jellium.01-ground_state.inp",
      "finite_systems_3d/31-acetylene_b3lyp.01-gs.inp",
      "finite_systems_3d/01-carbon_atom.02-psf_l1.inp",
      "finite_systems_3d/36-kli_x.02-gs_spinors.inp",
      "finite_systems_3d/35-slater_x.02-gs_spinors.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "pseudopotentials/18-Bi_pseudodojo_fr.01-gs.inp",
      "pseudopotentials/10-helium_upf.02-gs_filter_ts.inp",
      "pseudopotentials/01-sg15-h.01-gs.inp",
      "pseudopotentials/08-carbon_fhi.01-gs.inp",
      "pseudopotentials/10-helium_upf.03-gs_filter_bsb.inp",
      "pseudopotentials/10-helium_upf.01-gs_nofilter.inp",
      "pseudopotentials/09-carbon_cpi.01-gs.inp",
      "symmetries/08-symmetrization_mgga.01-spg3_sym.inp",
      "symmetries/09-symmetrization_gga.02-spg143_sym.inp",
      "symmetries/09-symmetrization_gga.01-spg143_nosym.inp",
      "functionals/18-mgga.01-br89.inp",
      "functionals/03-xc.gga_x_lg93.inp",
      "functionals/03-xc.gga_xc_mpwlyp1w.inp",
      "functionals/03-xc.lda_c_pw.inp",
      "functionals/03-xc.exx.inp",
      "functionals/03-xc.gga_x_rpbe.inp",
      "functionals/03-xc.gga_xc_edf1.inp",
      "functionals/03-xc.lda_c_hl.inp",
      "functionals/03-xc.gga_xc_hcth_120.inp",
      "functionals/01-xc_1d.oep_kli.inp",
      "functionals/03-xc.gga_c_pbe_jrgx.inp",
      "functionals/03-xc.gga_xc_hcth_93.inp",
      "functionals/03-xc.gga_c_pbe_sol.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/03-xc.mvorb_hse06_fock.inp",
      "functionals/02-xc_2d.gga_b86_mgc.inp",
      "functionals/03-xc.lda_c_wigner.inp",
      "functionals/03-xc.gga_x_mpbe.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/05-ks_inversion.03-inversion.inp",
      "functionals/03-xc.gga_xc_xlyp.inp",
      "functionals/03-xc.gga_x_am05.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/15-oep-CG.02-oep-dens.inp",
      "functionals/03-xc.gga_x_g96.inp",
      "functionals/03-xc.gga_x_b86.inp",
      "functionals/03-xc.gga_x_pbek1_vdw.inp",
      "functionals/18-mgga.02-br89_oep.inp",
      "functionals/03-xc.gga_xc_pbelyp1w.inp",
      "functionals/13-libvdwxc_h2o.01-vdwdfcx.inp",
      "functionals/03-xc.gga_x_b86_mgc.inp",
      "functionals/03-xc.gga_c_xpbe.inp",
      "functionals/03-xc.pbe0_fock.inp",
      "functionals/03-xc.gga_x_b88.inp",
      "functionals/03-xc.lda_c_ob_pz.inp",
      "functionals/02-xc_2d.gga_b86.inp",
      "functionals/01-xc_1d.01-wfs-lda.inp",
      "functionals/03-xc.gga_x_ft97_b.inp",
      "functionals/03-xc.lda_c_ob_pw.inp",
      "functionals/03-xc.lda_c_pz_mod.inp",
      "functionals/05-ks_inversion.02-two_particle.inp",
      "functionals/03-xc.gga_x_optb88_vdw.inp",
      "functionals/03-xc.gga_c_pw91.inp",
      "functionals/04-oep.02-jellium-exx_kli.inp",
      "functionals/03-xc.slater.inp",
      "functionals/04-oep.01-jellium-lsda.inp",
      "functionals/03-xc.lda_xc_teter93.inp",
      "functionals/03-xc.gga_x_xpbe.inp",
      "functionals/01-xc_1d.lda_csc.inp",
      "functionals/03-xc.pbe0_oep.inp",
      "functionals/03-xc.gga_xc_hcth_147.inp",
      "functionals/03-xc.gga_x_pbe_jsjr.inp",
      "functionals/03-xc.gga_c_lm.inp",
      "functionals/03-xc.gga_x_pbe_r.inp",
      "functionals/03-xc.lda_c_vbh.inp",
      "functionals/03-xc.gga_x_pbea.inp",
      "functionals/03-xc.lda_x.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/17-oep-photons.02-kli.inp",
      "functionals/03-xc.gga_x_pw91.inp",
      "functionals/03-xc.b3lyp_fock.inp",
      "functionals/03-xc.gga_x_ft97_a.inp",
      "functionals/03-xc.gga_x_pw86.inp",
      "functionals/01-xc_1d.oep_exx.inp",
      "functionals/03-xc.lda_c_rpa.inp",
      "functionals/03-xc.b3lyp_oep.inp",
      "functionals/03-xc.gga_x_dk87_r2.inp",
      "functionals/15-oep-CG.01-kli.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/03-xc.gga_c_p86.inp",
      "functionals/03-xc.lda_c_vwn_rpa.inp",
      "functionals/05-ks_inversion.01-target_density.inp",
      "functionals/03-xc.lda_c_pw_mod.inp",
      "functionals/03-xc.lda_c_vwn.inp",
      "functionals/14-libvdwxc_Be_hcp.01-vdwdfcx.inp",
      "functionals/07-sic.01-gs.inp",
      "functionals/03-xc.kli.inp",
      "functionals/03-xc.lda_c_pz.inp",
      "functionals/04-oep.03-jellium-full_exx.inp",
      "functionals/03-xc.lda_c_xalpha.inp",
      "functionals/02-xc_2d.lda_amgb.inp",
      "functionals/03-xc.lda_c_gl.inp",
      "functionals/03-xc.gga_x_bayesian.inp",
      "functionals/03-xc.gga_xc_b97_d.inp",
      "functionals/03-xc.gga_c_pbe.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp",
      "functionals/17-oep-photons.03-oep.inp",
      "functionals/03-xc.gga_x_lb.inp",
      "functionals/02-xc_2d.lda_prm.inp",
      "functionals/03-xc.gga_x_pbe_sol.inp",
      "functionals/03-xc.gga_c_lyp.inp",
      "functionals/03-xc.gga_c_am05.inp",
      "functionals/03-xc.gga_x_mpw91.inp",
      "functionals/03-xc.gga_x_pbe.inp",
      "functionals/03-xc.gga_xc_pbe1w.inp",
      "functionals/02-xc_2d.gga_b88.inp",
      "functionals/03-xc.gga_x_optpbe_vdw.inp",
      "functionals/03-xc.gga_xc_hcth_407.inp",
      "functionals/02-xc_2d.gga_pbe.inp",
      "functionals/17-oep-photons.01-kli-spinpolarized.inp",
      "functionals/07-sic.02-scdm.inp",
      "functionals/03-xc.gga_x_dk87_r1.inp",
      "functionals/03-xc.gga_x_optx.inp",
      "functionals/11-vdw_d3.01-gs.inp",
      "functionals/03-xc.fbex.inp",
      "functionals/03-xc.gga_x_wc.inp",
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/12-boron_nitride.02-gs_gamma.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/23-hybrids.04-parstates.inp",
      "periodic_systems/07-mgga.02-tb09_gs_nosymm.inp",
      "periodic_systems/12-boron_nitride.01-gs.inp",
      "periodic_systems/23-hybrids.03-Si_pbe0.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/28-mgga_kli.01-Si_scan.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp",
      "finite_systems_1d/02-neon_mpi.03-td_calc-kli_par_states.inp",
      "finite_systems_1d/02-neon_mpi.02-ground_state-kli_par_domains.inp",
      "maxwell/13-extsource-bessel.03-enveloped-shifted-bessel.inp",
      "maxwell/13-extsource-bessel.02-carbon-td.inp",
      "maxwell/13-extsource-bessel.01-carbon-gs.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "xckernel": {
    "CallLine": "call parse_variable(namespace, 'XCKernel', default, val)",
    "Default": null,
    "Description": [
      "Defines the exchange-correlation kernel. Only LDA kernels are available currently.",
      "The options are the same as <tt>XCFunctional</tt>.",
      "Note: the kernel is only needed for Casida, Sternheimer, or optimal-control calculations.",
      "Defaults:",
      "<br>1D: <tt>lda_x_1d + lda_c_1d_csc</tt>",
      "<br>2D: <tt>lda_x_2d + lda_c_2d_amgb</tt>",
      "<br>3D: <tt>lda_x + lda_c_pz_mod</tt>"
    ],
    "LineNumber": 297,
    "Manuals": [],
    "Name": "XCKernel",
    "Options": [
      {
        "Description": [
          "The same functional defined by <tt>XCFunctional</tt>."
        ],
        "Name": "xc_functional",
        "Value": "-1"
      }
    ],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "electrons/v_ks.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "xckernellrcalpha": {
    "CallLine": "call parse_variable(namespace, 'XCKernelLRCAlpha', M_ZERO, xcs%kernel_lrc_alpha)",
    "Default": [
      "0.0"
    ],
    "Description": [
      "Set to a non-zero value to add a long-range correction for solids to the kernel.",
      "This is the <math>\\alpha</math> parameter defined in S. Botti <i>et al.</i>, <i>Phys. Rev. B</i>",
      "69, 155112 (2004). The <math>\\Gamma = \\Gamma` = 0</math> term <math>-\\alpha/q^2</math> is taken",
      "into account by introducing an additional pole to the polarizability (see R. Stubner",
      "<i>et al.</i>, <i>Phys. Rev. B</i> 70, 245119 (2004)). The rest of the terms are included by",
      "multiplying the Hartree term by <math>1 - \\alpha / 4 \\pi</math>. The use of non-zero",
      "<math>\\alpha</math> in combination with <tt>HamiltonianVariation</tt> = <tt>V_ext_only</tt>",
      "corresponds to account of only the <math>\\Gamma = \\Gamma` = 0</math> term.",
      "Applicable only to isotropic systems. (Experimental)"
    ],
    "LineNumber": 287,
    "Manuals": [],
    "Name": "XCKernelLRCAlpha",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/xc.F90",
    "Testfiles": [
      "periodic_systems/27-Ar.03-em_resp_mo.inp",
      "periodic_systems/04-silicon.04-emresp_mo.inp"
    ],
    "Tutorials": [],
    "Type": "float"
  },
  "xcphotonfunctional": {
    "CallLine": "call parse_variable(namespace, 'XCPhotonFunctional', OPTION__XCPHOTONFUNCTIONAL__NONE, ks%xc_photon)",
    "Default": [
      "0"
    ],
    "Description": [
      "Defines the exchange and correlation functionals to be used for the QEDFT",
      "description of the electron-photon system."
    ],
    "LineNumber": 328,
    "Manuals": [],
    "Name": "XCPhotonFunctional",
    "Options": [
      {
        "Description": [
          "No functional is used"
        ],
        "Name": "none",
        "Value": "0"
      },
      {
        "Description": [
          "Exchange-only local density approcimation"
        ],
        "Name": "photon_x_lda",
        "Value": "10"
      },
      {
        "Description": [
          "Exchange-correlation local density approcimation"
        ],
        "Name": "photon_xc_lda",
        "Value": "11"
      },
      {
        "Description": [
          "Exchange-only based on wave functions"
        ],
        "Name": "photon_x_wfn",
        "Value": "20"
      },
      {
        "Description": [
          "Exchange-correlation based on wave functions"
        ],
        "Name": "photon_xc_wfn",
        "Value": "21"
      }
    ],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "electrons/v_ks.F90",
    "Testfiles": [
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/21-qedft-breit-3d.02-pxlda-helium.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp"
    ],
    "Tutorials": [],
    "Type": "integer"
  },
  "xcphotonincludehartree": {
    "CallLine": "call parse_variable(namespace, 'XCPhotonIncludeHartree', .true., ks%xc_photon_include_hartree)",
    "Default": [
      "yes"
    ],
    "Description": [
      "Use the Hartree potential and energy in calculations"
    ],
    "LineNumber": 338,
    "Manuals": [],
    "Name": "XCPhotonIncludeHartree",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "electrons/v_ks.F90",
    "Testfiles": [
      "real_time/23-td_qedft_breit_pxlda_adiabatic.03-td_restart.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.01-gs.inp",
      "real_time/23-td_qedft_breit_pxlda_adiabatic.02-td.inp",
      "functionals/19-qedft-breit-1d.02-pxlda.inp",
      "functionals/19-qedft-breit-1d.01-etac-px.inp",
      "functionals/20-qedft-breit-2d.03-pxlda-strong.inp",
      "functionals/20-qedft-breit-2d.01-etac-px.inp",
      "functionals/21-qedft-breit-3d.01-pxlda-hydrogen.inp",
      "functionals/20-qedft-breit-2d.02-pxlda-weak.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "xcusegaugeindependentked": {
    "CallLine": "call parse_variable(namespace, 'XCUseGaugeIndependentKED', .true., xcs%use_gi_ked)",
    "Default": [
      "yes"
    ],
    "Description": [
      "If true, when evaluating the XC functional, a term including the (paramagnetic or total) current",
      "is added to the kinetic-energy density such as to make it gauge-independent.",
      "Applies only to meta-GGA (and hybrid meta-GGA) functionals."
    ],
    "LineNumber": 258,
    "Manuals": [],
    "Name": "XCUseGaugeIndependentKED",
    "Options": [],
    "Section": "Hamiltonian::XC",
    "Sourcefile": "hamiltonian/xc.F90",
    "Testfiles": [
      "periodic_systems/07-mgga.05-br89_primitive.inp",
      "periodic_systems/07-mgga.01-tb09_gs_symm.inp",
      "periodic_systems/07-mgga.02-tb09_gs_nosymm.inp",
      "periodic_systems/07-mgga.04-br89_gs.inp",
      "periodic_systems/07-mgga.03-tb09_td.inp"
    ],
    "Tutorials": [],
    "Type": "logical"
  },
  "xlength": {
    "CallLine": "call parse_variable(namespace, 'Xlength', rsize, xsize, units_inp%length)",
    "Default": [
      "<tt>Radius</tt>"
    ],
    "Description": [
      "If <tt>BoxShape</tt> is <tt>cylinder</tt>, the total length of the cylinder is twice <tt>Xlength</tt>.",
      "Note that when PeriodicDimensions = 1, then the length of the cylinder is determined from the lattice vectors."
    ],
    "LineNumber": 201,
    "Manuals": [],
    "Name": "Xlength",
    "Options": [],
    "Section": "Mesh::Simulation Box",
    "Sourcefile": "boxes/box_factory.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "float"
  },
  "xsfcoordinates": {
    "Default": null,
    "Description": [
      "Another option besides PDB and XYZ coordinates formats is XSF, as <a href=http://www.xcrysden.org/doc/XSF.html>defined</a>",
      "by the XCrySDen visualization program. Specify the filename with this variable.",
      "The lattice vectors will also be read from this file and the value of",
      "<tt>PeriodicDimensions</tt> needs to be compatible with the first line",
      "(<tt>CRYSTAL</tt>, <tt>SLAB</tt>, <tt>POLYMER</tt>, or <tt>MOLECULE</tt>).",
      "The file should not contain <tt>ATOMS</tt>, <tt>CONVVEC</tt>, or <tt>PRIMCOORD</tt>.",
      "NOTE: The coordinates are treated in the units specified by <tt>Units</tt> and/or <tt>UnitsInput</tt>."
    ],
    "Manuals": [],
    "Name": "XSFCoordinates",
    "Options": [],
    "Section": "System::Coordinates",
    "Sourcefile": "ions/read_coords.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "xsfcoordinatesanimstep": {
    "CallLine": "call parse_variable(namespace, 'XSFCoordinatesAnimStep', 1, step_to_use)",
    "Default": [
      "1"
    ],
    "Description": [
      "If an animated file is given with <tt>XSFCoordinates</tt>, this variable selects which animation step",
      "will be used. The <tt>PRIMVEC</tt> block must be written for each step."
    ],
    "LineNumber": 255,
    "Manuals": [],
    "Name": "XSFCoordinatesAnimStep",
    "Options": [],
    "Section": "System::Coordinates",
    "Sourcefile": "ions/read_coords.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "integer"
  },
  "xsfgoconstrains": {
    "Default": null,
    "Description": [
      "Like <tt>XYZGOConstrains</tt> but in XCrySDen format, as in <tt>XSFCoordinates</tt>."
    ],
    "Manuals": [],
    "Name": "XSFGOConstrains",
    "Options": [],
    "Section": "Calculation Modes::Geometry Optimization",
    "Sourcefile": "main/geom_opt.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "xsfvelocities": {
    "Default": null,
    "Description": [
      "Like <tt>XYZVelocities</tt> but in XCrySDen format, as in <tt>XSFCoordinates</tt>."
    ],
    "Manuals": [],
    "Name": "XSFVelocities",
    "Options": [],
    "Section": "System::Velocities",
    "Sourcefile": "ions/ion_dynamics.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "xyzcoordinates": {
    "Default": null,
    "Description": [
      "If <tt>PDBCoordinates</tt> is not present, the program reads the atomic coordinates from",
      "the XYZ file specified by the variable <tt>XYZCoordinates</tt> -- in case this variable",
      "is present. The XYZ format is very simple: The first line of the file has an integer",
      "indicating the number of atoms. The second can contain comments that are simply ignored by",
      "<tt>Octopus</tt>. Then there follows one line per atom, containing the chemical species and",
      "the Cartesian coordinates of the atom.",
      " ",
      "If you want to specify the unit of the XYZ file, you can use the variable <tt>UnitsXYZFiles</tt>."
    ],
    "Manuals": [],
    "Name": "XYZCoordinates",
    "Options": [],
    "Section": "System::Coordinates",
    "Sourcefile": "ions/read_coords.F90",
    "Testfiles": [
      "finite_systems_3d/10-fullerene.01-gs.inp",
      "tutorials/03-octopus_basics-total_energy_convergence.01-N_atom.inp",
      "tutorials/04-octopus_basics-visualization.01-benzene.inp",
      "tutorials/02-octopus_basics-basic_input_options.01-N_atom.inp",
      "tutorials/05-octopus_basics-centering_a_geometry.01-tAB.inp",
      "functionals/10-vdw_d3_dna.01-gs_novdw.inp",
      "functionals/10-vdw_d3_dna.02-gs_d3.inp",
      "maxwell/12-tddft-currents-to-maxwell.03-benzene-mxll-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.06-benzene-dipole-and-quadrupole.inp",
      "maxwell/12-tddft-currents-to-maxwell.05-benzene-extsource-td-veloc-gauge.inp",
      "maxwell/12-tddft-currents-to-maxwell.04-benzene-mxll-td-full-min-coup.inp",
      "maxwell/12-tddft-currents-to-maxwell.02-benzene-mxll-td-length-gauge.inp"
    ],
    "Tutorials": [],
    "Type": "string"
  },
  "xyzgoconstrains": {
    "Default": null,
    "Description": [
      "<tt>Octopus</tt> will try to read the coordinate-dependent constrains from the XYZ file",
      "specified by the variable <tt>XYZGOConstrains</tt>.",
      "Note: It is important for the contrains to maintain the ordering",
      "in which the atoms were defined in the coordinates specifications.",
      "Moreover, constrains impose fixed absolute coordinates, therefore",
      "constrains are not compatible with GOCenter = yes"
    ],
    "Manuals": [],
    "Name": "XYZGOConstrains",
    "Options": [],
    "Section": "Calculation Modes::Geometry Optimization",
    "Sourcefile": "main/geom_opt.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  },
  "xyzvelocities": {
    "Default": null,
    "Description": [
      "<tt>Octopus</tt> will try to read the starting velocities of the atoms from the XYZ file",
      "specified by the variable <tt>XYZVelocities</tt>.",
      "Note that you do not need to specify initial velocities if you are not going",
      "to perform ion dynamics; if you are going to allow the ions to move but the velocities",
      "are not specified, they are considered to be null.",
      "Note: It is important for the velocities to maintain the ordering",
      "in which the atoms were defined in the coordinates specifications."
    ],
    "Manuals": [],
    "Name": "XYZVelocities",
    "Options": [],
    "Section": "System::Velocities",
    "Sourcefile": "ions/ion_dynamics.F90",
    "Testfiles": [],
    "Tutorials": [],
    "Type": "string"
  }
}
